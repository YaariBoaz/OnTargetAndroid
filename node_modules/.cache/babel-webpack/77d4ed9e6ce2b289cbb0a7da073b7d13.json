{"ast":null,"code":"import _asyncToGenerator from \"/Applications/OnTarget/OnTarget/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { f as readTask, c as writeTask } from './index-7a8b7a1c.js';\nimport { c as componentOnReady } from './helpers-dd7e4b7b.js';\nconst startStatusTap = () => {\n  const win = window;\n  win.addEventListener('statusTap', () => {\n    readTask(() => {\n      const width = win.innerWidth;\n      const height = win.innerHeight;\n      const el = document.elementFromPoint(width / 2, height / 2);\n      if (!el) {\n        return;\n      }\n      const contentEl = el.closest('ion-content');\n      if (contentEl) {\n        new Promise(resolve => componentOnReady(contentEl, resolve)).then(() => {\n          writeTask( /*#__PURE__*/_asyncToGenerator(function* () {\n            /**\n             * If scrolling and user taps status bar,\n             * only calling scrollToTop is not enough\n             * as engines like WebKit will jump the\n             * scroll position back down and complete\n             * any in-progress momentum scrolling.\n             */\n            contentEl.style.setProperty('--overflow', 'hidden');\n            yield contentEl.scrollToTop(300);\n            contentEl.style.removeProperty('--overflow');\n          }));\n        });\n      }\n    });\n  });\n};\nexport { startStatusTap };","map":{"version":3,"names":["f","readTask","c","writeTask","componentOnReady","startStatusTap","win","window","addEventListener","width","innerWidth","height","innerHeight","el","document","elementFromPoint","contentEl","closest","Promise","resolve","then","style","setProperty","scrollToTop","removeProperty"],"sources":["/Applications/OnTarget/OnTarget/node_modules/@ionic/core/dist/esm/status-tap-5c3a5bca.js"],"sourcesContent":["import { f as readTask, c as writeTask } from './index-7a8b7a1c.js';\nimport { c as componentOnReady } from './helpers-dd7e4b7b.js';\n\nconst startStatusTap = () => {\n  const win = window;\n  win.addEventListener('statusTap', () => {\n    readTask(() => {\n      const width = win.innerWidth;\n      const height = win.innerHeight;\n      const el = document.elementFromPoint(width / 2, height / 2);\n      if (!el) {\n        return;\n      }\n      const contentEl = el.closest('ion-content');\n      if (contentEl) {\n        new Promise(resolve => componentOnReady(contentEl, resolve)).then(() => {\n          writeTask(async () => {\n            /**\n             * If scrolling and user taps status bar,\n             * only calling scrollToTop is not enough\n             * as engines like WebKit will jump the\n             * scroll position back down and complete\n             * any in-progress momentum scrolling.\n             */\n            contentEl.style.setProperty('--overflow', 'hidden');\n            await contentEl.scrollToTop(300);\n            contentEl.style.removeProperty('--overflow');\n          });\n        });\n      }\n    });\n  });\n};\n\nexport { startStatusTap };\n"],"mappings":";AAAA,SAASA,CAAC,IAAIC,QAAQ,EAAEC,CAAC,IAAIC,SAAS,QAAQ,qBAAqB;AACnE,SAASD,CAAC,IAAIE,gBAAgB,QAAQ,uBAAuB;AAE7D,MAAMC,cAAc,GAAG,MAAM;EAC3B,MAAMC,GAAG,GAAGC,MAAM;EAClBD,GAAG,CAACE,gBAAgB,CAAC,WAAW,EAAE,MAAM;IACtCP,QAAQ,CAAC,MAAM;MACb,MAAMQ,KAAK,GAAGH,GAAG,CAACI,UAAU;MAC5B,MAAMC,MAAM,GAAGL,GAAG,CAACM,WAAW;MAC9B,MAAMC,EAAE,GAAGC,QAAQ,CAACC,gBAAgB,CAACN,KAAK,GAAG,CAAC,EAAEE,MAAM,GAAG,CAAC,CAAC;MAC3D,IAAI,CAACE,EAAE,EAAE;QACP;MACF;MACA,MAAMG,SAAS,GAAGH,EAAE,CAACI,OAAO,CAAC,aAAa,CAAC;MAC3C,IAAID,SAAS,EAAE;QACb,IAAIE,OAAO,CAACC,OAAO,IAAIf,gBAAgB,CAACY,SAAS,EAAEG,OAAO,CAAC,CAAC,CAACC,IAAI,CAAC,MAAM;UACtEjB,SAAS,iCAAC,aAAY;YACpB;AACZ;AACA;AACA;AACA;AACA;AACA;YACYa,SAAS,CAACK,KAAK,CAACC,WAAW,CAAC,YAAY,EAAE,QAAQ,CAAC;YACnD,MAAMN,SAAS,CAACO,WAAW,CAAC,GAAG,CAAC;YAChCP,SAAS,CAACK,KAAK,CAACG,cAAc,CAAC,YAAY,CAAC;UAC9C,CAAC,EAAC;QACJ,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC;AAED,SAASnB,cAAc"},"metadata":{},"sourceType":"module"}