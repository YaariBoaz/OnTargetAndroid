{"ast":null,"code":"/**\r\n * Functionality for drawing rectangles.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { Sprite } from \"../Sprite\";\nimport { registry } from \"../Registry\";\nimport * as $math from \"../utils/Math\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Used to draw a rectangle.\r\n *\r\n * @see {@link IRectangleEvents} for a list of available events\r\n * @see {@link IRectangleAdapters} for a list of available Adapters\r\n */\nvar Rectangle = /** @class */function (_super) {\n  __extends(Rectangle, _super);\n  /**\r\n   * Constructor\r\n   * * Creates a `<rect>` element\r\n   * * Creates default state\r\n   */\n  function Rectangle() {\n    var _this = _super.call(this) || this;\n    _this.className = \"Rectangle\";\n    _this.element = _this.paper.add(\"rect\");\n    //this.pixelPerfect = false;\n    _this.applyTheme();\n    return _this;\n  }\n  /**\r\n   * Draws the element.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  Rectangle.prototype.draw = function () {\n    _super.prototype.draw.call(this);\n    var precision = this._positionPrecision;\n    if (this.pixelPerfect) {\n      precision = 0;\n    }\n    var w = $math.round(this.innerWidth, precision);\n    var h = $math.round(this.innerHeight, precision);\n    this.element.attr({\n      \"width\": w,\n      \"height\": h\n    });\n  };\n  /**\r\n   * Measures the element.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  Rectangle.prototype.measureElement = function () {};\n  Object.defineProperty(Rectangle.prototype, \"bbox\", {\n    /**\r\n     * Returns bounding box (square) for this element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\n    get: function () {\n      if (this.definedBBox) {\n        return this.definedBBox;\n      }\n      if (this.isMeasured) {\n        return {\n          x: 0,\n          y: 0,\n          width: this.innerWidth,\n          height: this.innerHeight\n        };\n      } else {\n        return {\n          x: 0,\n          y: 0,\n          width: 0,\n          height: 0\n        };\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return Rectangle;\n}(Sprite);\nexport { Rectangle };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\nregistry.registeredClasses[\"Rectangle\"] = Rectangle;\n//# sourceMappingURL=Rectangle.js.map","map":null,"metadata":{},"sourceType":"module"}