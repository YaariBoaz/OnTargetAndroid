{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { ApiService } from './api.service';\nimport { DashboardModel } from '../models/dashboard-model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./api.service\";\nexport let StorageService = /*#__PURE__*/(() => {\n  class StorageService {\n    constructor(apiService) {\n      this.apiService = apiService;\n      this.DEFAULT_DATA = new DashboardModel();\n      this.data = {};\n      this.DATA_NAME = 'homeData';\n      this.historicalTrainingsDate$ = new BehaviorSubject(null);\n      this.passTrainingsInDate$ = new BehaviorSubject(null);\n      this.DEFAULT_WEAPONS = ['AR-15', 'M4', 'MP5', 'DOUBLE BARREL SHOTGUN', 'P40'];\n      this.DEFAULT_SIGHTS = ['Trij', 'SLT', 'XXX', 'DP', 'P40'];\n      this.initData();\n      this.trySyncData();\n    }\n    trySyncData() {}\n    initData() {\n      let storageData = localStorage.getItem(this.DATA_NAME);\n      if (!storageData) {\n        localStorage.setItem(this.DATA_NAME, JSON.stringify({}));\n        storageData = localStorage.getItem(this.DATA_NAME);\n      }\n      storageData = JSON.parse(storageData);\n      this.setItem('homeData', storageData);\n      this.data = storageData;\n    }\n    getItem(key) {\n      const val = localStorage.getItem(key);\n      return JSON.parse(val);\n    }\n    setItem(key, value) {\n      if (!this.data) {\n        this.data = {};\n      }\n      this.data[key] = value;\n      localStorage.setItem(key, JSON.stringify(value));\n    }\n    passhistoricalTrainingsDate(data) {\n      this.historicalTrainingsDate$.next(data);\n    }\n    passTrainingsInDate(data) {\n      this.passTrainingsInDate$.next(data);\n    }\n    handleMockData() {\n      this.setItem('homeData', this.DEFAULT_DATA);\n      this.data = this.DEFAULT_DATA;\n    }\n  }\n  StorageService.ɵfac = function StorageService_Factory(t) {\n    return new (t || StorageService)(i0.ɵɵinject(i1.ApiService));\n  };\n  StorageService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: StorageService,\n    factory: StorageService.ɵfac,\n    providedIn: 'root'\n  });\n  return StorageService;\n})();","map":null,"metadata":{},"sourceType":"module"}