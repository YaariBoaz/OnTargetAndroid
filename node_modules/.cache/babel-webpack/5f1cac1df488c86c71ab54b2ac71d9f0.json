{"ast":null,"code":"/**\r\n * Module for \"Blur\" filter.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { Filter } from \"./Filter\";\nimport { registry } from \"../../Registry\";\n;\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Creates a \"Blur\" filter.\r\n */\nvar BlurFilter = /** @class */function (_super) {\n  __extends(BlurFilter, _super);\n  /**\r\n   * Constructor\r\n   */\n  function BlurFilter() {\n    var _this = _super.call(this) || this;\n    _this.className = \"BlurFilter\";\n    // Create elements\n    // NOTE: we do not need to add each individual element to `_disposers`\n    // because `filterPrimitives` has an event handler which automatically adds\n    // anything added to it to `_disposers`\n    _this.feGaussianBlur = _this.paper.add(\"feGaussianBlur\");\n    _this.feGaussianBlur.attr({\n      \"result\": \"blurOut\",\n      \"in\": \"SourceGraphic\"\n    });\n    _this.filterPrimitives.push(_this.feGaussianBlur);\n    // Set default properties\n    _this.width = 200;\n    _this.height = 200;\n    _this.blur = 1.5;\n    _this.applyTheme();\n    return _this;\n  }\n  Object.defineProperty(BlurFilter.prototype, \"blur\", {\n    /**\r\n     * @return Blur\r\n     */\n    get: function () {\n      return this.properties.blur;\n    },\n    /**\r\n     * Blur value.\r\n     *\r\n     * The bigger the value, the blurrier the target element will become.\r\n     *\r\n     * @default 1.5\r\n     * @param value Blur\r\n     */\n    set: function (value) {\n      this.properties.blur = value;\n      this.feGaussianBlur.attr({\n        \"stdDeviation\": value / this.scale\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return BlurFilter;\n}(Filter);\nexport { BlurFilter };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\nregistry.registeredClasses[\"BlurFilter\"] = BlurFilter;\n//# sourceMappingURL=BlurFilter.js.map","map":null,"metadata":{},"sourceType":"module"}