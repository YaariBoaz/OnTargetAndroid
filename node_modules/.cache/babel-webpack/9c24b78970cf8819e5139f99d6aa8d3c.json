{"ast":null,"code":"import { NgZone } from '@angular/core';\nimport { ApiService } from './api.service';\nimport { StorageService } from './storage.service';\nimport { BLE } from '@awesome-cordova-plugins/ble/ngx';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { ShootingService } from './shooting.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./api.service\";\nimport * as i2 from \"./storage.service\";\nimport * as i3 from \"./shooting.service\";\nimport * as i4 from \"@awesome-cordova-plugins/ble/ngx\";\nexport let InitService = /*#__PURE__*/(() => {\n  class InitService {\n    constructor(ngZone, apiService, storageService, shootingService, ble) {\n      this.ngZone = ngZone;\n      this.apiService = apiService;\n      this.storageService = storageService;\n      this.shootingService = shootingService;\n      this.ble = ble;\n      this.notifyConnectedGatewayId = new BehaviorSubject(null);\n      this.notifyError = new BehaviorSubject(null);\n      this.isLoading = new Subject();\n      this.isGateway = false;\n      this.notifySignupFinished = new BehaviorSubject(null);\n      this.newDashboardData = new BehaviorSubject(null);\n      this.targets = [];\n      this.setDeviceSize();\n    }\n    distory() {\n      const id = localStorage.getItem('currentTargetId');\n      this.ble.disconnect(id).then(() => {\n        console.log('Called Disconnect');\n      });\n    }\n    getTargets() {\n      return this.targets;\n    }\n    notifyOnErrorFunc(error) {\n      this.notifyError.next(error);\n    }\n    setDeviceSize() {\n      this.screenW = screen.width;\n      this.screenH = screen.height;\n    }\n    getWeapons() {\n      this.apiService.getWeapons().subscribe(weapons => {\n        this.storageService.setItem('gunList', weapons);\n        this.shootingService.weapons = weapons;\n      });\n    }\n    getSights() {\n      this.apiService.getSights().subscribe(sights => {\n        this.storageService.setItem('sightList', sights);\n      });\n    }\n    getSightsZeroing() {\n      this.apiService.getSightsZeroing().subscribe(sights => {\n        this.shootingService.sightsZeroing = sights;\n      });\n    }\n    getCalibers() {\n      this.apiService.getCalibers().subscribe(calibers => {\n        this.storageService.setItem('caliberList', calibers);\n        this.shootingService.calibers = calibers;\n      });\n    }\n    isRegistered() {\n      return this.storageService.getItem('regisered');\n    }\n  }\n  InitService.ɵfac = function InitService_Factory(t) {\n    return new (t || InitService)(i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(i1.ApiService), i0.ɵɵinject(i2.StorageService), i0.ɵɵinject(i3.ShootingService), i0.ɵɵinject(i4.BLE));\n  };\n  InitService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: InitService,\n    factory: InitService.ɵfac,\n    providedIn: 'root'\n  });\n  return InitService;\n})();","map":null,"metadata":{},"sourceType":"module"}