{"ast":null,"code":"import _asyncToGenerator from \"/Applications/OnTarget/OnTarget/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { a as addEventListener, b as removeEventListener, r as raf, p as pointerCoord, c as componentOnReady } from './helpers-dd7e4b7b.js';\nconst cloneMap = new WeakMap();\nconst relocateInput = (componentEl, inputEl, shouldRelocate, inputRelativeY = 0) => {\n  if (cloneMap.has(componentEl) === shouldRelocate) {\n    return;\n  }\n  if (shouldRelocate) {\n    addClone(componentEl, inputEl, inputRelativeY);\n  } else {\n    removeClone(componentEl, inputEl);\n  }\n};\nconst isFocused = input => {\n  return input === input.getRootNode().activeElement;\n};\nconst addClone = (componentEl, inputEl, inputRelativeY) => {\n  // this allows for the actual input to receive the focus from\n  // the user's touch event, but before it receives focus, it\n  // moves the actual input to a location that will not screw\n  // up the app's layout, and does not allow the native browser\n  // to attempt to scroll the input into place (messing up headers/footers)\n  // the cloned input fills the area of where native input should be\n  // while the native input fakes out the browser by relocating itself\n  // before it receives the actual focus event\n  // We hide the focused input (with the visible caret) invisible by making it scale(0),\n  const parentEl = inputEl.parentNode;\n  // DOM WRITES\n  const clonedEl = inputEl.cloneNode(false);\n  clonedEl.classList.add('cloned-input');\n  clonedEl.tabIndex = -1;\n  parentEl.appendChild(clonedEl);\n  cloneMap.set(componentEl, clonedEl);\n  const doc = componentEl.ownerDocument;\n  const tx = doc.dir === 'rtl' ? 9999 : -9999;\n  componentEl.style.pointerEvents = 'none';\n  inputEl.style.transform = `translate3d(${tx}px,${inputRelativeY}px,0) scale(0)`;\n};\nconst removeClone = (componentEl, inputEl) => {\n  const clone = cloneMap.get(componentEl);\n  if (clone) {\n    cloneMap.delete(componentEl);\n    clone.remove();\n  }\n  componentEl.style.pointerEvents = '';\n  inputEl.style.transform = '';\n};\nconst enableHideCaretOnScroll = (componentEl, inputEl, scrollEl) => {\n  if (!scrollEl || !inputEl) {\n    return () => {\n      return;\n    };\n  }\n  const scrollHideCaret = shouldHideCaret => {\n    if (isFocused(inputEl)) {\n      relocateInput(componentEl, inputEl, shouldHideCaret);\n    }\n  };\n  const onBlur = () => relocateInput(componentEl, inputEl, false);\n  const hideCaret = () => scrollHideCaret(true);\n  const showCaret = () => scrollHideCaret(false);\n  addEventListener(scrollEl, 'ionScrollStart', hideCaret);\n  addEventListener(scrollEl, 'ionScrollEnd', showCaret);\n  inputEl.addEventListener('blur', onBlur);\n  return () => {\n    removeEventListener(scrollEl, 'ionScrollStart', hideCaret);\n    removeEventListener(scrollEl, 'ionScrollEnd', showCaret);\n    inputEl.addEventListener('ionBlur', onBlur);\n  };\n};\nconst SKIP_SELECTOR = 'input, textarea, [no-blur], [contenteditable]';\nconst enableInputBlurring = () => {\n  let focused = true;\n  let didScroll = false;\n  const doc = document;\n  const onScroll = () => {\n    didScroll = true;\n  };\n  const onFocusin = () => {\n    focused = true;\n  };\n  const onTouchend = ev => {\n    // if app did scroll return early\n    if (didScroll) {\n      didScroll = false;\n      return;\n    }\n    const active = doc.activeElement;\n    if (!active) {\n      return;\n    }\n    // only blur if the active element is a text-input or a textarea\n    if (active.matches(SKIP_SELECTOR)) {\n      return;\n    }\n    // if the selected target is the active element, do not blur\n    const tapped = ev.target;\n    if (tapped === active) {\n      return;\n    }\n    if (tapped.matches(SKIP_SELECTOR) || tapped.closest(SKIP_SELECTOR)) {\n      return;\n    }\n    focused = false;\n    // TODO: find a better way, why 50ms?\n    setTimeout(() => {\n      if (!focused) {\n        active.blur();\n      }\n    }, 50);\n  };\n  addEventListener(doc, 'ionScrollStart', onScroll);\n  doc.addEventListener('focusin', onFocusin, true);\n  doc.addEventListener('touchend', onTouchend, false);\n  return () => {\n    removeEventListener(doc, 'ionScrollStart', onScroll, true);\n    doc.removeEventListener('focusin', onFocusin, true);\n    doc.removeEventListener('touchend', onTouchend, false);\n  };\n};\nconst SCROLL_ASSIST_SPEED = 0.3;\nconst getScrollData = (componentEl, contentEl, keyboardHeight) => {\n  const itemEl = componentEl.closest('ion-item,[ion-item]') || componentEl;\n  return calcScrollData(itemEl.getBoundingClientRect(), contentEl.getBoundingClientRect(), keyboardHeight, componentEl.ownerDocument.defaultView.innerHeight);\n};\nconst calcScrollData = (inputRect, contentRect, keyboardHeight, platformHeight) => {\n  // compute input's Y values relative to the body\n  const inputTop = inputRect.top;\n  const inputBottom = inputRect.bottom;\n  // compute visible area\n  const visibleAreaTop = contentRect.top;\n  const visibleAreaBottom = Math.min(contentRect.bottom, platformHeight - keyboardHeight);\n  // compute safe area\n  const safeAreaTop = visibleAreaTop + 15;\n  const safeAreaBottom = visibleAreaBottom * 0.75;\n  // figure out if each edge of the input is within the safe area\n  const distanceToBottom = safeAreaBottom - inputBottom;\n  const distanceToTop = safeAreaTop - inputTop;\n  // desiredScrollAmount is the negated distance to the safe area according to our calculations.\n  const desiredScrollAmount = Math.round(distanceToBottom < 0 ? -distanceToBottom : distanceToTop > 0 ? -distanceToTop : 0);\n  // our calculations make some assumptions that aren't always true, like the keyboard being closed when an input\n  // gets focus, so make sure we don't scroll the input above the visible area\n  const scrollAmount = Math.min(desiredScrollAmount, inputTop - visibleAreaTop);\n  const distance = Math.abs(scrollAmount);\n  const duration = distance / SCROLL_ASSIST_SPEED;\n  const scrollDuration = Math.min(400, Math.max(150, duration));\n  return {\n    scrollAmount,\n    scrollDuration,\n    scrollPadding: keyboardHeight,\n    inputSafeY: -(inputTop - safeAreaTop) + 4\n  };\n};\nconst enableScrollAssist = (componentEl, inputEl, contentEl, footerEl, keyboardHeight) => {\n  let coord;\n  const touchStart = ev => {\n    coord = pointerCoord(ev);\n  };\n  const touchEnd = ev => {\n    // input cover touchend/mouseup\n    if (!coord) {\n      return;\n    }\n    // get where the touchend/mouseup ended\n    const endCoord = pointerCoord(ev);\n    // focus this input if the pointer hasn't moved XX pixels\n    // and the input doesn't already have focus\n    if (!hasPointerMoved(6, coord, endCoord) && !isFocused(inputEl)) {\n      ev.stopPropagation();\n      // begin the input focus process\n      jsSetFocus(componentEl, inputEl, contentEl, footerEl, keyboardHeight);\n    }\n  };\n  componentEl.addEventListener('touchstart', touchStart, true);\n  componentEl.addEventListener('touchend', touchEnd, true);\n  return () => {\n    componentEl.removeEventListener('touchstart', touchStart, true);\n    componentEl.removeEventListener('touchend', touchEnd, true);\n  };\n};\nconst jsSetFocus = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (componentEl, inputEl, contentEl, footerEl, keyboardHeight) {\n    if (!contentEl && !footerEl) {\n      return;\n    }\n    const scrollData = getScrollData(componentEl, contentEl || footerEl, keyboardHeight);\n    if (contentEl && Math.abs(scrollData.scrollAmount) < 4) {\n      // the text input is in a safe position that doesn't\n      // require it to be scrolled into view, just set focus now\n      inputEl.focus();\n      return;\n    }\n    // temporarily move the focus to the focus holder so the browser\n    // doesn't freak out while it's trying to get the input in place\n    // at this point the native text input still does not have focus\n    relocateInput(componentEl, inputEl, true, scrollData.inputSafeY);\n    inputEl.focus();\n    /**\n     * Relocating/Focusing input causes the\n     * click event to be cancelled, so\n     * manually fire one here.\n     */\n    raf(() => componentEl.click());\n    /* tslint:disable-next-line */\n    if (typeof window !== 'undefined') {\n      let scrollContentTimeout;\n      const scrollContent = /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator(function* () {\n          // clean up listeners and timeouts\n          if (scrollContentTimeout !== undefined) {\n            clearTimeout(scrollContentTimeout);\n          }\n          window.removeEventListener('ionKeyboardDidShow', doubleKeyboardEventListener);\n          window.removeEventListener('ionKeyboardDidShow', scrollContent);\n          // scroll the input into place\n          if (contentEl) {\n            yield contentEl.scrollByPoint(0, scrollData.scrollAmount, scrollData.scrollDuration);\n          }\n          // the scroll view is in the correct position now\n          // give the native text input focus\n          relocateInput(componentEl, inputEl, false, scrollData.inputSafeY);\n          // ensure this is the focused input\n          inputEl.focus();\n        });\n        return function scrollContent() {\n          return _ref2.apply(this, arguments);\n        };\n      }();\n      const doubleKeyboardEventListener = () => {\n        window.removeEventListener('ionKeyboardDidShow', doubleKeyboardEventListener);\n        window.addEventListener('ionKeyboardDidShow', scrollContent);\n      };\n      if (contentEl) {\n        const scrollEl = yield contentEl.getScrollElement();\n        /**\n         * scrollData will only consider the amount we need\n         * to scroll in order to properly bring the input\n         * into view. It will not consider the amount\n         * we can scroll in the content element.\n         * As a result, scrollData may request a greater\n         * scroll position than is currently available\n         * in the DOM. If this is the case, we need to\n         * wait for the webview to resize/the keyboard\n         * to show in order for additional scroll\n         * bandwidth to become available.\n         */\n        const totalScrollAmount = scrollEl.scrollHeight - scrollEl.clientHeight;\n        if (scrollData.scrollAmount > totalScrollAmount - scrollEl.scrollTop) {\n          /**\n           * On iOS devices, the system will show a \"Passwords\" bar above the keyboard\n           * after the initial keyboard is shown. This prevents the webview from resizing\n           * until the \"Passwords\" bar is shown, so we need to wait for that to happen first.\n           */\n          if (inputEl.type === 'password') {\n            // Add 50px to account for the \"Passwords\" bar\n            scrollData.scrollAmount += 50;\n            window.addEventListener('ionKeyboardDidShow', doubleKeyboardEventListener);\n          } else {\n            window.addEventListener('ionKeyboardDidShow', scrollContent);\n          }\n          /**\n           * This should only fire in 2 instances:\n           * 1. The app is very slow.\n           * 2. The app is running in a browser on an old OS\n           * that does not support Ionic Keyboard Events\n           */\n          scrollContentTimeout = setTimeout(scrollContent, 1000);\n          return;\n        }\n      }\n      scrollContent();\n    }\n  });\n  return function jsSetFocus(_x, _x2, _x3, _x4, _x5) {\n    return _ref.apply(this, arguments);\n  };\n}();\nconst hasPointerMoved = (threshold, startCoord, endCoord) => {\n  if (startCoord && endCoord) {\n    const deltaX = startCoord.x - endCoord.x;\n    const deltaY = startCoord.y - endCoord.y;\n    const distance = deltaX * deltaX + deltaY * deltaY;\n    return distance > threshold * threshold;\n  }\n  return false;\n};\nconst PADDING_TIMER_KEY = '$ionPaddingTimer';\nconst enableScrollPadding = keyboardHeight => {\n  const doc = document;\n  const onFocusin = ev => {\n    setScrollPadding(ev.target, keyboardHeight);\n  };\n  const onFocusout = ev => {\n    setScrollPadding(ev.target, 0);\n  };\n  doc.addEventListener('focusin', onFocusin);\n  doc.addEventListener('focusout', onFocusout);\n  return () => {\n    doc.removeEventListener('focusin', onFocusin);\n    doc.removeEventListener('focusout', onFocusout);\n  };\n};\nconst setScrollPadding = (input, keyboardHeight) => {\n  if (input.tagName !== 'INPUT') {\n    return;\n  }\n  if (input.parentElement && input.parentElement.tagName === 'ION-INPUT') {\n    return;\n  }\n  if (input.parentElement && input.parentElement.parentElement && input.parentElement.parentElement.tagName === 'ION-SEARCHBAR') {\n    return;\n  }\n  const el = input.closest('ion-content');\n  if (el === null) {\n    return;\n  }\n  const timer = el[PADDING_TIMER_KEY];\n  if (timer) {\n    clearTimeout(timer);\n  }\n  if (keyboardHeight > 0) {\n    el.style.setProperty('--keyboard-offset', `${keyboardHeight}px`);\n  } else {\n    el[PADDING_TIMER_KEY] = setTimeout(() => {\n      el.style.setProperty('--keyboard-offset', '0px');\n    }, 120);\n  }\n};\nconst INPUT_BLURRING = true;\nconst SCROLL_PADDING = true;\nconst startInputShims = config => {\n  const doc = document;\n  const keyboardHeight = config.getNumber('keyboardHeight', 290);\n  const scrollAssist = config.getBoolean('scrollAssist', true);\n  const hideCaret = config.getBoolean('hideCaretOnScroll', true);\n  const inputBlurring = config.getBoolean('inputBlurring', true);\n  const scrollPadding = config.getBoolean('scrollPadding', true);\n  const inputs = Array.from(doc.querySelectorAll('ion-input, ion-textarea'));\n  const hideCaretMap = new WeakMap();\n  const scrollAssistMap = new WeakMap();\n  const registerInput = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator(function* (componentEl) {\n      yield new Promise(resolve => componentOnReady(componentEl, resolve));\n      const inputRoot = componentEl.shadowRoot || componentEl;\n      const inputEl = inputRoot.querySelector('input') || inputRoot.querySelector('textarea');\n      const scrollEl = componentEl.closest('ion-content');\n      const footerEl = !scrollEl ? componentEl.closest('ion-footer') : null;\n      if (!inputEl) {\n        return;\n      }\n      if (!!scrollEl && hideCaret && !hideCaretMap.has(componentEl)) {\n        const rmFn = enableHideCaretOnScroll(componentEl, inputEl, scrollEl);\n        hideCaretMap.set(componentEl, rmFn);\n      }\n      if ((!!scrollEl || !!footerEl) && scrollAssist && !scrollAssistMap.has(componentEl)) {\n        const rmFn = enableScrollAssist(componentEl, inputEl, scrollEl, footerEl, keyboardHeight);\n        scrollAssistMap.set(componentEl, rmFn);\n      }\n    });\n    return function registerInput(_x6) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  const unregisterInput = componentEl => {\n    if (hideCaret) {\n      const fn = hideCaretMap.get(componentEl);\n      if (fn) {\n        fn();\n      }\n      hideCaretMap.delete(componentEl);\n    }\n    if (scrollAssist) {\n      const fn = scrollAssistMap.get(componentEl);\n      if (fn) {\n        fn();\n      }\n      scrollAssistMap.delete(componentEl);\n    }\n  };\n  if (inputBlurring && INPUT_BLURRING) {\n    enableInputBlurring();\n  }\n  if (scrollPadding && SCROLL_PADDING) {\n    enableScrollPadding(keyboardHeight);\n  }\n  // Input might be already loaded in the DOM before ion-device-hacks did.\n  // At this point we need to look for all of the inputs not registered yet\n  // and register them.\n  for (const input of inputs) {\n    registerInput(input);\n  }\n  doc.addEventListener('ionInputDidLoad', ev => {\n    registerInput(ev.detail);\n  });\n  doc.addEventListener('ionInputDidUnload', ev => {\n    unregisterInput(ev.detail);\n  });\n};\nexport { startInputShims };","map":{"version":3,"names":["a","addEventListener","b","removeEventListener","r","raf","p","pointerCoord","c","componentOnReady","cloneMap","WeakMap","relocateInput","componentEl","inputEl","shouldRelocate","inputRelativeY","has","addClone","removeClone","isFocused","input","getRootNode","activeElement","parentEl","parentNode","clonedEl","cloneNode","classList","add","tabIndex","appendChild","set","doc","ownerDocument","tx","dir","style","pointerEvents","transform","clone","get","delete","remove","enableHideCaretOnScroll","scrollEl","scrollHideCaret","shouldHideCaret","onBlur","hideCaret","showCaret","SKIP_SELECTOR","enableInputBlurring","focused","didScroll","document","onScroll","onFocusin","onTouchend","ev","active","matches","tapped","target","closest","setTimeout","blur","SCROLL_ASSIST_SPEED","getScrollData","contentEl","keyboardHeight","itemEl","calcScrollData","getBoundingClientRect","defaultView","innerHeight","inputRect","contentRect","platformHeight","inputTop","top","inputBottom","bottom","visibleAreaTop","visibleAreaBottom","Math","min","safeAreaTop","safeAreaBottom","distanceToBottom","distanceToTop","desiredScrollAmount","round","scrollAmount","distance","abs","duration","scrollDuration","max","scrollPadding","inputSafeY","enableScrollAssist","footerEl","coord","touchStart","touchEnd","endCoord","hasPointerMoved","stopPropagation","jsSetFocus","scrollData","focus","click","window","scrollContentTimeout","scrollContent","undefined","clearTimeout","doubleKeyboardEventListener","scrollByPoint","getScrollElement","totalScrollAmount","scrollHeight","clientHeight","scrollTop","type","threshold","startCoord","deltaX","x","deltaY","y","PADDING_TIMER_KEY","enableScrollPadding","setScrollPadding","onFocusout","tagName","parentElement","el","timer","setProperty","INPUT_BLURRING","SCROLL_PADDING","startInputShims","config","getNumber","scrollAssist","getBoolean","inputBlurring","inputs","Array","from","querySelectorAll","hideCaretMap","scrollAssistMap","registerInput","Promise","resolve","inputRoot","shadowRoot","querySelector","rmFn","unregisterInput","fn","detail"],"sources":["/Applications/OnTarget/OnTarget/node_modules/@ionic/core/dist/esm/input-shims-73f15161.js"],"sourcesContent":["import { a as addEventListener, b as removeEventListener, r as raf, p as pointerCoord, c as componentOnReady } from './helpers-dd7e4b7b.js';\n\nconst cloneMap = new WeakMap();\nconst relocateInput = (componentEl, inputEl, shouldRelocate, inputRelativeY = 0) => {\n  if (cloneMap.has(componentEl) === shouldRelocate) {\n    return;\n  }\n  if (shouldRelocate) {\n    addClone(componentEl, inputEl, inputRelativeY);\n  }\n  else {\n    removeClone(componentEl, inputEl);\n  }\n};\nconst isFocused = (input) => {\n  return input === input.getRootNode().activeElement;\n};\nconst addClone = (componentEl, inputEl, inputRelativeY) => {\n  // this allows for the actual input to receive the focus from\n  // the user's touch event, but before it receives focus, it\n  // moves the actual input to a location that will not screw\n  // up the app's layout, and does not allow the native browser\n  // to attempt to scroll the input into place (messing up headers/footers)\n  // the cloned input fills the area of where native input should be\n  // while the native input fakes out the browser by relocating itself\n  // before it receives the actual focus event\n  // We hide the focused input (with the visible caret) invisible by making it scale(0),\n  const parentEl = inputEl.parentNode;\n  // DOM WRITES\n  const clonedEl = inputEl.cloneNode(false);\n  clonedEl.classList.add('cloned-input');\n  clonedEl.tabIndex = -1;\n  parentEl.appendChild(clonedEl);\n  cloneMap.set(componentEl, clonedEl);\n  const doc = componentEl.ownerDocument;\n  const tx = doc.dir === 'rtl' ? 9999 : -9999;\n  componentEl.style.pointerEvents = 'none';\n  inputEl.style.transform = `translate3d(${tx}px,${inputRelativeY}px,0) scale(0)`;\n};\nconst removeClone = (componentEl, inputEl) => {\n  const clone = cloneMap.get(componentEl);\n  if (clone) {\n    cloneMap.delete(componentEl);\n    clone.remove();\n  }\n  componentEl.style.pointerEvents = '';\n  inputEl.style.transform = '';\n};\n\nconst enableHideCaretOnScroll = (componentEl, inputEl, scrollEl) => {\n  if (!scrollEl || !inputEl) {\n    return () => { return; };\n  }\n  const scrollHideCaret = (shouldHideCaret) => {\n    if (isFocused(inputEl)) {\n      relocateInput(componentEl, inputEl, shouldHideCaret);\n    }\n  };\n  const onBlur = () => relocateInput(componentEl, inputEl, false);\n  const hideCaret = () => scrollHideCaret(true);\n  const showCaret = () => scrollHideCaret(false);\n  addEventListener(scrollEl, 'ionScrollStart', hideCaret);\n  addEventListener(scrollEl, 'ionScrollEnd', showCaret);\n  inputEl.addEventListener('blur', onBlur);\n  return () => {\n    removeEventListener(scrollEl, 'ionScrollStart', hideCaret);\n    removeEventListener(scrollEl, 'ionScrollEnd', showCaret);\n    inputEl.addEventListener('ionBlur', onBlur);\n  };\n};\n\nconst SKIP_SELECTOR = 'input, textarea, [no-blur], [contenteditable]';\nconst enableInputBlurring = () => {\n  let focused = true;\n  let didScroll = false;\n  const doc = document;\n  const onScroll = () => {\n    didScroll = true;\n  };\n  const onFocusin = () => {\n    focused = true;\n  };\n  const onTouchend = (ev) => {\n    // if app did scroll return early\n    if (didScroll) {\n      didScroll = false;\n      return;\n    }\n    const active = doc.activeElement;\n    if (!active) {\n      return;\n    }\n    // only blur if the active element is a text-input or a textarea\n    if (active.matches(SKIP_SELECTOR)) {\n      return;\n    }\n    // if the selected target is the active element, do not blur\n    const tapped = ev.target;\n    if (tapped === active) {\n      return;\n    }\n    if (tapped.matches(SKIP_SELECTOR) || tapped.closest(SKIP_SELECTOR)) {\n      return;\n    }\n    focused = false;\n    // TODO: find a better way, why 50ms?\n    setTimeout(() => {\n      if (!focused) {\n        active.blur();\n      }\n    }, 50);\n  };\n  addEventListener(doc, 'ionScrollStart', onScroll);\n  doc.addEventListener('focusin', onFocusin, true);\n  doc.addEventListener('touchend', onTouchend, false);\n  return () => {\n    removeEventListener(doc, 'ionScrollStart', onScroll, true);\n    doc.removeEventListener('focusin', onFocusin, true);\n    doc.removeEventListener('touchend', onTouchend, false);\n  };\n};\n\nconst SCROLL_ASSIST_SPEED = 0.3;\nconst getScrollData = (componentEl, contentEl, keyboardHeight) => {\n  const itemEl = componentEl.closest('ion-item,[ion-item]') || componentEl;\n  return calcScrollData(itemEl.getBoundingClientRect(), contentEl.getBoundingClientRect(), keyboardHeight, componentEl.ownerDocument.defaultView.innerHeight);\n};\nconst calcScrollData = (inputRect, contentRect, keyboardHeight, platformHeight) => {\n  // compute input's Y values relative to the body\n  const inputTop = inputRect.top;\n  const inputBottom = inputRect.bottom;\n  // compute visible area\n  const visibleAreaTop = contentRect.top;\n  const visibleAreaBottom = Math.min(contentRect.bottom, platformHeight - keyboardHeight);\n  // compute safe area\n  const safeAreaTop = visibleAreaTop + 15;\n  const safeAreaBottom = visibleAreaBottom * 0.75;\n  // figure out if each edge of the input is within the safe area\n  const distanceToBottom = safeAreaBottom - inputBottom;\n  const distanceToTop = safeAreaTop - inputTop;\n  // desiredScrollAmount is the negated distance to the safe area according to our calculations.\n  const desiredScrollAmount = Math.round((distanceToBottom < 0)\n    ? -distanceToBottom\n    : (distanceToTop > 0)\n      ? -distanceToTop\n      : 0);\n  // our calculations make some assumptions that aren't always true, like the keyboard being closed when an input\n  // gets focus, so make sure we don't scroll the input above the visible area\n  const scrollAmount = Math.min(desiredScrollAmount, inputTop - visibleAreaTop);\n  const distance = Math.abs(scrollAmount);\n  const duration = distance / SCROLL_ASSIST_SPEED;\n  const scrollDuration = Math.min(400, Math.max(150, duration));\n  return {\n    scrollAmount,\n    scrollDuration,\n    scrollPadding: keyboardHeight,\n    inputSafeY: -(inputTop - safeAreaTop) + 4\n  };\n};\n\nconst enableScrollAssist = (componentEl, inputEl, contentEl, footerEl, keyboardHeight) => {\n  let coord;\n  const touchStart = (ev) => {\n    coord = pointerCoord(ev);\n  };\n  const touchEnd = (ev) => {\n    // input cover touchend/mouseup\n    if (!coord) {\n      return;\n    }\n    // get where the touchend/mouseup ended\n    const endCoord = pointerCoord(ev);\n    // focus this input if the pointer hasn't moved XX pixels\n    // and the input doesn't already have focus\n    if (!hasPointerMoved(6, coord, endCoord) && !isFocused(inputEl)) {\n      ev.stopPropagation();\n      // begin the input focus process\n      jsSetFocus(componentEl, inputEl, contentEl, footerEl, keyboardHeight);\n    }\n  };\n  componentEl.addEventListener('touchstart', touchStart, true);\n  componentEl.addEventListener('touchend', touchEnd, true);\n  return () => {\n    componentEl.removeEventListener('touchstart', touchStart, true);\n    componentEl.removeEventListener('touchend', touchEnd, true);\n  };\n};\nconst jsSetFocus = async (componentEl, inputEl, contentEl, footerEl, keyboardHeight) => {\n  if (!contentEl && !footerEl) {\n    return;\n  }\n  const scrollData = getScrollData(componentEl, (contentEl || footerEl), keyboardHeight);\n  if (contentEl && Math.abs(scrollData.scrollAmount) < 4) {\n    // the text input is in a safe position that doesn't\n    // require it to be scrolled into view, just set focus now\n    inputEl.focus();\n    return;\n  }\n  // temporarily move the focus to the focus holder so the browser\n  // doesn't freak out while it's trying to get the input in place\n  // at this point the native text input still does not have focus\n  relocateInput(componentEl, inputEl, true, scrollData.inputSafeY);\n  inputEl.focus();\n  /**\n   * Relocating/Focusing input causes the\n   * click event to be cancelled, so\n   * manually fire one here.\n   */\n  raf(() => componentEl.click());\n  /* tslint:disable-next-line */\n  if (typeof window !== 'undefined') {\n    let scrollContentTimeout;\n    const scrollContent = async () => {\n      // clean up listeners and timeouts\n      if (scrollContentTimeout !== undefined) {\n        clearTimeout(scrollContentTimeout);\n      }\n      window.removeEventListener('ionKeyboardDidShow', doubleKeyboardEventListener);\n      window.removeEventListener('ionKeyboardDidShow', scrollContent);\n      // scroll the input into place\n      if (contentEl) {\n        await contentEl.scrollByPoint(0, scrollData.scrollAmount, scrollData.scrollDuration);\n      }\n      // the scroll view is in the correct position now\n      // give the native text input focus\n      relocateInput(componentEl, inputEl, false, scrollData.inputSafeY);\n      // ensure this is the focused input\n      inputEl.focus();\n    };\n    const doubleKeyboardEventListener = () => {\n      window.removeEventListener('ionKeyboardDidShow', doubleKeyboardEventListener);\n      window.addEventListener('ionKeyboardDidShow', scrollContent);\n    };\n    if (contentEl) {\n      const scrollEl = await contentEl.getScrollElement();\n      /**\n       * scrollData will only consider the amount we need\n       * to scroll in order to properly bring the input\n       * into view. It will not consider the amount\n       * we can scroll in the content element.\n       * As a result, scrollData may request a greater\n       * scroll position than is currently available\n       * in the DOM. If this is the case, we need to\n       * wait for the webview to resize/the keyboard\n       * to show in order for additional scroll\n       * bandwidth to become available.\n       */\n      const totalScrollAmount = scrollEl.scrollHeight - scrollEl.clientHeight;\n      if (scrollData.scrollAmount > (totalScrollAmount - scrollEl.scrollTop)) {\n        /**\n         * On iOS devices, the system will show a \"Passwords\" bar above the keyboard\n         * after the initial keyboard is shown. This prevents the webview from resizing\n         * until the \"Passwords\" bar is shown, so we need to wait for that to happen first.\n         */\n        if (inputEl.type === 'password') {\n          // Add 50px to account for the \"Passwords\" bar\n          scrollData.scrollAmount += 50;\n          window.addEventListener('ionKeyboardDidShow', doubleKeyboardEventListener);\n        }\n        else {\n          window.addEventListener('ionKeyboardDidShow', scrollContent);\n        }\n        /**\n         * This should only fire in 2 instances:\n         * 1. The app is very slow.\n         * 2. The app is running in a browser on an old OS\n         * that does not support Ionic Keyboard Events\n         */\n        scrollContentTimeout = setTimeout(scrollContent, 1000);\n        return;\n      }\n    }\n    scrollContent();\n  }\n};\nconst hasPointerMoved = (threshold, startCoord, endCoord) => {\n  if (startCoord && endCoord) {\n    const deltaX = (startCoord.x - endCoord.x);\n    const deltaY = (startCoord.y - endCoord.y);\n    const distance = deltaX * deltaX + deltaY * deltaY;\n    return distance > (threshold * threshold);\n  }\n  return false;\n};\n\nconst PADDING_TIMER_KEY = '$ionPaddingTimer';\nconst enableScrollPadding = (keyboardHeight) => {\n  const doc = document;\n  const onFocusin = (ev) => {\n    setScrollPadding(ev.target, keyboardHeight);\n  };\n  const onFocusout = (ev) => {\n    setScrollPadding(ev.target, 0);\n  };\n  doc.addEventListener('focusin', onFocusin);\n  doc.addEventListener('focusout', onFocusout);\n  return () => {\n    doc.removeEventListener('focusin', onFocusin);\n    doc.removeEventListener('focusout', onFocusout);\n  };\n};\nconst setScrollPadding = (input, keyboardHeight) => {\n  if (input.tagName !== 'INPUT') {\n    return;\n  }\n  if (input.parentElement && input.parentElement.tagName === 'ION-INPUT') {\n    return;\n  }\n  if (input.parentElement &&\n    input.parentElement.parentElement &&\n    input.parentElement.parentElement.tagName === 'ION-SEARCHBAR') {\n    return;\n  }\n  const el = input.closest('ion-content');\n  if (el === null) {\n    return;\n  }\n  const timer = el[PADDING_TIMER_KEY];\n  if (timer) {\n    clearTimeout(timer);\n  }\n  if (keyboardHeight > 0) {\n    el.style.setProperty('--keyboard-offset', `${keyboardHeight}px`);\n  }\n  else {\n    el[PADDING_TIMER_KEY] = setTimeout(() => {\n      el.style.setProperty('--keyboard-offset', '0px');\n    }, 120);\n  }\n};\n\nconst INPUT_BLURRING = true;\nconst SCROLL_PADDING = true;\nconst startInputShims = (config) => {\n  const doc = document;\n  const keyboardHeight = config.getNumber('keyboardHeight', 290);\n  const scrollAssist = config.getBoolean('scrollAssist', true);\n  const hideCaret = config.getBoolean('hideCaretOnScroll', true);\n  const inputBlurring = config.getBoolean('inputBlurring', true);\n  const scrollPadding = config.getBoolean('scrollPadding', true);\n  const inputs = Array.from(doc.querySelectorAll('ion-input, ion-textarea'));\n  const hideCaretMap = new WeakMap();\n  const scrollAssistMap = new WeakMap();\n  const registerInput = async (componentEl) => {\n    await new Promise(resolve => componentOnReady(componentEl, resolve));\n    const inputRoot = componentEl.shadowRoot || componentEl;\n    const inputEl = inputRoot.querySelector('input') || inputRoot.querySelector('textarea');\n    const scrollEl = componentEl.closest('ion-content');\n    const footerEl = (!scrollEl) ? componentEl.closest('ion-footer') : null;\n    if (!inputEl) {\n      return;\n    }\n    if (!!scrollEl && hideCaret && !hideCaretMap.has(componentEl)) {\n      const rmFn = enableHideCaretOnScroll(componentEl, inputEl, scrollEl);\n      hideCaretMap.set(componentEl, rmFn);\n    }\n    if ((!!scrollEl || !!footerEl) && scrollAssist && !scrollAssistMap.has(componentEl)) {\n      const rmFn = enableScrollAssist(componentEl, inputEl, scrollEl, footerEl, keyboardHeight);\n      scrollAssistMap.set(componentEl, rmFn);\n    }\n  };\n  const unregisterInput = (componentEl) => {\n    if (hideCaret) {\n      const fn = hideCaretMap.get(componentEl);\n      if (fn) {\n        fn();\n      }\n      hideCaretMap.delete(componentEl);\n    }\n    if (scrollAssist) {\n      const fn = scrollAssistMap.get(componentEl);\n      if (fn) {\n        fn();\n      }\n      scrollAssistMap.delete(componentEl);\n    }\n  };\n  if (inputBlurring && INPUT_BLURRING) {\n    enableInputBlurring();\n  }\n  if (scrollPadding && SCROLL_PADDING) {\n    enableScrollPadding(keyboardHeight);\n  }\n  // Input might be already loaded in the DOM before ion-device-hacks did.\n  // At this point we need to look for all of the inputs not registered yet\n  // and register them.\n  for (const input of inputs) {\n    registerInput(input);\n  }\n  doc.addEventListener('ionInputDidLoad', ((ev) => {\n    registerInput(ev.detail);\n  }));\n  doc.addEventListener('ionInputDidUnload', ((ev) => {\n    unregisterInput(ev.detail);\n  }));\n};\n\nexport { startInputShims };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}