{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { PLATFORM_ID, Component, ViewEncapsulation, Inject, Input, ViewChild, HostBinding, HostListener, Injectable, ChangeDetectionStrategy, EventEmitter, Output, Directive, NgModule, ContentChild } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { isPlatformBrowser, isPlatformServer, CommonModule } from '@angular/common';\nimport { __decorate } from 'tslib';\nimport { DomPortalOutlet, ComponentPortal } from '@angular/cdk/portal';\nimport { fromEvent } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { trigger, transition, style, animate } from '@angular/animations';\nimport { select } from 'd3-selection';\nimport { brushX } from 'd3-brush';\nimport { scaleTime, scaleLinear, scalePoint, scaleOrdinal, scaleQuantile, scaleBand } from 'd3-scale';\nimport { area, curveLinear, line, arc, lineRadial, curveCardinalClosed, pie } from 'd3-shape';\nimport { range, min, max, quantile } from 'd3-array';\nimport { interpolate } from 'd3-interpolate';\nimport { easeSinInOut } from 'd3-ease';\nimport rfdc from 'rfdc';\nimport { format } from 'd3-format';\nimport * as d3_color from 'd3-color';\nimport { treemap, stratify } from 'd3-hierarchy';\nimport { timeFormat } from 'd3-time-format';\n\n/**\n * Throttle a function\n *\n */\nconst _c0 = [\"caretElm\"];\nfunction TooltipContentComponent_span_4_ng_template_1_Template(rf, ctx) {}\nconst _c1 = function (a0) {\n  return {\n    model: a0\n  };\n};\nfunction TooltipContentComponent_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtemplate(1, TooltipContentComponent_span_4_ng_template_1_Template, 0, 0, \"ng-template\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.template)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c1, ctx_r1.context));\n  }\n}\nfunction TooltipContentComponent_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 6);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"innerHTML\", ctx_r2.title, i0.ɵɵsanitizeHtml);\n  }\n}\nfunction LegendComponent_header_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"header\", 4);\n    i0.ɵɵelementStart(1, \"span\", 5);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.title);\n  }\n}\nfunction LegendComponent_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 6);\n    i0.ɵɵelementStart(1, \"ngx-charts-legend-entry\", 7);\n    i0.ɵɵlistener(\"select\", function LegendComponent_li_4_Template_ngx_charts_legend_entry_select_1_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.labelClick.emit($event);\n    })(\"activate\", function LegendComponent_li_4_Template_ngx_charts_legend_entry_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.activate($event);\n    })(\"deactivate\", function LegendComponent_li_4_Template_ngx_charts_legend_entry_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.deactivate($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const entry_r2 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"label\", entry_r2.label)(\"formattedLabel\", entry_r2.formattedLabel)(\"color\", entry_r2.color)(\"isActive\", ctx_r1.isActive(entry_r2));\n  }\n}\nfunction ChartComponent_ngx_charts_scale_legend_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelement(0, \"ngx-charts-scale-legend\", 4);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"horizontal\", ctx_r0.legendOptions && ctx_r0.legendOptions.position === ctx_r0.LegendPosition.Below)(\"valueRange\", ctx_r0.legendOptions.domain)(\"colors\", ctx_r0.legendOptions.colors)(\"height\", ctx_r0.view[1])(\"width\", ctx_r0.legendWidth);\n  }\n}\nfunction ChartComponent_ngx_charts_legend_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(0, \"ngx-charts-legend\", 5);\n    i0.ɵɵlistener(\"labelClick\", function ChartComponent_ngx_charts_legend_4_Template_ngx_charts_legend_labelClick_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.legendLabelClick.emit($event);\n    })(\"labelActivate\", function ChartComponent_ngx_charts_legend_4_Template_ngx_charts_legend_labelActivate_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.legendLabelActivate.emit($event);\n    })(\"labelDeactivate\", function ChartComponent_ngx_charts_legend_4_Template_ngx_charts_legend_labelDeactivate_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.legendLabelDeactivate.emit($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"horizontal\", ctx_r1.legendOptions && ctx_r1.legendOptions.position === ctx_r1.LegendPosition.Below)(\"data\", ctx_r1.legendOptions.domain)(\"title\", ctx_r1.legendOptions.title)(\"colors\", ctx_r1.legendOptions.colors)(\"height\", ctx_r1.view[1])(\"width\", ctx_r1.legendWidth)(\"activeEntries\", ctx_r1.activeEntries);\n  }\n}\nconst _c2 = [\"*\"];\nconst _c3 = [\"ngx-charts-axis-label\", \"\"];\nconst _c4 = [\"ticksel\"];\nconst _c5 = [\"ngx-charts-x-axis-ticks\", \"\"];\nfunction XAxisTicksComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 3);\n    i0.ɵɵelementStart(1, \"title\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"text\", 4);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tick_r3 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r1.tickTransform(tick_r3));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.tickFormat(tick_r3));\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"font-size\", \"12px\");\n    i0.ɵɵattribute(\"text-anchor\", ctx_r1.textAnchor)(\"transform\", ctx_r1.textTransform);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.tickTrim(ctx_r1.tickFormat(tick_r3)), \" \");\n  }\n}\nfunction XAxisTicksComponent__svg_g_3__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"line\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"transform\", ctx_r5.gridLineTransform());\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"y1\", -ctx_r5.gridLineHeight);\n  }\n}\nfunction XAxisTicksComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, XAxisTicksComponent__svg_g_3__svg_g_1_Template, 2, 2, \"g\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tick_r4 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r2.tickTransform(tick_r4));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.showGridLines);\n  }\n}\nconst _c6 = [\"ngx-charts-x-axis\", \"\"];\nfunction XAxisComponent__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2);\n    i0.ɵɵlistener(\"dimensionsChanged\", function XAxisComponent__svg_g_1_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.emitTicksHeight($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"trimTicks\", ctx_r0.trimTicks)(\"rotateTicks\", ctx_r0.rotateTicks)(\"maxTickLength\", ctx_r0.maxTickLength)(\"tickFormatting\", ctx_r0.tickFormatting)(\"tickArguments\", ctx_r0.tickArguments)(\"tickStroke\", ctx_r0.tickStroke)(\"scale\", ctx_r0.xScale)(\"orient\", ctx_r0.xOrient)(\"showGridLines\", ctx_r0.showGridLines)(\"gridLineHeight\", ctx_r0.dims.height)(\"width\", ctx_r0.dims.width)(\"tickValues\", ctx_r0.ticks);\n  }\n}\nfunction XAxisComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 3);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"label\", ctx_r1.labelText)(\"offset\", ctx_r1.labelOffset)(\"orient\", ctx_r1.orientation.Bottom)(\"height\", ctx_r1.dims.height)(\"width\", ctx_r1.dims.width);\n  }\n}\nconst _c7 = [\"ngx-charts-y-axis-ticks\", \"\"];\nfunction YAxisTicksComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 4);\n    i0.ɵɵelementStart(1, \"title\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"text\", 5);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tick_r5 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r1.transform(tick_r5));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.tickFormat(tick_r5));\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"font-size\", \"12px\");\n    i0.ɵɵattribute(\"dy\", ctx_r1.dy)(\"x\", ctx_r1.x1)(\"y\", ctx_r1.y1)(\"text-anchor\", ctx_r1.textAnchor);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.tickTrim(ctx_r1.tickFormat(tick_r5)), \" \");\n  }\n}\nfunction YAxisTicksComponent__svg_path_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"path\", 6);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"d\", ctx_r2.referenceAreaPath)(\"transform\", ctx_r2.gridLineTransform());\n  }\n}\nfunction YAxisTicksComponent__svg_g_4__svg_g_1__svg_line_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"line\", 9);\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(3);\n    i0.ɵɵattribute(\"x2\", ctx_r8.gridLineWidth);\n  }\n}\nfunction YAxisTicksComponent__svg_g_4__svg_g_1__svg_line_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"line\", 9);\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext(3);\n    i0.ɵɵattribute(\"x2\", -ctx_r9.gridLineWidth);\n  }\n}\nfunction YAxisTicksComponent__svg_g_4__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, YAxisTicksComponent__svg_g_4__svg_g_1__svg_line_1_Template, 1, 1, \"line\", 8);\n    i0.ɵɵtemplate(2, YAxisTicksComponent__svg_g_4__svg_g_1__svg_line_2_Template, 1, 1, \"line\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"transform\", ctx_r7.gridLineTransform());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.orient === ctx_r7.Orientation.Left);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.orient === ctx_r7.Orientation.Right);\n  }\n}\nfunction YAxisTicksComponent__svg_g_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, YAxisTicksComponent__svg_g_4__svg_g_1_Template, 3, 3, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tick_r6 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r3.transform(tick_r6));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.showGridLines);\n  }\n}\nfunction YAxisTicksComponent__svg_g_5__svg_g_1__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelementStart(1, \"title\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"text\", 11);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const refLine_r10 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r12 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r12.tickTrim(ctx_r12.tickFormat(refLine_r10.value)));\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"dy\", ctx_r12.dy)(\"y\", -6)(\"x\", ctx_r12.gridLineWidth)(\"text-anchor\", ctx_r12.textAnchor);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", refLine_r10.name, \" \");\n  }\n}\nfunction YAxisTicksComponent__svg_g_5__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"line\", 10);\n    i0.ɵɵtemplate(2, YAxisTicksComponent__svg_g_5__svg_g_1__svg_g_2_Template, 5, 6, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const refLine_r10 = i0.ɵɵnextContext().$implicit;\n    const ctx_r11 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r11.transform(refLine_r10.value));\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"x2\", ctx_r11.gridLineWidth)(\"transform\", ctx_r11.gridLineTransform());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r11.showRefLabels);\n  }\n}\nfunction YAxisTicksComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, YAxisTicksComponent__svg_g_5__svg_g_1_Template, 3, 4, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.showRefLines);\n  }\n}\nconst _c8 = [\"ngx-charts-y-axis\", \"\"];\nfunction YAxisComponent__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2);\n    i0.ɵɵlistener(\"dimensionsChanged\", function YAxisComponent__svg_g_1_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.emitTicksWidth($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"trimTicks\", ctx_r0.trimTicks)(\"maxTickLength\", ctx_r0.maxTickLength)(\"tickFormatting\", ctx_r0.tickFormatting)(\"tickArguments\", ctx_r0.tickArguments)(\"tickValues\", ctx_r0.ticks)(\"tickStroke\", ctx_r0.tickStroke)(\"scale\", ctx_r0.yScale)(\"orient\", ctx_r0.yOrient)(\"showGridLines\", ctx_r0.showGridLines)(\"gridLineWidth\", ctx_r0.dims.width)(\"referenceLines\", ctx_r0.referenceLines)(\"showRefLines\", ctx_r0.showRefLines)(\"showRefLabels\", ctx_r0.showRefLabels)(\"height\", ctx_r0.dims.height);\n  }\n}\nfunction YAxisComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 3);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"label\", ctx_r1.labelText)(\"offset\", ctx_r1.labelOffset)(\"orient\", ctx_r1.yOrient)(\"height\", ctx_r1.dims.height)(\"width\", ctx_r1.dims.width);\n  }\n}\nconst _c9 = [\"ngx-charts-svg-linear-gradient\", \"\"];\nfunction SvgLinearGradientComponent__svg_stop_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"stop\");\n  }\n  if (rf & 2) {\n    const stop_r1 = ctx.$implicit;\n    i0.ɵɵstyleProp(\"stop-color\", stop_r1.color)(\"stop-opacity\", stop_r1.opacity);\n    i0.ɵɵattribute(\"offset\", stop_r1.offset + \"%\");\n  }\n}\nconst _c10 = [\"ngx-charts-circle\", \"\"];\nconst _c11 = [\"ngx-charts-circle-series\", \"\"];\nfunction CircleSeriesComponent__svg_g_0__svg_rect_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"rect\", 4);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\");\n    i0.ɵɵattribute(\"x\", ctx_r1.circle.cx - ctx_r1.circle.radius)(\"y\", ctx_r1.circle.cy)(\"width\", ctx_r1.circle.radius * 2)(\"height\", ctx_r1.circle.height)(\"fill\", ctx_r1.gradientFill);\n  }\n}\nfunction CircleSeriesComponent__svg_g_0__svg_rect_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"rect\", 4);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"x\", ctx_r2.circle.cx - ctx_r2.circle.radius)(\"y\", ctx_r2.circle.cy)(\"width\", ctx_r2.circle.radius * 2)(\"height\", ctx_r2.circle.height)(\"fill\", ctx_r2.gradientFill);\n  }\n}\nconst _c12 = function (a0) {\n  return {\n    name: a0\n  };\n};\nfunction CircleSeriesComponent__svg_g_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelementStart(1, \"defs\");\n    i0.ɵɵelement(2, \"g\", 1);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, CircleSeriesComponent__svg_g_0__svg_rect_3_Template, 1, 6, \"rect\", 2);\n    i0.ɵɵtemplate(4, CircleSeriesComponent__svg_g_0__svg_rect_4_Template, 1, 5, \"rect\", 2);\n    i0.ɵɵelementStart(5, \"g\", 3);\n    i0.ɵɵlistener(\"select\", function CircleSeriesComponent__svg_g_0_Template__svg_g_select_5_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.onClick(ctx_r3.circle.data);\n    })(\"activate\", function CircleSeriesComponent__svg_g_0_Template__svg_g_activate_5_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.activateCircle();\n    })(\"deactivate\", function CircleSeriesComponent__svg_g_0_Template__svg_g_deactivate_5_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.deactivateCircle();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"orientation\", ctx_r0.barOrientation.Vertical)(\"name\", ctx_r0.gradientId)(\"stops\", ctx_r0.circle.gradientStops);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.isSSR && ctx_r0.barVisible && ctx_r0.type === \"standard\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isSSR && ctx_r0.barVisible && ctx_r0.type === \"standard\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"active\", ctx_r0.isActive(i0.ɵɵpureFunction1(20, _c12, ctx_r0.circle.seriesName)));\n    i0.ɵɵproperty(\"cx\", ctx_r0.circle.cx)(\"cy\", ctx_r0.circle.cy)(\"r\", ctx_r0.circle.radius)(\"fill\", ctx_r0.circle.color)(\"pointerEvents\", ctx_r0.circle.value === 0 ? \"none\" : \"all\")(\"data\", ctx_r0.circle.value)(\"classNames\", ctx_r0.circle.classNames)(\"tooltipDisabled\", ctx_r0.tooltipDisabled)(\"tooltipPlacement\", ctx_r0.placementTypes.Top)(\"tooltipType\", ctx_r0.styleTypes.tooltip)(\"tooltipTitle\", ctx_r0.tooltipTemplate ? undefined : ctx_r0.getTooltipText(ctx_r0.circle))(\"tooltipTemplate\", ctx_r0.tooltipTemplate)(\"tooltipContext\", ctx_r0.circle.data);\n  }\n}\nconst _c13 = [\"ngx-charts-grid-panel\", \"\"];\nconst _c14 = [\"ngx-charts-grid-panel-series\", \"\"];\nfunction GridPanelSeriesComponent__svg_g_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 1);\n  }\n  if (rf & 2) {\n    const gridPanel_r1 = ctx.$implicit;\n    i0.ɵɵclassProp(\"grid-panel\", true)(\"odd\", gridPanel_r1.class === \"odd\")(\"even\", gridPanel_r1.class === \"even\");\n    i0.ɵɵproperty(\"height\", gridPanel_r1.height)(\"width\", gridPanel_r1.width)(\"x\", gridPanel_r1.x)(\"y\", gridPanel_r1.y);\n  }\n}\nconst _c15 = [\"ngx-charts-svg-radial-gradient\", \"\"];\nfunction SvgRadialGradientComponent__svg_stop_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"stop\");\n  }\n  if (rf & 2) {\n    const stop_r1 = ctx.$implicit;\n    i0.ɵɵstyleProp(\"stop-color\", stop_r1.color)(\"stop-opacity\", stop_r1.opacity);\n    i0.ɵɵattribute(\"offset\", stop_r1.offset + \"%\");\n  }\n}\nconst _c16 = [\"ngx-charts-area\", \"\"];\nfunction AreaComponent__svg_defs_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"defs\");\n    i0.ɵɵelement(1, \"g\", 2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"orientation\", ctx_r0.barOrientation.Vertical)(\"name\", ctx_r0.gradientId)(\"stops\", ctx_r0.gradientStops);\n  }\n}\nconst _c17 = [\"ngx-charts-count-up\", \"\"];\nconst _c18 = [\"tooltipAnchor\"];\nconst _c19 = [\"ngx-charts-tooltip-area\", \"\"];\nfunction TooltipArea__svg_ng_template_2__xhtml_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵelement(1, \"span\", 7);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tooltipItem_r5 = ctx.$implicit;\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"background-color\", tooltipItem_r5.color);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r4.getToolTipText(tooltipItem_r5), \" \");\n  }\n}\nfunction TooltipArea__svg_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵtemplate(1, TooltipArea__svg_ng_template_2__xhtml_div_1_Template, 3, 3, \"div\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const model_r3 = ctx.model;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", model_r3);\n  }\n}\nconst _c20 = [\"ngx-charts-timeline\", \"\"];\nfunction AdvancedLegendComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 7);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"countTo\", ctx_r0.roundedTotal)(\"valueFormatting\", ctx_r0.valueFormatting);\n  }\n}\nfunction AdvancedLegendComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.valueFormatting ? ctx_r1.valueFormatting(ctx_r1.roundedTotal) : ctx_r1.defaultValueFormatting(ctx_r1.roundedTotal), \" \");\n  }\n}\nfunction AdvancedLegendComponent_div_7_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 16);\n  }\n  if (rf & 2) {\n    const legendItem_r3 = i0.ɵɵnextContext().$implicit;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"countTo\", legendItem_r3._value)(\"valueFormatting\", ctx_r4.valueFormatting);\n  }\n}\nfunction AdvancedLegendComponent_div_7_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const legendItem_r3 = i0.ɵɵnextContext().$implicit;\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r5.valueFormatting ? ctx_r5.valueFormatting(legendItem_r3.value) : ctx_r5.defaultValueFormatting(legendItem_r3.value), \" \");\n  }\n}\nfunction AdvancedLegendComponent_div_7_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 18);\n  }\n  if (rf & 2) {\n    const legendItem_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"countTo\", legendItem_r3.percentage)(\"countSuffix\", \"%\");\n  }\n}\nfunction AdvancedLegendComponent_div_7_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const legendItem_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", legendItem_r3.percentage.toLocaleString(), \"%\");\n  }\n}\nfunction AdvancedLegendComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵlistener(\"mouseenter\", function AdvancedLegendComponent_div_7_Template_div_mouseenter_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const legendItem_r3 = restoredCtx.$implicit;\n      const ctx_r12 = i0.ɵɵnextContext();\n      return ctx_r12.activate.emit(legendItem_r3.data);\n    })(\"mouseleave\", function AdvancedLegendComponent_div_7_Template_div_mouseleave_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const legendItem_r3 = restoredCtx.$implicit;\n      const ctx_r14 = i0.ɵɵnextContext();\n      return ctx_r14.deactivate.emit(legendItem_r3.data);\n    })(\"click\", function AdvancedLegendComponent_div_7_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const legendItem_r3 = restoredCtx.$implicit;\n      const ctx_r15 = i0.ɵɵnextContext();\n      return ctx_r15.select.emit(legendItem_r3.data);\n    });\n    i0.ɵɵelement(1, \"div\", 10);\n    i0.ɵɵtemplate(2, AdvancedLegendComponent_div_7_div_2_Template, 1, 2, \"div\", 11);\n    i0.ɵɵtemplate(3, AdvancedLegendComponent_div_7_div_3_Template, 2, 1, \"div\", 12);\n    i0.ɵɵelementStart(4, \"div\", 13);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, AdvancedLegendComponent_div_7_div_6_Template, 1, 2, \"div\", 14);\n    i0.ɵɵtemplate(7, AdvancedLegendComponent_div_7_div_7_Template, 2, 1, \"div\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const legendItem_r3 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"border-left-color\", legendItem_r3.color);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.animations);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.animations);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(legendItem_r3.displayLabel);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.animations);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.animations);\n  }\n}\nconst _c21 = [\"ngx-charts-area-series\", \"\"];\nconst _c22 = [\"tooltipTemplate\"];\nconst _c23 = [\"seriesTooltipTemplate\"];\nfunction AreaChartComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 7);\n    i0.ɵɵlistener(\"dimensionsChanged\", function AreaChartComponent__svg_g_5_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.updateXAxisHeight($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r0.xScale)(\"dims\", ctx_r0.dims)(\"showGridLines\", ctx_r0.showGridLines)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"trimTicks\", ctx_r0.trimXAxisTicks)(\"rotateTicks\", ctx_r0.rotateXAxisTicks)(\"maxTickLength\", ctx_r0.maxXAxisTickLength)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks);\n  }\n}\nfunction AreaChartComponent__svg_g_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 8);\n    i0.ɵɵlistener(\"dimensionsChanged\", function AreaChartComponent__svg_g_6_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.updateYAxisWidth($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks);\n  }\n}\nfunction AreaChartComponent__svg_g_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"g\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const series_r9 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r2.xScale)(\"yScale\", ctx_r2.yScale)(\"baseValue\", ctx_r2.baseValue)(\"colors\", ctx_r2.colors)(\"data\", series_r9)(\"activeEntries\", ctx_r2.activeEntries)(\"scaleType\", ctx_r2.scaleType)(\"gradient\", ctx_r2.gradient)(\"curve\", ctx_r2.curve)(\"animations\", ctx_r2.animations);\n  }\n}\nfunction AreaChartComponent__svg_g_9__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelementStart(1, \"g\", 13);\n    i0.ɵɵlistener(\"select\", function AreaChartComponent__svg_g_9__svg_g_2_Template__svg_g_select_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const series_r11 = restoredCtx.$implicit;\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return ctx_r12.onClick($event, series_r11);\n    })(\"activate\", function AreaChartComponent__svg_g_9__svg_g_2_Template__svg_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return ctx_r14.onActivate($event);\n    })(\"deactivate\", function AreaChartComponent__svg_g_9__svg_g_2_Template__svg_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return ctx_r15.onDeactivate($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const series_r11 = ctx.$implicit;\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r10.xScale)(\"yScale\", ctx_r10.yScale)(\"colors\", ctx_r10.colors)(\"activeEntries\", ctx_r10.activeEntries)(\"data\", series_r11)(\"scaleType\", ctx_r10.scaleType)(\"visibleValue\", ctx_r10.hoveredVertical)(\"tooltipDisabled\", ctx_r10.tooltipDisabled)(\"tooltipTemplate\", ctx_r10.tooltipTemplate);\n  }\n}\nfunction AreaChartComponent__svg_g_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 10);\n    i0.ɵɵlistener(\"mouseleave\", function AreaChartComponent__svg_g_9_Template__svg_g_mouseleave_0_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return ctx_r16.hideCircles();\n    });\n    i0.ɵɵelementStart(1, \"g\", 11);\n    i0.ɵɵlistener(\"hover\", function AreaChartComponent__svg_g_9_Template__svg_g_hover_1_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return ctx_r18.updateHoveredVertical($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(2, AreaChartComponent__svg_g_9__svg_g_2_Template, 2, 9, \"g\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"dims\", ctx_r3.dims)(\"xSet\", ctx_r3.xSet)(\"xScale\", ctx_r3.xScale)(\"yScale\", ctx_r3.yScale)(\"results\", ctx_r3.results)(\"colors\", ctx_r3.colors)(\"tooltipDisabled\", ctx_r3.tooltipDisabled)(\"tooltipTemplate\", ctx_r3.seriesTooltipTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.results);\n  }\n}\nfunction AreaChartComponent__svg_g_10__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"g\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const series_r20 = ctx.$implicit;\n    const ctx_r19 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r19.timelineXScale)(\"yScale\", ctx_r19.timelineYScale)(\"baseValue\", ctx_r19.baseValue)(\"colors\", ctx_r19.colors)(\"data\", series_r20)(\"scaleType\", ctx_r19.scaleType)(\"gradient\", ctx_r19.gradient)(\"curve\", ctx_r19.curve)(\"animations\", ctx_r19.animations);\n  }\n}\nconst _c24 = function (a0, a1) {\n  return [a0, a1];\n};\nfunction AreaChartComponent__svg_g_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 14);\n    i0.ɵɵlistener(\"onDomainChange\", function AreaChartComponent__svg_g_10_Template__svg_g_onDomainChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return ctx_r21.updateDomain($event);\n    });\n    i0.ɵɵtemplate(1, AreaChartComponent__svg_g_10__svg_g_1_Template, 2, 9, \"g\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"results\", ctx_r4.results)(\"view\", i0.ɵɵpureFunction2(10, _c24, ctx_r4.timelineWidth, ctx_r4.height))(\"height\", ctx_r4.timelineHeight)(\"scheme\", ctx_r4.scheme)(\"customColors\", ctx_r4.customColors)(\"legend\", ctx_r4.legend)(\"scaleType\", ctx_r4.scaleType);\n    i0.ɵɵattribute(\"transform\", ctx_r4.timelineTransform);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.results)(\"ngForTrackBy\", ctx_r4.trackBy);\n  }\n}\nfunction AreaChartNormalizedComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 7);\n    i0.ɵɵlistener(\"dimensionsChanged\", function AreaChartNormalizedComponent__svg_g_5_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.updateXAxisHeight($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r0.xScale)(\"dims\", ctx_r0.dims)(\"showGridLines\", ctx_r0.showGridLines)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"trimTicks\", ctx_r0.trimXAxisTicks)(\"rotateTicks\", ctx_r0.rotateXAxisTicks)(\"maxTickLength\", ctx_r0.maxXAxisTickLength)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks);\n  }\n}\nfunction AreaChartNormalizedComponent__svg_g_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 8);\n    i0.ɵɵlistener(\"dimensionsChanged\", function AreaChartNormalizedComponent__svg_g_6_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.updateYAxisWidth($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks);\n  }\n}\nfunction AreaChartNormalizedComponent__svg_g_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"g\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const series_r9 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r2.xScale)(\"yScale\", ctx_r2.yScale)(\"colors\", ctx_r2.colors)(\"data\", series_r9)(\"scaleType\", ctx_r2.scaleType)(\"activeEntries\", ctx_r2.activeEntries)(\"gradient\", ctx_r2.gradient)(\"normalized\", true)(\"curve\", ctx_r2.curve)(\"animations\", ctx_r2.animations);\n  }\n}\nfunction AreaChartNormalizedComponent__svg_g_9__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelementStart(1, \"g\", 13);\n    i0.ɵɵlistener(\"select\", function AreaChartNormalizedComponent__svg_g_9__svg_g_2_Template__svg_g_select_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const series_r11 = restoredCtx.$implicit;\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return ctx_r12.onClick($event, series_r11);\n    })(\"activate\", function AreaChartNormalizedComponent__svg_g_9__svg_g_2_Template__svg_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return ctx_r14.onActivate($event);\n    })(\"deactivate\", function AreaChartNormalizedComponent__svg_g_9__svg_g_2_Template__svg_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return ctx_r15.onDeactivate($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const series_r11 = ctx.$implicit;\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"type\", ctx_r10.seriesType.Stacked)(\"xScale\", ctx_r10.xScale)(\"yScale\", ctx_r10.yScale)(\"colors\", ctx_r10.colors)(\"activeEntries\", ctx_r10.activeEntries)(\"data\", series_r11)(\"scaleType\", ctx_r10.scaleType)(\"visibleValue\", ctx_r10.hoveredVertical)(\"tooltipDisabled\", ctx_r10.tooltipDisabled)(\"tooltipTemplate\", ctx_r10.tooltipTemplate);\n  }\n}\nfunction AreaChartNormalizedComponent__svg_g_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 10);\n    i0.ɵɵlistener(\"mouseleave\", function AreaChartNormalizedComponent__svg_g_9_Template__svg_g_mouseleave_0_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return ctx_r16.hideCircles();\n    });\n    i0.ɵɵelementStart(1, \"g\", 11);\n    i0.ɵɵlistener(\"hover\", function AreaChartNormalizedComponent__svg_g_9_Template__svg_g_hover_1_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return ctx_r18.updateHoveredVertical($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(2, AreaChartNormalizedComponent__svg_g_9__svg_g_2_Template, 2, 10, \"g\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"dims\", ctx_r3.dims)(\"xSet\", ctx_r3.xSet)(\"xScale\", ctx_r3.xScale)(\"yScale\", ctx_r3.yScale)(\"results\", ctx_r3.results)(\"colors\", ctx_r3.colors)(\"showPercentage\", true)(\"tooltipDisabled\", ctx_r3.tooltipDisabled)(\"tooltipTemplate\", ctx_r3.seriesTooltipTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.results);\n  }\n}\nfunction AreaChartNormalizedComponent__svg_g_10__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"g\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const series_r20 = ctx.$implicit;\n    const ctx_r19 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r19.timelineXScale)(\"yScale\", ctx_r19.timelineYScale)(\"colors\", ctx_r19.colors)(\"data\", series_r20)(\"scaleType\", ctx_r19.scaleType)(\"gradient\", ctx_r19.gradient)(\"normalized\", true)(\"curve\", ctx_r19.curve)(\"animations\", ctx_r19.animations);\n  }\n}\nfunction AreaChartNormalizedComponent__svg_g_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 14);\n    i0.ɵɵlistener(\"onDomainChange\", function AreaChartNormalizedComponent__svg_g_10_Template__svg_g_onDomainChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return ctx_r21.updateDomain($event);\n    });\n    i0.ɵɵtemplate(1, AreaChartNormalizedComponent__svg_g_10__svg_g_1_Template, 2, 9, \"g\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"results\", ctx_r4.results)(\"view\", i0.ɵɵpureFunction2(10, _c24, ctx_r4.timelineWidth, ctx_r4.height))(\"height\", ctx_r4.timelineHeight)(\"scheme\", ctx_r4.scheme)(\"customColors\", ctx_r4.customColors)(\"legend\", ctx_r4.legend)(\"scaleType\", ctx_r4.scaleType);\n    i0.ɵɵattribute(\"transform\", ctx_r4.timelineTransform);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.results)(\"ngForTrackBy\", ctx_r4.trackBy);\n  }\n}\nconst _c25 = \".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\";\nfunction AreaChartStackedComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 7);\n    i0.ɵɵlistener(\"dimensionsChanged\", function AreaChartStackedComponent__svg_g_5_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.updateXAxisHeight($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r0.xScale)(\"dims\", ctx_r0.dims)(\"showGridLines\", ctx_r0.showGridLines)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"trimTicks\", ctx_r0.trimXAxisTicks)(\"rotateTicks\", ctx_r0.rotateXAxisTicks)(\"maxTickLength\", ctx_r0.maxXAxisTickLength)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks);\n  }\n}\nfunction AreaChartStackedComponent__svg_g_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 8);\n    i0.ɵɵlistener(\"dimensionsChanged\", function AreaChartStackedComponent__svg_g_6_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.updateYAxisWidth($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks);\n  }\n}\nfunction AreaChartStackedComponent__svg_g_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"g\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const series_r9 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r2.xScale)(\"yScale\", ctx_r2.yScale)(\"colors\", ctx_r2.colors)(\"data\", series_r9)(\"scaleType\", ctx_r2.scaleType)(\"gradient\", ctx_r2.gradient)(\"activeEntries\", ctx_r2.activeEntries)(\"stacked\", true)(\"curve\", ctx_r2.curve)(\"animations\", ctx_r2.animations);\n  }\n}\nfunction AreaChartStackedComponent__svg_g_9__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelementStart(1, \"g\", 12);\n    i0.ɵɵlistener(\"select\", function AreaChartStackedComponent__svg_g_9__svg_g_2_Template__svg_g_select_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const series_r11 = restoredCtx.$implicit;\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return ctx_r12.onClick($event, series_r11);\n    })(\"activate\", function AreaChartStackedComponent__svg_g_9__svg_g_2_Template__svg_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return ctx_r14.onActivate($event);\n    })(\"deactivate\", function AreaChartStackedComponent__svg_g_9__svg_g_2_Template__svg_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return ctx_r15.onDeactivate($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const series_r11 = ctx.$implicit;\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"type\", ctx_r10.seriesType.Stacked)(\"xScale\", ctx_r10.xScale)(\"yScale\", ctx_r10.yScale)(\"colors\", ctx_r10.colors)(\"activeEntries\", ctx_r10.activeEntries)(\"data\", series_r11)(\"scaleType\", ctx_r10.scaleType)(\"visibleValue\", ctx_r10.hoveredVertical)(\"tooltipDisabled\", ctx_r10.tooltipDisabled)(\"tooltipTemplate\", ctx_r10.tooltipTemplate);\n  }\n}\nfunction AreaChartStackedComponent__svg_g_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 10);\n    i0.ɵɵlistener(\"mouseleave\", function AreaChartStackedComponent__svg_g_9_Template__svg_g_mouseleave_0_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return ctx_r16.hideCircles();\n    });\n    i0.ɵɵelementStart(1, \"g\", 11);\n    i0.ɵɵlistener(\"hover\", function AreaChartStackedComponent__svg_g_9_Template__svg_g_hover_1_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return ctx_r18.updateHoveredVertical($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(2, AreaChartStackedComponent__svg_g_9__svg_g_2_Template, 2, 10, \"g\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"dims\", ctx_r3.dims)(\"xSet\", ctx_r3.xSet)(\"xScale\", ctx_r3.xScale)(\"yScale\", ctx_r3.yScale)(\"results\", ctx_r3.results)(\"colors\", ctx_r3.colors)(\"tooltipDisabled\", ctx_r3.tooltipDisabled)(\"tooltipTemplate\", ctx_r3.seriesTooltipTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.results)(\"ngForTrackBy\", ctx_r3.trackBy);\n  }\n}\nfunction AreaChartStackedComponent__svg_g_10__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"g\", 14);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const series_r20 = ctx.$implicit;\n    const ctx_r19 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r19.timelineXScale)(\"yScale\", ctx_r19.timelineYScale)(\"colors\", ctx_r19.colors)(\"data\", series_r20)(\"scaleType\", ctx_r19.scaleType)(\"gradient\", ctx_r19.gradient)(\"stacked\", true)(\"curve\", ctx_r19.curve)(\"animations\", ctx_r19.animations);\n  }\n}\nfunction AreaChartStackedComponent__svg_g_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 13);\n    i0.ɵɵlistener(\"onDomainChange\", function AreaChartStackedComponent__svg_g_10_Template__svg_g_onDomainChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return ctx_r21.updateDomain($event);\n    });\n    i0.ɵɵtemplate(1, AreaChartStackedComponent__svg_g_10__svg_g_1_Template, 2, 9, \"g\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"results\", ctx_r4.results)(\"view\", i0.ɵɵpureFunction2(10, _c24, ctx_r4.timelineWidth, ctx_r4.height))(\"height\", ctx_r4.timelineHeight)(\"scheme\", ctx_r4.scheme)(\"customColors\", ctx_r4.customColors)(\"legend\", ctx_r4.legend)(\"scaleType\", ctx_r4.scaleType);\n    i0.ɵɵattribute(\"transform\", ctx_r4.timelineTransform);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.results)(\"ngForTrackBy\", ctx_r4.trackBy);\n  }\n}\nconst _c26 = [\"ngx-charts-bar\", \"\"];\nfunction BarComponent__svg_defs_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"defs\");\n    i0.ɵɵelement(1, \"g\", 2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"orientation\", ctx_r0.orientation)(\"name\", ctx_r0.gradientId)(\"stops\", ctx_r0.gradientStops);\n  }\n}\nconst _c27 = [\"ngx-charts-bar-label\", \"\"];\nconst _c28 = [\"ngx-charts-series-horizontal\", \"\"];\nfunction SeriesHorizontal__svg_g_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2);\n    i0.ɵɵlistener(\"select\", function SeriesHorizontal__svg_g_0_Template__svg_g_select_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.click($event);\n    })(\"activate\", function SeriesHorizontal__svg_g_0_Template__svg_g_activate_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.activate.emit($event);\n    })(\"deactivate\", function SeriesHorizontal__svg_g_0_Template__svg_g_deactivate_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.deactivate.emit($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const bar_r2 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"@animationState\", \"active\")(\"width\", bar_r2.width)(\"height\", bar_r2.height)(\"x\", bar_r2.x)(\"y\", bar_r2.y)(\"fill\", bar_r2.color)(\"stops\", bar_r2.gradientStops)(\"data\", bar_r2.data)(\"orientation\", ctx_r0.barOrientation.Horizontal)(\"roundEdges\", bar_r2.roundEdges)(\"gradient\", ctx_r0.gradient)(\"isActive\", ctx_r0.isActive(bar_r2.data))(\"ariaLabel\", bar_r2.ariaLabel)(\"animations\", ctx_r0.animations)(\"tooltipDisabled\", ctx_r0.tooltipDisabled)(\"tooltipPlacement\", ctx_r0.tooltipPlacement)(\"tooltipType\", ctx_r0.tooltipType)(\"tooltipTitle\", ctx_r0.tooltipTemplate ? undefined : bar_r2.tooltipText)(\"tooltipTemplate\", ctx_r0.tooltipTemplate)(\"tooltipContext\", bar_r2.data)(\"noBarWhenZero\", ctx_r0.noBarWhenZero);\n  }\n}\nfunction SeriesHorizontal__svg_g_1__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 4);\n    i0.ɵɵlistener(\"dimensionsChanged\", function SeriesHorizontal__svg_g_1__svg_g_1_Template__svg_g_dimensionsChanged_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const i_r9 = restoredCtx.index;\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return ctx_r10.dataLabelWidthChanged.emit({\n        size: $event,\n        index: i_r9\n      });\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const b_r8 = ctx.$implicit;\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"barX\", b_r8.x)(\"barY\", b_r8.y)(\"barWidth\", b_r8.width)(\"barHeight\", b_r8.height)(\"value\", b_r8.total)(\"valueFormatting\", ctx_r7.dataLabelFormatting)(\"orientation\", ctx_r7.barOrientation.Horizontal);\n  }\n}\nfunction SeriesHorizontal__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, SeriesHorizontal__svg_g_1__svg_g_1_Template, 1, 7, \"g\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.barsForDataLabels)(\"ngForTrackBy\", ctx_r1.trackDataLabelBy);\n  }\n}\nfunction BarHorizontalComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 5);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarHorizontalComponent__svg_g_2_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.updateXAxisHeight($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r0.xScale)(\"dims\", ctx_r0.dims)(\"showGridLines\", ctx_r0.showGridLines)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"trimTicks\", ctx_r0.trimXAxisTicks)(\"rotateTicks\", ctx_r0.rotateXAxisTicks)(\"maxTickLength\", ctx_r0.maxXAxisTickLength)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks);\n  }\n}\nfunction BarHorizontalComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarHorizontalComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.updateYAxisWidth($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks)(\"yAxisOffset\", ctx_r1.dataLabelMaxWidth.negative);\n  }\n}\nfunction BarHorizontal2DComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarHorizontal2DComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.updateXAxisHeight($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r0.valueScale)(\"dims\", ctx_r0.dims)(\"showGridLines\", ctx_r0.showGridLines)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"trimTicks\", ctx_r0.trimXAxisTicks)(\"rotateTicks\", ctx_r0.rotateXAxisTicks)(\"maxTickLength\", ctx_r0.maxXAxisTickLength)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks);\n  }\n}\nfunction BarHorizontal2DComponent__svg_g_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 7);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarHorizontal2DComponent__svg_g_4_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.updateYAxisWidth($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.groupScale)(\"dims\", ctx_r1.dims)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks)(\"yAxisOffset\", ctx_r1.dataLabelMaxWidth.negative);\n  }\n}\nfunction BarHorizontal2DComponent__svg_g_5__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelementStart(1, \"g\", 9);\n    i0.ɵɵlistener(\"select\", function BarHorizontal2DComponent__svg_g_5__svg_g_1_Template__svg_g_select_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return ctx_r11.onClick($event, group_r9);\n    })(\"activate\", function BarHorizontal2DComponent__svg_g_5__svg_g_1_Template__svg_g_activate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return ctx_r13.onActivate($event, group_r9);\n    })(\"deactivate\", function BarHorizontal2DComponent__svg_g_5__svg_g_1_Template__svg_g_deactivate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return ctx_r14.onDeactivate($event, group_r9);\n    })(\"dataLabelWidthChanged\", function BarHorizontal2DComponent__svg_g_5__svg_g_1_Template__svg_g_dataLabelWidthChanged_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const index_r10 = restoredCtx.index;\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return ctx_r15.onDataLabelMaxWidthChanged($event, index_r10);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const group_r9 = ctx.$implicit;\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\");\n    i0.ɵɵattribute(\"transform\", ctx_r8.groupTransform(group_r9));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r8.valueScale)(\"activeEntries\", ctx_r8.activeEntries)(\"yScale\", ctx_r8.innerScale)(\"colors\", ctx_r8.colors)(\"series\", group_r9.series)(\"dims\", ctx_r8.dims)(\"gradient\", ctx_r8.gradient)(\"tooltipDisabled\", ctx_r8.tooltipDisabled)(\"tooltipTemplate\", ctx_r8.tooltipTemplate)(\"seriesName\", group_r9.name)(\"roundEdges\", ctx_r8.roundEdges)(\"animations\", ctx_r8.animations)(\"showDataLabel\", ctx_r8.showDataLabel)(\"dataLabelFormatting\", ctx_r8.dataLabelFormatting)(\"noBarWhenZero\", ctx_r8.noBarWhenZero);\n  }\n}\nfunction BarHorizontal2DComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarHorizontal2DComponent__svg_g_5__svg_g_1_Template, 2, 17, \"g\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.results)(\"ngForTrackBy\", ctx_r2.trackBy);\n  }\n}\nfunction BarHorizontal2DComponent__svg_g_6__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelementStart(1, \"g\", 9);\n    i0.ɵɵlistener(\"select\", function BarHorizontal2DComponent__svg_g_6__svg_g_1_Template__svg_g_select_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const group_r17 = restoredCtx.$implicit;\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return ctx_r19.onClick($event, group_r17);\n    })(\"activate\", function BarHorizontal2DComponent__svg_g_6__svg_g_1_Template__svg_g_activate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const group_r17 = restoredCtx.$implicit;\n      const ctx_r21 = i0.ɵɵnextContext(2);\n      return ctx_r21.onActivate($event, group_r17);\n    })(\"deactivate\", function BarHorizontal2DComponent__svg_g_6__svg_g_1_Template__svg_g_deactivate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const group_r17 = restoredCtx.$implicit;\n      const ctx_r22 = i0.ɵɵnextContext(2);\n      return ctx_r22.onDeactivate($event, group_r17);\n    })(\"dataLabelWidthChanged\", function BarHorizontal2DComponent__svg_g_6__svg_g_1_Template__svg_g_dataLabelWidthChanged_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const index_r18 = restoredCtx.index;\n      const ctx_r23 = i0.ɵɵnextContext(2);\n      return ctx_r23.onDataLabelMaxWidthChanged($event, index_r18);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const group_r17 = ctx.$implicit;\n    const ctx_r16 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"transform\", ctx_r16.groupTransform(group_r17));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r16.valueScale)(\"activeEntries\", ctx_r16.activeEntries)(\"yScale\", ctx_r16.innerScale)(\"colors\", ctx_r16.colors)(\"series\", group_r17.series)(\"dims\", ctx_r16.dims)(\"gradient\", ctx_r16.gradient)(\"tooltipDisabled\", ctx_r16.tooltipDisabled)(\"tooltipTemplate\", ctx_r16.tooltipTemplate)(\"seriesName\", group_r17.name)(\"roundEdges\", ctx_r16.roundEdges)(\"animations\", ctx_r16.animations)(\"showDataLabel\", ctx_r16.showDataLabel)(\"dataLabelFormatting\", ctx_r16.dataLabelFormatting)(\"noBarWhenZero\", ctx_r16.noBarWhenZero);\n  }\n}\nfunction BarHorizontal2DComponent__svg_g_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarHorizontal2DComponent__svg_g_6__svg_g_1_Template, 2, 16, \"g\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.results)(\"ngForTrackBy\", ctx_r3.trackBy);\n  }\n}\nfunction BarHorizontalNormalizedComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 5);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarHorizontalNormalizedComponent__svg_g_2_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.updateXAxisHeight($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r0.xScale)(\"dims\", ctx_r0.dims)(\"showGridLines\", ctx_r0.showGridLines)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"trimTicks\", ctx_r0.trimXAxisTicks)(\"rotateTicks\", ctx_r0.rotateXAxisTicks)(\"maxTickLength\", ctx_r0.maxXAxisTickLength)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks);\n  }\n}\nfunction BarHorizontalNormalizedComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarHorizontalNormalizedComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.updateYAxisWidth($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks);\n  }\n}\nfunction BarHorizontalNormalizedComponent__svg_g_4__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelementStart(1, \"g\", 8);\n    i0.ɵɵlistener(\"select\", function BarHorizontalNormalizedComponent__svg_g_4__svg_g_1_Template__svg_g_select_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return ctx_r10.onClick($event, group_r9);\n    })(\"activate\", function BarHorizontalNormalizedComponent__svg_g_4__svg_g_1_Template__svg_g_activate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return ctx_r12.onActivate($event, group_r9);\n    })(\"deactivate\", function BarHorizontalNormalizedComponent__svg_g_4__svg_g_1_Template__svg_g_deactivate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return ctx_r13.onDeactivate($event, group_r9);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const group_r9 = ctx.$implicit;\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\");\n    i0.ɵɵattribute(\"transform\", ctx_r8.groupTransform(group_r9));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"type\", ctx_r8.barChartType.Normalized)(\"xScale\", ctx_r8.xScale)(\"yScale\", ctx_r8.yScale)(\"activeEntries\", ctx_r8.activeEntries)(\"colors\", ctx_r8.colors)(\"series\", group_r9.series)(\"dims\", ctx_r8.dims)(\"gradient\", ctx_r8.gradient)(\"tooltipDisabled\", ctx_r8.tooltipDisabled)(\"tooltipTemplate\", ctx_r8.tooltipTemplate)(\"seriesName\", group_r9.name)(\"animations\", ctx_r8.animations)(\"noBarWhenZero\", ctx_r8.noBarWhenZero);\n  }\n}\nfunction BarHorizontalNormalizedComponent__svg_g_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarHorizontalNormalizedComponent__svg_g_4__svg_g_1_Template, 2, 15, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.results)(\"ngForTrackBy\", ctx_r2.trackBy);\n  }\n}\nfunction BarHorizontalNormalizedComponent__svg_g_5__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelementStart(1, \"g\", 8);\n    i0.ɵɵlistener(\"select\", function BarHorizontalNormalizedComponent__svg_g_5__svg_g_1_Template__svg_g_select_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r17);\n      const group_r15 = restoredCtx.$implicit;\n      const ctx_r16 = i0.ɵɵnextContext(2);\n      return ctx_r16.onClick($event, group_r15);\n    })(\"activate\", function BarHorizontalNormalizedComponent__svg_g_5__svg_g_1_Template__svg_g_activate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r17);\n      const group_r15 = restoredCtx.$implicit;\n      const ctx_r18 = i0.ɵɵnextContext(2);\n      return ctx_r18.onActivate($event, group_r15);\n    })(\"deactivate\", function BarHorizontalNormalizedComponent__svg_g_5__svg_g_1_Template__svg_g_deactivate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r17);\n      const group_r15 = restoredCtx.$implicit;\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return ctx_r19.onDeactivate($event, group_r15);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const group_r15 = ctx.$implicit;\n    const ctx_r14 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"transform\", ctx_r14.groupTransform(group_r15));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"type\", ctx_r14.barChartType.Normalized)(\"xScale\", ctx_r14.xScale)(\"yScale\", ctx_r14.yScale)(\"activeEntries\", ctx_r14.activeEntries)(\"colors\", ctx_r14.colors)(\"series\", group_r15.series)(\"dims\", ctx_r14.dims)(\"gradient\", ctx_r14.gradient)(\"tooltipDisabled\", ctx_r14.tooltipDisabled)(\"tooltipTemplate\", ctx_r14.tooltipTemplate)(\"seriesName\", group_r15.name)(\"animations\", ctx_r14.animations)(\"noBarWhenZero\", ctx_r14.noBarWhenZero);\n  }\n}\nfunction BarHorizontalNormalizedComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarHorizontalNormalizedComponent__svg_g_5__svg_g_1_Template, 2, 14, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.results)(\"ngForTrackBy\", ctx_r3.trackBy);\n  }\n}\nfunction BarHorizontalStackedComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 5);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarHorizontalStackedComponent__svg_g_2_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.updateXAxisHeight($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r0.xScale)(\"dims\", ctx_r0.dims)(\"showGridLines\", ctx_r0.showGridLines)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"trimTicks\", ctx_r0.trimXAxisTicks)(\"rotateTicks\", ctx_r0.rotateXAxisTicks)(\"maxTickLength\", ctx_r0.maxXAxisTickLength)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks);\n  }\n}\nfunction BarHorizontalStackedComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarHorizontalStackedComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.updateYAxisWidth($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks)(\"yAxisOffset\", ctx_r1.dataLabelMaxWidth.negative);\n  }\n}\nfunction BarHorizontalStackedComponent__svg_g_4__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelementStart(1, \"g\", 8);\n    i0.ɵɵlistener(\"select\", function BarHorizontalStackedComponent__svg_g_4__svg_g_1_Template__svg_g_select_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return ctx_r11.onClick($event, group_r9);\n    })(\"activate\", function BarHorizontalStackedComponent__svg_g_4__svg_g_1_Template__svg_g_activate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return ctx_r13.onActivate($event, group_r9);\n    })(\"deactivate\", function BarHorizontalStackedComponent__svg_g_4__svg_g_1_Template__svg_g_deactivate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return ctx_r14.onDeactivate($event, group_r9);\n    })(\"dataLabelWidthChanged\", function BarHorizontalStackedComponent__svg_g_4__svg_g_1_Template__svg_g_dataLabelWidthChanged_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const index_r10 = restoredCtx.index;\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return ctx_r15.onDataLabelMaxWidthChanged($event, index_r10);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const group_r9 = ctx.$implicit;\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\");\n    i0.ɵɵattribute(\"transform\", ctx_r8.groupTransform(group_r9));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"type\", ctx_r8.barChartType.Stacked)(\"xScale\", ctx_r8.xScale)(\"yScale\", ctx_r8.yScale)(\"colors\", ctx_r8.colors)(\"series\", group_r9.series)(\"activeEntries\", ctx_r8.activeEntries)(\"dims\", ctx_r8.dims)(\"gradient\", ctx_r8.gradient)(\"tooltipDisabled\", ctx_r8.tooltipDisabled)(\"tooltipTemplate\", ctx_r8.tooltipTemplate)(\"seriesName\", group_r9.name)(\"animations\", ctx_r8.animations)(\"showDataLabel\", ctx_r8.showDataLabel)(\"dataLabelFormatting\", ctx_r8.dataLabelFormatting)(\"noBarWhenZero\", ctx_r8.noBarWhenZero);\n  }\n}\nfunction BarHorizontalStackedComponent__svg_g_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarHorizontalStackedComponent__svg_g_4__svg_g_1_Template, 2, 17, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.results)(\"ngForTrackBy\", ctx_r2.trackBy);\n  }\n}\nfunction BarHorizontalStackedComponent__svg_g_5__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelementStart(1, \"g\", 8);\n    i0.ɵɵlistener(\"select\", function BarHorizontalStackedComponent__svg_g_5__svg_g_1_Template__svg_g_select_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const group_r17 = restoredCtx.$implicit;\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return ctx_r19.onClick($event, group_r17);\n    })(\"activate\", function BarHorizontalStackedComponent__svg_g_5__svg_g_1_Template__svg_g_activate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const group_r17 = restoredCtx.$implicit;\n      const ctx_r21 = i0.ɵɵnextContext(2);\n      return ctx_r21.onActivate($event, group_r17);\n    })(\"deactivate\", function BarHorizontalStackedComponent__svg_g_5__svg_g_1_Template__svg_g_deactivate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const group_r17 = restoredCtx.$implicit;\n      const ctx_r22 = i0.ɵɵnextContext(2);\n      return ctx_r22.onDeactivate($event, group_r17);\n    })(\"dataLabelWidthChanged\", function BarHorizontalStackedComponent__svg_g_5__svg_g_1_Template__svg_g_dataLabelWidthChanged_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const index_r18 = restoredCtx.index;\n      const ctx_r23 = i0.ɵɵnextContext(2);\n      return ctx_r23.onDataLabelMaxWidthChanged($event, index_r18);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const group_r17 = ctx.$implicit;\n    const ctx_r16 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"transform\", ctx_r16.groupTransform(group_r17));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"type\", ctx_r16.barChartType.Stacked)(\"xScale\", ctx_r16.xScale)(\"yScale\", ctx_r16.yScale)(\"colors\", ctx_r16.colors)(\"series\", group_r17.series)(\"activeEntries\", ctx_r16.activeEntries)(\"dims\", ctx_r16.dims)(\"gradient\", ctx_r16.gradient)(\"tooltipDisabled\", ctx_r16.tooltipDisabled)(\"tooltipTemplate\", ctx_r16.tooltipTemplate)(\"seriesName\", group_r17.name)(\"animations\", ctx_r16.animations)(\"showDataLabel\", ctx_r16.showDataLabel)(\"dataLabelFormatting\", ctx_r16.dataLabelFormatting)(\"noBarWhenZero\", ctx_r16.noBarWhenZero);\n  }\n}\nfunction BarHorizontalStackedComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarHorizontalStackedComponent__svg_g_5__svg_g_1_Template, 2, 16, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.results)(\"ngForTrackBy\", ctx_r3.trackBy);\n  }\n}\nconst _c29 = [\"ngx-charts-series-vertical\", \"\"];\nfunction SeriesVerticalComponent__svg_g_0__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2);\n    i0.ɵɵlistener(\"select\", function SeriesVerticalComponent__svg_g_0__svg_g_1_Template__svg_g_select_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return ctx_r5.onClick($event);\n    })(\"activate\", function SeriesVerticalComponent__svg_g_0__svg_g_1_Template__svg_g_activate_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return ctx_r7.activate.emit($event);\n    })(\"deactivate\", function SeriesVerticalComponent__svg_g_0__svg_g_1_Template__svg_g_deactivate_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r8 = i0.ɵɵnextContext(2);\n      return ctx_r8.deactivate.emit($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const bar_r4 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\")(\"@.disabled\", !ctx_r3.animations)(\"width\", bar_r4.width)(\"height\", bar_r4.height)(\"x\", bar_r4.x)(\"y\", bar_r4.y)(\"fill\", bar_r4.color)(\"stops\", bar_r4.gradientStops)(\"data\", bar_r4.data)(\"orientation\", ctx_r3.barOrientation.Vertical)(\"roundEdges\", bar_r4.roundEdges)(\"gradient\", ctx_r3.gradient)(\"ariaLabel\", bar_r4.ariaLabel)(\"isActive\", ctx_r3.isActive(bar_r4.data))(\"tooltipDisabled\", ctx_r3.tooltipDisabled)(\"tooltipPlacement\", ctx_r3.tooltipPlacement)(\"tooltipType\", ctx_r3.tooltipType)(\"tooltipTitle\", ctx_r3.tooltipTemplate ? undefined : bar_r4.tooltipText)(\"tooltipTemplate\", ctx_r3.tooltipTemplate)(\"tooltipContext\", bar_r4.data)(\"noBarWhenZero\", ctx_r3.noBarWhenZero)(\"animations\", ctx_r3.animations);\n  }\n}\nfunction SeriesVerticalComponent__svg_g_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, SeriesVerticalComponent__svg_g_0__svg_g_1_Template, 1, 22, \"g\", 1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.bars)(\"ngForTrackBy\", ctx_r0.trackBy);\n  }\n}\nfunction SeriesVerticalComponent__svg_g_1__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2);\n    i0.ɵɵlistener(\"select\", function SeriesVerticalComponent__svg_g_1__svg_g_1_Template__svg_g_select_0_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return ctx_r11.onClick($event);\n    })(\"activate\", function SeriesVerticalComponent__svg_g_1__svg_g_1_Template__svg_g_activate_0_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return ctx_r13.activate.emit($event);\n    })(\"deactivate\", function SeriesVerticalComponent__svg_g_1__svg_g_1_Template__svg_g_deactivate_0_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return ctx_r14.deactivate.emit($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const bar_r10 = ctx.$implicit;\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"width\", bar_r10.width)(\"height\", bar_r10.height)(\"x\", bar_r10.x)(\"y\", bar_r10.y)(\"fill\", bar_r10.color)(\"stops\", bar_r10.gradientStops)(\"data\", bar_r10.data)(\"orientation\", ctx_r9.barOrientation.Vertical)(\"roundEdges\", bar_r10.roundEdges)(\"gradient\", ctx_r9.gradient)(\"ariaLabel\", bar_r10.ariaLabel)(\"isActive\", ctx_r9.isActive(bar_r10.data))(\"tooltipDisabled\", ctx_r9.tooltipDisabled)(\"tooltipPlacement\", ctx_r9.tooltipPlacement)(\"tooltipType\", ctx_r9.tooltipType)(\"tooltipTitle\", ctx_r9.tooltipTemplate ? undefined : bar_r10.tooltipText)(\"tooltipTemplate\", ctx_r9.tooltipTemplate)(\"tooltipContext\", bar_r10.data)(\"noBarWhenZero\", ctx_r9.noBarWhenZero)(\"animations\", ctx_r9.animations);\n  }\n}\nfunction SeriesVerticalComponent__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, SeriesVerticalComponent__svg_g_1__svg_g_1_Template, 1, 20, \"g\", 1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.bars)(\"ngForTrackBy\", ctx_r1.trackBy);\n  }\n}\nfunction SeriesVerticalComponent__svg_g_2__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 4);\n    i0.ɵɵlistener(\"dimensionsChanged\", function SeriesVerticalComponent__svg_g_2__svg_g_1_Template__svg_g_dimensionsChanged_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r19);\n      const i_r17 = restoredCtx.index;\n      const ctx_r18 = i0.ɵɵnextContext(2);\n      return ctx_r18.dataLabelHeightChanged.emit({\n        size: $event,\n        index: i_r17\n      });\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const b_r16 = ctx.$implicit;\n    const ctx_r15 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"barX\", b_r16.x)(\"barY\", b_r16.y)(\"barWidth\", b_r16.width)(\"barHeight\", b_r16.height)(\"value\", b_r16.total)(\"valueFormatting\", ctx_r15.dataLabelFormatting)(\"orientation\", ctx_r15.barOrientation.Vertical);\n  }\n}\nfunction SeriesVerticalComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, SeriesVerticalComponent__svg_g_2__svg_g_1_Template, 1, 7, \"g\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.barsForDataLabels)(\"ngForTrackBy\", ctx_r2.trackDataLabelBy);\n  }\n}\nfunction BarVerticalComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 5);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarVerticalComponent__svg_g_2_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.updateXAxisHeight($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r0.xScale)(\"dims\", ctx_r0.dims)(\"showGridLines\", ctx_r0.showGridLines)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"trimTicks\", ctx_r0.trimXAxisTicks)(\"rotateTicks\", ctx_r0.rotateXAxisTicks)(\"maxTickLength\", ctx_r0.maxXAxisTickLength)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks)(\"xAxisOffset\", ctx_r0.dataLabelMaxHeight.negative);\n  }\n}\nfunction BarVerticalComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarVerticalComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.updateYAxisWidth($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks);\n  }\n}\nfunction BarVertical2DComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarVertical2DComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.updateXAxisHeight($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r0.groupScale)(\"dims\", ctx_r0.dims)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"trimTicks\", ctx_r0.trimXAxisTicks)(\"rotateTicks\", ctx_r0.rotateXAxisTicks)(\"maxTickLength\", ctx_r0.maxXAxisTickLength)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks)(\"xAxisOffset\", ctx_r0.dataLabelMaxHeight.negative);\n  }\n}\nfunction BarVertical2DComponent__svg_g_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 7);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarVertical2DComponent__svg_g_4_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.updateYAxisWidth($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.valueScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks);\n  }\n}\nfunction BarVertical2DComponent__svg_g_5__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 9);\n    i0.ɵɵlistener(\"select\", function BarVertical2DComponent__svg_g_5__svg_g_1_Template__svg_g_select_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return ctx_r11.onClick($event, group_r9);\n    })(\"activate\", function BarVertical2DComponent__svg_g_5__svg_g_1_Template__svg_g_activate_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return ctx_r13.onActivate($event, group_r9);\n    })(\"deactivate\", function BarVertical2DComponent__svg_g_5__svg_g_1_Template__svg_g_deactivate_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return ctx_r14.onDeactivate($event, group_r9);\n    })(\"dataLabelHeightChanged\", function BarVertical2DComponent__svg_g_5__svg_g_1_Template__svg_g_dataLabelHeightChanged_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const index_r10 = restoredCtx.index;\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return ctx_r15.onDataLabelMaxHeightChanged($event, index_r10);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const group_r9 = ctx.$implicit;\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\")(\"activeEntries\", ctx_r8.activeEntries)(\"xScale\", ctx_r8.innerScale)(\"yScale\", ctx_r8.valueScale)(\"colors\", ctx_r8.colors)(\"series\", group_r9.series)(\"dims\", ctx_r8.dims)(\"gradient\", ctx_r8.gradient)(\"tooltipDisabled\", ctx_r8.tooltipDisabled)(\"tooltipTemplate\", ctx_r8.tooltipTemplate)(\"showDataLabel\", ctx_r8.showDataLabel)(\"dataLabelFormatting\", ctx_r8.dataLabelFormatting)(\"seriesName\", group_r9.name)(\"roundEdges\", ctx_r8.roundEdges)(\"animations\", ctx_r8.animations)(\"noBarWhenZero\", ctx_r8.noBarWhenZero);\n    i0.ɵɵattribute(\"transform\", ctx_r8.groupTransform(group_r9));\n  }\n}\nfunction BarVertical2DComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarVertical2DComponent__svg_g_5__svg_g_1_Template, 1, 17, \"g\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.results)(\"ngForTrackBy\", ctx_r2.trackBy);\n  }\n}\nfunction BarVertical2DComponent__svg_g_6__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 9);\n    i0.ɵɵlistener(\"select\", function BarVertical2DComponent__svg_g_6__svg_g_1_Template__svg_g_select_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const group_r17 = restoredCtx.$implicit;\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return ctx_r19.onClick($event, group_r17);\n    })(\"activate\", function BarVertical2DComponent__svg_g_6__svg_g_1_Template__svg_g_activate_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const group_r17 = restoredCtx.$implicit;\n      const ctx_r21 = i0.ɵɵnextContext(2);\n      return ctx_r21.onActivate($event, group_r17);\n    })(\"deactivate\", function BarVertical2DComponent__svg_g_6__svg_g_1_Template__svg_g_deactivate_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const group_r17 = restoredCtx.$implicit;\n      const ctx_r22 = i0.ɵɵnextContext(2);\n      return ctx_r22.onDeactivate($event, group_r17);\n    })(\"dataLabelHeightChanged\", function BarVertical2DComponent__svg_g_6__svg_g_1_Template__svg_g_dataLabelHeightChanged_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const index_r18 = restoredCtx.index;\n      const ctx_r23 = i0.ɵɵnextContext(2);\n      return ctx_r23.onDataLabelMaxHeightChanged($event, index_r18);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const group_r17 = ctx.$implicit;\n    const ctx_r16 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"activeEntries\", ctx_r16.activeEntries)(\"xScale\", ctx_r16.innerScale)(\"yScale\", ctx_r16.valueScale)(\"colors\", ctx_r16.colors)(\"series\", group_r17.series)(\"dims\", ctx_r16.dims)(\"gradient\", ctx_r16.gradient)(\"tooltipDisabled\", ctx_r16.tooltipDisabled)(\"tooltipTemplate\", ctx_r16.tooltipTemplate)(\"showDataLabel\", ctx_r16.showDataLabel)(\"dataLabelFormatting\", ctx_r16.dataLabelFormatting)(\"seriesName\", group_r17.name)(\"roundEdges\", ctx_r16.roundEdges)(\"animations\", ctx_r16.animations)(\"noBarWhenZero\", ctx_r16.noBarWhenZero);\n    i0.ɵɵattribute(\"transform\", ctx_r16.groupTransform(group_r17));\n  }\n}\nfunction BarVertical2DComponent__svg_g_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarVertical2DComponent__svg_g_6__svg_g_1_Template, 1, 16, \"g\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.results)(\"ngForTrackBy\", ctx_r3.trackBy);\n  }\n}\nfunction BarVerticalNormalizedComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 5);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarVerticalNormalizedComponent__svg_g_2_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.updateXAxisHeight($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r0.xScale)(\"dims\", ctx_r0.dims)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"trimTicks\", ctx_r0.trimXAxisTicks)(\"rotateTicks\", ctx_r0.rotateXAxisTicks)(\"maxTickLength\", ctx_r0.maxXAxisTickLength)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks);\n  }\n}\nfunction BarVerticalNormalizedComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarVerticalNormalizedComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.updateYAxisWidth($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks);\n  }\n}\nfunction BarVerticalNormalizedComponent__svg_g_4__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelementStart(1, \"g\", 8);\n    i0.ɵɵlistener(\"select\", function BarVerticalNormalizedComponent__svg_g_4__svg_g_1_Template__svg_g_select_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return ctx_r10.onClick($event, group_r9);\n    })(\"activate\", function BarVerticalNormalizedComponent__svg_g_4__svg_g_1_Template__svg_g_activate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return ctx_r12.onActivate($event, group_r9);\n    })(\"deactivate\", function BarVerticalNormalizedComponent__svg_g_4__svg_g_1_Template__svg_g_deactivate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return ctx_r13.onDeactivate($event, group_r9);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const group_r9 = ctx.$implicit;\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\");\n    i0.ɵɵattribute(\"transform\", ctx_r8.groupTransform(group_r9));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"type\", ctx_r8.barChartType.Normalized)(\"xScale\", ctx_r8.xScale)(\"yScale\", ctx_r8.yScale)(\"activeEntries\", ctx_r8.activeEntries)(\"colors\", ctx_r8.colors)(\"series\", group_r9.series)(\"dims\", ctx_r8.dims)(\"gradient\", ctx_r8.gradient)(\"tooltipDisabled\", ctx_r8.tooltipDisabled)(\"tooltipTemplate\", ctx_r8.tooltipTemplate)(\"seriesName\", group_r9.name)(\"animations\", ctx_r8.animations)(\"noBarWhenZero\", ctx_r8.noBarWhenZero);\n  }\n}\nfunction BarVerticalNormalizedComponent__svg_g_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarVerticalNormalizedComponent__svg_g_4__svg_g_1_Template, 2, 15, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.results)(\"ngForTrackBy\", ctx_r2.trackBy);\n  }\n}\nfunction BarVerticalNormalizedComponent__svg_g_5__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelementStart(1, \"g\", 8);\n    i0.ɵɵlistener(\"select\", function BarVerticalNormalizedComponent__svg_g_5__svg_g_1_Template__svg_g_select_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r17);\n      const group_r15 = restoredCtx.$implicit;\n      const ctx_r16 = i0.ɵɵnextContext(2);\n      return ctx_r16.onClick($event, group_r15);\n    })(\"activate\", function BarVerticalNormalizedComponent__svg_g_5__svg_g_1_Template__svg_g_activate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r17);\n      const group_r15 = restoredCtx.$implicit;\n      const ctx_r18 = i0.ɵɵnextContext(2);\n      return ctx_r18.onActivate($event, group_r15);\n    })(\"deactivate\", function BarVerticalNormalizedComponent__svg_g_5__svg_g_1_Template__svg_g_deactivate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r17);\n      const group_r15 = restoredCtx.$implicit;\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return ctx_r19.onDeactivate($event, group_r15);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const group_r15 = ctx.$implicit;\n    const ctx_r14 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"transform\", ctx_r14.groupTransform(group_r15));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"type\", ctx_r14.barChartType.Normalized)(\"xScale\", ctx_r14.xScale)(\"yScale\", ctx_r14.yScale)(\"activeEntries\", ctx_r14.activeEntries)(\"colors\", ctx_r14.colors)(\"series\", group_r15.series)(\"dims\", ctx_r14.dims)(\"gradient\", ctx_r14.gradient)(\"tooltipDisabled\", ctx_r14.tooltipDisabled)(\"tooltipTemplate\", ctx_r14.tooltipTemplate)(\"seriesName\", group_r15.name)(\"animations\", ctx_r14.animations)(\"noBarWhenZero\", ctx_r14.noBarWhenZero);\n  }\n}\nfunction BarVerticalNormalizedComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarVerticalNormalizedComponent__svg_g_5__svg_g_1_Template, 2, 14, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.results)(\"ngForTrackBy\", ctx_r3.trackBy);\n  }\n}\nfunction BarVerticalStackedComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 5);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarVerticalStackedComponent__svg_g_2_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.updateXAxisHeight($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r0.xScale)(\"dims\", ctx_r0.dims)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"trimTicks\", ctx_r0.trimXAxisTicks)(\"rotateTicks\", ctx_r0.rotateXAxisTicks)(\"maxTickLength\", ctx_r0.maxXAxisTickLength)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks)(\"xAxisOffset\", ctx_r0.dataLabelMaxHeight.negative);\n  }\n}\nfunction BarVerticalStackedComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarVerticalStackedComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.updateYAxisWidth($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks);\n  }\n}\nfunction BarVerticalStackedComponent__svg_g_4__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelementStart(1, \"g\", 8);\n    i0.ɵɵlistener(\"select\", function BarVerticalStackedComponent__svg_g_4__svg_g_1_Template__svg_g_select_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return ctx_r11.onClick($event, group_r9);\n    })(\"activate\", function BarVerticalStackedComponent__svg_g_4__svg_g_1_Template__svg_g_activate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return ctx_r13.onActivate($event, group_r9);\n    })(\"deactivate\", function BarVerticalStackedComponent__svg_g_4__svg_g_1_Template__svg_g_deactivate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const group_r9 = restoredCtx.$implicit;\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return ctx_r14.onDeactivate($event, group_r9);\n    })(\"dataLabelHeightChanged\", function BarVerticalStackedComponent__svg_g_4__svg_g_1_Template__svg_g_dataLabelHeightChanged_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const index_r10 = restoredCtx.index;\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return ctx_r15.onDataLabelMaxHeightChanged($event, index_r10);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const group_r9 = ctx.$implicit;\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\");\n    i0.ɵɵattribute(\"transform\", ctx_r8.groupTransform(group_r9));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"type\", ctx_r8.barChartType.Stacked)(\"xScale\", ctx_r8.xScale)(\"yScale\", ctx_r8.yScale)(\"activeEntries\", ctx_r8.activeEntries)(\"colors\", ctx_r8.colors)(\"series\", group_r9.series)(\"dims\", ctx_r8.dims)(\"gradient\", ctx_r8.gradient)(\"tooltipDisabled\", ctx_r8.tooltipDisabled)(\"tooltipTemplate\", ctx_r8.tooltipTemplate)(\"showDataLabel\", ctx_r8.showDataLabel)(\"dataLabelFormatting\", ctx_r8.dataLabelFormatting)(\"seriesName\", group_r9.name)(\"animations\", ctx_r8.animations)(\"noBarWhenZero\", ctx_r8.noBarWhenZero);\n  }\n}\nfunction BarVerticalStackedComponent__svg_g_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarVerticalStackedComponent__svg_g_4__svg_g_1_Template, 2, 17, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.results)(\"ngForTrackBy\", ctx_r2.trackBy);\n  }\n}\nfunction BarVerticalStackedComponent__svg_g_5__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelementStart(1, \"g\", 8);\n    i0.ɵɵlistener(\"select\", function BarVerticalStackedComponent__svg_g_5__svg_g_1_Template__svg_g_select_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const group_r17 = restoredCtx.$implicit;\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return ctx_r19.onClick($event, group_r17);\n    })(\"activate\", function BarVerticalStackedComponent__svg_g_5__svg_g_1_Template__svg_g_activate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const group_r17 = restoredCtx.$implicit;\n      const ctx_r21 = i0.ɵɵnextContext(2);\n      return ctx_r21.onActivate($event, group_r17);\n    })(\"deactivate\", function BarVerticalStackedComponent__svg_g_5__svg_g_1_Template__svg_g_deactivate_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const group_r17 = restoredCtx.$implicit;\n      const ctx_r22 = i0.ɵɵnextContext(2);\n      return ctx_r22.onDeactivate($event, group_r17);\n    })(\"dataLabelHeightChanged\", function BarVerticalStackedComponent__svg_g_5__svg_g_1_Template__svg_g_dataLabelHeightChanged_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const index_r18 = restoredCtx.index;\n      const ctx_r23 = i0.ɵɵnextContext(2);\n      return ctx_r23.onDataLabelMaxHeightChanged($event, index_r18);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const group_r17 = ctx.$implicit;\n    const ctx_r16 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"transform\", ctx_r16.groupTransform(group_r17));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"type\", ctx_r16.barChartType.Stacked)(\"xScale\", ctx_r16.xScale)(\"yScale\", ctx_r16.yScale)(\"activeEntries\", ctx_r16.activeEntries)(\"colors\", ctx_r16.colors)(\"series\", group_r17.series)(\"dims\", ctx_r16.dims)(\"gradient\", ctx_r16.gradient)(\"tooltipDisabled\", ctx_r16.tooltipDisabled)(\"tooltipTemplate\", ctx_r16.tooltipTemplate)(\"showDataLabel\", ctx_r16.showDataLabel)(\"dataLabelFormatting\", ctx_r16.dataLabelFormatting)(\"seriesName\", group_r17.name)(\"animations\", ctx_r16.animations)(\"noBarWhenZero\", ctx_r16.noBarWhenZero);\n  }\n}\nfunction BarVerticalStackedComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarVerticalStackedComponent__svg_g_5__svg_g_1_Template, 2, 16, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.results)(\"ngForTrackBy\", ctx_r3.trackBy);\n  }\n}\nconst _c30 = [\"ngx-charts-box\", \"\"];\nfunction BoxComponent__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 5);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"orientation\", ctx_r0.BarOrientation.Vertical)(\"name\", ctx_r0.gradientId)(\"stops\", ctx_r0.gradientStops);\n  }\n}\nfunction BoxComponent__svg_line_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"line\", 6);\n  }\n  if (rf & 2) {\n    const line_r2 = ctx.$implicit;\n    const i_r3 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"hidden\", ctx_r1.hideBar);\n    i0.ɵɵattribute(\"x1\", line_r2.v1.x)(\"y1\", line_r2.v1.y)(\"x2\", line_r2.v2.x)(\"y2\", line_r2.v2.y)(\"stroke\", ctx_r1.strokeColor)(\"stroke-width\", i_r3 === 2 ? ctx_r1.medianLineWidth : ctx_r1.whiskerStrokeWidth)(\"mask\", i_r3 ? undefined : ctx_r1.maskLine);\n  }\n}\nconst _c31 = [\"ngx-charts-box-series\", \"\"];\nfunction BoxChartComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelementStart(1, \"g\", 5);\n    i0.ɵɵlistener(\"activate\", function BoxChartComponent__svg_g_5_Template__svg_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.onActivate($event);\n    })(\"deactivate\", function BoxChartComponent__svg_g_5_Template__svg_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.onDeactivate($event);\n    })(\"select\", function BoxChartComponent__svg_g_5_Template__svg_g_select_1_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.onClick($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const result_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r0.xScale)(\"yScale\", ctx_r0.yScale)(\"colors\", ctx_r0.colors)(\"roundEdges\", ctx_r0.roundEdges)(\"strokeColor\", ctx_r0.strokeColor)(\"strokeWidth\", ctx_r0.strokeWidth)(\"tooltipDisabled\", ctx_r0.tooltipDisabled)(\"tooltipTemplate\", ctx_r0.tooltipTemplate)(\"series\", result_r1)(\"dims\", ctx_r0.dims)(\"animations\", ctx_r0.animations)(\"gradient\", ctx_r0.gradient);\n  }\n}\nconst _c32 = [\"ngx-charts-bubble-series\", \"\"];\nfunction BubbleSeriesComponent__svg_g_0__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2);\n    i0.ɵɵlistener(\"select\", function BubbleSeriesComponent__svg_g_0__svg_g_2_Template__svg_g_select_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const circle_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.onClick(circle_r1.data);\n    })(\"activate\", function BubbleSeriesComponent__svg_g_0__svg_g_2_Template__svg_g_activate_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const circle_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.activateCircle(circle_r1);\n    })(\"deactivate\", function BubbleSeriesComponent__svg_g_0__svg_g_2_Template__svg_g_deactivate_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const circle_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.deactivateCircle(circle_r1);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const circle_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"opacity\", circle_r1.opacity);\n    i0.ɵɵclassProp(\"active\", circle_r1.isActive);\n    i0.ɵɵproperty(\"@animationState\", \"active\")(\"cx\", 0)(\"cy\", 0)(\"r\", circle_r1.radius)(\"fill\", circle_r1.color)(\"pointerEvents\", \"all\")(\"data\", circle_r1.value)(\"classNames\", circle_r1.classNames)(\"tooltipDisabled\", ctx_r2.tooltipDisabled)(\"tooltipPlacement\", ctx_r2.placementTypes.Top)(\"tooltipType\", ctx_r2.styleTypes.tooltip)(\"tooltipTitle\", ctx_r2.tooltipTemplate ? undefined : ctx_r2.getTooltipText(circle_r1))(\"tooltipTemplate\", ctx_r2.tooltipTemplate)(\"tooltipContext\", circle_r1.data);\n  }\n}\nfunction BubbleSeriesComponent__svg_g_0__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2);\n    i0.ɵɵlistener(\"select\", function BubbleSeriesComponent__svg_g_0__svg_g_3_Template__svg_g_select_0_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const circle_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r12 = i0.ɵɵnextContext();\n      return ctx_r12.onClick(circle_r1.data);\n    })(\"activate\", function BubbleSeriesComponent__svg_g_0__svg_g_3_Template__svg_g_activate_0_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const circle_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r15 = i0.ɵɵnextContext();\n      return ctx_r15.activateCircle(circle_r1);\n    })(\"deactivate\", function BubbleSeriesComponent__svg_g_0__svg_g_3_Template__svg_g_deactivate_0_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const circle_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r17 = i0.ɵɵnextContext();\n      return ctx_r17.deactivateCircle(circle_r1);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const circle_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"opacity\", circle_r1.opacity);\n    i0.ɵɵclassProp(\"active\", circle_r1.isActive);\n    i0.ɵɵproperty(\"cx\", 0)(\"cy\", 0)(\"r\", circle_r1.radius)(\"fill\", circle_r1.color)(\"pointerEvents\", \"all\")(\"data\", circle_r1.value)(\"classNames\", circle_r1.classNames)(\"tooltipDisabled\", ctx_r3.tooltipDisabled)(\"tooltipPlacement\", ctx_r3.placementTypes.Top)(\"tooltipType\", ctx_r3.styleTypes.tooltip)(\"tooltipTitle\", ctx_r3.tooltipTemplate ? undefined : ctx_r3.getTooltipText(circle_r1))(\"tooltipTemplate\", ctx_r3.tooltipTemplate)(\"tooltipContext\", circle_r1.data);\n  }\n}\nfunction BubbleSeriesComponent__svg_g_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelementStart(1, \"g\");\n    i0.ɵɵtemplate(2, BubbleSeriesComponent__svg_g_0__svg_g_2_Template, 1, 18, \"g\", 1);\n    i0.ɵɵtemplate(3, BubbleSeriesComponent__svg_g_0__svg_g_3_Template, 1, 17, \"g\", 1);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const circle_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"transform\", circle_r1.transform);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.isSSR);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isSSR);\n  }\n}\nfunction BubbleChartComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BubbleChartComponent__svg_g_5_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.updateXAxisHeight($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"showGridLines\", ctx_r0.showGridLines)(\"dims\", ctx_r0.dims)(\"xScale\", ctx_r0.xScale)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"trimTicks\", ctx_r0.trimXAxisTicks)(\"rotateTicks\", ctx_r0.rotateXAxisTicks)(\"maxTickLength\", ctx_r0.maxXAxisTickLength)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks);\n  }\n}\nfunction BubbleChartComponent__svg_g_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 7);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BubbleChartComponent__svg_g_6_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.updateYAxisWidth($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"showGridLines\", ctx_r1.showGridLines)(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks);\n  }\n}\nfunction BubbleChartComponent__svg_g_8__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelementStart(1, \"g\", 9);\n    i0.ɵɵlistener(\"select\", function BubbleChartComponent__svg_g_8__svg_g_1_Template__svg_g_select_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const series_r9 = restoredCtx.$implicit;\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return ctx_r10.onClick($event, series_r9);\n    })(\"activate\", function BubbleChartComponent__svg_g_8__svg_g_1_Template__svg_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return ctx_r12.onActivate($event);\n    })(\"deactivate\", function BubbleChartComponent__svg_g_8__svg_g_1_Template__svg_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return ctx_r13.onDeactivate($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const series_r9 = ctx.$implicit;\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r8.xScale)(\"yScale\", ctx_r8.yScale)(\"rScale\", ctx_r8.rScale)(\"xScaleType\", ctx_r8.xScaleType)(\"yScaleType\", ctx_r8.yScaleType)(\"xAxisLabel\", ctx_r8.xAxisLabel)(\"yAxisLabel\", ctx_r8.yAxisLabel)(\"colors\", ctx_r8.colors)(\"data\", series_r9)(\"activeEntries\", ctx_r8.activeEntries)(\"tooltipDisabled\", ctx_r8.tooltipDisabled)(\"tooltipTemplate\", ctx_r8.tooltipTemplate);\n  }\n}\nfunction BubbleChartComponent__svg_g_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BubbleChartComponent__svg_g_8__svg_g_1_Template, 2, 13, \"g\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"clip-path\", ctx_r2.clipPath);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.data)(\"ngForTrackBy\", ctx_r2.trackBy);\n  }\n}\nfunction BubbleChartComponent__svg_g_9__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelementStart(1, \"g\", 9);\n    i0.ɵɵlistener(\"select\", function BubbleChartComponent__svg_g_9__svg_g_1_Template__svg_g_select_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r17);\n      const series_r15 = restoredCtx.$implicit;\n      const ctx_r16 = i0.ɵɵnextContext(2);\n      return ctx_r16.onClick($event, series_r15);\n    })(\"activate\", function BubbleChartComponent__svg_g_9__svg_g_1_Template__svg_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r18 = i0.ɵɵnextContext(2);\n      return ctx_r18.onActivate($event);\n    })(\"deactivate\", function BubbleChartComponent__svg_g_9__svg_g_1_Template__svg_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return ctx_r19.onDeactivate($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const series_r15 = ctx.$implicit;\n    const ctx_r14 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r14.xScale)(\"yScale\", ctx_r14.yScale)(\"rScale\", ctx_r14.rScale)(\"xScaleType\", ctx_r14.xScaleType)(\"yScaleType\", ctx_r14.yScaleType)(\"xAxisLabel\", ctx_r14.xAxisLabel)(\"yAxisLabel\", ctx_r14.yAxisLabel)(\"colors\", ctx_r14.colors)(\"data\", series_r15)(\"activeEntries\", ctx_r14.activeEntries)(\"tooltipDisabled\", ctx_r14.tooltipDisabled)(\"tooltipTemplate\", ctx_r14.tooltipTemplate);\n  }\n}\nfunction BubbleChartComponent__svg_g_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BubbleChartComponent__svg_g_9__svg_g_1_Template, 2, 12, \"g\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"clip-path\", ctx_r3.clipPath);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.data)(\"ngForTrackBy\", ctx_r3.trackBy);\n  }\n}\nconst _c33 = [\"ngx-charts-heat-map-cell\", \"\"];\nfunction HeatMapCellComponent__svg_defs_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"defs\");\n    i0.ɵɵelement(1, \"g\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"orientation\", ctx_r0.barOrientation.Vertical)(\"name\", ctx_r0.gradientId)(\"stops\", ctx_r0.gradientStops);\n  }\n}\nconst _c34 = [\"ngx-charts-heat-map-cell-series\", \"\"];\nconst _c35 = function (a0, a1, a2) {\n  return {\n    series: a0,\n    name: a1,\n    value: a2\n  };\n};\nfunction HeatCellSeriesComponent__svg_g_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 1);\n    i0.ɵɵlistener(\"select\", function HeatCellSeriesComponent__svg_g_0_Template__svg_g_select_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const c_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.onClick(c_r1.cell);\n    })(\"activate\", function HeatCellSeriesComponent__svg_g_0_Template__svg_g_activate_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const c_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.activate.emit(c_r1.cell);\n    })(\"deactivate\", function HeatCellSeriesComponent__svg_g_0_Template__svg_g_deactivate_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const c_r1 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.deactivate.emit(c_r1.cell);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const c_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"x\", c_r1.x)(\"y\", c_r1.y)(\"width\", c_r1.width)(\"height\", c_r1.height)(\"fill\", c_r1.fill)(\"data\", c_r1.data)(\"gradient\", ctx_r0.gradient)(\"animations\", ctx_r0.animations)(\"tooltipDisabled\", ctx_r0.tooltipDisabled)(\"tooltipPlacement\", ctx_r0.placementTypes.Top)(\"tooltipType\", ctx_r0.styleTypes.tooltip)(\"tooltipTitle\", ctx_r0.tooltipTemplate ? undefined : ctx_r0.tooltipText(c_r1))(\"tooltipTemplate\", ctx_r0.tooltipTemplate)(\"tooltipContext\", i0.ɵɵpureFunction3(14, _c35, c_r1.series, c_r1.label, c_r1.data));\n  }\n}\nfunction HeatMapComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵlistener(\"dimensionsChanged\", function HeatMapComponent__svg_g_2_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.updateXAxisHeight($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r0.xScale)(\"dims\", ctx_r0.dims)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"trimTicks\", ctx_r0.trimXAxisTicks)(\"rotateTicks\", ctx_r0.rotateXAxisTicks)(\"maxTickLength\", ctx_r0.maxXAxisTickLength)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks);\n  }\n}\nfunction HeatMapComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 7);\n    i0.ɵɵlistener(\"dimensionsChanged\", function HeatMapComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.updateYAxisWidth($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks);\n  }\n}\nfunction HeatMapComponent__svg_rect_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"rect\");\n  }\n  if (rf & 2) {\n    const rect_r7 = ctx.$implicit;\n    i0.ɵɵattribute(\"x\", rect_r7.x)(\"y\", rect_r7.y)(\"rx\", rect_r7.rx)(\"width\", rect_r7.width)(\"height\", rect_r7.height)(\"fill\", rect_r7.fill);\n  }\n}\nconst _c36 = [\"ngx-charts-line\", \"\"];\nfunction LineComponent__svg_g_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"path\", 1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"@animationState\", \"active\");\n    i0.ɵɵattribute(\"d\", ctx_r0.initialPath)(\"fill\", ctx_r0.fill)(\"stroke\", ctx_r0.stroke);\n  }\n}\nfunction LineComponent__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"path\", 1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"d\", ctx_r1.initialPath)(\"fill\", ctx_r1.fill)(\"stroke\", ctx_r1.stroke);\n  }\n}\nconst _c37 = [\"ngx-charts-line-series\", \"\"];\nfunction LineSeriesComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 4);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"orientation\", ctx_r0.barOrientation.Vertical)(\"name\", ctx_r0.gradientId)(\"stops\", ctx_r0.gradientStops);\n  }\n}\nfunction LineSeriesComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 5);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"active\", ctx_r1.isActive(ctx_r1.data))(\"inactive\", ctx_r1.isInactive(ctx_r1.data));\n    i0.ɵɵproperty(\"data\", ctx_r1.data)(\"path\", ctx_r1.outerPath)(\"fill\", ctx_r1.hasGradient ? ctx_r1.gradientUrl : ctx_r1.colors.getColor(ctx_r1.data.name))(\"opacity\", ctx_r1.rangeFillOpacity)(\"animations\", ctx_r1.animations);\n  }\n}\nfunction LineChartComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 7);\n    i0.ɵɵlistener(\"dimensionsChanged\", function LineChartComponent__svg_g_5_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.updateXAxisHeight($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r0.xScale)(\"dims\", ctx_r0.dims)(\"showGridLines\", ctx_r0.showGridLines)(\"showLabel\", ctx_r0.showXAxisLabel)(\"labelText\", ctx_r0.xAxisLabel)(\"trimTicks\", ctx_r0.trimXAxisTicks)(\"rotateTicks\", ctx_r0.rotateXAxisTicks)(\"maxTickLength\", ctx_r0.maxXAxisTickLength)(\"tickFormatting\", ctx_r0.xAxisTickFormatting)(\"ticks\", ctx_r0.xAxisTicks);\n  }\n}\nfunction LineChartComponent__svg_g_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 8);\n    i0.ɵɵlistener(\"dimensionsChanged\", function LineChartComponent__svg_g_6_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.updateYAxisWidth($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks)(\"referenceLines\", ctx_r1.referenceLines)(\"showRefLines\", ctx_r1.showRefLines)(\"showRefLabels\", ctx_r1.showRefLabels);\n  }\n}\nfunction LineChartComponent__svg_g_8__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"g\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const series_r11 = ctx.$implicit;\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r10.xScale)(\"yScale\", ctx_r10.yScale)(\"colors\", ctx_r10.colors)(\"data\", series_r11)(\"activeEntries\", ctx_r10.activeEntries)(\"scaleType\", ctx_r10.scaleType)(\"curve\", ctx_r10.curve)(\"rangeFillOpacity\", ctx_r10.rangeFillOpacity)(\"hasRange\", ctx_r10.hasRange)(\"animations\", ctx_r10.animations);\n  }\n}\nfunction LineChartComponent__svg_g_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, LineChartComponent__svg_g_8__svg_g_1_Template, 2, 11, \"g\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.results)(\"ngForTrackBy\", ctx_r2.trackBy);\n  }\n}\nfunction LineChartComponent__svg_g_9__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"g\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const series_r13 = ctx.$implicit;\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r12.xScale)(\"yScale\", ctx_r12.yScale)(\"colors\", ctx_r12.colors)(\"data\", series_r13)(\"activeEntries\", ctx_r12.activeEntries)(\"scaleType\", ctx_r12.scaleType)(\"curve\", ctx_r12.curve)(\"rangeFillOpacity\", ctx_r12.rangeFillOpacity)(\"hasRange\", ctx_r12.hasRange)(\"animations\", ctx_r12.animations);\n  }\n}\nfunction LineChartComponent__svg_g_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, LineChartComponent__svg_g_9__svg_g_1_Template, 2, 10, \"g\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.results)(\"ngForTrackBy\", ctx_r3.trackBy);\n  }\n}\nfunction LineChartComponent__svg_g_10__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelementStart(1, \"g\", 14);\n    i0.ɵɵlistener(\"select\", function LineChartComponent__svg_g_10__svg_g_2_Template__svg_g_select_1_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext(2);\n      return ctx_r16.onClick($event);\n    })(\"activate\", function LineChartComponent__svg_g_10__svg_g_2_Template__svg_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r18 = i0.ɵɵnextContext(2);\n      return ctx_r18.onActivate($event);\n    })(\"deactivate\", function LineChartComponent__svg_g_10__svg_g_2_Template__svg_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return ctx_r19.onDeactivate($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const series_r15 = ctx.$implicit;\n    const ctx_r14 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r14.xScale)(\"yScale\", ctx_r14.yScale)(\"colors\", ctx_r14.colors)(\"data\", series_r15)(\"scaleType\", ctx_r14.scaleType)(\"visibleValue\", ctx_r14.hoveredVertical)(\"activeEntries\", ctx_r14.activeEntries)(\"tooltipDisabled\", ctx_r14.tooltipDisabled)(\"tooltipTemplate\", ctx_r14.tooltipTemplate);\n  }\n}\nfunction LineChartComponent__svg_g_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 11);\n    i0.ɵɵlistener(\"mouseleave\", function LineChartComponent__svg_g_10_Template__svg_g_mouseleave_0_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return ctx_r20.hideCircles();\n    });\n    i0.ɵɵelementStart(1, \"g\", 12);\n    i0.ɵɵlistener(\"hover\", function LineChartComponent__svg_g_10_Template__svg_g_hover_1_listener($event) {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return ctx_r22.updateHoveredVertical($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(2, LineChartComponent__svg_g_10__svg_g_2_Template, 2, 9, \"g\", 13);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"dims\", ctx_r4.dims)(\"xSet\", ctx_r4.xSet)(\"xScale\", ctx_r4.xScale)(\"yScale\", ctx_r4.yScale)(\"results\", ctx_r4.results)(\"colors\", ctx_r4.colors)(\"tooltipDisabled\", ctx_r4.tooltipDisabled)(\"tooltipTemplate\", ctx_r4.seriesTooltipTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.results);\n  }\n}\nfunction LineChartComponent__svg_g_11__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"g\", 16);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const series_r24 = ctx.$implicit;\n    const ctx_r23 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"xScale\", ctx_r23.timelineXScale)(\"yScale\", ctx_r23.timelineYScale)(\"colors\", ctx_r23.colors)(\"data\", series_r24)(\"scaleType\", ctx_r23.scaleType)(\"curve\", ctx_r23.curve)(\"hasRange\", ctx_r23.hasRange)(\"animations\", ctx_r23.animations);\n  }\n}\nfunction LineChartComponent__svg_g_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r26 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 15);\n    i0.ɵɵlistener(\"onDomainChange\", function LineChartComponent__svg_g_11_Template__svg_g_onDomainChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r25 = i0.ɵɵnextContext();\n      return ctx_r25.updateDomain($event);\n    });\n    i0.ɵɵtemplate(1, LineChartComponent__svg_g_11__svg_g_1_Template, 2, 8, \"g\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"results\", ctx_r5.results)(\"view\", i0.ɵɵpureFunction2(10, _c24, ctx_r5.timelineWidth, ctx_r5.height))(\"height\", ctx_r5.timelineHeight)(\"scheme\", ctx_r5.scheme)(\"customColors\", ctx_r5.customColors)(\"scaleType\", ctx_r5.scaleType)(\"legend\", ctx_r5.legend);\n    i0.ɵɵattribute(\"transform\", ctx_r5.timelineTransform);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r5.results)(\"ngForTrackBy\", ctx_r5.trackBy);\n  }\n}\nconst _c38 = [\"ngx-charts-pie-label\", \"\"];\nconst _c39 = [\"ngx-charts-polar-series\", \"\"];\nfunction PolarSeriesComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 4);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"color\", ctx_r0.seriesColor)(\"name\", ctx_r0.gradientId)(\"startOpacity\", 0.25)(\"endOpacity\", 1)(\"stops\", ctx_r0.gradientStops);\n  }\n}\nfunction PolarSeriesComponent__svg_g_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 5);\n    i0.ɵɵlistener(\"select\", function PolarSeriesComponent__svg_g_4_Template__svg_g_select_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const circle_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.select.emit(circle_r2.data);\n    })(\"activate\", function PolarSeriesComponent__svg_g_4_Template__svg_g_activate_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const circle_r2 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.activate.emit({\n        name: circle_r2.data.series\n      });\n    })(\"deactivate\", function PolarSeriesComponent__svg_g_4_Template__svg_g_deactivate_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const circle_r2 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.deactivate.emit({\n        name: circle_r2.data.series\n      });\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const circle_r2 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"opacity\", ctx_r1.inactive ? 0.2 : 1);\n    i0.ɵɵproperty(\"cx\", circle_r2.cx)(\"cy\", circle_r2.cy)(\"r\", ctx_r1.circleRadius)(\"fill\", circle_r2.color)(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"tooltipPlacement\", ctx_r1.placementTypes.Top)(\"tooltipType\", ctx_r1.styleTypes.tooltip)(\"tooltipTitle\", ctx_r1.tooltipTemplate ? undefined : ctx_r1.tooltipText(circle_r2))(\"tooltipTemplate\", ctx_r1.tooltipTemplate)(\"tooltipContext\", circle_r2.data);\n  }\n}\nfunction PolarChartComponent__svg_g_4__svg_circle_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"circle\", 7);\n  }\n  if (rf & 2) {\n    const r_r7 = ctx.$implicit;\n    i0.ɵɵattribute(\"r\", r_r7);\n  }\n}\nfunction PolarChartComponent__svg_g_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, PolarChartComponent__svg_g_4__svg_circle_1_Template, 1, 1, \"circle\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.radiusTicks);\n  }\n}\nfunction PolarChartComponent__svg_g_5__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 9);\n  }\n  if (rf & 2) {\n    const tick_r9 = ctx.$implicit;\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"data\", tick_r9)(\"radius\", ctx_r8.outerRadius)(\"label\", tick_r9.label)(\"max\", ctx_r8.outerRadius)(\"value\", ctx_r8.showGridLines ? 1 : ctx_r8.outerRadius)(\"explodeSlices\", true)(\"animations\", ctx_r8.animations)(\"labelTrim\", ctx_r8.labelTrim)(\"labelTrimSize\", ctx_r8.labelTrimSize);\n  }\n}\nfunction PolarChartComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, PolarChartComponent__svg_g_5__svg_g_1_Template, 1, 9, \"g\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.thetaTicks);\n  }\n}\nfunction PolarChartComponent__svg_g_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 10);\n    i0.ɵɵlistener(\"dimensionsChanged\", function PolarChartComponent__svg_g_6_Template__svg_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.updateYAxisWidth($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r2.yAxisScale)(\"dims\", ctx_r2.yAxisDims)(\"showGridLines\", ctx_r2.showGridLines)(\"showLabel\", ctx_r2.showYAxisLabel)(\"labelText\", ctx_r2.yAxisLabel)(\"trimTicks\", ctx_r2.trimYAxisTicks)(\"maxTickLength\", ctx_r2.maxYAxisTickLength)(\"tickFormatting\", ctx_r2.yAxisTickFormatting);\n    i0.ɵɵattribute(\"transform\", ctx_r2.transformYAxis);\n  }\n}\nfunction PolarChartComponent__svg_g_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 11);\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"label\", ctx_r3.xAxisLabel)(\"offset\", ctx_r3.labelOffset)(\"orient\", ctx_r3.orientation.Bottom)(\"height\", ctx_r3.dims.height)(\"width\", ctx_r3.dims.width);\n  }\n}\nfunction PolarChartComponent__svg_g_8__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelementStart(1, \"g\", 13);\n    i0.ɵɵlistener(\"select\", function PolarChartComponent__svg_g_8__svg_g_1_Template__svg_g_select_1_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return ctx_r14.onClick($event);\n    })(\"activate\", function PolarChartComponent__svg_g_8__svg_g_1_Template__svg_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r16 = i0.ɵɵnextContext(2);\n      return ctx_r16.onActivate($event);\n    })(\"deactivate\", function PolarChartComponent__svg_g_8__svg_g_1_Template__svg_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r17 = i0.ɵɵnextContext(2);\n      return ctx_r17.onDeactivate($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const series_r13 = ctx.$implicit;\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"gradient\", ctx_r12.gradient)(\"xScale\", ctx_r12.xScale)(\"yScale\", ctx_r12.yScale)(\"colors\", ctx_r12.colors)(\"data\", series_r13)(\"activeEntries\", ctx_r12.activeEntries)(\"scaleType\", ctx_r12.scaleType)(\"curve\", ctx_r12.curve)(\"rangeFillOpacity\", ctx_r12.rangeFillOpacity)(\"animations\", ctx_r12.animations)(\"tooltipDisabled\", ctx_r12.tooltipDisabled)(\"tooltipTemplate\", ctx_r12.tooltipTemplate);\n  }\n}\nfunction PolarChartComponent__svg_g_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, PolarChartComponent__svg_g_8__svg_g_1_Template, 2, 13, \"g\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r4.transformPlot);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.results)(\"ngForTrackBy\", ctx_r4.trackBy);\n  }\n}\nfunction PolarChartComponent__svg_g_9__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelementStart(1, \"g\", 13);\n    i0.ɵɵlistener(\"select\", function PolarChartComponent__svg_g_9__svg_g_1_Template__svg_g_select_1_listener($event) {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r20 = i0.ɵɵnextContext(2);\n      return ctx_r20.onClick($event);\n    })(\"activate\", function PolarChartComponent__svg_g_9__svg_g_1_Template__svg_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r22 = i0.ɵɵnextContext(2);\n      return ctx_r22.onActivate($event);\n    })(\"deactivate\", function PolarChartComponent__svg_g_9__svg_g_1_Template__svg_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r23 = i0.ɵɵnextContext(2);\n      return ctx_r23.onDeactivate($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const series_r19 = ctx.$implicit;\n    const ctx_r18 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"gradient\", ctx_r18.gradient)(\"xScale\", ctx_r18.xScale)(\"yScale\", ctx_r18.yScale)(\"colors\", ctx_r18.colors)(\"data\", series_r19)(\"activeEntries\", ctx_r18.activeEntries)(\"scaleType\", ctx_r18.scaleType)(\"curve\", ctx_r18.curve)(\"rangeFillOpacity\", ctx_r18.rangeFillOpacity)(\"animations\", ctx_r18.animations)(\"tooltipDisabled\", ctx_r18.tooltipDisabled)(\"tooltipTemplate\", ctx_r18.tooltipTemplate);\n  }\n}\nfunction PolarChartComponent__svg_g_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, PolarChartComponent__svg_g_9__svg_g_1_Template, 2, 12, \"g\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r5.transformPlot);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r5.results)(\"ngForTrackBy\", ctx_r5.trackBy);\n  }\n}\nconst _c40 = [\"ngx-charts-pie-arc\", \"\"];\nfunction PieArcComponent__svg_defs_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"defs\");\n    i0.ɵɵelement(1, \"g\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"color\", ctx_r0.fill)(\"name\", ctx_r0.radialGradientId)(\"startOpacity\", ctx_r0.startOpacity);\n  }\n}\nconst _c41 = [\"ngx-charts-pie-series\", \"\"];\nfunction PieSeriesComponent__svg_g_0__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 3);\n  }\n  if (rf & 2) {\n    const arc_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"data\", arc_r1)(\"radius\", ctx_r2.outerRadius)(\"color\", ctx_r2.color(arc_r1))(\"label\", ctx_r2.labelText(arc_r1))(\"labelTrim\", ctx_r2.trimLabels)(\"labelTrimSize\", ctx_r2.maxLabelLength)(\"max\", ctx_r2.max)(\"value\", arc_r1.value)(\"explodeSlices\", ctx_r2.explodeSlices)(\"animations\", ctx_r2.animations);\n  }\n}\nfunction PieSeriesComponent__svg_g_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, PieSeriesComponent__svg_g_0__svg_g_1_Template, 1, 10, \"g\", 1);\n    i0.ɵɵelementStart(2, \"g\", 2);\n    i0.ɵɵlistener(\"select\", function PieSeriesComponent__svg_g_0_Template__svg_g_select_2_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.onClick($event);\n    })(\"activate\", function PieSeriesComponent__svg_g_0_Template__svg_g_activate_2_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.activate.emit($event);\n    })(\"deactivate\", function PieSeriesComponent__svg_g_0_Template__svg_g_deactivate_2_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.deactivate.emit($event);\n    })(\"dblclick\", function PieSeriesComponent__svg_g_0_Template__svg_g_dblclick_2_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.dblclick.emit($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const arc_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.labelVisible(arc_r1));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"startAngle\", arc_r1.startAngle)(\"endAngle\", arc_r1.endAngle)(\"innerRadius\", ctx_r0.innerRadius)(\"outerRadius\", ctx_r0.outerRadius)(\"fill\", ctx_r0.color(arc_r1))(\"value\", arc_r1.data.value)(\"gradient\", ctx_r0.gradient)(\"data\", arc_r1.data)(\"max\", ctx_r0.max)(\"explodeSlices\", ctx_r0.explodeSlices)(\"isActive\", ctx_r0.isActive(arc_r1.data))(\"animate\", ctx_r0.animations)(\"tooltipDisabled\", ctx_r0.tooltipDisabled)(\"tooltipPlacement\", ctx_r0.placementTypes.Top)(\"tooltipType\", ctx_r0.styleTypes.tooltip)(\"tooltipTitle\", ctx_r0.getTooltipTitle(arc_r1))(\"tooltipTemplate\", ctx_r0.tooltipTemplate)(\"tooltipContext\", arc_r1.data);\n  }\n}\nconst _c42 = \".pie-label{font-size:11px}.pie-label.animation{-webkit-animation:.75s ease-in fadeIn;animation:.75s ease-in fadeIn}@-webkit-keyframes fadeIn{0%{opacity:0}to{opacity:1}}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}.pie-label-line{stroke-dasharray:100%}.pie-label-line.animation{-webkit-animation:3s linear drawOut;animation:3s linear drawOut;transition:d .75s}@-webkit-keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}@keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}\\n\";\nconst _c43 = [\"ngx-charts-pie-grid-series\", \"\"];\nfunction PieGridSeriesComponent__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2);\n    i0.ɵɵlistener(\"select\", function PieGridSeriesComponent__svg_g_1_Template__svg_g_select_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.onClick($event);\n    })(\"activate\", function PieGridSeriesComponent__svg_g_1_Template__svg_g_activate_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.activate.emit($event);\n    })(\"deactivate\", function PieGridSeriesComponent__svg_g_1_Template__svg_g_deactivate_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.deactivate.emit($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const arc_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"startAngle\", arc_r1.startAngle)(\"endAngle\", arc_r1.endAngle)(\"innerRadius\", ctx_r0.innerRadius)(\"outerRadius\", ctx_r0.outerRadius)(\"fill\", ctx_r0.color(arc_r1))(\"value\", arc_r1.data.value)(\"data\", arc_r1.data)(\"gradient\", false)(\"pointerEvents\", arc_r1.pointerEvents)(\"animate\", arc_r1.animate);\n    i0.ɵɵattribute(\"class\", arc_r1.class);\n  }\n}\nfunction PieGridComponent__svg_g_2__svg_text_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"text\", 10);\n  }\n  if (rf & 2) {\n    const series_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"countTo\", series_r1.percent)(\"countSuffix\", \"%\");\n  }\n}\nfunction PieGridComponent__svg_g_2__svg_text_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"text\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const series_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", series_r1.percent.toLocaleString(), \" \");\n  }\n}\nfunction PieGridComponent__svg_g_2__svg_text_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"text\", 12);\n  }\n  if (rf & 2) {\n    const series_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"countTo\", series_r1.total)(\"countPrefix\", ctx_r4.label + \": \");\n    i0.ɵɵattribute(\"y\", series_r1.outerRadius);\n  }\n}\nfunction PieGridComponent__svg_g_2__svg_text_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"text\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const series_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"y\", series_r1.outerRadius);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", ctx_r5.label, \": \", series_r1.total.toLocaleString(), \" \");\n  }\n}\nconst _c44 = function (a0) {\n  return {\n    data: a0\n  };\n};\nfunction PieGridComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 3);\n    i0.ɵɵelementStart(1, \"g\", 4);\n    i0.ɵɵlistener(\"select\", function PieGridComponent__svg_g_2_Template__svg_g_select_1_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.onClick($event);\n    })(\"activate\", function PieGridComponent__svg_g_2_Template__svg_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return ctx_r12.onActivate($event);\n    })(\"deactivate\", function PieGridComponent__svg_g_2_Template__svg_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return ctx_r13.onDeactivate($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(2, PieGridComponent__svg_g_2__svg_text_2_Template, 1, 2, \"text\", 5);\n    i0.ɵɵtemplate(3, PieGridComponent__svg_g_2__svg_text_3_Template, 2, 1, \"text\", 6);\n    i0.ɵɵelementStart(4, \"text\", 7);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, PieGridComponent__svg_g_2__svg_text_6_Template, 1, 3, \"text\", 8);\n    i0.ɵɵtemplate(7, PieGridComponent__svg_g_2__svg_text_7_Template, 2, 3, \"text\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const series_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", series_r1.transform);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"colors\", series_r1.colors)(\"data\", series_r1.data)(\"innerRadius\", series_r1.innerRadius)(\"outerRadius\", series_r1.outerRadius)(\"animations\", ctx_r0.animations)(\"tooltipDisabled\", ctx_r0.tooltipDisabled)(\"tooltipPlacement\", ctx_r0.placementTypes.Top)(\"tooltipType\", ctx_r0.styleTypes.tooltip)(\"tooltipTitle\", ctx_r0.tooltipTemplate ? undefined : ctx_r0.tooltipText(i0.ɵɵpureFunction1(17, _c44, series_r1)))(\"tooltipTemplate\", ctx_r0.tooltipTemplate)(\"tooltipContext\", series_r1.data[0].data);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.animations);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.animations);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", series_r1.label, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.animations);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.animations);\n  }\n}\nconst _c45 = [\"textEl\"];\nconst _c46 = [\"ngx-charts-card\", \"\"];\nfunction CardComponent__svg_path_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"path\", 7);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"fill\", ctx_r0.bandColor)(\"transform\", ctx_r0.transformBand)(\"d\", ctx_r0.bandPath);\n  }\n}\nconst _c47 = [\"ngx-charts-card-series\", \"\"];\nfunction CardSeriesComponent__svg_rect_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"rect\", 2);\n  }\n  if (rf & 2) {\n    const c_r2 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"fill\", ctx_r0.emptyColor);\n    i0.ɵɵattribute(\"x\", c_r2.x)(\"y\", c_r2.y)(\"width\", c_r2.width)(\"height\", c_r2.height);\n  }\n}\nfunction CardSeriesComponent__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 3);\n    i0.ɵɵlistener(\"select\", function CardSeriesComponent__svg_g_1_Template__svg_g_select_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.onClick($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const c_r3 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"x\", c_r3.x)(\"y\", c_r3.y)(\"width\", c_r3.width)(\"height\", c_r3.height)(\"color\", c_r3.color)(\"bandColor\", c_r3.bandColor)(\"textColor\", c_r3.textColor)(\"data\", c_r3.data)(\"label\", c_r3.label)(\"medianSize\", ctx_r1.medianSize)(\"valueFormatting\", ctx_r1.valueFormatting)(\"labelFormatting\", ctx_r1.labelFormatting)(\"animations\", ctx_r1.animations);\n  }\n}\nconst _c48 = [\"ngx-charts-tree-map-cell\", \"\"];\nfunction TreeMapCellComponent__svg_defs_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"defs\");\n    i0.ɵɵelement(1, \"g\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"orientation\", ctx_r0.orientation.Vertical)(\"name\", ctx_r0.gradientId)(\"stops\", ctx_r0.gradientStops);\n  }\n}\nfunction TreeMapCellComponent__svg_foreignObject_3__xhtml_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 8);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"countTo\", ctx_r2.value)(\"valueFormatting\", ctx_r2.valueFormatting);\n  }\n}\nfunction TreeMapCellComponent__svg_foreignObject_3__xhtml_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.formattedValue, \" \");\n  }\n}\nfunction TreeMapCellComponent__svg_foreignObject_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"foreignObject\", 4);\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(1, \"p\");\n    i0.ɵɵelement(2, \"span\", 5);\n    i0.ɵɵelement(3, \"br\");\n    i0.ɵɵtemplate(4, TreeMapCellComponent__svg_foreignObject_3__xhtml_span_4_Template, 1, 2, \"span\", 6);\n    i0.ɵɵtemplate(5, TreeMapCellComponent__svg_foreignObject_3__xhtml_span_5_Template, 2, 1, \"span\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"pointer-events\", \"none\");\n    i0.ɵɵattribute(\"x\", ctx_r1.x)(\"y\", ctx_r1.y)(\"width\", ctx_r1.width)(\"height\", ctx_r1.height);\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"color\", ctx_r1.getTextColor())(\"height\", ctx_r1.height + \"px\")(\"width\", ctx_r1.width + \"px\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r1.formattedLabel, i0.ɵɵsanitizeHtml);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.animations);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.animations);\n  }\n}\nconst _c49 = [\"ngx-charts-tree-map-cell-series\", \"\"];\nfunction TreeMapCellSeriesComponent__svg_g_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 1);\n    i0.ɵɵlistener(\"select\", function TreeMapCellSeriesComponent__svg_g_0_Template__svg_g_select_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.onClick($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const c_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"data\", c_r1.data)(\"x\", c_r1.x)(\"y\", c_r1.y)(\"width\", c_r1.width)(\"height\", c_r1.height)(\"fill\", c_r1.fill)(\"label\", c_r1.label)(\"value\", c_r1.value)(\"valueFormatting\", ctx_r0.valueFormatting)(\"labelFormatting\", ctx_r0.labelFormatting)(\"gradient\", ctx_r0.gradient)(\"animations\", ctx_r0.animations)(\"tooltipDisabled\", ctx_r0.tooltipDisabled)(\"tooltipPlacement\", ctx_r0.placementTypes.Top)(\"tooltipType\", ctx_r0.styleTypes.tooltip)(\"tooltipTitle\", ctx_r0.tooltipTemplate ? undefined : ctx_r0.getTooltipText(c_r1))(\"tooltipTemplate\", ctx_r0.tooltipTemplate)(\"tooltipContext\", c_r1.data);\n  }\n}\nconst _c50 = [\"valueTextEl\"];\nconst _c51 = [\"unitsTextEl\"];\nfunction LinearGaugeComponent__svg_line_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"line\", 10);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r0.transformLine)(\"stroke\", ctx_r0.colors.getColor(ctx_r0.units));\n  }\n}\nfunction LinearGaugeComponent__svg_line_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"line\", 11);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r1.transformLine)(\"stroke\", ctx_r1.colors.getColor(ctx_r1.units));\n  }\n}\nconst _c52 = function () {\n  return {};\n};\nconst _c53 = [\"ngx-charts-gauge-arc\", \"\"];\nconst _c54 = [\"ngx-charts-gauge-axis\", \"\"];\nfunction GaugeAxisComponent__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2);\n    i0.ɵɵelement(1, \"path\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tick_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"d\", tick_r3.line);\n  }\n}\nfunction GaugeAxisComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2);\n    i0.ɵɵelementStart(1, \"text\", 3);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tick_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"text-anchor\", tick_r4.textAnchor);\n    i0.ɵɵattribute(\"transform\", tick_r4.textTransform);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", tick_r4.text, \" \");\n  }\n}\nfunction GaugeAxisComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 4);\n    i0.ɵɵelement(1, \"path\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tick_r5 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"d\", tick_r5.line);\n  }\n}\nfunction GaugeComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelementStart(1, \"g\", 5);\n    i0.ɵɵlistener(\"select\", function GaugeComponent__svg_g_2_Template__svg_g_select_1_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.onClick($event);\n    })(\"activate\", function GaugeComponent__svg_g_2_Template__svg_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.onActivate($event);\n    })(\"deactivate\", function GaugeComponent__svg_g_2_Template__svg_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.onDeactivate($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const arc_r3 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r0.rotation);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"backgroundArc\", arc_r3.backgroundArc)(\"valueArc\", arc_r3.valueArc)(\"cornerRadius\", ctx_r0.cornerRadius)(\"colors\", ctx_r0.colors)(\"isActive\", ctx_r0.isActive(arc_r3.valueArc.data))(\"tooltipDisabled\", ctx_r0.tooltipDisabled)(\"tooltipTemplate\", ctx_r0.tooltipTemplate)(\"valueFormatting\", ctx_r0.valueFormatting)(\"animations\", ctx_r0.animations);\n  }\n}\nfunction GaugeComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 6);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"bigSegments\", ctx_r1.bigSegments)(\"smallSegments\", ctx_r1.smallSegments)(\"min\", ctx_r1.min)(\"max\", ctx_r1.max)(\"radius\", ctx_r1.outerRadius)(\"angleSpan\", ctx_r1.angleSpan)(\"valueScale\", ctx_r1.valueScale)(\"startAngle\", ctx_r1.startAngle)(\"tickFormatting\", ctx_r1.axisTickFormatting);\n  }\n}\nfunction GaugeComponent__svg_text_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"text\", 7, 8);\n    i0.ɵɵelementStart(2, \"tspan\", 9);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"tspan\", 10);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"text-anchor\", \"middle\");\n    i0.ɵɵattribute(\"transform\", ctx_r2.textTransform);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r2.displayValue);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r2.units);\n  }\n}\nfunction throttle(func, wait, options) {\n  options = options || {};\n  let context;\n  let args;\n  let result;\n  let timeout = null;\n  let previous = 0;\n  function later() {\n    previous = options.leading === false ? 0 : +new Date();\n    timeout = null;\n    result = func.apply(context, args);\n  }\n  return function () {\n    const now = +new Date();\n    if (!previous && options.leading === false) {\n      previous = now;\n    }\n    const remaining = wait - (now - previous);\n    context = this;\n    // eslint-disable-next-line prefer-rest-params\n    args = arguments;\n    if (remaining <= 0) {\n      clearTimeout(timeout);\n      timeout = null;\n      previous = now;\n      result = func.apply(context, args);\n    } else if (!timeout && options.trailing !== false) {\n      timeout = setTimeout(later, remaining);\n    }\n    return result;\n  };\n}\n/**\n * Throttle decorator\n *\n *  class MyClass {\n *    throttleable(10)\n *    myFn() { ... }\n *  }\n */\nfunction throttleable(duration, options) {\n  return function innerDecorator(target, key, descriptor) {\n    return {\n      configurable: true,\n      enumerable: descriptor.enumerable,\n      get: function getter() {\n        Object.defineProperty(this, key, {\n          configurable: true,\n          enumerable: descriptor.enumerable,\n          value: throttle(descriptor.value, duration, options)\n        });\n        return this[key];\n      }\n    };\n  };\n}\nvar PlacementTypes;\n(function (PlacementTypes) {\n  PlacementTypes[\"Top\"] = \"top\";\n  PlacementTypes[\"Bottom\"] = \"bottom\";\n  PlacementTypes[\"Left\"] = \"left\";\n  PlacementTypes[\"Right\"] = \"right\";\n  PlacementTypes[\"Center\"] = \"center\";\n})(PlacementTypes || (PlacementTypes = {}));\nconst caretOffset = 7;\nfunction verticalPosition(elDimensions, popoverDimensions, alignment) {\n  if (alignment === PlacementTypes.Top) {\n    return elDimensions.top - caretOffset;\n  }\n  if (alignment === PlacementTypes.Bottom) {\n    return elDimensions.top + elDimensions.height - popoverDimensions.height + caretOffset;\n  }\n  if (alignment === PlacementTypes.Center) {\n    return elDimensions.top + elDimensions.height / 2 - popoverDimensions.height / 2;\n  }\n  return undefined;\n}\nfunction horizontalPosition(elDimensions, popoverDimensions, alignment) {\n  if (alignment === PlacementTypes.Left) {\n    return elDimensions.left - caretOffset;\n  }\n  if (alignment === PlacementTypes.Right) {\n    return elDimensions.left + elDimensions.width - popoverDimensions.width + caretOffset;\n  }\n  if (alignment === PlacementTypes.Center) {\n    return elDimensions.left + elDimensions.width / 2 - popoverDimensions.width / 2;\n  }\n  return undefined;\n}\n/**\n * Position helper for the popover directive.\n *\n * @export\n */\nclass PositionHelper {\n  /**\n   * Calculate vertical alignment position\n   *\n   * @memberOf PositionHelper\n   */\n  static calculateVerticalAlignment(elDimensions, popoverDimensions, alignment) {\n    let result = verticalPosition(elDimensions, popoverDimensions, alignment);\n    if (result + popoverDimensions.height > window.innerHeight) {\n      result = window.innerHeight - popoverDimensions.height;\n    }\n    return result;\n  }\n  /**\n   * Calculate vertical caret position\n   *\n   * @memberOf PositionHelper\n   */\n  static calculateVerticalCaret(elDimensions, popoverDimensions, caretDimensions, alignment) {\n    let result;\n    if (alignment === PlacementTypes.Top) {\n      result = elDimensions.height / 2 - caretDimensions.height / 2 + caretOffset;\n    }\n    if (alignment === PlacementTypes.Bottom) {\n      result = popoverDimensions.height - elDimensions.height / 2 - caretDimensions.height / 2 - caretOffset;\n    }\n    if (alignment === PlacementTypes.Center) {\n      result = popoverDimensions.height / 2 - caretDimensions.height / 2;\n    }\n    const popoverPosition = verticalPosition(elDimensions, popoverDimensions, alignment);\n    if (popoverPosition + popoverDimensions.height > window.innerHeight) {\n      result += popoverPosition + popoverDimensions.height - window.innerHeight;\n    }\n    return result;\n  }\n  /**\n   * Calculate horz alignment position\n   *\n   * @memberOf PositionHelper\n   */\n  static calculateHorizontalAlignment(elDimensions, popoverDimensions, alignment) {\n    let result = horizontalPosition(elDimensions, popoverDimensions, alignment);\n    if (result + popoverDimensions.width > window.innerWidth) {\n      result = window.innerWidth - popoverDimensions.width;\n    }\n    return result;\n  }\n  /**\n   * Calculate horz caret position\n   *\n   * @memberOf PositionHelper\n   */\n  static calculateHorizontalCaret(elDimensions, popoverDimensions, caretDimensions, alignment) {\n    let result;\n    if (alignment === PlacementTypes.Left) {\n      result = elDimensions.width / 2 - caretDimensions.width / 2 + caretOffset;\n    }\n    if (alignment === PlacementTypes.Right) {\n      result = popoverDimensions.width - elDimensions.width / 2 - caretDimensions.width / 2 - caretOffset;\n    }\n    if (alignment === PlacementTypes.Center) {\n      result = popoverDimensions.width / 2 - caretDimensions.width / 2;\n    }\n    const popoverPosition = horizontalPosition(elDimensions, popoverDimensions, alignment);\n    if (popoverPosition + popoverDimensions.width > window.innerWidth) {\n      result += popoverPosition + popoverDimensions.width - window.innerWidth;\n    }\n    return result;\n  }\n  /**\n   * Checks if the element's position should be flipped\n   *\n   * @memberOf PositionHelper\n   */\n  static shouldFlip(elDimensions, popoverDimensions, placement, spacing) {\n    let flip = false;\n    if (placement === PlacementTypes.Right) {\n      if (elDimensions.left + elDimensions.width + popoverDimensions.width + spacing > window.innerWidth) {\n        flip = true;\n      }\n    }\n    if (placement === PlacementTypes.Left) {\n      if (elDimensions.left - popoverDimensions.width - spacing < 0) {\n        flip = true;\n      }\n    }\n    if (placement === PlacementTypes.Top) {\n      if (elDimensions.top - popoverDimensions.height - spacing < 0) {\n        flip = true;\n      }\n    }\n    if (placement === PlacementTypes.Bottom) {\n      if (elDimensions.top + elDimensions.height + popoverDimensions.height + spacing > window.innerHeight) {\n        flip = true;\n      }\n    }\n    return flip;\n  }\n  /**\n   * Position caret\n   *\n   * @memberOf PositionHelper\n   */\n  static positionCaret(placement, elmDim, hostDim, caretDimensions, alignment) {\n    let top = 0;\n    let left = 0;\n    if (placement === PlacementTypes.Right) {\n      left = -7;\n      top = PositionHelper.calculateVerticalCaret(hostDim, elmDim, caretDimensions, alignment);\n    } else if (placement === PlacementTypes.Left) {\n      left = elmDim.width;\n      top = PositionHelper.calculateVerticalCaret(hostDim, elmDim, caretDimensions, alignment);\n    } else if (placement === PlacementTypes.Top) {\n      top = elmDim.height;\n      left = PositionHelper.calculateHorizontalCaret(hostDim, elmDim, caretDimensions, alignment);\n    } else if (placement === PlacementTypes.Bottom) {\n      top = -7;\n      left = PositionHelper.calculateHorizontalCaret(hostDim, elmDim, caretDimensions, alignment);\n    }\n    return {\n      top,\n      left\n    };\n  }\n  /**\n   * Position content\n   *\n   * @memberOf PositionHelper\n   */\n  static positionContent(placement, elmDim, hostDim, spacing, alignment) {\n    let top = 0;\n    let left = 0;\n    if (placement === PlacementTypes.Right) {\n      left = hostDim.left + hostDim.width + spacing;\n      top = PositionHelper.calculateVerticalAlignment(hostDim, elmDim, alignment);\n    } else if (placement === PlacementTypes.Left) {\n      left = hostDim.left - elmDim.width - spacing;\n      top = PositionHelper.calculateVerticalAlignment(hostDim, elmDim, alignment);\n    } else if (placement === PlacementTypes.Top) {\n      top = hostDim.top - elmDim.height - spacing;\n      left = PositionHelper.calculateHorizontalAlignment(hostDim, elmDim, alignment);\n    } else if (placement === PlacementTypes.Bottom) {\n      top = hostDim.top + hostDim.height + spacing;\n      left = PositionHelper.calculateHorizontalAlignment(hostDim, elmDim, alignment);\n    }\n    return {\n      top,\n      left\n    };\n  }\n  /**\n   * Determine placement based on flip\n   *\n   * @memberOf PositionHelper\n   */\n  static determinePlacement(placement, elmDim, hostDim, spacing) {\n    const shouldFlip = PositionHelper.shouldFlip(hostDim, elmDim, placement, spacing);\n    if (shouldFlip) {\n      if (placement === PlacementTypes.Right) {\n        return PlacementTypes.Left;\n      } else if (placement === PlacementTypes.Left) {\n        return PlacementTypes.Right;\n      } else if (placement === PlacementTypes.Top) {\n        return PlacementTypes.Bottom;\n      } else if (placement === PlacementTypes.Bottom) {\n        return PlacementTypes.Top;\n      }\n    }\n    return placement;\n  }\n}\nclass TooltipContentComponent {\n  constructor(element, renderer, platformId) {\n    this.element = element;\n    this.renderer = renderer;\n    this.platformId = platformId;\n  }\n  get cssClasses() {\n    let clz = 'ngx-charts-tooltip-content';\n    clz += ` position-${this.placement}`;\n    clz += ` type-${this.type}`;\n    clz += ` ${this.cssClass}`;\n    return clz;\n  }\n  ngAfterViewInit() {\n    setTimeout(this.position.bind(this));\n  }\n  position() {\n    if (!isPlatformBrowser(this.platformId)) {\n      return;\n    }\n    const nativeElm = this.element.nativeElement;\n    const hostDim = this.host.nativeElement.getBoundingClientRect();\n    // if no dims were found, never show\n    if (!hostDim.height && !hostDim.width) return;\n    const elmDim = nativeElm.getBoundingClientRect();\n    this.checkFlip(hostDim, elmDim);\n    this.positionContent(nativeElm, hostDim, elmDim);\n    if (this.showCaret) {\n      this.positionCaret(hostDim, elmDim);\n    }\n    // animate its entry\n    setTimeout(() => this.renderer.addClass(nativeElm, 'animate'), 1);\n  }\n  positionContent(nativeElm, hostDim, elmDim) {\n    const {\n      top,\n      left\n    } = PositionHelper.positionContent(this.placement, elmDim, hostDim, this.spacing, this.alignment);\n    this.renderer.setStyle(nativeElm, 'top', `${top}px`);\n    this.renderer.setStyle(nativeElm, 'left', `${left}px`);\n  }\n  positionCaret(hostDim, elmDim) {\n    const caretElm = this.caretElm.nativeElement;\n    const caretDimensions = caretElm.getBoundingClientRect();\n    const {\n      top,\n      left\n    } = PositionHelper.positionCaret(this.placement, elmDim, hostDim, caretDimensions, this.alignment);\n    this.renderer.setStyle(caretElm, 'top', `${top}px`);\n    this.renderer.setStyle(caretElm, 'left', `${left}px`);\n  }\n  checkFlip(hostDim, elmDim) {\n    this.placement = PositionHelper.determinePlacement(this.placement, elmDim, hostDim, this.spacing);\n  }\n  onWindowResize() {\n    this.position();\n  }\n}\nTooltipContentComponent.ɵfac = function TooltipContentComponent_Factory(t) {\n  return new (t || TooltipContentComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\nTooltipContentComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TooltipContentComponent,\n  selectors: [[\"ngx-tooltip-content\"]],\n  viewQuery: function TooltipContentComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.caretElm = _t.first);\n    }\n  },\n  hostVars: 2,\n  hostBindings: function TooltipContentComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"resize\", function TooltipContentComponent_resize_HostBindingHandler() {\n        return ctx.onWindowResize();\n      }, false, i0.ɵɵresolveWindow);\n    }\n    if (rf & 2) {\n      i0.ɵɵclassMap(ctx.cssClasses);\n    }\n  },\n  inputs: {\n    host: \"host\",\n    showCaret: \"showCaret\",\n    type: \"type\",\n    placement: \"placement\",\n    alignment: \"alignment\",\n    spacing: \"spacing\",\n    cssClass: \"cssClass\",\n    title: \"title\",\n    template: \"template\",\n    context: \"context\"\n  },\n  decls: 6,\n  vars: 6,\n  consts: [[3, \"hidden\"], [\"caretElm\", \"\"], [1, \"tooltip-content\"], [4, \"ngIf\"], [3, \"innerHTML\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"innerHTML\"]],\n  template: function TooltipContentComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\");\n      i0.ɵɵelement(1, \"span\", 0, 1);\n      i0.ɵɵelementStart(3, \"div\", 2);\n      i0.ɵɵtemplate(4, TooltipContentComponent_span_4_Template, 2, 4, \"span\", 3);\n      i0.ɵɵtemplate(5, TooltipContentComponent_span_5_Template, 1, 1, \"span\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassMapInterpolate1(\"tooltip-caret position-\", ctx.placement, \"\");\n      i0.ɵɵproperty(\"hidden\", !ctx.showCaret);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", !ctx.title);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.title);\n    }\n  },\n  directives: [i2.NgIf, i2.NgTemplateOutlet],\n  styles: [\".ngx-charts-tooltip-content{position:fixed;border-radius:3px;z-index:5000;display:block;font-weight:400;opacity:0;pointer-events:none!important}.ngx-charts-tooltip-content.type-popover{background:#fff;color:#060709;border:1px solid #72809b;box-shadow:0 1px 3px #0003,0 1px 1px #00000024,0 2px 1px -1px #0000001f;font-size:13px;padding:4px}.ngx-charts-tooltip-content.type-popover .tooltip-caret{position:absolute;z-index:5001;width:0;height:0}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-left{border-top:7px solid transparent;border-bottom:7px solid transparent;border-left:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-top{border-left:7px solid transparent;border-right:7px solid transparent;border-top:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-right{border-top:7px solid transparent;border-bottom:7px solid transparent;border-right:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-bottom{border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:7px solid #fff}.ngx-charts-tooltip-content.type-tooltip{color:#fff;background:rgba(0,0,0,.75);font-size:12px;padding:0 10px;text-align:center;pointer-events:auto}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-left{border-top:7px solid transparent;border-bottom:7px solid transparent;border-left:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-top{border-left:7px solid transparent;border-right:7px solid transparent;border-top:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-right{border-top:7px solid transparent;border-bottom:7px solid transparent;border-right:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-bottom{border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content .tooltip-label{display:block;line-height:1em;padding:8px 5px 5px;font-size:1em}.ngx-charts-tooltip-content .tooltip-val{display:block;font-size:1.3em;line-height:1em;padding:0 5px 8px}.ngx-charts-tooltip-content .tooltip-caret{position:absolute;z-index:5001;width:0;height:0}.ngx-charts-tooltip-content.position-right{transform:translate(10px)}.ngx-charts-tooltip-content.position-left{transform:translate(-10px)}.ngx-charts-tooltip-content.position-top{transform:translateY(-10px)}.ngx-charts-tooltip-content.position-bottom{transform:translateY(10px)}.ngx-charts-tooltip-content.animate{opacity:1;transition:opacity .3s,transform .3s;transform:translate(0);pointer-events:auto}.area-tooltip-container{padding:5px 0;pointer-events:none}.tooltip-item{text-align:left;line-height:1.2em;padding:5px 0}.tooltip-item .tooltip-item-color{display:inline-block;height:12px;width:12px;margin-right:5px;color:#5b646b;border-radius:3px}\\n\"],\n  encapsulation: 2\n});\n__decorate([throttleable(100)], TooltipContentComponent.prototype, \"onWindowResize\", null);\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TooltipContentComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-tooltip-content',\n      template: `\n    <div>\n      <span #caretElm [hidden]=\"!showCaret\" class=\"tooltip-caret position-{{ this.placement }}\"> </span>\n      <div class=\"tooltip-content\">\n        <span *ngIf=\"!title\">\n          <ng-template [ngTemplateOutlet]=\"template\" [ngTemplateOutletContext]=\"{ model: context }\"> </ng-template>\n        </span>\n        <span *ngIf=\"title\" [innerHTML]=\"title\"> </span>\n      </div>\n    </div>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".ngx-charts-tooltip-content{position:fixed;border-radius:3px;z-index:5000;display:block;font-weight:400;opacity:0;pointer-events:none!important}.ngx-charts-tooltip-content.type-popover{background:#fff;color:#060709;border:1px solid #72809b;box-shadow:0 1px 3px #0003,0 1px 1px #00000024,0 2px 1px -1px #0000001f;font-size:13px;padding:4px}.ngx-charts-tooltip-content.type-popover .tooltip-caret{position:absolute;z-index:5001;width:0;height:0}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-left{border-top:7px solid transparent;border-bottom:7px solid transparent;border-left:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-top{border-left:7px solid transparent;border-right:7px solid transparent;border-top:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-right{border-top:7px solid transparent;border-bottom:7px solid transparent;border-right:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-bottom{border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:7px solid #fff}.ngx-charts-tooltip-content.type-tooltip{color:#fff;background:rgba(0,0,0,.75);font-size:12px;padding:0 10px;text-align:center;pointer-events:auto}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-left{border-top:7px solid transparent;border-bottom:7px solid transparent;border-left:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-top{border-left:7px solid transparent;border-right:7px solid transparent;border-top:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-right{border-top:7px solid transparent;border-bottom:7px solid transparent;border-right:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-bottom{border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content .tooltip-label{display:block;line-height:1em;padding:8px 5px 5px;font-size:1em}.ngx-charts-tooltip-content .tooltip-val{display:block;font-size:1.3em;line-height:1em;padding:0 5px 8px}.ngx-charts-tooltip-content .tooltip-caret{position:absolute;z-index:5001;width:0;height:0}.ngx-charts-tooltip-content.position-right{transform:translate(10px)}.ngx-charts-tooltip-content.position-left{transform:translate(-10px)}.ngx-charts-tooltip-content.position-top{transform:translateY(-10px)}.ngx-charts-tooltip-content.position-bottom{transform:translateY(10px)}.ngx-charts-tooltip-content.animate{opacity:1;transition:opacity .3s,transform .3s;transform:translate(0);pointer-events:auto}.area-tooltip-container{padding:5px 0;pointer-events:none}.tooltip-item{text-align:left;line-height:1.2em;padding:5px 0}.tooltip-item .tooltip-item-color{display:inline-block;height:12px;width:12px;margin-right:5px;color:#5b646b;border-radius:3px}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    host: [{\n      type: Input\n    }],\n    showCaret: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    placement: [{\n      type: Input\n    }],\n    alignment: [{\n      type: Input\n    }],\n    spacing: [{\n      type: Input\n    }],\n    cssClass: [{\n      type: Input\n    }],\n    title: [{\n      type: Input\n    }],\n    template: [{\n      type: Input\n    }],\n    context: [{\n      type: Input\n    }],\n    caretElm: [{\n      type: ViewChild,\n      args: ['caretElm']\n    }],\n    cssClasses: [{\n      type: HostBinding,\n      args: ['class']\n    }],\n    onWindowResize: [{\n      type: HostListener,\n      args: ['window:resize']\n    }]\n  });\n})();\nclass InjectionRegisteryService {\n  constructor(injectionService) {\n    this.injectionService = injectionService;\n    this.defaults = {};\n    this.components = new Map();\n  }\n  getByType(type = this.type) {\n    return this.components.get(type);\n  }\n  create(bindings) {\n    return this.createByType(this.type, bindings);\n  }\n  createByType(type, bindings) {\n    bindings = this.assignDefaults(bindings);\n    const component = this.injectComponent(type, bindings);\n    this.register(type, component);\n    return component;\n  }\n  destroy(instance) {\n    const compsByType = this.components.get(instance.componentType);\n    if (compsByType && compsByType.length) {\n      const idx = compsByType.indexOf(instance);\n      if (idx > -1) {\n        const component = compsByType[idx];\n        component.destroy();\n        compsByType.splice(idx, 1);\n      }\n    }\n  }\n  destroyAll() {\n    this.destroyByType(this.type);\n  }\n  destroyByType(type) {\n    const comps = this.components.get(type);\n    if (comps && comps.length) {\n      let i = comps.length - 1;\n      while (i >= 0) {\n        this.destroy(comps[i--]);\n      }\n    }\n  }\n  injectComponent(type, bindings) {\n    return this.injectionService.appendComponent(type, bindings);\n  }\n  assignDefaults(bindings) {\n    const inputs = {\n      ...this.defaults.inputs\n    };\n    const outputs = {\n      ...this.defaults.outputs\n    };\n    if (!bindings.inputs && !bindings.outputs) {\n      bindings = {\n        inputs: bindings\n      };\n    }\n    if (inputs) {\n      bindings.inputs = {\n        ...inputs,\n        ...bindings.inputs\n      };\n    }\n    if (outputs) {\n      bindings.outputs = {\n        ...outputs,\n        ...bindings.outputs\n      };\n    }\n    return bindings;\n  }\n  register(type, component) {\n    if (!this.components.has(type)) {\n      this.components.set(type, []);\n    }\n    const types = this.components.get(type);\n    types.push(component);\n  }\n}\nfunction isViewContainerRef(x) {\n  return x.element;\n}\n/**\n * Injection service is a helper to append components\n * dynamically to a known location in the DOM, most\n * noteably for dialogs/tooltips appending to body.\n *\n * @export\n */\nclass InjectionService {\n  constructor(applicationRef, componentFactoryResolver, injector) {\n    this.applicationRef = applicationRef;\n    this.componentFactoryResolver = componentFactoryResolver;\n    this.injector = injector;\n  }\n  /**\n   * Sets a default global root view container. This is useful for\n   * things like ngUpgrade that doesn't have a ApplicationRef root.\n   *\n   * @param container\n   */\n  static setGlobalRootViewContainer(container) {\n    InjectionService.globalRootViewContainer = container;\n  }\n  /**\n   * Gets the root view container to inject the component to.\n   *\n   * @memberOf InjectionService\n   */\n  getRootViewContainer() {\n    if (this._container) return this._container;\n    if (InjectionService.globalRootViewContainer) return InjectionService.globalRootViewContainer;\n    if (this.applicationRef.components.length) return this.applicationRef.components[0];\n    throw new Error('View Container not found! ngUpgrade needs to manually set this via setRootViewContainer or setGlobalRootViewContainer.');\n  }\n  /**\n   * Overrides the default root view container. This is useful for\n   * things like ngUpgrade that doesn't have a ApplicationRef root.\n   *\n   * @param container\n   *\n   * @memberOf InjectionService\n   */\n  setRootViewContainer(container) {\n    this._container = container;\n  }\n  /**\n   * Gets the html element for a component ref.\n   *\n   * @param componentRef\n   *\n   * @memberOf InjectionService\n   */\n  getComponentRootNode(component) {\n    if (isViewContainerRef(component)) {\n      return component.element.nativeElement;\n    }\n    if (component.hostView && component.hostView.rootNodes.length > 0) {\n      return component.hostView.rootNodes[0];\n    }\n    // the top most component root node has no `hostView`\n    return component.location.nativeElement;\n  }\n  /**\n   * Gets the root component container html element.\n   *\n   * @memberOf InjectionService\n   */\n  getRootViewContainerNode(component) {\n    return this.getComponentRootNode(component);\n  }\n  /**\n   * Projects the bindings onto the component\n   *\n   * @param component\n   * @param options\n   *\n   * @memberOf InjectionService\n   */\n  projectComponentBindings(component, bindings) {\n    if (bindings) {\n      if (bindings.inputs !== undefined) {\n        const bindingKeys = Object.getOwnPropertyNames(bindings.inputs);\n        for (const bindingName of bindingKeys) {\n          component.instance[bindingName] = bindings.inputs[bindingName];\n        }\n      }\n      if (bindings.outputs !== undefined) {\n        const eventKeys = Object.getOwnPropertyNames(bindings.outputs);\n        for (const eventName of eventKeys) {\n          component.instance[eventName] = bindings.outputs[eventName];\n        }\n      }\n    }\n    return component;\n  }\n  /**\n   * Appends a component to a adjacent location\n   *\n   * @param componentClass\n   * @param [options={}]\n   * @param [location]\n   *\n   * @memberOf InjectionService\n   */\n  appendComponent(componentClass, bindings = {}, location) {\n    if (!location) location = this.getRootViewContainer();\n    const appendLocation = this.getComponentRootNode(location);\n    const portalHost = new DomPortalOutlet(appendLocation, this.componentFactoryResolver, this.applicationRef, this.injector);\n    const portal = new ComponentPortal(componentClass);\n    const componentRef = portalHost.attach(portal);\n    this.projectComponentBindings(componentRef, bindings);\n    return componentRef;\n  }\n}\nInjectionService.globalRootViewContainer = null;\nInjectionService.ɵfac = function InjectionService_Factory(t) {\n  return new (t || InjectionService)(i0.ɵɵinject(i0.ApplicationRef), i0.ɵɵinject(i0.ComponentFactoryResolver), i0.ɵɵinject(i0.Injector));\n};\nInjectionService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: InjectionService,\n  factory: InjectionService.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InjectionService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i0.ApplicationRef\n    }, {\n      type: i0.ComponentFactoryResolver\n    }, {\n      type: i0.Injector\n    }];\n  }, null);\n})();\nclass TooltipService extends InjectionRegisteryService {\n  constructor(injectionService) {\n    super(injectionService);\n    this.type = TooltipContentComponent;\n  }\n}\nTooltipService.ɵfac = function TooltipService_Factory(t) {\n  return new (t || TooltipService)(i0.ɵɵinject(InjectionService));\n};\nTooltipService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: TooltipService,\n  factory: TooltipService.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TooltipService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: InjectionService\n    }];\n  }, null);\n})();\nvar LegendPosition;\n(function (LegendPosition) {\n  LegendPosition[\"Right\"] = \"right\";\n  LegendPosition[\"Below\"] = \"below\";\n})(LegendPosition || (LegendPosition = {}));\nvar LegendType;\n(function (LegendType) {\n  LegendType[\"ScaleLegend\"] = \"scaleLegend\";\n  LegendType[\"Legend\"] = \"legend\";\n})(LegendType || (LegendType = {}));\nvar ScaleType;\n(function (ScaleType) {\n  ScaleType[\"Time\"] = \"time\";\n  ScaleType[\"Linear\"] = \"linear\";\n  ScaleType[\"Ordinal\"] = \"ordinal\";\n  ScaleType[\"Quantile\"] = \"quantile\";\n})(ScaleType || (ScaleType = {}));\nclass ScaleLegendComponent {\n  constructor() {\n    this.horizontal = false;\n  }\n  ngOnChanges(changes) {\n    const gradientValues = this.gradientString(this.colors.range(), this.colors.domain());\n    const direction = this.horizontal ? 'right' : 'bottom';\n    this.gradient = `linear-gradient(to ${direction}, ${gradientValues})`;\n  }\n  /**\n   * Generates the string used in the gradient stylesheet properties\n   * @param colors array of colors\n   * @param splits array of splits on a scale of (0, 1)\n   */\n  gradientString(colors, splits) {\n    // add the 100%\n    splits.push(1);\n    const pairs = [];\n    colors.reverse().forEach((c, i) => {\n      pairs.push(`${c} ${Math.round(splits[i] * 100)}%`);\n    });\n    return pairs.join(', ');\n  }\n}\nScaleLegendComponent.ɵfac = function ScaleLegendComponent_Factory(t) {\n  return new (t || ScaleLegendComponent)();\n};\nScaleLegendComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ScaleLegendComponent,\n  selectors: [[\"ngx-charts-scale-legend\"]],\n  inputs: {\n    valueRange: \"valueRange\",\n    colors: \"colors\",\n    height: \"height\",\n    width: \"width\",\n    horizontal: \"horizontal\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 8,\n  vars: 10,\n  consts: [[1, \"scale-legend\"], [1, \"scale-legend-label\"], [1, \"scale-legend-wrap\"]],\n  template: function ScaleLegendComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"span\");\n      i0.ɵɵtext(3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"div\", 2);\n      i0.ɵɵelementStart(5, \"div\", 1);\n      i0.ɵɵelementStart(6, \"span\");\n      i0.ɵɵtext(7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"height\", ctx.horizontal ? undefined : ctx.height, \"px\")(\"width\", ctx.width, \"px\");\n      i0.ɵɵclassProp(\"horizontal-legend\", ctx.horizontal);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.valueRange[1].toLocaleString());\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"background\", ctx.gradient);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.valueRange[0].toLocaleString());\n    }\n  },\n  styles: [\".chart-legend{display:inline-block;padding:0;width:auto!important}.chart-legend .scale-legend{text-align:center;display:flex;flex-direction:column}.chart-legend .scale-legend-wrap{display:inline-block;flex:1;width:30px;border-radius:5px;margin:0 auto}.chart-legend .scale-legend-label{font-size:12px}.chart-legend .horizontal-legend.scale-legend{flex-direction:row}.chart-legend .horizontal-legend .scale-legend-wrap{width:auto;height:30px;margin:0 16px}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ScaleLegendComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-scale-legend',\n      template: `\n    <div\n      class=\"scale-legend\"\n      [class.horizontal-legend]=\"horizontal\"\n      [style.height.px]=\"horizontal ? undefined : height\"\n      [style.width.px]=\"width\"\n    >\n      <div class=\"scale-legend-label\">\n        <span>{{ valueRange[1].toLocaleString() }}</span>\n      </div>\n      <div class=\"scale-legend-wrap\" [style.background]=\"gradient\"></div>\n      <div class=\"scale-legend-label\">\n        <span>{{ valueRange[0].toLocaleString() }}</span>\n      </div>\n    </div>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".chart-legend{display:inline-block;padding:0;width:auto!important}.chart-legend .scale-legend{text-align:center;display:flex;flex-direction:column}.chart-legend .scale-legend-wrap{display:inline-block;flex:1;width:30px;border-radius:5px;margin:0 auto}.chart-legend .scale-legend-label{font-size:12px}.chart-legend .horizontal-legend.scale-legend{flex-direction:row}.chart-legend .horizontal-legend .scale-legend-wrap{width:auto;height:30px;margin:0 16px}\\n\"]\n    }]\n  }], null, {\n    valueRange: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    horizontal: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * Formats a label given a date, number or string.\n *\n * @export\n */\nfunction formatLabel(label) {\n  if (label instanceof Date) {\n    label = label.toLocaleDateString();\n  } else {\n    label = label.toLocaleString();\n  }\n  return label;\n}\n/**\n * Escapes a label.\n *\n * @export\n */\nfunction escapeLabel(label) {\n  return label.toLocaleString().replace(/[&'`\"<>]/g, match => {\n    return {\n      '&': '&amp;',\n      // tslint:disable-next-line: quotemark\n      \"'\": '&#x27;',\n      '`': '&#x60;',\n      '\"': '&quot;',\n      '<': '&lt;',\n      '>': '&gt;'\n    }[match];\n  });\n}\nclass LegendEntryComponent {\n  constructor() {\n    this.isActive = false;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.toggle = new EventEmitter();\n  }\n  get trimmedLabel() {\n    return this.formattedLabel || '(empty)';\n  }\n  onMouseEnter() {\n    this.activate.emit({\n      name: this.label\n    });\n  }\n  onMouseLeave() {\n    this.deactivate.emit({\n      name: this.label\n    });\n  }\n}\nLegendEntryComponent.ɵfac = function LegendEntryComponent_Factory(t) {\n  return new (t || LegendEntryComponent)();\n};\nLegendEntryComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: LegendEntryComponent,\n  selectors: [[\"ngx-charts-legend-entry\"]],\n  hostBindings: function LegendEntryComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mouseenter\", function LegendEntryComponent_mouseenter_HostBindingHandler() {\n        return ctx.onMouseEnter();\n      })(\"mouseleave\", function LegendEntryComponent_mouseleave_HostBindingHandler() {\n        return ctx.onMouseLeave();\n      });\n    }\n  },\n  inputs: {\n    color: \"color\",\n    label: \"label\",\n    formattedLabel: \"formattedLabel\",\n    isActive: \"isActive\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\",\n    toggle: \"toggle\"\n  },\n  decls: 4,\n  vars: 6,\n  consts: [[\"tabindex\", \"-1\", 3, \"title\", \"click\"], [1, \"legend-label-color\", 3, \"click\"], [1, \"legend-label-text\"]],\n  template: function LegendEntryComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"span\", 0);\n      i0.ɵɵlistener(\"click\", function LegendEntryComponent_Template_span_click_0_listener() {\n        return ctx.select.emit(ctx.formattedLabel);\n      });\n      i0.ɵɵelementStart(1, \"span\", 1);\n      i0.ɵɵlistener(\"click\", function LegendEntryComponent_Template_span_click_1_listener() {\n        return ctx.toggle.emit(ctx.formattedLabel);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"span\", 2);\n      i0.ɵɵtext(3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"active\", ctx.isActive);\n      i0.ɵɵproperty(\"title\", ctx.formattedLabel);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"background-color\", ctx.color);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.trimmedLabel, \" \");\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LegendEntryComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-legend-entry',\n      template: `\n    <span [title]=\"formattedLabel\" tabindex=\"-1\" [class.active]=\"isActive\" (click)=\"select.emit(formattedLabel)\">\n      <span class=\"legend-label-color\" [style.background-color]=\"color\" (click)=\"toggle.emit(formattedLabel)\"> </span>\n      <span class=\"legend-label-text\">\n        {{ trimmedLabel }}\n      </span>\n    </span>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    color: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    formattedLabel: [{\n      type: Input\n    }],\n    isActive: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    toggle: [{\n      type: Output\n    }],\n    onMouseEnter: [{\n      type: HostListener,\n      args: ['mouseenter']\n    }],\n    onMouseLeave: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  });\n})();\nclass LegendComponent {\n  constructor(cd) {\n    this.cd = cd;\n    this.horizontal = false;\n    this.labelClick = new EventEmitter();\n    this.labelActivate = new EventEmitter();\n    this.labelDeactivate = new EventEmitter();\n    this.legendEntries = [];\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    this.cd.markForCheck();\n    this.legendEntries = this.getLegendEntries();\n  }\n  getLegendEntries() {\n    const items = [];\n    for (const label of this.data) {\n      const formattedLabel = formatLabel(label);\n      const idx = items.findIndex(i => {\n        return i.label === formattedLabel;\n      });\n      if (idx === -1) {\n        items.push({\n          label,\n          formattedLabel,\n          color: this.colors.getColor(label)\n        });\n      }\n    }\n    return items;\n  }\n  isActive(entry) {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.label === d.name;\n    });\n    return item !== undefined;\n  }\n  activate(item) {\n    this.labelActivate.emit(item);\n  }\n  deactivate(item) {\n    this.labelDeactivate.emit(item);\n  }\n  trackBy(index, item) {\n    return item.label;\n  }\n}\nLegendComponent.ɵfac = function LegendComponent_Factory(t) {\n  return new (t || LegendComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\nLegendComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: LegendComponent,\n  selectors: [[\"ngx-charts-legend\"]],\n  inputs: {\n    data: \"data\",\n    title: \"title\",\n    colors: \"colors\",\n    height: \"height\",\n    width: \"width\",\n    activeEntries: \"activeEntries\",\n    horizontal: \"horizontal\"\n  },\n  outputs: {\n    labelClick: \"labelClick\",\n    labelActivate: \"labelActivate\",\n    labelDeactivate: \"labelDeactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 5,\n  vars: 9,\n  consts: [[\"class\", \"legend-title\", 4, \"ngIf\"], [1, \"legend-wrap\"], [1, \"legend-labels\"], [\"class\", \"legend-label\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [1, \"legend-title\"], [1, \"legend-title-text\"], [1, \"legend-label\"], [3, \"label\", \"formattedLabel\", \"color\", \"isActive\", \"select\", \"activate\", \"deactivate\"]],\n  template: function LegendComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\");\n      i0.ɵɵtemplate(1, LegendComponent_header_1_Template, 3, 1, \"header\", 0);\n      i0.ɵɵelementStart(2, \"div\", 1);\n      i0.ɵɵelementStart(3, \"ul\", 2);\n      i0.ɵɵtemplate(4, LegendComponent_li_4_Template, 2, 4, \"li\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"width\", ctx.width, \"px\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (ctx.title == null ? null : ctx.title.length) > 0);\n      i0.ɵɵadvance(2);\n      i0.ɵɵstyleProp(\"max-height\", ctx.height - 45, \"px\");\n      i0.ɵɵclassProp(\"horizontal-legend\", ctx.horizontal);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.legendEntries)(\"ngForTrackBy\", ctx.trackBy);\n    }\n  },\n  directives: [i2.NgIf, i2.NgForOf, LegendEntryComponent],\n  styles: [\".chart-legend{display:inline-block;padding:0;width:auto!important}.chart-legend .legend-title{white-space:nowrap;overflow:hidden;margin-left:10px;margin-bottom:5px;font-size:14px;font-weight:700}.chart-legend ul,.chart-legend li{padding:0;margin:0;list-style:none}.chart-legend .horizontal-legend li{display:inline-block}.chart-legend .legend-wrap{width:calc(100% - 10px)}.chart-legend .legend-labels{line-height:85%;list-style:none;text-align:left;float:left;width:100%;border-radius:3px;overflow-y:auto;overflow-x:hidden;white-space:nowrap;background:rgba(0,0,0,.05)}.chart-legend .legend-label{cursor:pointer;font-size:90%;margin:8px;color:#afb7c8}.chart-legend .legend-label:hover{color:#000;transition:.2s}.chart-legend .legend-label .active .legend-label-text{color:#000}.chart-legend .legend-label-color{display:inline-block;height:15px;width:15px;margin-right:5px;color:#5b646b;border-radius:3px}.chart-legend .legend-label-text{display:inline-block;vertical-align:top;line-height:15px;font-size:12px;width:calc(100% - 20px);text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.chart-legend .legend-title-text{vertical-align:bottom;display:inline-block;line-height:16px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LegendComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-legend',\n      template: `\n    <div [style.width.px]=\"width\">\n      <header class=\"legend-title\" *ngIf=\"title?.length > 0\">\n        <span class=\"legend-title-text\">{{ title }}</span>\n      </header>\n      <div class=\"legend-wrap\">\n        <ul class=\"legend-labels\" [class.horizontal-legend]=\"horizontal\" [style.max-height.px]=\"height - 45\">\n          <li *ngFor=\"let entry of legendEntries; trackBy: trackBy\" class=\"legend-label\">\n            <ngx-charts-legend-entry\n              [label]=\"entry.label\"\n              [formattedLabel]=\"entry.formattedLabel\"\n              [color]=\"entry.color\"\n              [isActive]=\"isActive(entry)\"\n              (select)=\"labelClick.emit($event)\"\n              (activate)=\"activate($event)\"\n              (deactivate)=\"deactivate($event)\"\n            >\n            </ngx-charts-legend-entry>\n          </li>\n        </ul>\n      </div>\n    </div>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".chart-legend{display:inline-block;padding:0;width:auto!important}.chart-legend .legend-title{white-space:nowrap;overflow:hidden;margin-left:10px;margin-bottom:5px;font-size:14px;font-weight:700}.chart-legend ul,.chart-legend li{padding:0;margin:0;list-style:none}.chart-legend .horizontal-legend li{display:inline-block}.chart-legend .legend-wrap{width:calc(100% - 10px)}.chart-legend .legend-labels{line-height:85%;list-style:none;text-align:left;float:left;width:100%;border-radius:3px;overflow-y:auto;overflow-x:hidden;white-space:nowrap;background:rgba(0,0,0,.05)}.chart-legend .legend-label{cursor:pointer;font-size:90%;margin:8px;color:#afb7c8}.chart-legend .legend-label:hover{color:#000;transition:.2s}.chart-legend .legend-label .active .legend-label-text{color:#000}.chart-legend .legend-label-color{display:inline-block;height:15px;width:15px;margin-right:5px;color:#5b646b;border-radius:3px}.chart-legend .legend-label-text{display:inline-block;vertical-align:top;line-height:15px;font-size:12px;width:calc(100% - 20px);text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.chart-legend .legend-title-text{vertical-align:bottom;display:inline-block;line-height:16px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    data: [{\n      type: Input\n    }],\n    title: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    horizontal: [{\n      type: Input\n    }],\n    labelClick: [{\n      type: Output\n    }],\n    labelActivate: [{\n      type: Output\n    }],\n    labelDeactivate: [{\n      type: Output\n    }]\n  });\n})();\nclass ChartComponent {\n  constructor() {\n    this.showLegend = false;\n    this.animations = true;\n    this.legendLabelClick = new EventEmitter();\n    this.legendLabelActivate = new EventEmitter();\n    this.legendLabelDeactivate = new EventEmitter();\n    this.LegendPosition = LegendPosition;\n    this.LegendType = LegendType;\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    let legendColumns = 0;\n    if (this.showLegend) {\n      this.legendType = this.getLegendType();\n      if (!this.legendOptions || this.legendOptions.position === LegendPosition.Right) {\n        if (this.legendType === LegendType.ScaleLegend) {\n          legendColumns = 1;\n        } else {\n          legendColumns = 2;\n        }\n      }\n    }\n    const chartColumns = 12 - legendColumns;\n    this.chartWidth = Math.floor(this.view[0] * chartColumns / 12.0);\n    this.legendWidth = !this.legendOptions || this.legendOptions.position === LegendPosition.Right ? Math.floor(this.view[0] * legendColumns / 12.0) : this.chartWidth;\n  }\n  getLegendType() {\n    return this.legendOptions.scaleType === ScaleType.Linear ? LegendType.ScaleLegend : LegendType.Legend;\n  }\n}\nChartComponent.ɵfac = function ChartComponent_Factory(t) {\n  return new (t || ChartComponent)();\n};\nChartComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ChartComponent,\n  selectors: [[\"ngx-charts-chart\"]],\n  inputs: {\n    view: \"view\",\n    showLegend: \"showLegend\",\n    legendOptions: \"legendOptions\",\n    legendType: \"legendType\",\n    activeEntries: \"activeEntries\",\n    animations: \"animations\"\n  },\n  outputs: {\n    legendLabelClick: \"legendLabelClick\",\n    legendLabelActivate: \"legendLabelActivate\",\n    legendLabelDeactivate: \"legendLabelDeactivate\"\n  },\n  features: [i0.ɵɵProvidersFeature([TooltipService]), i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c2,\n  decls: 5,\n  vars: 8,\n  consts: [[1, \"ngx-charts-outer\"], [1, \"ngx-charts\"], [\"class\", \"chart-legend\", 3, \"horizontal\", \"valueRange\", \"colors\", \"height\", \"width\", 4, \"ngIf\"], [\"class\", \"chart-legend\", 3, \"horizontal\", \"data\", \"title\", \"colors\", \"height\", \"width\", \"activeEntries\", \"labelClick\", \"labelActivate\", \"labelDeactivate\", 4, \"ngIf\"], [1, \"chart-legend\", 3, \"horizontal\", \"valueRange\", \"colors\", \"height\", \"width\"], [1, \"chart-legend\", 3, \"horizontal\", \"data\", \"title\", \"colors\", \"height\", \"width\", \"activeEntries\", \"labelClick\", \"labelActivate\", \"labelDeactivate\"]],\n  template: function ChartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"svg\", 1);\n      i0.ɵɵprojection(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, ChartComponent_ngx_charts_scale_legend_3_Template, 1, 5, \"ngx-charts-scale-legend\", 2);\n      i0.ɵɵtemplate(4, ChartComponent_ngx_charts_legend_4_Template, 1, 7, \"ngx-charts-legend\", 3);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"width\", ctx.view[0], \"px\")(\"height\", ctx.view[1], \"px\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"width\", ctx.chartWidth)(\"height\", ctx.view[1]);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.showLegend && ctx.legendType === ctx.LegendType.ScaleLegend);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showLegend && ctx.legendType === ctx.LegendType.Legend);\n    }\n  },\n  directives: [i2.NgIf, ScaleLegendComponent, LegendComponent],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ChartComponent, [{\n    type: Component,\n    args: [{\n      providers: [TooltipService],\n      selector: 'ngx-charts-chart',\n      template: `\n    <div class=\"ngx-charts-outer\" [style.width.px]=\"view[0]\" [style.height.px]=\"view[1]\">\n      <svg class=\"ngx-charts\" [attr.width]=\"chartWidth\" [attr.height]=\"view[1]\">\n        <ng-content></ng-content>\n      </svg>\n      <ngx-charts-scale-legend\n        *ngIf=\"showLegend && legendType === LegendType.ScaleLegend\"\n        class=\"chart-legend\"\n        [horizontal]=\"legendOptions && legendOptions.position === LegendPosition.Below\"\n        [valueRange]=\"legendOptions.domain\"\n        [colors]=\"legendOptions.colors\"\n        [height]=\"view[1]\"\n        [width]=\"legendWidth\"\n      >\n      </ngx-charts-scale-legend>\n      <ngx-charts-legend\n        *ngIf=\"showLegend && legendType === LegendType.Legend\"\n        class=\"chart-legend\"\n        [horizontal]=\"legendOptions && legendOptions.position === LegendPosition.Below\"\n        [data]=\"legendOptions.domain\"\n        [title]=\"legendOptions.title\"\n        [colors]=\"legendOptions.colors\"\n        [height]=\"view[1]\"\n        [width]=\"legendWidth\"\n        [activeEntries]=\"activeEntries\"\n        (labelClick)=\"legendLabelClick.emit($event)\"\n        (labelActivate)=\"legendLabelActivate.emit($event)\"\n        (labelDeactivate)=\"legendLabelDeactivate.emit($event)\"\n      >\n      </ngx-charts-legend>\n    </div>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    view: [{\n      type: Input\n    }],\n    showLegend: [{\n      type: Input\n    }],\n    legendOptions: [{\n      type: Input\n    }],\n    legendType: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    legendLabelClick: [{\n      type: Output\n    }],\n    legendLabelActivate: [{\n      type: Output\n    }],\n    legendLabelDeactivate: [{\n      type: Output\n    }]\n  });\n})();\n\n/**\n * Visibility Observer\n */\nclass VisibilityObserver {\n  constructor(element, zone) {\n    this.element = element;\n    this.zone = zone;\n    this.visible = new EventEmitter();\n    this.isVisible = false;\n    this.runCheck();\n  }\n  destroy() {\n    clearTimeout(this.timeout);\n  }\n  onVisibilityChange() {\n    // trigger zone recalc for columns\n    this.zone.run(() => {\n      this.isVisible = true;\n      this.visible.emit(true);\n    });\n  }\n  runCheck() {\n    const check = () => {\n      if (!this.element) {\n        return;\n      }\n      // https://davidwalsh.name/offsetheight-visibility\n      const {\n        offsetHeight,\n        offsetWidth\n      } = this.element.nativeElement;\n      if (offsetHeight && offsetWidth) {\n        clearTimeout(this.timeout);\n        this.onVisibilityChange();\n      } else {\n        clearTimeout(this.timeout);\n        this.zone.runOutsideAngular(() => {\n          this.timeout = setTimeout(() => check(), 100);\n        });\n      }\n    };\n    this.zone.runOutsideAngular(() => {\n      this.timeout = setTimeout(() => check());\n    });\n  }\n}\nVisibilityObserver.ɵfac = function VisibilityObserver_Factory(t) {\n  return new (t || VisibilityObserver)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n};\nVisibilityObserver.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: VisibilityObserver,\n  selectors: [[\"visibility-observer\"]],\n  outputs: {\n    visible: \"visible\"\n  }\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VisibilityObserver, [{\n    type: Directive,\n    args: [{\n      selector: 'visibility-observer'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    visible: [{\n      type: Output\n    }]\n  });\n})();\nfunction isDate(value) {\n  return toString.call(value) === '[object Date]';\n}\nfunction isNumber(value) {\n  return typeof value === 'number';\n}\nclass BaseChartComponent {\n  constructor(chartElement, zone, cd, platformId) {\n    this.chartElement = chartElement;\n    this.zone = zone;\n    this.cd = cd;\n    this.platformId = platformId;\n    this.scheme = 'cool';\n    this.schemeType = ScaleType.Ordinal;\n    this.animations = true;\n    this.select = new EventEmitter();\n  }\n  ngOnInit() {\n    if (isPlatformServer(this.platformId)) {\n      this.animations = false;\n    }\n  }\n  ngAfterViewInit() {\n    this.bindWindowResizeEvent();\n    // listen for visibility of the element for hidden by default scenario\n    this.visibilityObserver = new VisibilityObserver(this.chartElement, this.zone);\n    this.visibilityObserver.visible.subscribe(this.update.bind(this));\n  }\n  ngOnDestroy() {\n    this.unbindEvents();\n    if (this.visibilityObserver) {\n      this.visibilityObserver.visible.unsubscribe();\n      this.visibilityObserver.destroy();\n    }\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    if (this.results) {\n      this.results = this.cloneData(this.results);\n    } else {\n      this.results = [];\n    }\n    if (this.view) {\n      this.width = this.view[0];\n      this.height = this.view[1];\n    } else {\n      const dims = this.getContainerDims();\n      if (dims) {\n        this.width = dims.width;\n        this.height = dims.height;\n      }\n    }\n    // default values if width or height are 0 or undefined\n    if (!this.width) {\n      this.width = 600;\n    }\n    if (!this.height) {\n      this.height = 400;\n    }\n    this.width = Math.floor(this.width);\n    this.height = Math.floor(this.height);\n    if (this.cd) {\n      this.cd.markForCheck();\n    }\n  }\n  getContainerDims() {\n    let width;\n    let height;\n    const hostElem = this.chartElement.nativeElement;\n    if (isPlatformBrowser(this.platformId) && hostElem.parentNode !== null) {\n      // Get the container dimensions\n      const dims = hostElem.parentNode.getBoundingClientRect();\n      width = dims.width;\n      height = dims.height;\n    }\n    if (width && height) {\n      return {\n        width,\n        height\n      };\n    }\n    return null;\n  }\n  /**\n   * Converts all date objects that appear as name\n   * into formatted date strings\n   */\n  formatDates() {\n    for (let i = 0; i < this.results.length; i++) {\n      const g = this.results[i];\n      g.label = g.name;\n      if (isDate(g.label)) {\n        g.label = g.label.toLocaleDateString();\n      }\n      if (g.series) {\n        for (let j = 0; j < g.series.length; j++) {\n          const d = g.series[j];\n          d.label = d.name;\n          if (isDate(d.label)) {\n            d.label = d.label.toLocaleDateString();\n          }\n        }\n      }\n    }\n  }\n  unbindEvents() {\n    if (this.resizeSubscription) {\n      this.resizeSubscription.unsubscribe();\n    }\n  }\n  bindWindowResizeEvent() {\n    if (!isPlatformBrowser(this.platformId)) {\n      return;\n    }\n    const source = fromEvent(window, 'resize');\n    const subscription = source.pipe(debounceTime(200)).subscribe(e => {\n      this.update();\n      if (this.cd) {\n        this.cd.markForCheck();\n      }\n    });\n    this.resizeSubscription = subscription;\n  }\n  /**\n   * Clones the data into a new object\n   *\n   * @memberOf BaseChart\n   */\n  cloneData(data) {\n    const results = [];\n    for (const item of data) {\n      const copy = {\n        name: item['name']\n      };\n      if (item['value'] !== undefined) {\n        copy['value'] = item['value'];\n      }\n      if (item['series'] !== undefined) {\n        copy['series'] = [];\n        for (const seriesItem of item['series']) {\n          const seriesItemCopy = Object.assign({}, seriesItem);\n          copy['series'].push(seriesItemCopy);\n        }\n      }\n      if (item['extra'] !== undefined) {\n        copy['extra'] = JSON.parse(JSON.stringify(item['extra']));\n      }\n      results.push(copy);\n    }\n    return results;\n  }\n}\nBaseChartComponent.ɵfac = function BaseChartComponent_Factory(t) {\n  return new (t || BaseChartComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\nBaseChartComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BaseChartComponent,\n  selectors: [[\"base-chart\"]],\n  inputs: {\n    results: \"results\",\n    view: \"view\",\n    scheme: \"scheme\",\n    schemeType: \"schemeType\",\n    customColors: \"customColors\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 1,\n  vars: 0,\n  template: function BaseChartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\");\n    }\n  },\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BaseChartComponent, [{\n    type: Component,\n    args: [{\n      selector: 'base-chart',\n      template: ` <div></div> `\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    results: [{\n      type: Input\n    }],\n    view: [{\n      type: Input\n    }],\n    scheme: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    customColors: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }]\n  });\n})();\nvar Orientation;\n(function (Orientation) {\n  Orientation[\"Top\"] = \"top\";\n  Orientation[\"Bottom\"] = \"bottom\";\n  Orientation[\"Left\"] = \"left\";\n  Orientation[\"Right\"] = \"right\";\n})(Orientation || (Orientation = {}));\nclass AxisLabelComponent {\n  constructor(element) {\n    this.textHeight = 25;\n    this.margin = 5;\n    this.element = element.nativeElement;\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    this.strokeWidth = '0.01';\n    this.textAnchor = 'middle';\n    this.transform = '';\n    switch (this.orient) {\n      case Orientation.Top:\n        this.y = this.offset;\n        this.x = this.width / 2;\n        break;\n      case Orientation.Bottom:\n        this.y = this.offset;\n        this.x = this.width / 2;\n        break;\n      case Orientation.Left:\n        this.y = -(this.offset + this.textHeight + this.margin);\n        this.x = -this.height / 2;\n        this.transform = 'rotate(270)';\n        break;\n      case Orientation.Right:\n        this.y = this.offset + this.margin;\n        this.x = -this.height / 2;\n        this.transform = 'rotate(270)';\n        break;\n      default:\n    }\n  }\n}\nAxisLabelComponent.ɵfac = function AxisLabelComponent_Factory(t) {\n  return new (t || AxisLabelComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\nAxisLabelComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: AxisLabelComponent,\n  selectors: [[\"g\", \"ngx-charts-axis-label\", \"\"]],\n  inputs: {\n    orient: \"orient\",\n    label: \"label\",\n    offset: \"offset\",\n    width: \"width\",\n    height: \"height\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c3,\n  decls: 2,\n  vars: 6,\n  template: function AxisLabelComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"text\");\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵattribute(\"stroke-width\", ctx.strokeWidth)(\"x\", ctx.x)(\"y\", ctx.y)(\"text-anchor\", ctx.textAnchor)(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\" \", ctx.label, \" \");\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AxisLabelComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-axis-label]',\n      template: `\n    <svg:text\n      [attr.stroke-width]=\"strokeWidth\"\n      [attr.x]=\"x\"\n      [attr.y]=\"y\"\n      [attr.text-anchor]=\"textAnchor\"\n      [attr.transform]=\"transform\"\n    >\n      {{ label }}\n    </svg:text>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    orient: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    offset: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }]\n  });\n})();\nfunction trimLabel(s, max = 16) {\n  if (typeof s !== 'string') {\n    if (typeof s === 'number') {\n      return s + '';\n    } else {\n      return '';\n    }\n  }\n  s = s.trim();\n  if (s.length <= max) {\n    return s;\n  } else {\n    return `${s.slice(0, max)}...`;\n  }\n}\nfunction reduceTicks(ticks, maxTicks) {\n  if (ticks.length > maxTicks) {\n    const reduced = [];\n    const modulus = Math.floor(ticks.length / maxTicks);\n    for (let i = 0; i < ticks.length; i++) {\n      if (i % modulus === 0) {\n        reduced.push(ticks[i]);\n      }\n    }\n    ticks = reduced;\n  }\n  return ticks;\n}\nvar TextAnchor;\n(function (TextAnchor) {\n  TextAnchor[\"Start\"] = \"start\";\n  TextAnchor[\"Middle\"] = \"middle\";\n  TextAnchor[\"End\"] = \"end\";\n})(TextAnchor || (TextAnchor = {}));\nclass XAxisTicksComponent {\n  constructor(platformId) {\n    this.platformId = platformId;\n    this.tickArguments = [5];\n    this.tickStroke = '#ccc';\n    this.trimTicks = true;\n    this.maxTickLength = 16;\n    this.showGridLines = false;\n    this.rotateTicks = true;\n    this.dimensionsChanged = new EventEmitter();\n    this.verticalSpacing = 20;\n    this.rotateLabels = false;\n    this.innerTickSize = 6;\n    this.outerTickSize = 6;\n    this.tickPadding = 3;\n    this.textAnchor = TextAnchor.Middle;\n    this.maxTicksLength = 0;\n    this.maxAllowedLength = 16;\n    this.height = 0;\n    this.approxHeight = 10;\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  ngAfterViewInit() {\n    setTimeout(() => this.updateDims());\n  }\n  updateDims() {\n    if (!isPlatformBrowser(this.platformId)) {\n      // for SSR, use approximate value instead of measured\n      this.dimensionsChanged.emit({\n        height: this.approxHeight\n      });\n      return;\n    }\n    const height = parseInt(this.ticksElement.nativeElement.getBoundingClientRect().height, 10);\n    if (height !== this.height) {\n      this.height = height;\n      this.dimensionsChanged.emit({\n        height: this.height\n      });\n      setTimeout(() => this.updateDims());\n    }\n  }\n  update() {\n    const scale = this.scale;\n    this.ticks = this.getTicks();\n    if (this.tickFormatting) {\n      this.tickFormat = this.tickFormatting;\n    } else if (scale.tickFormat) {\n      // eslint-disable-next-line prefer-spread\n      this.tickFormat = scale.tickFormat.apply(scale, this.tickArguments);\n    } else {\n      this.tickFormat = function (d) {\n        if (d.constructor.name === 'Date') {\n          return d.toLocaleDateString();\n        }\n        return d.toLocaleString();\n      };\n    }\n    const angle = this.rotateTicks ? this.getRotationAngle(this.ticks) : null;\n    this.adjustedScale = this.scale.bandwidth ? function (d) {\n      return this.scale(d) + this.scale.bandwidth() * 0.5;\n    } : this.scale;\n    this.textTransform = '';\n    if (angle && angle !== 0) {\n      this.textTransform = `rotate(${angle})`;\n      this.textAnchor = TextAnchor.End;\n      this.verticalSpacing = 10;\n    } else {\n      this.textAnchor = TextAnchor.Middle;\n    }\n    setTimeout(() => this.updateDims());\n  }\n  getRotationAngle(ticks) {\n    let angle = 0;\n    this.maxTicksLength = 0;\n    for (let i = 0; i < ticks.length; i++) {\n      const tick = this.tickFormat(ticks[i]).toString();\n      let tickLength = tick.length;\n      if (this.trimTicks) {\n        tickLength = this.tickTrim(tick).length;\n      }\n      if (tickLength > this.maxTicksLength) {\n        this.maxTicksLength = tickLength;\n      }\n    }\n    const len = Math.min(this.maxTicksLength, this.maxAllowedLength);\n    const charWidth = 7; // need to measure this\n    const wordWidth = len * charWidth;\n    let baseWidth = wordWidth;\n    const maxBaseWidth = Math.floor(this.width / ticks.length);\n    // calculate optimal angle\n    while (baseWidth > maxBaseWidth && angle > -90) {\n      angle -= 30;\n      baseWidth = Math.cos(angle * (Math.PI / 180)) * wordWidth;\n    }\n    this.approxHeight = Math.max(Math.abs(Math.sin(angle * (Math.PI / 180)) * wordWidth), 10);\n    return angle;\n  }\n  getTicks() {\n    let ticks;\n    const maxTicks = this.getMaxTicks(20);\n    const maxScaleTicks = this.getMaxTicks(100);\n    if (this.tickValues) {\n      ticks = this.tickValues;\n    } else if (this.scale.ticks) {\n      ticks = this.scale.ticks.apply(this.scale, [maxScaleTicks]);\n    } else {\n      ticks = this.scale.domain();\n      ticks = reduceTicks(ticks, maxTicks);\n    }\n    return ticks;\n  }\n  getMaxTicks(tickWidth) {\n    return Math.floor(this.width / tickWidth);\n  }\n  tickTransform(tick) {\n    return 'translate(' + this.adjustedScale(tick) + ',' + this.verticalSpacing + ')';\n  }\n  gridLineTransform() {\n    return `translate(0,${-this.verticalSpacing - 5})`;\n  }\n  tickTrim(label) {\n    return this.trimTicks ? trimLabel(label, this.maxTickLength) : label;\n  }\n}\nXAxisTicksComponent.ɵfac = function XAxisTicksComponent_Factory(t) {\n  return new (t || XAxisTicksComponent)(i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\nXAxisTicksComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: XAxisTicksComponent,\n  selectors: [[\"g\", \"ngx-charts-x-axis-ticks\", \"\"]],\n  viewQuery: function XAxisTicksComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c4, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ticksElement = _t.first);\n    }\n  },\n  inputs: {\n    scale: \"scale\",\n    orient: \"orient\",\n    tickArguments: \"tickArguments\",\n    tickValues: \"tickValues\",\n    tickStroke: \"tickStroke\",\n    trimTicks: \"trimTicks\",\n    maxTickLength: \"maxTickLength\",\n    tickFormatting: \"tickFormatting\",\n    showGridLines: \"showGridLines\",\n    gridLineHeight: \"gridLineHeight\",\n    width: \"width\",\n    rotateTicks: \"rotateTicks\"\n  },\n  outputs: {\n    dimensionsChanged: \"dimensionsChanged\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c5,\n  decls: 4,\n  vars: 2,\n  consts: [[\"ticksel\", \"\"], [\"class\", \"tick\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"tick\"], [\"stroke-width\", \"0.01\"], [4, \"ngIf\"], [\"y2\", \"0\", 1, \"gridline-path\", \"gridline-path-vertical\"]],\n  template: function XAxisTicksComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\", null, 0);\n      i0.ɵɵtemplate(2, XAxisTicksComponent__svg_g_2_Template, 5, 7, \"g\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, XAxisTicksComponent__svg_g_3_Template, 2, 2, \"g\", 2);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.ticks);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.ticks);\n    }\n  },\n  directives: [i2.NgForOf, i2.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XAxisTicksComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-x-axis-ticks]',\n      template: `\n    <svg:g #ticksel>\n      <svg:g *ngFor=\"let tick of ticks\" class=\"tick\" [attr.transform]=\"tickTransform(tick)\">\n        <title>{{ tickFormat(tick) }}</title>\n        <svg:text\n          stroke-width=\"0.01\"\n          [attr.text-anchor]=\"textAnchor\"\n          [attr.transform]=\"textTransform\"\n          [style.font-size]=\"'12px'\"\n        >\n          {{ tickTrim(tickFormat(tick)) }}\n        </svg:text>\n      </svg:g>\n    </svg:g>\n\n    <svg:g *ngFor=\"let tick of ticks\" [attr.transform]=\"tickTransform(tick)\">\n      <svg:g *ngIf=\"showGridLines\" [attr.transform]=\"gridLineTransform()\">\n        <svg:line class=\"gridline-path gridline-path-vertical\" [attr.y1]=\"-gridLineHeight\" y2=\"0\" />\n      </svg:g>\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    scale: [{\n      type: Input\n    }],\n    orient: [{\n      type: Input\n    }],\n    tickArguments: [{\n      type: Input\n    }],\n    tickValues: [{\n      type: Input\n    }],\n    tickStroke: [{\n      type: Input\n    }],\n    trimTicks: [{\n      type: Input\n    }],\n    maxTickLength: [{\n      type: Input\n    }],\n    tickFormatting: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    gridLineHeight: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    rotateTicks: [{\n      type: Input\n    }],\n    dimensionsChanged: [{\n      type: Output\n    }],\n    ticksElement: [{\n      type: ViewChild,\n      args: ['ticksel']\n    }]\n  });\n})();\nclass XAxisComponent {\n  constructor() {\n    this.rotateTicks = true;\n    this.showGridLines = false;\n    this.xOrient = Orientation.Bottom;\n    this.xAxisOffset = 0;\n    this.dimensionsChanged = new EventEmitter();\n    this.xAxisClassName = 'x axis';\n    this.labelOffset = 0;\n    this.fill = 'none';\n    this.stroke = 'stroke';\n    this.tickStroke = '#ccc';\n    this.strokeWidth = 'none';\n    this.padding = 5;\n    this.orientation = Orientation;\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    this.transform = `translate(0,${this.xAxisOffset + this.padding + this.dims.height})`;\n    if (typeof this.xAxisTickCount !== 'undefined') {\n      this.tickArguments = [this.xAxisTickCount];\n    }\n  }\n  emitTicksHeight({\n    height\n  }) {\n    const newLabelOffset = height + 25 + 5;\n    if (newLabelOffset !== this.labelOffset) {\n      this.labelOffset = newLabelOffset;\n      setTimeout(() => {\n        this.dimensionsChanged.emit({\n          height\n        });\n      }, 0);\n    }\n  }\n}\nXAxisComponent.ɵfac = function XAxisComponent_Factory(t) {\n  return new (t || XAxisComponent)();\n};\nXAxisComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: XAxisComponent,\n  selectors: [[\"g\", \"ngx-charts-x-axis\", \"\"]],\n  viewQuery: function XAxisComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(XAxisTicksComponent, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ticksComponent = _t.first);\n    }\n  },\n  inputs: {\n    xScale: \"xScale\",\n    dims: \"dims\",\n    trimTicks: \"trimTicks\",\n    rotateTicks: \"rotateTicks\",\n    maxTickLength: \"maxTickLength\",\n    tickFormatting: \"tickFormatting\",\n    showGridLines: \"showGridLines\",\n    showLabel: \"showLabel\",\n    labelText: \"labelText\",\n    ticks: \"ticks\",\n    xAxisTickCount: \"xAxisTickCount\",\n    xOrient: \"xOrient\",\n    xAxisOffset: \"xAxisOffset\"\n  },\n  outputs: {\n    dimensionsChanged: \"dimensionsChanged\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c6,\n  decls: 3,\n  vars: 4,\n  consts: [[\"ngx-charts-x-axis-ticks\", \"\", 3, \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"tickArguments\", \"tickStroke\", \"scale\", \"orient\", \"showGridLines\", \"gridLineHeight\", \"width\", \"tickValues\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-axis-label\", \"\", 3, \"label\", \"offset\", \"orient\", \"height\", \"width\", 4, \"ngIf\"], [\"ngx-charts-x-axis-ticks\", \"\", 3, \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"tickArguments\", \"tickStroke\", \"scale\", \"orient\", \"showGridLines\", \"gridLineHeight\", \"width\", \"tickValues\", \"dimensionsChanged\"], [\"ngx-charts-axis-label\", \"\", 3, \"label\", \"offset\", \"orient\", \"height\", \"width\"]],\n  template: function XAxisComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\");\n      i0.ɵɵtemplate(1, XAxisComponent__svg_g_1_Template, 1, 12, \"g\", 0);\n      i0.ɵɵtemplate(2, XAxisComponent__svg_g_2_Template, 1, 5, \"g\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵattribute(\"class\", ctx.xAxisClassName)(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xScale);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showLabel);\n    }\n  },\n  directives: [i2.NgIf, XAxisTicksComponent, AxisLabelComponent],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XAxisComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-x-axis]',\n      template: `\n    <svg:g [attr.class]=\"xAxisClassName\" [attr.transform]=\"transform\">\n      <svg:g\n        ngx-charts-x-axis-ticks\n        *ngIf=\"xScale\"\n        [trimTicks]=\"trimTicks\"\n        [rotateTicks]=\"rotateTicks\"\n        [maxTickLength]=\"maxTickLength\"\n        [tickFormatting]=\"tickFormatting\"\n        [tickArguments]=\"tickArguments\"\n        [tickStroke]=\"tickStroke\"\n        [scale]=\"xScale\"\n        [orient]=\"xOrient\"\n        [showGridLines]=\"showGridLines\"\n        [gridLineHeight]=\"dims.height\"\n        [width]=\"dims.width\"\n        [tickValues]=\"ticks\"\n        (dimensionsChanged)=\"emitTicksHeight($event)\"\n      />\n      <svg:g\n        ngx-charts-axis-label\n        *ngIf=\"showLabel\"\n        [label]=\"labelText\"\n        [offset]=\"labelOffset\"\n        [orient]=\"orientation.Bottom\"\n        [height]=\"dims.height\"\n        [width]=\"dims.width\"\n      ></svg:g>\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    xScale: [{\n      type: Input\n    }],\n    dims: [{\n      type: Input\n    }],\n    trimTicks: [{\n      type: Input\n    }],\n    rotateTicks: [{\n      type: Input\n    }],\n    maxTickLength: [{\n      type: Input\n    }],\n    tickFormatting: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    showLabel: [{\n      type: Input\n    }],\n    labelText: [{\n      type: Input\n    }],\n    ticks: [{\n      type: Input\n    }],\n    xAxisTickCount: [{\n      type: Input\n    }],\n    xOrient: [{\n      type: Input\n    }],\n    xAxisOffset: [{\n      type: Input\n    }],\n    dimensionsChanged: [{\n      type: Output\n    }],\n    ticksComponent: [{\n      type: ViewChild,\n      args: [XAxisTicksComponent]\n    }]\n  });\n})();\n\n/**\n * Generates a rounded rectanglar path\n *\n * @export\n * @param x, y, w, h, r, tl, tr, bl, br\n */\nfunction roundedRect(x, y, w, h, r, [tl, tr, bl, br]) {\n  let retval = '';\n  w = Math.floor(w);\n  h = Math.floor(h);\n  w = w === 0 ? 1 : w;\n  h = h === 0 ? 1 : h;\n  retval = `M${[x + r, y]}`;\n  retval += `h${w - 2 * r}`;\n  if (tr) {\n    retval += `a${[r, r]} 0 0 1 ${[r, r]}`;\n  } else {\n    retval += `h${r}v${r}`;\n  }\n  retval += `v${h - 2 * r}`;\n  if (br) {\n    retval += `a${[r, r]} 0 0 1 ${[-r, r]}`;\n  } else {\n    retval += `v${r}h${-r}`;\n  }\n  retval += `h${2 * r - w}`;\n  if (bl) {\n    retval += `a${[r, r]} 0 0 1 ${[-r, -r]}`;\n  } else {\n    retval += `h${-r}v${-r}`;\n  }\n  retval += `v${2 * r - h}`;\n  if (tl) {\n    retval += `a${[r, r]} 0 0 1 ${[r, -r]}`;\n  } else {\n    retval += `v${-r}h${r}`;\n  }\n  retval += `z`;\n  return retval;\n}\nclass YAxisTicksComponent {\n  constructor(platformId) {\n    this.platformId = platformId;\n    this.tickArguments = [5];\n    this.tickStroke = '#ccc';\n    this.trimTicks = true;\n    this.maxTickLength = 16;\n    this.showGridLines = false;\n    this.showRefLabels = false;\n    this.showRefLines = false;\n    this.dimensionsChanged = new EventEmitter();\n    this.innerTickSize = 6;\n    this.tickPadding = 3;\n    this.verticalSpacing = 20;\n    this.textAnchor = TextAnchor.Middle;\n    this.width = 0;\n    this.outerTickSize = 6;\n    this.rotateLabels = false;\n    this.referenceLineLength = 0;\n    this.Orientation = Orientation;\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  ngAfterViewInit() {\n    setTimeout(() => this.updateDims());\n  }\n  updateDims() {\n    if (!isPlatformBrowser(this.platformId)) {\n      // for SSR, use approximate value instead of measured\n      this.width = this.getApproximateAxisWidth();\n      this.dimensionsChanged.emit({\n        width: this.width\n      });\n      return;\n    }\n    const width = parseInt(this.ticksElement.nativeElement.getBoundingClientRect().width, 10);\n    if (width !== this.width) {\n      this.width = width;\n      this.dimensionsChanged.emit({\n        width\n      });\n      setTimeout(() => this.updateDims());\n    }\n  }\n  update() {\n    const scale = this.scale;\n    const sign = this.orient === Orientation.Top || this.orient === Orientation.Right ? -1 : 1;\n    this.tickSpacing = Math.max(this.innerTickSize, 0) + this.tickPadding;\n    this.ticks = this.getTicks();\n    if (this.tickFormatting) {\n      this.tickFormat = this.tickFormatting;\n    } else if (scale.tickFormat) {\n      // eslint-disable-next-line prefer-spread\n      this.tickFormat = scale.tickFormat.apply(scale, this.tickArguments);\n    } else {\n      this.tickFormat = function (d) {\n        if (d.constructor.name === 'Date') {\n          return d.toLocaleDateString();\n        }\n        return d.toLocaleString();\n      };\n    }\n    this.adjustedScale = scale.bandwidth ? function (d) {\n      return scale(d) + scale.bandwidth() * 0.5;\n    } : scale;\n    if (this.showRefLines && this.referenceLines) {\n      this.setReferencelines();\n    }\n    switch (this.orient) {\n      case Orientation.Top:\n        this.transform = function (tick) {\n          return 'translate(' + this.adjustedScale(tick) + ',0)';\n        };\n        this.textAnchor = TextAnchor.Middle;\n        this.y2 = this.innerTickSize * sign;\n        this.y1 = this.tickSpacing * sign;\n        this.dy = sign < 0 ? '0em' : '.71em';\n        break;\n      case Orientation.Bottom:\n        this.transform = function (tick) {\n          return 'translate(' + this.adjustedScale(tick) + ',0)';\n        };\n        this.textAnchor = TextAnchor.Middle;\n        this.y2 = this.innerTickSize * sign;\n        this.y1 = this.tickSpacing * sign;\n        this.dy = sign < 0 ? '0em' : '.71em';\n        break;\n      case Orientation.Left:\n        this.transform = function (tick) {\n          return 'translate(0,' + this.adjustedScale(tick) + ')';\n        };\n        this.textAnchor = TextAnchor.End;\n        this.x2 = this.innerTickSize * -sign;\n        this.x1 = this.tickSpacing * -sign;\n        this.dy = '.32em';\n        break;\n      case Orientation.Right:\n        this.transform = function (tick) {\n          return 'translate(0,' + this.adjustedScale(tick) + ')';\n        };\n        this.textAnchor = TextAnchor.Start;\n        this.x2 = this.innerTickSize * -sign;\n        this.x1 = this.tickSpacing * -sign;\n        this.dy = '.32em';\n        break;\n      default:\n    }\n    setTimeout(() => this.updateDims());\n  }\n  setReferencelines() {\n    this.refMin = this.adjustedScale(Math.min.apply(null, this.referenceLines.map(item => item.value)));\n    this.refMax = this.adjustedScale(Math.max.apply(null, this.referenceLines.map(item => item.value)));\n    this.referenceLineLength = this.referenceLines.length;\n    this.referenceAreaPath = roundedRect(0, this.refMax, this.gridLineWidth, this.refMin - this.refMax, 0, [false, false, false, false]);\n  }\n  getTicks() {\n    let ticks;\n    const maxTicks = this.getMaxTicks(20);\n    const maxScaleTicks = this.getMaxTicks(50);\n    if (this.tickValues) {\n      ticks = this.tickValues;\n    } else if (this.scale.ticks) {\n      ticks = this.scale.ticks.apply(this.scale, [maxScaleTicks]);\n    } else {\n      ticks = this.scale.domain();\n      ticks = reduceTicks(ticks, maxTicks);\n    }\n    return ticks;\n  }\n  getMaxTicks(tickHeight) {\n    return Math.floor(this.height / tickHeight);\n  }\n  tickTransform(tick) {\n    return `translate(${this.adjustedScale(tick)},${this.verticalSpacing})`;\n  }\n  gridLineTransform() {\n    return `translate(5,0)`;\n  }\n  tickTrim(label) {\n    return this.trimTicks ? trimLabel(label, this.maxTickLength) : label;\n  }\n  getApproximateAxisWidth() {\n    const maxChars = Math.max(...this.ticks.map(t => this.tickTrim(this.tickFormat(t)).length));\n    const charWidth = 7;\n    return maxChars * charWidth;\n  }\n}\nYAxisTicksComponent.ɵfac = function YAxisTicksComponent_Factory(t) {\n  return new (t || YAxisTicksComponent)(i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\nYAxisTicksComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: YAxisTicksComponent,\n  selectors: [[\"g\", \"ngx-charts-y-axis-ticks\", \"\"]],\n  viewQuery: function YAxisTicksComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c4, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ticksElement = _t.first);\n    }\n  },\n  inputs: {\n    scale: \"scale\",\n    orient: \"orient\",\n    tickArguments: \"tickArguments\",\n    tickValues: \"tickValues\",\n    tickStroke: \"tickStroke\",\n    trimTicks: \"trimTicks\",\n    maxTickLength: \"maxTickLength\",\n    tickFormatting: \"tickFormatting\",\n    showGridLines: \"showGridLines\",\n    gridLineWidth: \"gridLineWidth\",\n    height: \"height\",\n    referenceLines: \"referenceLines\",\n    showRefLabels: \"showRefLabels\",\n    showRefLines: \"showRefLines\"\n  },\n  outputs: {\n    dimensionsChanged: \"dimensionsChanged\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c7,\n  decls: 6,\n  vars: 4,\n  consts: [[\"ticksel\", \"\"], [\"class\", \"tick\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"reference-area\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"tick\"], [\"stroke-width\", \"0.01\"], [1, \"reference-area\"], [4, \"ngIf\"], [\"class\", \"gridline-path gridline-path-horizontal\", \"x1\", \"0\", 4, \"ngIf\"], [\"x1\", \"0\", 1, \"gridline-path\", \"gridline-path-horizontal\"], [\"x1\", \"0\", 1, \"refline-path\", \"gridline-path-horizontal\"], [1, \"refline-label\"]],\n  template: function YAxisTicksComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\", null, 0);\n      i0.ɵɵtemplate(2, YAxisTicksComponent__svg_g_2_Template, 5, 9, \"g\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, YAxisTicksComponent__svg_path_3_Template, 1, 2, \"path\", 2);\n      i0.ɵɵtemplate(4, YAxisTicksComponent__svg_g_4_Template, 2, 2, \"g\", 3);\n      i0.ɵɵtemplate(5, YAxisTicksComponent__svg_g_5_Template, 2, 1, \"g\", 3);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.ticks);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.referenceLineLength > 1 && ctx.refMax && ctx.refMin && ctx.showRefLines);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.ticks);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.referenceLines);\n    }\n  },\n  directives: [i2.NgForOf, i2.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(YAxisTicksComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-y-axis-ticks]',\n      template: `\n    <svg:g #ticksel>\n      <svg:g *ngFor=\"let tick of ticks\" class=\"tick\" [attr.transform]=\"transform(tick)\">\n        <title>{{ tickFormat(tick) }}</title>\n        <svg:text\n          stroke-width=\"0.01\"\n          [attr.dy]=\"dy\"\n          [attr.x]=\"x1\"\n          [attr.y]=\"y1\"\n          [attr.text-anchor]=\"textAnchor\"\n          [style.font-size]=\"'12px'\"\n        >\n          {{ tickTrim(tickFormat(tick)) }}\n        </svg:text>\n      </svg:g>\n    </svg:g>\n\n    <svg:path\n      *ngIf=\"referenceLineLength > 1 && refMax && refMin && showRefLines\"\n      class=\"reference-area\"\n      [attr.d]=\"referenceAreaPath\"\n      [attr.transform]=\"gridLineTransform()\"\n    />\n    <svg:g *ngFor=\"let tick of ticks\" [attr.transform]=\"transform(tick)\">\n      <svg:g *ngIf=\"showGridLines\" [attr.transform]=\"gridLineTransform()\">\n        <svg:line\n          *ngIf=\"orient === Orientation.Left\"\n          class=\"gridline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"gridLineWidth\"\n        />\n        <svg:line\n          *ngIf=\"orient === Orientation.Right\"\n          class=\"gridline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"-gridLineWidth\"\n        />\n      </svg:g>\n    </svg:g>\n\n    <svg:g *ngFor=\"let refLine of referenceLines\">\n      <svg:g *ngIf=\"showRefLines\" [attr.transform]=\"transform(refLine.value)\">\n        <svg:line\n          class=\"refline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"gridLineWidth\"\n          [attr.transform]=\"gridLineTransform()\"\n        />\n        <svg:g *ngIf=\"showRefLabels\">\n          <title>{{ tickTrim(tickFormat(refLine.value)) }}</title>\n          <svg:text\n            class=\"refline-label\"\n            [attr.dy]=\"dy\"\n            [attr.y]=\"-6\"\n            [attr.x]=\"gridLineWidth\"\n            [attr.text-anchor]=\"textAnchor\"\n          >\n            {{ refLine.name }}\n          </svg:text>\n        </svg:g>\n      </svg:g>\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    scale: [{\n      type: Input\n    }],\n    orient: [{\n      type: Input\n    }],\n    tickArguments: [{\n      type: Input\n    }],\n    tickValues: [{\n      type: Input\n    }],\n    tickStroke: [{\n      type: Input\n    }],\n    trimTicks: [{\n      type: Input\n    }],\n    maxTickLength: [{\n      type: Input\n    }],\n    tickFormatting: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    gridLineWidth: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    referenceLines: [{\n      type: Input\n    }],\n    showRefLabels: [{\n      type: Input\n    }],\n    showRefLines: [{\n      type: Input\n    }],\n    dimensionsChanged: [{\n      type: Output\n    }],\n    ticksElement: [{\n      type: ViewChild,\n      args: ['ticksel']\n    }]\n  });\n})();\nclass YAxisComponent {\n  constructor() {\n    this.showGridLines = false;\n    this.yOrient = Orientation.Left;\n    this.yAxisOffset = 0;\n    this.dimensionsChanged = new EventEmitter();\n    this.yAxisClassName = 'y axis';\n    this.labelOffset = 15;\n    this.fill = 'none';\n    this.stroke = '#CCC';\n    this.tickStroke = '#CCC';\n    this.strokeWidth = 1;\n    this.padding = 5;\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    this.offset = -(this.yAxisOffset + this.padding);\n    if (this.yOrient === Orientation.Right) {\n      this.labelOffset = 65;\n      this.transform = `translate(${this.offset + this.dims.width} , 0)`;\n    } else {\n      this.transform = `translate(${this.offset} , 0)`;\n    }\n    if (this.yAxisTickCount !== undefined) {\n      this.tickArguments = [this.yAxisTickCount];\n    }\n  }\n  emitTicksWidth({\n    width\n  }) {\n    if (width !== this.labelOffset && this.yOrient === Orientation.Right) {\n      this.labelOffset = width + this.labelOffset;\n      setTimeout(() => {\n        this.dimensionsChanged.emit({\n          width\n        });\n      }, 0);\n    } else if (width !== this.labelOffset) {\n      this.labelOffset = width;\n      setTimeout(() => {\n        this.dimensionsChanged.emit({\n          width\n        });\n      }, 0);\n    }\n  }\n}\nYAxisComponent.ɵfac = function YAxisComponent_Factory(t) {\n  return new (t || YAxisComponent)();\n};\nYAxisComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: YAxisComponent,\n  selectors: [[\"g\", \"ngx-charts-y-axis\", \"\"]],\n  viewQuery: function YAxisComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(YAxisTicksComponent, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ticksComponent = _t.first);\n    }\n  },\n  inputs: {\n    yScale: \"yScale\",\n    dims: \"dims\",\n    trimTicks: \"trimTicks\",\n    maxTickLength: \"maxTickLength\",\n    tickFormatting: \"tickFormatting\",\n    ticks: \"ticks\",\n    showGridLines: \"showGridLines\",\n    showLabel: \"showLabel\",\n    labelText: \"labelText\",\n    yAxisTickCount: \"yAxisTickCount\",\n    yOrient: \"yOrient\",\n    referenceLines: \"referenceLines\",\n    showRefLines: \"showRefLines\",\n    showRefLabels: \"showRefLabels\",\n    yAxisOffset: \"yAxisOffset\"\n  },\n  outputs: {\n    dimensionsChanged: \"dimensionsChanged\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c8,\n  decls: 3,\n  vars: 4,\n  consts: [[\"ngx-charts-y-axis-ticks\", \"\", 3, \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"tickArguments\", \"tickValues\", \"tickStroke\", \"scale\", \"orient\", \"showGridLines\", \"gridLineWidth\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"height\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-axis-label\", \"\", 3, \"label\", \"offset\", \"orient\", \"height\", \"width\", 4, \"ngIf\"], [\"ngx-charts-y-axis-ticks\", \"\", 3, \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"tickArguments\", \"tickValues\", \"tickStroke\", \"scale\", \"orient\", \"showGridLines\", \"gridLineWidth\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"height\", \"dimensionsChanged\"], [\"ngx-charts-axis-label\", \"\", 3, \"label\", \"offset\", \"orient\", \"height\", \"width\"]],\n  template: function YAxisComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\");\n      i0.ɵɵtemplate(1, YAxisComponent__svg_g_1_Template, 1, 14, \"g\", 0);\n      i0.ɵɵtemplate(2, YAxisComponent__svg_g_2_Template, 1, 5, \"g\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵattribute(\"class\", ctx.yAxisClassName)(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yScale);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showLabel);\n    }\n  },\n  directives: [i2.NgIf, YAxisTicksComponent, AxisLabelComponent],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(YAxisComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-y-axis]',\n      template: `\n    <svg:g [attr.class]=\"yAxisClassName\" [attr.transform]=\"transform\">\n      <svg:g\n        ngx-charts-y-axis-ticks\n        *ngIf=\"yScale\"\n        [trimTicks]=\"trimTicks\"\n        [maxTickLength]=\"maxTickLength\"\n        [tickFormatting]=\"tickFormatting\"\n        [tickArguments]=\"tickArguments\"\n        [tickValues]=\"ticks\"\n        [tickStroke]=\"tickStroke\"\n        [scale]=\"yScale\"\n        [orient]=\"yOrient\"\n        [showGridLines]=\"showGridLines\"\n        [gridLineWidth]=\"dims.width\"\n        [referenceLines]=\"referenceLines\"\n        [showRefLines]=\"showRefLines\"\n        [showRefLabels]=\"showRefLabels\"\n        [height]=\"dims.height\"\n        (dimensionsChanged)=\"emitTicksWidth($event)\"\n      />\n\n      <svg:g\n        ngx-charts-axis-label\n        *ngIf=\"showLabel\"\n        [label]=\"labelText\"\n        [offset]=\"labelOffset\"\n        [orient]=\"yOrient\"\n        [height]=\"dims.height\"\n        [width]=\"dims.width\"\n      ></svg:g>\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    yScale: [{\n      type: Input\n    }],\n    dims: [{\n      type: Input\n    }],\n    trimTicks: [{\n      type: Input\n    }],\n    maxTickLength: [{\n      type: Input\n    }],\n    tickFormatting: [{\n      type: Input\n    }],\n    ticks: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    showLabel: [{\n      type: Input\n    }],\n    labelText: [{\n      type: Input\n    }],\n    yAxisTickCount: [{\n      type: Input\n    }],\n    yOrient: [{\n      type: Input\n    }],\n    referenceLines: [{\n      type: Input\n    }],\n    showRefLines: [{\n      type: Input\n    }],\n    showRefLabels: [{\n      type: Input\n    }],\n    yAxisOffset: [{\n      type: Input\n    }],\n    dimensionsChanged: [{\n      type: Output\n    }],\n    ticksComponent: [{\n      type: ViewChild,\n      args: [YAxisTicksComponent]\n    }]\n  });\n})();\nclass AxesModule {}\nAxesModule.ɵfac = function AxesModule_Factory(t) {\n  return new (t || AxesModule)();\n};\nAxesModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: AxesModule\n});\nAxesModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AxesModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [AxisLabelComponent, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent],\n      exports: [AxisLabelComponent, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent]\n    }]\n  }], null, null);\n})();\nvar StyleTypes;\n(function (StyleTypes) {\n  StyleTypes[\"popover\"] = \"popover\";\n  StyleTypes[\"tooltip\"] = \"tooltip\";\n})(StyleTypes || (StyleTypes = {}));\nvar ShowTypes;\n(function (ShowTypes) {\n  ShowTypes[ShowTypes[\"all\"] = 'all'] = \"all\";\n  ShowTypes[ShowTypes[\"focus\"] = 'focus'] = \"focus\";\n  ShowTypes[ShowTypes[\"mouseover\"] = 'mouseover'] = \"mouseover\";\n})(ShowTypes || (ShowTypes = {}));\nclass TooltipDirective {\n  constructor(tooltipService, viewContainerRef, renderer) {\n    this.tooltipService = tooltipService;\n    this.viewContainerRef = viewContainerRef;\n    this.renderer = renderer;\n    this.tooltipCssClass = '';\n    this.tooltipAppendToBody = true;\n    this.tooltipSpacing = 10;\n    this.tooltipDisabled = false;\n    this.tooltipShowCaret = true;\n    this.tooltipPlacement = PlacementTypes.Top;\n    this.tooltipAlignment = PlacementTypes.Center;\n    this.tooltipType = StyleTypes.popover;\n    this.tooltipCloseOnClickOutside = true;\n    this.tooltipCloseOnMouseLeave = true;\n    this.tooltipHideTimeout = 300;\n    this.tooltipShowTimeout = 100;\n    this.tooltipShowEvent = ShowTypes.all;\n    this.tooltipImmediateExit = false;\n    this.show = new EventEmitter();\n    this.hide = new EventEmitter();\n  }\n  get listensForFocus() {\n    return this.tooltipShowEvent === ShowTypes.all || this.tooltipShowEvent === ShowTypes.focus;\n  }\n  get listensForHover() {\n    return this.tooltipShowEvent === ShowTypes.all || this.tooltipShowEvent === ShowTypes.mouseover;\n  }\n  ngOnDestroy() {\n    this.hideTooltip(true);\n  }\n  onFocus() {\n    if (this.listensForFocus) {\n      this.showTooltip();\n    }\n  }\n  onBlur() {\n    if (this.listensForFocus) {\n      this.hideTooltip(true);\n    }\n  }\n  onMouseEnter() {\n    if (this.listensForHover) {\n      this.showTooltip();\n    }\n  }\n  onMouseLeave(target) {\n    if (this.listensForHover && this.tooltipCloseOnMouseLeave) {\n      clearTimeout(this.timeout);\n      if (this.component) {\n        const contentDom = this.component.instance.element.nativeElement;\n        const contains = contentDom.contains(target);\n        if (contains) return;\n      }\n      this.hideTooltip(this.tooltipImmediateExit);\n    }\n  }\n  onMouseClick() {\n    if (this.listensForHover) {\n      this.hideTooltip(true);\n    }\n  }\n  showTooltip(immediate) {\n    if (this.component || this.tooltipDisabled) return;\n    const time = immediate ? 0 : this.tooltipShowTimeout + (navigator.userAgent.match(/\\(i[^;]+;( U;)? CPU.+Mac OS X/) ? 400 : 0);\n    clearTimeout(this.timeout);\n    this.timeout = setTimeout(() => {\n      this.tooltipService.destroyAll();\n      const options = this.createBoundOptions();\n      this.component = this.tooltipService.create(options);\n      // add a tiny timeout to avoid event re-triggers\n      setTimeout(() => {\n        if (this.component) {\n          this.addHideListeners(this.component.instance.element.nativeElement);\n        }\n      }, 10);\n      this.show.emit(true);\n    }, time);\n  }\n  addHideListeners(tooltip) {\n    // on mouse enter, cancel the hide triggered by the leave\n    this.mouseEnterContentEvent = this.renderer.listen(tooltip, 'mouseenter', () => {\n      clearTimeout(this.timeout);\n    });\n    // content mouse leave listener\n    if (this.tooltipCloseOnMouseLeave) {\n      this.mouseLeaveContentEvent = this.renderer.listen(tooltip, 'mouseleave', () => {\n        this.hideTooltip(this.tooltipImmediateExit);\n      });\n    }\n    // content close on click outside\n    if (this.tooltipCloseOnClickOutside) {\n      this.documentClickEvent = this.renderer.listen('window', 'click', event => {\n        const contains = tooltip.contains(event.target);\n        if (!contains) this.hideTooltip();\n      });\n    }\n  }\n  hideTooltip(immediate = false) {\n    if (!this.component) return;\n    const destroyFn = () => {\n      // remove events\n      if (this.mouseLeaveContentEvent) this.mouseLeaveContentEvent();\n      if (this.mouseEnterContentEvent) this.mouseEnterContentEvent();\n      if (this.documentClickEvent) this.documentClickEvent();\n      // emit events\n      this.hide.emit(true);\n      // destroy component\n      this.tooltipService.destroy(this.component);\n      this.component = undefined;\n    };\n    clearTimeout(this.timeout);\n    if (!immediate) {\n      this.timeout = setTimeout(destroyFn, this.tooltipHideTimeout);\n    } else {\n      destroyFn();\n    }\n  }\n  createBoundOptions() {\n    return {\n      title: this.tooltipTitle,\n      template: this.tooltipTemplate,\n      host: this.viewContainerRef.element,\n      placement: this.tooltipPlacement,\n      alignment: this.tooltipAlignment,\n      type: this.tooltipType,\n      showCaret: this.tooltipShowCaret,\n      cssClass: this.tooltipCssClass,\n      spacing: this.tooltipSpacing,\n      context: this.tooltipContext\n    };\n  }\n}\nTooltipDirective.ɵfac = function TooltipDirective_Factory(t) {\n  return new (t || TooltipDirective)(i0.ɵɵdirectiveInject(TooltipService), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n};\nTooltipDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: TooltipDirective,\n  selectors: [[\"\", \"ngx-tooltip\", \"\"]],\n  hostBindings: function TooltipDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"focusin\", function TooltipDirective_focusin_HostBindingHandler() {\n        return ctx.onFocus();\n      })(\"blur\", function TooltipDirective_blur_HostBindingHandler() {\n        return ctx.onBlur();\n      })(\"mouseenter\", function TooltipDirective_mouseenter_HostBindingHandler() {\n        return ctx.onMouseEnter();\n      })(\"mouseleave\", function TooltipDirective_mouseleave_HostBindingHandler($event) {\n        return ctx.onMouseLeave($event.target);\n      })(\"click\", function TooltipDirective_click_HostBindingHandler() {\n        return ctx.onMouseClick();\n      });\n    }\n  },\n  inputs: {\n    tooltipCssClass: \"tooltipCssClass\",\n    tooltipTitle: \"tooltipTitle\",\n    tooltipAppendToBody: \"tooltipAppendToBody\",\n    tooltipSpacing: \"tooltipSpacing\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipShowCaret: \"tooltipShowCaret\",\n    tooltipPlacement: \"tooltipPlacement\",\n    tooltipAlignment: \"tooltipAlignment\",\n    tooltipType: \"tooltipType\",\n    tooltipCloseOnClickOutside: \"tooltipCloseOnClickOutside\",\n    tooltipCloseOnMouseLeave: \"tooltipCloseOnMouseLeave\",\n    tooltipHideTimeout: \"tooltipHideTimeout\",\n    tooltipShowTimeout: \"tooltipShowTimeout\",\n    tooltipTemplate: \"tooltipTemplate\",\n    tooltipShowEvent: \"tooltipShowEvent\",\n    tooltipContext: \"tooltipContext\",\n    tooltipImmediateExit: \"tooltipImmediateExit\"\n  },\n  outputs: {\n    show: \"show\",\n    hide: \"hide\"\n  }\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TooltipDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[ngx-tooltip]'\n    }]\n  }], function () {\n    return [{\n      type: TooltipService\n    }, {\n      type: i0.ViewContainerRef\n    }, {\n      type: i0.Renderer2\n    }];\n  }, {\n    tooltipCssClass: [{\n      type: Input\n    }],\n    tooltipTitle: [{\n      type: Input\n    }],\n    tooltipAppendToBody: [{\n      type: Input\n    }],\n    tooltipSpacing: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipShowCaret: [{\n      type: Input\n    }],\n    tooltipPlacement: [{\n      type: Input\n    }],\n    tooltipAlignment: [{\n      type: Input\n    }],\n    tooltipType: [{\n      type: Input\n    }],\n    tooltipCloseOnClickOutside: [{\n      type: Input\n    }],\n    tooltipCloseOnMouseLeave: [{\n      type: Input\n    }],\n    tooltipHideTimeout: [{\n      type: Input\n    }],\n    tooltipShowTimeout: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    tooltipShowEvent: [{\n      type: Input\n    }],\n    tooltipContext: [{\n      type: Input\n    }],\n    tooltipImmediateExit: [{\n      type: Input\n    }],\n    show: [{\n      type: Output\n    }],\n    hide: [{\n      type: Output\n    }],\n    onFocus: [{\n      type: HostListener,\n      args: ['focusin']\n    }],\n    onBlur: [{\n      type: HostListener,\n      args: ['blur']\n    }],\n    onMouseEnter: [{\n      type: HostListener,\n      args: ['mouseenter']\n    }],\n    onMouseLeave: [{\n      type: HostListener,\n      args: ['mouseleave', ['$event.target']]\n    }],\n    onMouseClick: [{\n      type: HostListener,\n      args: ['click']\n    }]\n  });\n})();\nclass TooltipModule {}\nTooltipModule.ɵfac = function TooltipModule_Factory(t) {\n  return new (t || TooltipModule)();\n};\nTooltipModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: TooltipModule\n});\nTooltipModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [InjectionService, TooltipService],\n  imports: [[CommonModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TooltipModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [TooltipContentComponent, TooltipDirective],\n      providers: [InjectionService, TooltipService],\n      exports: [TooltipContentComponent, TooltipDirective],\n      imports: [CommonModule],\n      entryComponents: [TooltipContentComponent]\n    }]\n  }], null, null);\n})();\nconst cache = {};\n/**\n * Generates a short id.\n *\n * Description:\n *   A 4-character alphanumeric sequence (364 = 1.6 million)\n *   This should only be used for JavaScript specific models.\n *   http://stackoverflow.com/questions/6248666/how-to-generate-short-uid-like-ax4j9z-in-js\n *\n *   Example: `ebgf`\n */\nfunction id() {\n  let newId = ('0000' + (Math.random() * Math.pow(36, 4) << 0).toString(36)).slice(-4);\n  // append a 'a' because neo gets mad\n  newId = `a${newId}`;\n  // ensure not already used\n  if (!cache[newId]) {\n    cache[newId] = true;\n    return newId;\n  }\n  return id();\n}\nvar BarOrientation;\n(function (BarOrientation) {\n  BarOrientation[\"Vertical\"] = \"vertical\";\n  BarOrientation[\"Horizontal\"] = \"horizontal\";\n})(BarOrientation || (BarOrientation = {}));\nclass SvgLinearGradientComponent {\n  constructor() {\n    this.orientation = BarOrientation.Vertical;\n  }\n  ngOnChanges(changes) {\n    this.x1 = '0%';\n    this.x2 = '0%';\n    this.y1 = '0%';\n    this.y2 = '0%';\n    if (this.orientation === BarOrientation.Horizontal) {\n      this.x2 = '100%';\n    } else if (this.orientation === BarOrientation.Vertical) {\n      this.y1 = '100%';\n    }\n  }\n}\nSvgLinearGradientComponent.ɵfac = function SvgLinearGradientComponent_Factory(t) {\n  return new (t || SvgLinearGradientComponent)();\n};\nSvgLinearGradientComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: SvgLinearGradientComponent,\n  selectors: [[\"g\", \"ngx-charts-svg-linear-gradient\", \"\"]],\n  inputs: {\n    orientation: \"orientation\",\n    name: \"name\",\n    stops: \"stops\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c9,\n  decls: 2,\n  vars: 6,\n  consts: [[3, \"id\"], [3, \"stop-color\", \"stop-opacity\", 4, \"ngFor\", \"ngForOf\"]],\n  template: function SvgLinearGradientComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"linearGradient\", 0);\n      i0.ɵɵtemplate(1, SvgLinearGradientComponent__svg_stop_1_Template, 1, 5, \"stop\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"id\", ctx.name);\n      i0.ɵɵattribute(\"x1\", ctx.x1)(\"y1\", ctx.y1)(\"x2\", ctx.x2)(\"y2\", ctx.y2);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.stops);\n    }\n  },\n  directives: [i2.NgForOf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SvgLinearGradientComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-svg-linear-gradient]',\n      template: `\n    <svg:linearGradient [id]=\"name\" [attr.x1]=\"x1\" [attr.y1]=\"y1\" [attr.x2]=\"x2\" [attr.y2]=\"y2\">\n      <svg:stop\n        *ngFor=\"let stop of stops\"\n        [attr.offset]=\"stop.offset + '%'\"\n        [style.stop-color]=\"stop.color\"\n        [style.stop-opacity]=\"stop.opacity\"\n      />\n    </svg:linearGradient>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    orientation: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    stops: [{\n      type: Input\n    }]\n  });\n})();\nclass CircleComponent {\n  constructor() {\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n  }\n  onClick() {\n    this.select.emit(this.data);\n  }\n  onMouseEnter() {\n    this.activate.emit(this.data);\n  }\n  onMouseLeave() {\n    this.deactivate.emit(this.data);\n  }\n  ngOnChanges(changes) {\n    this.classNames = Array.isArray(this.classNames) ? this.classNames.join(' ') : '';\n    this.classNames += 'circle';\n  }\n}\nCircleComponent.ɵfac = function CircleComponent_Factory(t) {\n  return new (t || CircleComponent)();\n};\nCircleComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CircleComponent,\n  selectors: [[\"g\", \"ngx-charts-circle\", \"\"]],\n  hostBindings: function CircleComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function CircleComponent_click_HostBindingHandler() {\n        return ctx.onClick();\n      })(\"mouseenter\", function CircleComponent_mouseenter_HostBindingHandler() {\n        return ctx.onMouseEnter();\n      })(\"mouseleave\", function CircleComponent_mouseleave_HostBindingHandler() {\n        return ctx.onMouseLeave();\n      });\n    }\n  },\n  inputs: {\n    cx: \"cx\",\n    cy: \"cy\",\n    r: \"r\",\n    fill: \"fill\",\n    stroke: \"stroke\",\n    data: \"data\",\n    classNames: \"classNames\",\n    circleOpacity: \"circleOpacity\",\n    pointerEvents: \"pointerEvents\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c10,\n  decls: 1,\n  vars: 8,\n  template: function CircleComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelement(0, \"circle\");\n    }\n    if (rf & 2) {\n      i0.ɵɵattribute(\"cx\", ctx.cx)(\"cy\", ctx.cy)(\"r\", ctx.r)(\"fill\", ctx.fill)(\"stroke\", ctx.stroke)(\"opacity\", ctx.circleOpacity)(\"class\", ctx.classNames)(\"pointer-events\", ctx.pointerEvents);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CircleComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-circle]',\n      template: `\n    <svg:circle\n      [attr.cx]=\"cx\"\n      [attr.cy]=\"cy\"\n      [attr.r]=\"r\"\n      [attr.fill]=\"fill\"\n      [attr.stroke]=\"stroke\"\n      [attr.opacity]=\"circleOpacity\"\n      [attr.class]=\"classNames\"\n      [attr.pointer-events]=\"pointerEvents\"\n    />\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    cx: [{\n      type: Input\n    }],\n    cy: [{\n      type: Input\n    }],\n    r: [{\n      type: Input\n    }],\n    fill: [{\n      type: Input\n    }],\n    stroke: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    classNames: [{\n      type: Input\n    }],\n    circleOpacity: [{\n      type: Input\n    }],\n    pointerEvents: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['click']\n    }],\n    onMouseEnter: [{\n      type: HostListener,\n      args: ['mouseenter']\n    }],\n    onMouseLeave: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  });\n})();\nvar SeriesType;\n(function (SeriesType) {\n  SeriesType[\"Standard\"] = \"standard\";\n  SeriesType[\"Stacked\"] = \"stacked\";\n})(SeriesType || (SeriesType = {}));\nclass CircleSeriesComponent {\n  constructor(platformId) {\n    this.platformId = platformId;\n    this.type = SeriesType.Standard;\n    this.tooltipDisabled = false;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.barVisible = false;\n    this.barOrientation = BarOrientation;\n    this.placementTypes = PlacementTypes;\n    this.styleTypes = StyleTypes;\n    this.isSSR = false;\n  }\n  ngOnInit() {\n    this.gradientId = 'grad' + id().toString();\n    this.gradientFill = `url(#${this.gradientId})`;\n    if (isPlatformServer(this.platformId)) {\n      this.isSSR = true;\n    }\n  }\n  ngOnChanges() {\n    this.update();\n  }\n  update() {\n    this.circle = this.getActiveCircle();\n  }\n  getActiveCircle() {\n    const indexActiveDataPoint = this.data.series.findIndex(d => {\n      const label = d.name;\n      return label && this.visibleValue && label.toString() === this.visibleValue.toString() && d.value !== undefined;\n    });\n    if (indexActiveDataPoint === -1) {\n      // No valid point is 'active/hovered over' at this moment.\n      return undefined;\n    }\n    return this.mapDataPointToCircle(this.data.series[indexActiveDataPoint], indexActiveDataPoint);\n  }\n  mapDataPointToCircle(d, i) {\n    const seriesName = this.data.name;\n    const value = d.value;\n    const label = d.name;\n    const tooltipLabel = formatLabel(label);\n    let cx;\n    if (this.scaleType === ScaleType.Time) {\n      cx = this.xScale(label);\n    } else if (this.scaleType === ScaleType.Linear) {\n      cx = this.xScale(Number(label));\n    } else {\n      cx = this.xScale(label);\n    }\n    const cy = this.yScale(this.type === SeriesType.Standard ? value : d.d1);\n    const radius = 5;\n    const height = this.yScale.range()[0] - cy;\n    const opacity = 1;\n    let color;\n    if (this.colors.scaleType === ScaleType.Linear) {\n      if (this.type === SeriesType.Standard) {\n        color = this.colors.getColor(value);\n      } else {\n        color = this.colors.getColor(d.d1);\n      }\n    } else {\n      color = this.colors.getColor(seriesName);\n    }\n    const data = Object.assign({}, d, {\n      series: seriesName,\n      value,\n      name: label\n    });\n    return {\n      classNames: [`circle-data-${i}`],\n      value,\n      label,\n      data,\n      cx,\n      cy,\n      radius,\n      height,\n      tooltipLabel,\n      color,\n      opacity,\n      seriesName,\n      gradientStops: this.getGradientStops(color),\n      min: d.min,\n      max: d.max\n    };\n  }\n  getTooltipText({\n    tooltipLabel,\n    value,\n    seriesName,\n    min,\n    max\n  }) {\n    return `\n      <span class=\"tooltip-label\">${escapeLabel(seriesName)} • ${escapeLabel(tooltipLabel)}</span>\n      <span class=\"tooltip-val\">${value.toLocaleString()}${this.getTooltipMinMaxText(min, max)}</span>\n    `;\n  }\n  getTooltipMinMaxText(min, max) {\n    if (min !== undefined || max !== undefined) {\n      let result = ' (';\n      if (min !== undefined) {\n        if (max === undefined) {\n          result += '≥';\n        }\n        result += min.toLocaleString();\n        if (max !== undefined) {\n          result += ' - ';\n        }\n      } else if (max !== undefined) {\n        result += '≤';\n      }\n      if (max !== undefined) {\n        result += max.toLocaleString();\n      }\n      result += ')';\n      return result;\n    } else {\n      return '';\n    }\n  }\n  getGradientStops(color) {\n    return [{\n      offset: 0,\n      color,\n      opacity: 0.2\n    }, {\n      offset: 100,\n      color,\n      opacity: 1\n    }];\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n  isActive(entry) {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name;\n    });\n    return item !== undefined;\n  }\n  activateCircle() {\n    this.barVisible = true;\n    this.activate.emit({\n      name: this.data.name\n    });\n  }\n  deactivateCircle() {\n    this.barVisible = false;\n    this.circle.opacity = 0;\n    this.deactivate.emit({\n      name: this.data.name\n    });\n  }\n}\nCircleSeriesComponent.ɵfac = function CircleSeriesComponent_Factory(t) {\n  return new (t || CircleSeriesComponent)(i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\nCircleSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CircleSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-circle-series\", \"\"]],\n  inputs: {\n    data: \"data\",\n    type: \"type\",\n    xScale: \"xScale\",\n    yScale: \"yScale\",\n    colors: \"colors\",\n    scaleType: \"scaleType\",\n    visibleValue: \"visibleValue\",\n    activeEntries: \"activeEntries\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipTemplate: \"tooltipTemplate\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c11,\n  decls: 1,\n  vars: 1,\n  consts: [[4, \"ngIf\"], [\"ngx-charts-svg-linear-gradient\", \"\", 3, \"orientation\", \"name\", \"stops\"], [\"class\", \"tooltip-bar\", 4, \"ngIf\"], [\"ngx-charts-circle\", \"\", \"ngx-tooltip\", \"\", 1, \"circle\", 3, \"cx\", \"cy\", \"r\", \"fill\", \"pointerEvents\", \"data\", \"classNames\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"select\", \"activate\", \"deactivate\"], [1, \"tooltip-bar\"]],\n  template: function CircleSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, CircleSeriesComponent__svg_g_0_Template, 6, 22, \"g\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.circle);\n    }\n  },\n  directives: [i2.NgIf, SvgLinearGradientComponent, CircleComponent, TooltipDirective],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':enter', [style({\n      opacity: 0\n    }), animate(250, style({\n      opacity: 1\n    }))])])]\n  },\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CircleSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-circle-series]',\n      template: `\n    <svg:g *ngIf=\"circle\">\n      <defs>\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          [orientation]=\"barOrientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"circle.gradientStops\"\n        />\n      </defs>\n      <svg:rect\n        *ngIf=\"!isSSR && barVisible && type === 'standard'\"\n        [@animationState]=\"'active'\"\n        [attr.x]=\"circle.cx - circle.radius\"\n        [attr.y]=\"circle.cy\"\n        [attr.width]=\"circle.radius * 2\"\n        [attr.height]=\"circle.height\"\n        [attr.fill]=\"gradientFill\"\n        class=\"tooltip-bar\"\n      />\n      <svg:rect\n        *ngIf=\"isSSR && barVisible && type === 'standard'\"\n        [attr.x]=\"circle.cx - circle.radius\"\n        [attr.y]=\"circle.cy\"\n        [attr.width]=\"circle.radius * 2\"\n        [attr.height]=\"circle.height\"\n        [attr.fill]=\"gradientFill\"\n        class=\"tooltip-bar\"\n      />\n      <svg:g\n        ngx-charts-circle\n        class=\"circle\"\n        [cx]=\"circle.cx\"\n        [cy]=\"circle.cy\"\n        [r]=\"circle.radius\"\n        [fill]=\"circle.color\"\n        [class.active]=\"isActive({ name: circle.seriesName })\"\n        [pointerEvents]=\"circle.value === 0 ? 'none' : 'all'\"\n        [data]=\"circle.value\"\n        [classNames]=\"circle.classNames\"\n        (select)=\"onClick(circle.data)\"\n        (activate)=\"activateCircle()\"\n        (deactivate)=\"deactivateCircle()\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Top\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(circle)\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"circle.data\"\n      />\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition(':enter', [style({\n        opacity: 0\n      }), animate(250, style({\n        opacity: 1\n      }))])])]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    data: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    xScale: [{\n      type: Input\n    }],\n    yScale: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    scaleType: [{\n      type: Input\n    }],\n    visibleValue: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }]\n  });\n})();\nclass GridPanelComponent {}\nGridPanelComponent.ɵfac = function GridPanelComponent_Factory(t) {\n  return new (t || GridPanelComponent)();\n};\nGridPanelComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: GridPanelComponent,\n  selectors: [[\"g\", \"ngx-charts-grid-panel\", \"\"]],\n  inputs: {\n    width: \"width\",\n    height: \"height\",\n    x: \"x\",\n    y: \"y\"\n  },\n  attrs: _c13,\n  decls: 1,\n  vars: 4,\n  consts: [[\"stroke\", \"none\", 1, \"gridpanel\"]],\n  template: function GridPanelComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelement(0, \"rect\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵattribute(\"height\", ctx.height)(\"width\", ctx.width)(\"x\", ctx.x)(\"y\", ctx.y);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridPanelComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-grid-panel]',\n      template: `\n    <svg:rect [attr.height]=\"height\" [attr.width]=\"width\" [attr.x]=\"x\" [attr.y]=\"y\" stroke=\"none\" class=\"gridpanel\" />\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    width: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    x: [{\n      type: Input\n    }],\n    y: [{\n      type: Input\n    }]\n  });\n})();\nvar ClassEnum;\n(function (ClassEnum) {\n  ClassEnum[\"Odd\"] = \"odd\";\n  ClassEnum[\"Even\"] = \"even\";\n})(ClassEnum || (ClassEnum = {}));\nclass GridPanelSeriesComponent {\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    this.gridPanels = this.getGridPanels();\n  }\n  getGridPanels() {\n    return this.data.map(d => {\n      let offset;\n      let width;\n      let height;\n      let x;\n      let y;\n      let className = ClassEnum.Odd;\n      if (this.orient === BarOrientation.Vertical) {\n        const position = this.xScale(d.name);\n        const positionIndex = Number.parseInt((position / this.xScale.step()).toString(), 10);\n        if (positionIndex % 2 === 1) {\n          className = ClassEnum.Even;\n        }\n        offset = this.xScale.bandwidth() * this.xScale.paddingInner();\n        width = this.xScale.bandwidth() + offset;\n        height = this.dims.height;\n        x = this.xScale(d.name) - offset / 2;\n        y = 0;\n      } else if (this.orient === BarOrientation.Horizontal) {\n        const position = this.yScale(d.name);\n        const positionIndex = Number.parseInt((position / this.yScale.step()).toString(), 10);\n        if (positionIndex % 2 === 1) {\n          className = ClassEnum.Even;\n        }\n        offset = this.yScale.bandwidth() * this.yScale.paddingInner();\n        width = this.dims.width;\n        height = this.yScale.bandwidth() + offset;\n        x = 0;\n        y = this.yScale(d.name) - offset / 2;\n      }\n      return {\n        name: d.name,\n        class: className,\n        height,\n        width,\n        x,\n        y\n      };\n    });\n  }\n}\nGridPanelSeriesComponent.ɵfac = function GridPanelSeriesComponent_Factory(t) {\n  return new (t || GridPanelSeriesComponent)();\n};\nGridPanelSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: GridPanelSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-grid-panel-series\", \"\"]],\n  inputs: {\n    data: \"data\",\n    dims: \"dims\",\n    xScale: \"xScale\",\n    yScale: \"yScale\",\n    orient: \"orient\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c14,\n  decls: 1,\n  vars: 1,\n  consts: [[\"ngx-charts-grid-panel\", \"\", 3, \"height\", \"width\", \"x\", \"y\", \"grid-panel\", \"odd\", \"even\", 4, \"ngFor\", \"ngForOf\"], [\"ngx-charts-grid-panel\", \"\", 3, \"height\", \"width\", \"x\", \"y\"]],\n  template: function GridPanelSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, GridPanelSeriesComponent__svg_g_0_Template, 1, 10, \"g\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.gridPanels);\n    }\n  },\n  directives: [i2.NgForOf, GridPanelComponent],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridPanelSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-grid-panel-series]',\n      template: `\n    <svg:g\n      ngx-charts-grid-panel\n      *ngFor=\"let gridPanel of gridPanels\"\n      [height]=\"gridPanel.height\"\n      [width]=\"gridPanel.width\"\n      [x]=\"gridPanel.x\"\n      [y]=\"gridPanel.y\"\n      [class.grid-panel]=\"true\"\n      [class.odd]=\"gridPanel.class === 'odd'\"\n      [class.even]=\"gridPanel.class === 'even'\"\n    ></svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    data: [{\n      type: Input\n    }],\n    dims: [{\n      type: Input\n    }],\n    xScale: [{\n      type: Input\n    }],\n    yScale: [{\n      type: Input\n    }],\n    orient: [{\n      type: Input\n    }]\n  });\n})();\nclass SvgRadialGradientComponent {\n  constructor() {\n    this.endOpacity = 1;\n    this.cx = 0;\n    this.cy = 0;\n  }\n  get stops() {\n    return this.stopsInput || this.stopsDefault;\n  }\n  set stops(value) {\n    this.stopsInput = value;\n  }\n  ngOnChanges(changes) {\n    this.r = '30%';\n    if ('color' in changes || 'startOpacity' in changes || 'endOpacity' in changes) {\n      this.stopsDefault = [{\n        offset: 0,\n        color: this.color,\n        opacity: this.startOpacity\n      }, {\n        offset: 100,\n        color: this.color,\n        opacity: this.endOpacity\n      }];\n    }\n  }\n}\nSvgRadialGradientComponent.ɵfac = function SvgRadialGradientComponent_Factory(t) {\n  return new (t || SvgRadialGradientComponent)();\n};\nSvgRadialGradientComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: SvgRadialGradientComponent,\n  selectors: [[\"g\", \"ngx-charts-svg-radial-gradient\", \"\"]],\n  inputs: {\n    color: \"color\",\n    name: \"name\",\n    startOpacity: \"startOpacity\",\n    endOpacity: \"endOpacity\",\n    cx: \"cx\",\n    cy: \"cy\",\n    stops: \"stops\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c15,\n  decls: 2,\n  vars: 5,\n  consts: [[\"gradientUnits\", \"userSpaceOnUse\", 3, \"id\"], [3, \"stop-color\", \"stop-opacity\", 4, \"ngFor\", \"ngForOf\"]],\n  template: function SvgRadialGradientComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"radialGradient\", 0);\n      i0.ɵɵtemplate(1, SvgRadialGradientComponent__svg_stop_1_Template, 1, 5, \"stop\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"id\", ctx.name);\n      i0.ɵɵattribute(\"cx\", ctx.cx)(\"cy\", ctx.cy)(\"r\", ctx.r);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.stops);\n    }\n  },\n  directives: [i2.NgForOf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SvgRadialGradientComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-svg-radial-gradient]',\n      template: `\n    <svg:radialGradient [id]=\"name\" [attr.cx]=\"cx\" [attr.cy]=\"cy\" [attr.r]=\"r\" gradientUnits=\"userSpaceOnUse\">\n      <svg:stop\n        *ngFor=\"let stop of stops\"\n        [attr.offset]=\"stop.offset + '%'\"\n        [style.stop-color]=\"stop.color\"\n        [style.stop-opacity]=\"stop.opacity\"\n      />\n    </svg:radialGradient>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    color: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    startOpacity: [{\n      type: Input\n    }],\n    endOpacity: [{\n      type: Input\n    }],\n    cx: [{\n      type: Input\n    }],\n    cy: [{\n      type: Input\n    }],\n    stops: [{\n      type: Input\n    }]\n  });\n})();\nclass AreaComponent {\n  constructor(element) {\n    this.opacity = 1;\n    this.startOpacity = 0.5;\n    this.endOpacity = 1;\n    this.gradient = false;\n    this.animations = true;\n    this.select = new EventEmitter();\n    this.animationsLoaded = false;\n    this.hasGradient = false;\n    this.barOrientation = BarOrientation;\n    this.element = element.nativeElement;\n  }\n  ngOnChanges() {\n    this.update();\n    if (!this.animationsLoaded) {\n      this.loadAnimation();\n      this.animationsLoaded = true;\n    }\n  }\n  update() {\n    this.gradientId = 'grad' + id().toString();\n    this.gradientFill = `url(#${this.gradientId})`;\n    if (this.gradient || this.stops) {\n      this.gradientStops = this.getGradient();\n      this.hasGradient = true;\n    } else {\n      this.hasGradient = false;\n    }\n    this.updatePathEl();\n  }\n  loadAnimation() {\n    this.areaPath = this.startingPath;\n    setTimeout(this.updatePathEl.bind(this), 100);\n  }\n  updatePathEl() {\n    const node = select(this.element).select('.area');\n    if (this.animations) {\n      node.transition().duration(750).attr('d', this.path);\n    } else {\n      node.attr('d', this.path);\n    }\n  }\n  getGradient() {\n    if (this.stops) {\n      return this.stops;\n    }\n    return [{\n      offset: 0,\n      color: this.fill,\n      opacity: this.startOpacity\n    }, {\n      offset: 100,\n      color: this.fill,\n      opacity: this.endOpacity\n    }];\n  }\n}\nAreaComponent.ɵfac = function AreaComponent_Factory(t) {\n  return new (t || AreaComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\nAreaComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: AreaComponent,\n  selectors: [[\"g\", \"ngx-charts-area\", \"\"]],\n  inputs: {\n    data: \"data\",\n    path: \"path\",\n    startingPath: \"startingPath\",\n    fill: \"fill\",\n    opacity: \"opacity\",\n    startOpacity: \"startOpacity\",\n    endOpacity: \"endOpacity\",\n    gradient: \"gradient\",\n    stops: \"stops\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c16,\n  decls: 2,\n  vars: 5,\n  consts: [[4, \"ngIf\"], [1, \"area\"], [\"ngx-charts-svg-linear-gradient\", \"\", 3, \"orientation\", \"name\", \"stops\"]],\n  template: function AreaComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, AreaComponent__svg_defs_0_Template, 2, 3, \"defs\", 0);\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelement(1, \"path\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.gradient);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"opacity\", ctx.opacity);\n      i0.ɵɵattribute(\"d\", ctx.areaPath)(\"fill\", ctx.gradient ? ctx.gradientFill : ctx.fill);\n    }\n  },\n  directives: [i2.NgIf, SvgLinearGradientComponent],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AreaComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-area]',\n      template: `\n    <svg:defs *ngIf=\"gradient\">\n      <svg:g\n        ngx-charts-svg-linear-gradient\n        [orientation]=\"barOrientation.Vertical\"\n        [name]=\"gradientId\"\n        [stops]=\"gradientStops\"\n      />\n    </svg:defs>\n    <svg:path class=\"area\" [attr.d]=\"areaPath\" [attr.fill]=\"gradient ? gradientFill : fill\" [style.opacity]=\"opacity\" />\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    data: [{\n      type: Input\n    }],\n    path: [{\n      type: Input\n    }],\n    startingPath: [{\n      type: Input\n    }],\n    fill: [{\n      type: Input\n    }],\n    opacity: [{\n      type: Input\n    }],\n    startOpacity: [{\n      type: Input\n    }],\n    endOpacity: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    stops: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }]\n  });\n})();\n\n// Robert Penner's easeOutExpo\nfunction easeOutExpo(t, b, c, d) {\n  return c * (-Math.pow(2, -10 * t / d) + 1) * 1024 / 1023 + b;\n}\n/**\n * Counts from a number to the end incrementally.\n */\nfunction count(countFrom, countTo, countDecimals, countDuration, callback) {\n  const startVal = Number(countFrom);\n  const endVal = Number(countTo);\n  const countDown = startVal > endVal;\n  const decimals = Math.max(0, countDecimals);\n  const dec = Math.pow(10, decimals);\n  const duration = Number(countDuration) * 1000;\n  let startTime;\n  function runCount(timestamp) {\n    let frameVal;\n    const progress = timestamp - startTime;\n    if (countDown) {\n      frameVal = startVal - easeOutExpo(progress, 0, startVal - endVal, duration);\n    } else {\n      frameVal = easeOutExpo(progress, startVal, endVal - startVal, duration);\n    }\n    if (countDown) {\n      frameVal = frameVal < endVal ? endVal : frameVal;\n    } else {\n      frameVal = frameVal > endVal ? endVal : frameVal;\n    }\n    frameVal = Math.round(frameVal * dec) / dec;\n    const tick = progress < duration;\n    callback({\n      value: frameVal,\n      progress,\n      timestamp,\n      finished: !tick\n    });\n    if (tick) {\n      return requestAnimationFrame(val => runCount(val));\n    }\n  }\n  return requestAnimationFrame(timestamp => {\n    startTime = timestamp;\n    return runCount(timestamp);\n  });\n}\n/**\n * Determine decimals places\n *\n * @export\n */\nfunction decimalChecker(countTo) {\n  const endVal = Number(countTo);\n  if (endVal % 1 !== 0 && Math.abs(endVal) <= 10) {\n    return 2;\n  }\n  return 0;\n}\n\n/**\n * Count up component\n *\n * Loosely inspired by:\n *  - https://github.com/izupet/angular2-counto\n *  - https://inorganik.github.io/countUp.js/\n *\n * @export\n */\nclass CountUpDirective {\n  constructor(cd, element) {\n    this.cd = cd;\n    this.countDuration = 1;\n    this.countPrefix = '';\n    this.countSuffix = '';\n    this.countChange = new EventEmitter();\n    this.countFinish = new EventEmitter();\n    this.value = '';\n    this._countDecimals = 0;\n    this._countTo = 0;\n    this._countFrom = 0;\n    this.nativeElement = element.nativeElement;\n  }\n  set countDecimals(val) {\n    this._countDecimals = val;\n  }\n  get countDecimals() {\n    if (this._countDecimals) return this._countDecimals;\n    return decimalChecker(this.countTo);\n  }\n  set countTo(val) {\n    this._countTo = parseFloat(val);\n    this.start();\n  }\n  get countTo() {\n    return this._countTo;\n  }\n  set countFrom(val) {\n    this._countFrom = parseFloat(val);\n    this.start();\n  }\n  get countFrom() {\n    return this._countFrom;\n  }\n  ngOnDestroy() {\n    cancelAnimationFrame(this.animationReq);\n  }\n  start() {\n    cancelAnimationFrame(this.animationReq);\n    const valueFormatting = this.valueFormatting || (value => `${this.countPrefix}${value.toLocaleString()}${this.countSuffix}`);\n    const callback = ({\n      value,\n      progress,\n      finished\n    }) => {\n      this.value = valueFormatting(value);\n      this.cd.markForCheck();\n      if (!finished) this.countChange.emit({\n        value: this.value,\n        progress\n      });\n      if (finished) this.countFinish.emit({\n        value: this.value,\n        progress\n      });\n    };\n    this.animationReq = count(this.countFrom, this.countTo, this.countDecimals, this.countDuration, callback);\n  }\n}\nCountUpDirective.ɵfac = function CountUpDirective_Factory(t) {\n  return new (t || CountUpDirective)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\nCountUpDirective.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CountUpDirective,\n  selectors: [[\"\", \"ngx-charts-count-up\", \"\"]],\n  inputs: {\n    countDuration: \"countDuration\",\n    countPrefix: \"countPrefix\",\n    countSuffix: \"countSuffix\",\n    valueFormatting: \"valueFormatting\",\n    countDecimals: \"countDecimals\",\n    countTo: \"countTo\",\n    countFrom: \"countFrom\"\n  },\n  outputs: {\n    countChange: \"countChange\",\n    countFinish: \"countFinish\"\n  },\n  attrs: _c17,\n  decls: 1,\n  vars: 1,\n  template: function CountUpDirective_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtext(0);\n    }\n    if (rf & 2) {\n      i0.ɵɵtextInterpolate1(\" \", ctx.value, \" \");\n    }\n  },\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CountUpDirective, [{\n    type: Component,\n    args: [{\n      selector: '[ngx-charts-count-up]',\n      template: ` {{ value }} `\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    countDuration: [{\n      type: Input\n    }],\n    countPrefix: [{\n      type: Input\n    }],\n    countSuffix: [{\n      type: Input\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    countDecimals: [{\n      type: Input\n    }],\n    countTo: [{\n      type: Input\n    }],\n    countFrom: [{\n      type: Input\n    }],\n    countChange: [{\n      type: Output\n    }],\n    countFinish: [{\n      type: Output\n    }]\n  });\n})();\n\n// If we don't check whether 'window' and 'global' variables are defined,\n// code will fail in browser/node with 'variable is undefined' error.\nlet root;\nif (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n}\n// tslint:disable-next-line:variable-name\nconst MouseEvent = root.MouseEvent;\nfunction createMouseEvent(name, bubbles = false, cancelable = true) {\n  // Calling new of an event does not work correctly on IE. The following is a tested workaround\n  // See https://stackoverflow.com/questions/27176983/dispatchevent-not-working-in-ie11\n  if (typeof MouseEvent === 'function') {\n    // Sane browsers\n    return new MouseEvent(name, {\n      bubbles,\n      cancelable\n    });\n  } else {\n    // IE\n    const event = document.createEvent('MouseEvent');\n    event.initEvent(name, bubbles, cancelable);\n    return event;\n  }\n}\nclass TooltipArea {\n  constructor(platformId) {\n    this.platformId = platformId;\n    this.anchorOpacity = 0;\n    this.anchorPos = -1;\n    this.anchorValues = [];\n    this.placementTypes = PlacementTypes;\n    this.styleTypes = StyleTypes;\n    this.showPercentage = false;\n    this.tooltipDisabled = false;\n    this.hover = new EventEmitter();\n  }\n  getValues(xVal) {\n    const results = [];\n    for (const group of this.results) {\n      const item = group.series.find(d => d.name.toString() === xVal.toString());\n      let groupName = group.name;\n      if (groupName instanceof Date) {\n        groupName = groupName.toLocaleDateString();\n      }\n      if (item) {\n        const label = item.name;\n        let val = item.value;\n        if (this.showPercentage) {\n          val = (item.d1 - item.d0).toFixed(2) + '%';\n        }\n        let color;\n        if (this.colors.scaleType === ScaleType.Linear) {\n          let v = val;\n          if (item.d1) {\n            v = item.d1;\n          }\n          color = this.colors.getColor(v);\n        } else {\n          color = this.colors.getColor(group.name);\n        }\n        const data = Object.assign({}, item, {\n          value: val,\n          name: label,\n          series: groupName,\n          min: item.min,\n          max: item.max,\n          color\n        });\n        results.push(data);\n      }\n    }\n    return results;\n  }\n  mouseMove(event) {\n    if (!isPlatformBrowser(this.platformId)) {\n      return;\n    }\n    const xPos = event.pageX - event.target.getBoundingClientRect().left;\n    const closestIndex = this.findClosestPointIndex(xPos);\n    const closestPoint = this.xSet[closestIndex];\n    this.anchorPos = this.xScale(closestPoint);\n    this.anchorPos = Math.max(0, this.anchorPos);\n    this.anchorPos = Math.min(this.dims.width, this.anchorPos);\n    this.anchorValues = this.getValues(closestPoint);\n    if (this.anchorPos !== this.lastAnchorPos) {\n      const ev = createMouseEvent('mouseleave');\n      this.tooltipAnchor.nativeElement.dispatchEvent(ev);\n      this.anchorOpacity = 0.7;\n      this.hover.emit({\n        value: closestPoint\n      });\n      this.showTooltip();\n      this.lastAnchorPos = this.anchorPos;\n    }\n  }\n  findClosestPointIndex(xPos) {\n    let minIndex = 0;\n    let maxIndex = this.xSet.length - 1;\n    let minDiff = Number.MAX_VALUE;\n    let closestIndex = 0;\n    while (minIndex <= maxIndex) {\n      const currentIndex = (minIndex + maxIndex) / 2 | 0;\n      const currentElement = this.xScale(this.xSet[currentIndex]);\n      const curDiff = Math.abs(currentElement - xPos);\n      if (curDiff < minDiff) {\n        minDiff = curDiff;\n        closestIndex = currentIndex;\n      }\n      if (currentElement < xPos) {\n        minIndex = currentIndex + 1;\n      } else if (currentElement > xPos) {\n        maxIndex = currentIndex - 1;\n      } else {\n        minDiff = 0;\n        closestIndex = currentIndex;\n        break;\n      }\n    }\n    return closestIndex;\n  }\n  showTooltip() {\n    const event = createMouseEvent('mouseenter');\n    this.tooltipAnchor.nativeElement.dispatchEvent(event);\n  }\n  hideTooltip() {\n    const event = createMouseEvent('mouseleave');\n    this.tooltipAnchor.nativeElement.dispatchEvent(event);\n    this.anchorOpacity = 0;\n    this.lastAnchorPos = -1;\n  }\n  getToolTipText(tooltipItem) {\n    let result = '';\n    if (tooltipItem.series !== undefined) {\n      result += tooltipItem.series;\n    } else {\n      result += '???';\n    }\n    result += ': ';\n    if (tooltipItem.value !== undefined) {\n      result += tooltipItem.value.toLocaleString();\n    }\n    if (tooltipItem.min !== undefined || tooltipItem.max !== undefined) {\n      result += ' (';\n      if (tooltipItem.min !== undefined) {\n        if (tooltipItem.max === undefined) {\n          result += '≥';\n        }\n        result += tooltipItem.min.toLocaleString();\n        if (tooltipItem.max !== undefined) {\n          result += ' - ';\n        }\n      } else if (tooltipItem.max !== undefined) {\n        result += '≤';\n      }\n      if (tooltipItem.max !== undefined) {\n        result += tooltipItem.max.toLocaleString();\n      }\n      result += ')';\n    }\n    return result;\n  }\n}\nTooltipArea.ɵfac = function TooltipArea_Factory(t) {\n  return new (t || TooltipArea)(i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\nTooltipArea.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TooltipArea,\n  selectors: [[\"g\", \"ngx-charts-tooltip-area\", \"\"]],\n  viewQuery: function TooltipArea_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c18, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipAnchor = _t.first);\n    }\n  },\n  inputs: {\n    dims: \"dims\",\n    xSet: \"xSet\",\n    xScale: \"xScale\",\n    yScale: \"yScale\",\n    results: \"results\",\n    colors: \"colors\",\n    showPercentage: \"showPercentage\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipTemplate: \"tooltipTemplate\"\n  },\n  outputs: {\n    hover: \"hover\"\n  },\n  attrs: _c19,\n  decls: 6,\n  vars: 18,\n  consts: [[\"y\", \"0\", 1, \"tooltip-area\", 2, \"opacity\", \"0\", \"cursor\", \"auto\", 3, \"mousemove\", \"mouseleave\"], [\"defaultTooltipTemplate\", \"\"], [\"y\", \"0\", \"ngx-tooltip\", \"\", 1, \"tooltip-anchor\", 3, \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipSpacing\", \"tooltipTemplate\", \"tooltipContext\", \"tooltipImmediateExit\"], [\"tooltipAnchor\", \"\"], [1, \"area-tooltip-container\"], [\"class\", \"tooltip-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"tooltip-item\"], [1, \"tooltip-item-color\"]],\n  template: function TooltipArea_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\");\n      i0.ɵɵelementStart(1, \"rect\", 0);\n      i0.ɵɵlistener(\"mousemove\", function TooltipArea_Template__svg_rect_mousemove_1_listener($event) {\n        return ctx.mouseMove($event);\n      })(\"mouseleave\", function TooltipArea_Template__svg_rect_mouseleave_1_listener() {\n        return ctx.hideTooltip();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, TooltipArea__svg_ng_template_2_Template, 2, 1, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelement(4, \"rect\", 2, 3);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(3);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"x\", 0)(\"width\", ctx.dims.width)(\"height\", ctx.dims.height);\n      i0.ɵɵadvance(3);\n      i0.ɵɵstyleProp(\"opacity\", ctx.anchorOpacity)(\"pointer-events\", \"none\");\n      i0.ɵɵproperty(\"@animationState\", ctx.anchorOpacity !== 0 ? \"active\" : \"inactive\")(\"tooltipDisabled\", ctx.tooltipDisabled)(\"tooltipPlacement\", ctx.placementTypes.Right)(\"tooltipType\", ctx.styleTypes.tooltip)(\"tooltipSpacing\", 15)(\"tooltipTemplate\", ctx.tooltipTemplate ? ctx.tooltipTemplate : _r0)(\"tooltipContext\", ctx.anchorValues)(\"tooltipImmediateExit\", true);\n      i0.ɵɵattribute(\"x\", ctx.anchorPos)(\"width\", 1)(\"height\", ctx.dims.height);\n    }\n  },\n  directives: [TooltipDirective, i2.NgForOf],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition('inactive => active', [style({\n      opacity: 0\n    }), animate(250, style({\n      opacity: 0.7\n    }))]), transition('active => inactive', [style({\n      opacity: 0.7\n    }), animate(250, style({\n      opacity: 0\n    }))])])]\n  },\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TooltipArea, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-tooltip-area]',\n      template: `\n    <svg:g>\n      <svg:rect\n        class=\"tooltip-area\"\n        [attr.x]=\"0\"\n        y=\"0\"\n        [attr.width]=\"dims.width\"\n        [attr.height]=\"dims.height\"\n        style=\"opacity: 0; cursor: 'auto';\"\n        (mousemove)=\"mouseMove($event)\"\n        (mouseleave)=\"hideTooltip()\"\n      />\n      <ng-template #defaultTooltipTemplate let-model=\"model\">\n        <xhtml:div class=\"area-tooltip-container\">\n          <xhtml:div *ngFor=\"let tooltipItem of model\" class=\"tooltip-item\">\n            <xhtml:span class=\"tooltip-item-color\" [style.background-color]=\"tooltipItem.color\"></xhtml:span>\n            {{ getToolTipText(tooltipItem) }}\n          </xhtml:div>\n        </xhtml:div>\n      </ng-template>\n      <svg:rect\n        #tooltipAnchor\n        [@animationState]=\"anchorOpacity !== 0 ? 'active' : 'inactive'\"\n        class=\"tooltip-anchor\"\n        [attr.x]=\"anchorPos\"\n        y=\"0\"\n        [attr.width]=\"1\"\n        [attr.height]=\"dims.height\"\n        [style.opacity]=\"anchorOpacity\"\n        [style.pointer-events]=\"'none'\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Right\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipSpacing]=\"15\"\n        [tooltipTemplate]=\"tooltipTemplate ? tooltipTemplate : defaultTooltipTemplate\"\n        [tooltipContext]=\"anchorValues\"\n        [tooltipImmediateExit]=\"true\"\n      />\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition('inactive => active', [style({\n        opacity: 0\n      }), animate(250, style({\n        opacity: 0.7\n      }))]), transition('active => inactive', [style({\n        opacity: 0.7\n      }), animate(250, style({\n        opacity: 0\n      }))])])]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    dims: [{\n      type: Input\n    }],\n    xSet: [{\n      type: Input\n    }],\n    xScale: [{\n      type: Input\n    }],\n    yScale: [{\n      type: Input\n    }],\n    results: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    showPercentage: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    hover: [{\n      type: Output\n    }],\n    tooltipAnchor: [{\n      type: ViewChild,\n      args: ['tooltipAnchor', {\n        static: false\n      }]\n    }]\n  });\n})();\nclass Timeline {\n  constructor(element, cd) {\n    this.cd = cd;\n    this.height = 50;\n    this.select = new EventEmitter();\n    this.onDomainChange = new EventEmitter();\n    this.initialized = false;\n    this.element = element.nativeElement;\n  }\n  ngOnChanges(changes) {\n    this.update();\n    if (!this.initialized) {\n      this.addBrush();\n      this.initialized = true;\n    }\n  }\n  update() {\n    this.dims = this.getDims();\n    this.height = this.dims.height;\n    const offsetY = this.view[1] - this.height;\n    this.xDomain = this.getXDomain();\n    this.xScale = this.getXScale();\n    if (this.brush) {\n      this.updateBrush();\n    }\n    this.transform = `translate(0 , ${offsetY})`;\n    this.filterId = 'filter' + id().toString();\n    this.filter = `url(#${this.filterId})`;\n    this.cd.markForCheck();\n  }\n  getXDomain() {\n    let values = [];\n    for (const results of this.results) {\n      for (const d of results.series) {\n        if (!values.includes(d.name)) {\n          values.push(d.name);\n        }\n      }\n    }\n    let domain = [];\n    if (this.scaleType === ScaleType.Time) {\n      const min = Math.min(...values);\n      const max = Math.max(...values);\n      domain = [min, max];\n    } else if (this.scaleType === ScaleType.Linear) {\n      values = values.map(v => Number(v));\n      const min = Math.min(...values);\n      const max = Math.max(...values);\n      domain = [min, max];\n    } else {\n      domain = values;\n    }\n    return domain;\n  }\n  getXScale() {\n    let scale;\n    if (this.scaleType === ScaleType.Time) {\n      scale = scaleTime().range([0, this.dims.width]).domain(this.xDomain);\n    } else if (this.scaleType === ScaleType.Linear) {\n      scale = scaleLinear().range([0, this.dims.width]).domain(this.xDomain);\n    } else if (this.scaleType === ScaleType.Ordinal) {\n      scale = scalePoint().range([0, this.dims.width]).padding(0.1).domain(this.xDomain);\n    }\n    return scale;\n  }\n  addBrush() {\n    if (this.brush) return;\n    const height = this.height;\n    const width = this.view[0];\n    this.brush = brushX().extent([[0, 0], [width, height]]).on('brush end', ({\n      selection\n    }) => {\n      const newSelection = selection || this.xScale.range();\n      const newDomain = newSelection.map(this.xScale.invert);\n      this.onDomainChange.emit(newDomain);\n      this.cd.markForCheck();\n    });\n    select(this.element).select('.brush').call(this.brush);\n  }\n  updateBrush() {\n    if (!this.brush) return;\n    const height = this.height;\n    const width = this.view[0];\n    this.brush.extent([[0, 0], [width, height]]);\n    select(this.element).select('.brush').call(this.brush);\n    // clear hardcoded properties so they can be defined by CSS\n    select(this.element).select('.selection').attr('fill', undefined).attr('stroke', undefined).attr('fill-opacity', undefined);\n    this.cd.markForCheck();\n  }\n  getDims() {\n    const width = this.view[0];\n    const dims = {\n      width,\n      height: this.height\n    };\n    return dims;\n  }\n}\nTimeline.ɵfac = function Timeline_Factory(t) {\n  return new (t || Timeline)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\nTimeline.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: Timeline,\n  selectors: [[\"g\", \"ngx-charts-timeline\", \"\"]],\n  inputs: {\n    view: \"view\",\n    results: \"results\",\n    scheme: \"scheme\",\n    customColors: \"customColors\",\n    legend: \"legend\",\n    autoScale: \"autoScale\",\n    scaleType: \"scaleType\",\n    height: \"height\"\n  },\n  outputs: {\n    select: \"select\",\n    onDomainChange: \"onDomainChange\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c20,\n  ngContentSelectors: _c2,\n  decls: 7,\n  vars: 4,\n  consts: [[1, \"timeline\"], [\"in\", \"SourceGraphic\", \"type\", \"matrix\", \"values\", \"0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\"], [1, \"embedded-chart\"], [\"x\", \"0\", \"y\", \"0\", 1, \"brush-background\"], [1, \"brush\"]],\n  template: function Timeline_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\", 0);\n      i0.ɵɵelementStart(1, \"filter\");\n      i0.ɵɵelement(2, \"feColorMatrix\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"g\", 2);\n      i0.ɵɵprojection(4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"rect\", 3);\n      i0.ɵɵelement(6, \"g\", 4);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"id\", ctx.filterId);\n      i0.ɵɵadvance(4);\n      i0.ɵɵattribute(\"width\", ctx.view[0])(\"height\", ctx.height);\n    }\n  },\n  styles: [\".timeline .brush-background{fill:#0000000d}.timeline .brush .selection{fill:#0000001a;stroke-width:1px;stroke:#888}.timeline .brush .handle{fill-opacity:0}.timeline .embedded-chart{opacity:.6}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Timeline, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-timeline]',\n      template: `\n    <svg:g class=\"timeline\" [attr.transform]=\"transform\">\n      <svg:filter [attr.id]=\"filterId\">\n        <svg:feColorMatrix\n          in=\"SourceGraphic\"\n          type=\"matrix\"\n          values=\"0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\"\n        />\n      </svg:filter>\n      <svg:g class=\"embedded-chart\">\n        <ng-content></ng-content>\n      </svg:g>\n      <svg:rect x=\"0\" [attr.width]=\"view[0]\" y=\"0\" [attr.height]=\"height\" class=\"brush-background\" />\n      <svg:g class=\"brush\"></svg:g>\n    </svg:g>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".timeline .brush-background{fill:#0000000d}.timeline .brush .selection{fill:#0000001a;stroke-width:1px;stroke:#888}.timeline .brush .handle{fill-opacity:0}.timeline .embedded-chart{opacity:.6}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    view: [{\n      type: Input\n    }],\n    results: [{\n      type: Input\n    }],\n    scheme: [{\n      type: Input\n    }],\n    customColors: [{\n      type: Input\n    }],\n    legend: [{\n      type: Input\n    }],\n    autoScale: [{\n      type: Input\n    }],\n    scaleType: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    onDomainChange: [{\n      type: Output\n    }]\n  });\n})();\nclass AdvancedLegendComponent {\n  constructor() {\n    this.label = 'Total';\n    this.animations = true;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.legendItems = [];\n    this.labelFormatting = label => label;\n    this.percentageFormatting = percentage => percentage;\n    this.defaultValueFormatting = value => value.toLocaleString();\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  getTotal() {\n    return this.data.map(d => Number(d.value)).reduce((sum, d) => sum + d, 0);\n  }\n  update() {\n    this.total = this.getTotal();\n    this.roundedTotal = this.total;\n    this.legendItems = this.getLegendItems();\n  }\n  getLegendItems() {\n    return this.data.map(d => {\n      const label = formatLabel(d.name);\n      const value = d.value;\n      const color = this.colors.getColor(label);\n      const percentage = this.total > 0 ? value / this.total * 100 : 0;\n      const formattedLabel = typeof this.labelFormatting === 'function' ? this.labelFormatting(label) : label;\n      return {\n        _value: value,\n        data: d,\n        value,\n        color,\n        label: formattedLabel,\n        displayLabel: trimLabel(formattedLabel, 20),\n        origialLabel: d.name,\n        percentage: this.percentageFormatting ? this.percentageFormatting(percentage) : percentage.toLocaleString()\n      };\n    });\n  }\n  trackBy(index, item) {\n    return item.label;\n  }\n}\nAdvancedLegendComponent.ɵfac = function AdvancedLegendComponent_Factory(t) {\n  return new (t || AdvancedLegendComponent)();\n};\nAdvancedLegendComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: AdvancedLegendComponent,\n  selectors: [[\"ngx-charts-advanced-legend\"]],\n  inputs: {\n    width: \"width\",\n    data: \"data\",\n    colors: \"colors\",\n    label: \"label\",\n    animations: \"animations\",\n    valueFormatting: \"valueFormatting\",\n    labelFormatting: \"labelFormatting\",\n    percentageFormatting: \"percentageFormatting\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 8,\n  vars: 7,\n  consts: [[1, \"advanced-pie-legend\"], [\"class\", \"total-value\", \"ngx-charts-count-up\", \"\", 3, \"countTo\", \"valueFormatting\", 4, \"ngIf\"], [\"class\", \"total-value\", 4, \"ngIf\"], [1, \"total-label\"], [1, \"legend-items-container\"], [1, \"legend-items\"], [\"tabindex\", \"-1\", \"class\", \"legend-item\", 3, \"mouseenter\", \"mouseleave\", \"click\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-count-up\", \"\", 1, \"total-value\", 3, \"countTo\", \"valueFormatting\"], [1, \"total-value\"], [\"tabindex\", \"-1\", 1, \"legend-item\", 3, \"mouseenter\", \"mouseleave\", \"click\"], [1, \"item-color\"], [\"class\", \"item-value\", \"ngx-charts-count-up\", \"\", 3, \"countTo\", \"valueFormatting\", 4, \"ngIf\"], [\"class\", \"item-value\", 4, \"ngIf\"], [1, \"item-label\"], [\"class\", \"item-percent\", \"ngx-charts-count-up\", \"\", 3, \"countTo\", \"countSuffix\", 4, \"ngIf\"], [\"class\", \"item-percent\", 4, \"ngIf\"], [\"ngx-charts-count-up\", \"\", 1, \"item-value\", 3, \"countTo\", \"valueFormatting\"], [1, \"item-value\"], [\"ngx-charts-count-up\", \"\", 1, \"item-percent\", 3, \"countTo\", \"countSuffix\"], [1, \"item-percent\"]],\n  template: function AdvancedLegendComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, AdvancedLegendComponent_div_1_Template, 1, 2, \"div\", 1);\n      i0.ɵɵtemplate(2, AdvancedLegendComponent_div_2_Template, 2, 1, \"div\", 2);\n      i0.ɵɵelementStart(3, \"div\", 3);\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 4);\n      i0.ɵɵelementStart(6, \"div\", 5);\n      i0.ɵɵtemplate(7, AdvancedLegendComponent_div_7_Template, 8, 7, \"div\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"width\", ctx.width, \"px\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.animations);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.label, \" \");\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.legendItems)(\"ngForTrackBy\", ctx.trackBy);\n    }\n  },\n  directives: [i2.NgIf, i2.NgForOf, CountUpDirective],\n  styles: [\".advanced-pie-legend{float:left;position:relative;top:50%;transform:translateY(-50%)}.advanced-pie-legend .total-value{font-size:36px}.advanced-pie-legend .total-label{font-size:24px;margin-bottom:19px}.advanced-pie-legend .legend-items-container{width:100%}.advanced-pie-legend .legend-items-container .legend-items{white-space:nowrap;overflow:auto}.advanced-pie-legend .legend-items-container .legend-items .legend-item{margin-right:20px;display:inline-block;cursor:pointer}.advanced-pie-legend .legend-items-container .legend-items .legend-item:focus{outline:none}.advanced-pie-legend .legend-items-container .legend-items .legend-item:hover{color:#000;transition:.2s}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-value{font-size:24px;margin-top:-6px;margin-left:11px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-label{font-size:14px;opacity:.7;margin-left:11px;margin-top:-6px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-percent{font-size:24px;opacity:.7;margin-left:11px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-color{border-left:4px solid;width:4px;height:42px;float:left;margin-right:7px}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AdvancedLegendComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-advanced-legend',\n      template: `\n    <div class=\"advanced-pie-legend\" [style.width.px]=\"width\">\n      <div\n        *ngIf=\"animations\"\n        class=\"total-value\"\n        ngx-charts-count-up\n        [countTo]=\"roundedTotal\"\n        [valueFormatting]=\"valueFormatting\"\n      ></div>\n      <div class=\"total-value\" *ngIf=\"!animations\">\n        {{ valueFormatting ? valueFormatting(roundedTotal) : defaultValueFormatting(roundedTotal) }}\n      </div>\n      <div class=\"total-label\">\n        {{ label }}\n      </div>\n      <div class=\"legend-items-container\">\n        <div class=\"legend-items\">\n          <div\n            *ngFor=\"let legendItem of legendItems; trackBy: trackBy\"\n            tabindex=\"-1\"\n            class=\"legend-item\"\n            (mouseenter)=\"activate.emit(legendItem.data)\"\n            (mouseleave)=\"deactivate.emit(legendItem.data)\"\n            (click)=\"select.emit(legendItem.data)\"\n          >\n            <div class=\"item-color\" [style.border-left-color]=\"legendItem.color\"></div>\n            <div\n              *ngIf=\"animations\"\n              class=\"item-value\"\n              ngx-charts-count-up\n              [countTo]=\"legendItem._value\"\n              [valueFormatting]=\"valueFormatting\"\n            ></div>\n            <div *ngIf=\"!animations\" class=\"item-value\">\n              {{ valueFormatting ? valueFormatting(legendItem.value) : defaultValueFormatting(legendItem.value) }}\n            </div>\n            <div class=\"item-label\">{{ legendItem.displayLabel }}</div>\n            <div\n              *ngIf=\"animations\"\n              class=\"item-percent\"\n              ngx-charts-count-up\n              [countTo]=\"legendItem.percentage\"\n              [countSuffix]=\"'%'\"\n            ></div>\n            <div *ngIf=\"!animations\" class=\"item-percent\">{{ legendItem.percentage.toLocaleString() }}%</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".advanced-pie-legend{float:left;position:relative;top:50%;transform:translateY(-50%)}.advanced-pie-legend .total-value{font-size:36px}.advanced-pie-legend .total-label{font-size:24px;margin-bottom:19px}.advanced-pie-legend .legend-items-container{width:100%}.advanced-pie-legend .legend-items-container .legend-items{white-space:nowrap;overflow:auto}.advanced-pie-legend .legend-items-container .legend-items .legend-item{margin-right:20px;display:inline-block;cursor:pointer}.advanced-pie-legend .legend-items-container .legend-items .legend-item:focus{outline:none}.advanced-pie-legend .legend-items-container .legend-items .legend-item:hover{color:#000;transition:.2s}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-value{font-size:24px;margin-top:-6px;margin-left:11px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-label{font-size:14px;opacity:.7;margin-left:11px;margin-top:-6px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-percent{font-size:24px;opacity:.7;margin-left:11px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-color{border-left:4px solid;width:4px;height:42px;float:left;margin-right:7px}\\n\"]\n    }]\n  }], null, {\n    width: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    labelFormatting: [{\n      type: Input\n    }],\n    percentageFormatting: [{\n      type: Input\n    }]\n  });\n})();\nconst COMPONENTS = [AreaComponent, BaseChartComponent, CountUpDirective, TooltipArea, ChartComponent, LegendComponent, LegendEntryComponent, ScaleLegendComponent, CircleComponent, CircleSeriesComponent, GridPanelComponent, GridPanelSeriesComponent, SvgLinearGradientComponent, SvgRadialGradientComponent, Timeline, AdvancedLegendComponent];\nclass ChartCommonModule {}\nChartCommonModule.ɵfac = function ChartCommonModule_Factory(t) {\n  return new (t || ChartCommonModule)();\n};\nChartCommonModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: ChartCommonModule\n});\nChartCommonModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, AxesModule, TooltipModule], CommonModule, AxesModule, TooltipModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ChartCommonModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, AxesModule, TooltipModule],\n      declarations: [...COMPONENTS, VisibilityObserver],\n      exports: [CommonModule, AxesModule, TooltipModule, ...COMPONENTS, VisibilityObserver]\n    }]\n  }], null, null);\n})();\nfunction calculateViewDimensions({\n  width,\n  height,\n  margins,\n  showXAxis = false,\n  showYAxis = false,\n  xAxisHeight = 0,\n  yAxisWidth = 0,\n  showXLabel = false,\n  showYLabel = false,\n  showLegend = false,\n  legendType = ScaleType.Ordinal,\n  legendPosition = LegendPosition.Right,\n  columns = 12\n}) {\n  let xOffset = margins[3];\n  let chartWidth = width;\n  let chartHeight = height - margins[0] - margins[2];\n  if (showLegend && legendPosition === LegendPosition.Right) {\n    if (legendType === ScaleType.Ordinal) {\n      columns -= 2;\n    } else {\n      columns -= 1;\n    }\n  }\n  chartWidth = chartWidth * columns / 12;\n  chartWidth = chartWidth - margins[1] - margins[3];\n  if (showXAxis) {\n    chartHeight -= 5;\n    chartHeight -= xAxisHeight;\n    if (showXLabel) {\n      // text height + spacing between axis label and tick labels\n      const offset = 25 + 5;\n      chartHeight -= offset;\n    }\n  }\n  if (showYAxis) {\n    chartWidth -= 5;\n    chartWidth -= yAxisWidth;\n    xOffset += yAxisWidth;\n    xOffset += 10;\n    if (showYLabel) {\n      // text height + spacing between axis label and tick labels\n      const offset = 25 + 5;\n      chartWidth -= offset;\n      xOffset += offset;\n    }\n  }\n  chartWidth = Math.max(0, chartWidth);\n  chartHeight = Math.max(0, chartHeight);\n  return {\n    width: Math.floor(chartWidth),\n    height: Math.floor(chartHeight),\n    xOffset: Math.floor(xOffset)\n  };\n}\nconst colorSets = [{\n  name: 'vivid',\n  selectable: true,\n  group: ScaleType.Ordinal,\n  domain: ['#647c8a', '#3f51b5', '#2196f3', '#00b862', '#afdf0a', '#a7b61a', '#f3e562', '#ff9800', '#ff5722', '#ff4514']\n}, {\n  name: 'natural',\n  selectable: true,\n  group: ScaleType.Ordinal,\n  domain: ['#bf9d76', '#e99450', '#d89f59', '#f2dfa7', '#a5d7c6', '#7794b1', '#afafaf', '#707160', '#ba9383', '#d9d5c3']\n}, {\n  name: 'cool',\n  selectable: true,\n  group: ScaleType.Ordinal,\n  domain: ['#a8385d', '#7aa3e5', '#a27ea8', '#aae3f5', '#adcded', '#a95963', '#8796c0', '#7ed3ed', '#50abcc', '#ad6886']\n}, {\n  name: 'fire',\n  selectable: true,\n  group: ScaleType.Ordinal,\n  domain: ['#ff3d00', '#bf360c', '#ff8f00', '#ff6f00', '#ff5722', '#e65100', '#ffca28', '#ffab00']\n}, {\n  name: 'solar',\n  selectable: true,\n  group: ScaleType.Linear,\n  domain: ['#fff8e1', '#ffecb3', '#ffe082', '#ffd54f', '#ffca28', '#ffc107', '#ffb300', '#ffa000', '#ff8f00', '#ff6f00']\n}, {\n  name: 'air',\n  selectable: true,\n  group: ScaleType.Linear,\n  domain: ['#e1f5fe', '#b3e5fc', '#81d4fa', '#4fc3f7', '#29b6f6', '#03a9f4', '#039be5', '#0288d1', '#0277bd', '#01579b']\n}, {\n  name: 'aqua',\n  selectable: true,\n  group: ScaleType.Linear,\n  domain: ['#e0f7fa', '#b2ebf2', '#80deea', '#4dd0e1', '#26c6da', '#00bcd4', '#00acc1', '#0097a7', '#00838f', '#006064']\n}, {\n  name: 'flame',\n  selectable: false,\n  group: ScaleType.Ordinal,\n  domain: ['#A10A28', '#D3342D', '#EF6D49', '#FAAD67', '#FDDE90', '#DBED91', '#A9D770', '#6CBA67', '#2C9653', '#146738']\n}, {\n  name: 'ocean',\n  selectable: false,\n  group: ScaleType.Ordinal,\n  domain: ['#1D68FB', '#33C0FC', '#4AFFFE', '#AFFFFF', '#FFFC63', '#FDBD2D', '#FC8A25', '#FA4F1E', '#FA141B', '#BA38D1']\n}, {\n  name: 'forest',\n  selectable: false,\n  group: ScaleType.Ordinal,\n  domain: ['#55C22D', '#C1F33D', '#3CC099', '#AFFFFF', '#8CFC9D', '#76CFFA', '#BA60FB', '#EE6490', '#C42A1C', '#FC9F32']\n}, {\n  name: 'horizon',\n  selectable: false,\n  group: ScaleType.Ordinal,\n  domain: ['#2597FB', '#65EBFD', '#99FDD0', '#FCEE4B', '#FEFCFA', '#FDD6E3', '#FCB1A8', '#EF6F7B', '#CB96E8', '#EFDEE0']\n}, {\n  name: 'neons',\n  selectable: false,\n  group: ScaleType.Ordinal,\n  domain: ['#FF3333', '#FF33FF', '#CC33FF', '#0000FF', '#33CCFF', '#33FFFF', '#33FF66', '#CCFF33', '#FFCC00', '#FF6600']\n}, {\n  name: 'picnic',\n  selectable: false,\n  group: ScaleType.Ordinal,\n  domain: ['#FAC51D', '#66BD6D', '#FAA026', '#29BB9C', '#E96B56', '#55ACD2', '#B7332F', '#2C83C9', '#9166B8', '#92E7E8']\n}, {\n  name: 'night',\n  selectable: false,\n  group: ScaleType.Ordinal,\n  domain: ['#2B1B5A', '#501356', '#183356', '#28203F', '#391B3C', '#1E2B3C', '#120634', '#2D0432', '#051932', '#453080', '#75267D', '#2C507D', '#4B3880', '#752F7D', '#35547D']\n}, {\n  name: 'nightLights',\n  selectable: false,\n  group: ScaleType.Ordinal,\n  domain: ['#4e31a5', '#9c25a7', '#3065ab', '#57468b', '#904497', '#46648b', '#32118d', '#a00fb3', '#1052a2', '#6e51bd', '#b63cc3', '#6c97cb', '#8671c1', '#b455be', '#7496c3']\n}];\nclass ColorHelper {\n  constructor(scheme, type, domain, customColors) {\n    if (typeof scheme === 'string') {\n      scheme = colorSets.find(cs => {\n        return cs.name === scheme;\n      });\n    }\n    this.colorDomain = scheme.domain;\n    this.scaleType = type;\n    this.domain = domain;\n    this.customColors = customColors;\n    this.scale = this.generateColorScheme(scheme, type, this.domain);\n  }\n  generateColorScheme(scheme, type, domain) {\n    if (typeof scheme === 'string') {\n      scheme = colorSets.find(cs => {\n        return cs.name === scheme;\n      });\n    }\n    let colorScale;\n    switch (type) {\n      case ScaleType.Quantile:\n        colorScale = scaleQuantile().range(scheme.domain).domain(domain);\n        break;\n      case ScaleType.Ordinal:\n        colorScale = scaleOrdinal().range(scheme.domain).domain(domain);\n        break;\n      case ScaleType.Linear:\n        {\n          const colorDomain = [...scheme.domain];\n          if (colorDomain.length === 1) {\n            colorDomain.push(colorDomain[0]);\n            this.colorDomain = colorDomain;\n          }\n          const points = range(0, 1, 1.0 / colorDomain.length);\n          colorScale = scaleLinear().range(colorDomain).domain(points);\n        }\n        break;\n      default:\n        break;\n    }\n    return colorScale;\n  }\n  getColor(value) {\n    if (value === undefined || value === null) {\n      throw new Error('Value can not be null');\n    }\n    if (this.scaleType === ScaleType.Linear) {\n      const valueScale = scaleLinear().domain(this.domain).range([0, 1]);\n      return this.scale(valueScale(value));\n    } else {\n      if (typeof this.customColors === 'function') {\n        return this.customColors(value);\n      }\n      const formattedValue = value.toString();\n      let found; // todo type customColors\n      if (this.customColors && this.customColors.length > 0) {\n        found = this.customColors.find(mapping => {\n          return mapping.name.toLowerCase() === formattedValue.toLowerCase();\n        });\n      }\n      if (found) {\n        return found.value;\n      } else {\n        return this.scale(value);\n      }\n    }\n  }\n  getLinearGradientStops(value, start) {\n    if (start === undefined) {\n      start = this.domain[0];\n    }\n    const valueScale = scaleLinear().domain(this.domain).range([0, 1]);\n    const colorValueScale = scaleBand().domain(this.colorDomain).range([0, 1]);\n    const endColor = this.getColor(value);\n    // generate the stops\n    const startVal = valueScale(start);\n    const startColor = this.getColor(start);\n    const endVal = valueScale(value);\n    let i = 1;\n    let currentVal = startVal;\n    const stops = [];\n    stops.push({\n      color: startColor,\n      offset: startVal,\n      originalOffset: startVal,\n      opacity: 1\n    });\n    while (currentVal < endVal && i < this.colorDomain.length) {\n      const color = this.colorDomain[i];\n      const offset = colorValueScale(color);\n      if (offset <= startVal) {\n        i++;\n        continue;\n      }\n      if (offset.toFixed(4) >= (endVal - colorValueScale.bandwidth()).toFixed(4)) {\n        break;\n      }\n      stops.push({\n        color,\n        offset,\n        opacity: 1\n      });\n      currentVal = offset;\n      i++;\n    }\n    if (stops[stops.length - 1].offset < 100) {\n      stops.push({\n        color: endColor,\n        offset: endVal,\n        opacity: 1\n      });\n    }\n    if (endVal === startVal) {\n      stops[0].offset = 0;\n      stops[1].offset = 100;\n    } else {\n      // normalize the offsets into percentages\n      if (stops[stops.length - 1].offset !== 100) {\n        for (const s of stops) {\n          s.offset = (s.offset - startVal) / (endVal - startVal) * 100;\n        }\n      }\n    }\n    return stops;\n  }\n}\n\n/**\n * Based on the data, return an array with unique values.\n *\n * @export\n * @returns array\n */\nfunction getUniqueXDomainValues(results) {\n  const valueSet = new Set();\n  for (const result of results) {\n    for (const d of result.series) {\n      valueSet.add(d.name);\n    }\n  }\n  return Array.from(valueSet);\n}\n/**\n * Get the scaleType of enumerable of values.\n * @returns  'time', 'linear' or 'ordinal'\n */\nfunction getScaleType(values, checkDateType = true) {\n  if (checkDateType) {\n    const allDates = values.every(value => value instanceof Date);\n    if (allDates) {\n      return ScaleType.Time;\n    }\n  }\n  const allNumbers = values.every(value => typeof value === 'number');\n  if (allNumbers) {\n    return ScaleType.Linear;\n  }\n  return ScaleType.Ordinal;\n}\nfunction getXDomainArray(values, xScaleMin, xScaleMax) {\n  const scaleType = getScaleType(values);\n  let xSet = [];\n  let domain = [];\n  if (scaleType === ScaleType.Linear) {\n    values = values.map(v => Number(v));\n  }\n  let min;\n  let max;\n  if (scaleType === ScaleType.Time || scaleType === ScaleType.Linear) {\n    const mappedValues = values.map(v => Number(v));\n    min = xScaleMin ? xScaleMin : Math.min(...mappedValues);\n    max = xScaleMax ? xScaleMax : Math.max(...mappedValues);\n  }\n  if (scaleType === ScaleType.Time) {\n    domain = [new Date(min), new Date(max)];\n    xSet = [...values].sort((a, b) => {\n      const aDate = a.getTime();\n      const bDate = b.getTime();\n      if (aDate > bDate) return 1;\n      if (bDate > aDate) return -1;\n      return 0;\n    });\n  } else if (scaleType === ScaleType.Linear) {\n    domain = [min, max];\n    // Use compare function to sort numbers numerically\n    xSet = [...values].sort((a, b) => a - b);\n  } else {\n    domain = values;\n    xSet = values;\n  }\n  return {\n    domain,\n    xSet,\n    scaleType\n  };\n}\nfunction sortLinear(data, property, direction = 'asc') {\n  return data.sort((a, b) => {\n    if (direction === 'asc') {\n      return a[property] - b[property];\n    } else {\n      return b[property] - a[property];\n    }\n  });\n}\nfunction sortByDomain(data, property, direction = 'asc', domain) {\n  return data.sort((a, b) => {\n    const aVal = a[property];\n    const bVal = b[property];\n    const aIdx = domain.indexOf(aVal);\n    const bIdx = domain.indexOf(bVal);\n    if (direction === 'asc') {\n      return aIdx - bIdx;\n    } else {\n      return bIdx - aIdx;\n    }\n  });\n}\nfunction sortByTime(data, property, direction = 'asc') {\n  return data.sort((a, b) => {\n    const aDate = a[property].getTime();\n    const bDate = b[property].getTime();\n    if (direction === 'asc') {\n      if (aDate > bDate) return 1;\n      if (bDate > aDate) return -1;\n      return 0;\n    } else {\n      if (aDate > bDate) return -1;\n      if (bDate > aDate) return 1;\n      return 0;\n    }\n  });\n}\nclass AreaSeriesComponent {\n  constructor() {\n    this.baseValue = 'auto';\n    this.stacked = false;\n    this.normalized = false;\n    this.animations = true;\n    this.select = new EventEmitter();\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    this.updateGradient();\n    let currentArea;\n    let startingArea;\n    const xProperty = d => {\n      const label = d.name;\n      return this.xScale(label);\n    };\n    if (this.stacked || this.normalized) {\n      currentArea = area().x(xProperty).y0((d, i) => this.yScale(d.d0)).y1((d, i) => this.yScale(d.d1));\n      startingArea = area().x(xProperty).y0(d => this.yScale.range()[0]).y1(d => this.yScale.range()[0]);\n    } else {\n      currentArea = area().x(xProperty).y0(() => this.baseValue === 'auto' ? this.yScale.range()[0] : this.yScale(this.baseValue)).y1(d => this.yScale(d.value));\n      startingArea = area().x(xProperty).y0(d => this.baseValue === 'auto' ? this.yScale.range()[0] : this.yScale(this.baseValue)).y1(d => this.baseValue === 'auto' ? this.yScale.range()[0] : this.yScale(this.baseValue));\n    }\n    currentArea.curve(this.curve);\n    startingArea.curve(this.curve);\n    this.opacity = 0.8;\n    let data = this.data.series;\n    if (this.scaleType === ScaleType.Linear) {\n      data = sortLinear(data, 'name');\n    } else if (this.scaleType === ScaleType.Time) {\n      data = sortByTime(data, 'name');\n    } else {\n      data = sortByDomain(data, 'name', 'asc', this.xScale.domain());\n    }\n    this.path = currentArea(data);\n    this.startingPath = startingArea(data);\n  }\n  updateGradient() {\n    if (this.colors.scaleType === ScaleType.Linear) {\n      this.hasGradient = true;\n      if (this.stacked || this.normalized) {\n        const d0values = this.data.series.map(d => d.d0);\n        const d1values = this.data.series.map(d => d.d1);\n        const max = Math.max(...d1values);\n        const min = Math.min(...d0values);\n        this.gradientStops = this.colors.getLinearGradientStops(max, min);\n      } else {\n        const values = this.data.series.map(d => d.value);\n        const max = Math.max(...values);\n        this.gradientStops = this.colors.getLinearGradientStops(max);\n      }\n    } else {\n      this.hasGradient = false;\n      this.gradientStops = undefined;\n    }\n  }\n  isActive(entry) {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name;\n    });\n    return item !== undefined;\n  }\n  isInactive(entry) {\n    if (!this.activeEntries || this.activeEntries.length === 0) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name;\n    });\n    return item === undefined;\n  }\n}\nAreaSeriesComponent.ɵfac = function AreaSeriesComponent_Factory(t) {\n  return new (t || AreaSeriesComponent)();\n};\nAreaSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: AreaSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-area-series\", \"\"]],\n  inputs: {\n    data: \"data\",\n    xScale: \"xScale\",\n    yScale: \"yScale\",\n    baseValue: \"baseValue\",\n    colors: \"colors\",\n    scaleType: \"scaleType\",\n    stacked: \"stacked\",\n    normalized: \"normalized\",\n    gradient: \"gradient\",\n    curve: \"curve\",\n    activeEntries: \"activeEntries\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c21,\n  decls: 1,\n  vars: 12,\n  consts: [[\"ngx-charts-area\", \"\", 1, \"area-series\", 3, \"data\", \"path\", \"fill\", \"stops\", \"startingPath\", \"opacity\", \"gradient\", \"animations\"]],\n  template: function AreaSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelement(0, \"g\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"active\", ctx.isActive(ctx.data))(\"inactive\", ctx.isInactive(ctx.data));\n      i0.ɵɵproperty(\"data\", ctx.data)(\"path\", ctx.path)(\"fill\", ctx.colors.getColor(ctx.data.name))(\"stops\", ctx.gradientStops)(\"startingPath\", ctx.startingPath)(\"opacity\", ctx.opacity)(\"gradient\", ctx.gradient || ctx.hasGradient)(\"animations\", ctx.animations);\n    }\n  },\n  directives: [AreaComponent],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AreaSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-area-series]',\n      template: `\n    <svg:g\n      ngx-charts-area\n      class=\"area-series\"\n      [data]=\"data\"\n      [path]=\"path\"\n      [fill]=\"colors.getColor(data.name)\"\n      [stops]=\"gradientStops\"\n      [startingPath]=\"startingPath\"\n      [opacity]=\"opacity\"\n      [gradient]=\"gradient || hasGradient\"\n      [animations]=\"animations\"\n      [class.active]=\"isActive(data)\"\n      [class.inactive]=\"isInactive(data)\"\n    />\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    data: [{\n      type: Input\n    }],\n    xScale: [{\n      type: Input\n    }],\n    yScale: [{\n      type: Input\n    }],\n    baseValue: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    scaleType: [{\n      type: Input\n    }],\n    stacked: [{\n      type: Input\n    }],\n    normalized: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    curve: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }]\n  });\n})();\nclass AreaChartComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legend = false;\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.xAxis = false;\n    this.yAxis = false;\n    this.baseValue = 'auto';\n    this.autoScale = false;\n    this.timeline = false;\n    this.showGridLines = true;\n    this.curve = curveLinear;\n    this.activeEntries = [];\n    this.trimXAxisTicks = true;\n    this.trimYAxisTicks = true;\n    this.rotateXAxisTicks = true;\n    this.maxXAxisTickLength = 16;\n    this.maxYAxisTickLength = 16;\n    this.roundDomains = false;\n    this.tooltipDisabled = false;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.timelineHeight = 50;\n    this.timelinePadding = 10;\n    this.trackBy = (index, item) => {\n      return item.name;\n    };\n  }\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n    if (this.timeline) {\n      this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\n    }\n    this.xDomain = this.getXDomain();\n    if (this.filteredDomain) {\n      this.xDomain = this.filteredDomain;\n    }\n    this.yDomain = this.getYDomain();\n    this.seriesDomain = this.getSeriesDomain();\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    this.yScale = this.getYScale(this.yDomain, this.dims.height);\n    this.updateTimeline();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset}, ${this.margin[0]})`;\n    this.clipPathId = 'clip' + id().toString();\n    this.clipPath = `url(#${this.clipPathId})`;\n  }\n  updateTimeline() {\n    if (this.timeline) {\n      this.timelineWidth = this.dims.width;\n      this.timelineXDomain = this.getXDomain();\n      this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n      this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n      this.timelineTransform = `translate(${this.dims.xOffset}, ${-this.margin[2]})`;\n    }\n  }\n  getXDomain() {\n    let values = getUniqueXDomainValues(this.results);\n    this.scaleType = getScaleType(values);\n    let domain = [];\n    if (this.scaleType === ScaleType.Linear) {\n      values = values.map(v => Number(v));\n    }\n    let min;\n    let max;\n    if (this.scaleType === ScaleType.Time || this.scaleType === ScaleType.Linear) {\n      min = this.xScaleMin ? this.xScaleMin : Math.min(...values);\n      max = this.xScaleMax ? this.xScaleMax : Math.max(...values);\n    }\n    if (this.scaleType === ScaleType.Time) {\n      domain = [new Date(min), new Date(max)];\n      this.xSet = [...values].sort((a, b) => {\n        const aDate = a.getTime();\n        const bDate = b.getTime();\n        if (aDate > bDate) return 1;\n        if (bDate > aDate) return -1;\n        return 0;\n      });\n    } else if (this.scaleType === ScaleType.Linear) {\n      domain = [min, max];\n      // Use compare function to sort numbers numerically\n      this.xSet = [...values].sort((a, b) => a - b);\n    } else {\n      domain = values;\n      this.xSet = values;\n    }\n    return domain;\n  }\n  getYDomain() {\n    const domain = [];\n    for (const results of this.results) {\n      for (const d of results.series) {\n        if (!domain.includes(d.value)) {\n          domain.push(d.value);\n        }\n      }\n    }\n    const values = [...domain];\n    if (!this.autoScale) {\n      values.push(0);\n    }\n    if (this.baseValue !== 'auto') {\n      values.push(this.baseValue);\n    }\n    const min = this.yScaleMin ? this.yScaleMin : Math.min(...values);\n    const max = this.yScaleMax ? this.yScaleMax : Math.max(...values);\n    return [min, max];\n  }\n  getSeriesDomain() {\n    return this.results.map(d => d.name);\n  }\n  getXScale(domain, width) {\n    let scale;\n    if (this.scaleType === ScaleType.Time) {\n      scale = scaleTime();\n    } else if (this.scaleType === ScaleType.Linear) {\n      scale = scaleLinear();\n    } else if (this.scaleType === ScaleType.Ordinal) {\n      scale = scalePoint().padding(0.1);\n    }\n    scale.range([0, width]).domain(domain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  getYScale(domain, height) {\n    const scale = scaleLinear().range([height, 0]).domain(domain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  getScaleType(values) {\n    let date = true;\n    let num = true;\n    for (const value of values) {\n      if (isDate(value)) {\n        date = false;\n      }\n      if (isNumber(value)) {\n        num = false;\n      }\n    }\n    if (date) {\n      return ScaleType.Time;\n    }\n    if (num) {\n      return ScaleType.Linear;\n    }\n    return ScaleType.Ordinal;\n  }\n  updateDomain(domain) {\n    this.filteredDomain = domain;\n    this.xDomain = this.filteredDomain;\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n  }\n  updateHoveredVertical(item) {\n    this.hoveredVertical = item.value;\n    this.deactivateAll();\n  }\n  hideCircles() {\n    this.hoveredVertical = null;\n    this.deactivateAll();\n  }\n  onClick(data, series) {\n    if (series) {\n      data.series = series.name;\n    }\n    this.select.emit(data);\n  }\n  setColors() {\n    let domain;\n    if (this.schemeType === ScaleType.Ordinal) {\n      domain = this.seriesDomain;\n    } else {\n      domain = this.yDomain;\n    }\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === ScaleType.Ordinal) {\n      opts.domain = this.seriesDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.yDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n  onActivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    if (idx > -1) {\n      return;\n    }\n    this.activeEntries = [item, ...this.activeEntries];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  deactivateAll() {\n    this.activeEntries = [...this.activeEntries];\n    for (const entry of this.activeEntries) {\n      this.deactivate.emit({\n        value: entry,\n        entries: []\n      });\n    }\n    this.activeEntries = [];\n  }\n}\nAreaChartComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵAreaChartComponent_BaseFactory;\n  return function AreaChartComponent_Factory(t) {\n    return (ɵAreaChartComponent_BaseFactory || (ɵAreaChartComponent_BaseFactory = i0.ɵɵgetInheritedFactory(AreaChartComponent)))(t || AreaChartComponent);\n  };\n}();\nAreaChartComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: AreaChartComponent,\n  selectors: [[\"ngx-charts-area-chart\"]],\n  contentQueries: function AreaChartComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n      i0.ɵɵcontentQuery(dirIndex, _c23, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.seriesTooltipTemplate = _t.first);\n    }\n  },\n  hostBindings: function AreaChartComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mouseleave\", function AreaChartComponent_mouseleave_HostBindingHandler() {\n        return ctx.hideCircles();\n      });\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    baseValue: \"baseValue\",\n    autoScale: \"autoScale\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    timeline: \"timeline\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    curve: \"curve\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    roundDomains: \"roundDomains\",\n    tooltipDisabled: \"tooltipDisabled\",\n    xScaleMin: \"xScaleMin\",\n    xScaleMax: \"xScaleMax\",\n    yScaleMin: \"yScaleMin\",\n    yScaleMax: \"yScaleMax\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 11,\n  vars: 20,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"], [1, \"area-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"mouseleave\", 4, \"ngIf\"], [\"ngx-charts-timeline\", \"\", 3, \"results\", \"view\", \"height\", \"scheme\", \"customColors\", \"legend\", \"scaleType\", \"onDomainChange\", 4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\"], [\"ngx-charts-area-series\", \"\", 3, \"xScale\", \"yScale\", \"baseValue\", \"colors\", \"data\", \"activeEntries\", \"scaleType\", \"gradient\", \"curve\", \"animations\"], [3, \"mouseleave\"], [\"ngx-charts-tooltip-area\", \"\", 3, \"dims\", \"xSet\", \"xScale\", \"yScale\", \"results\", \"colors\", \"tooltipDisabled\", \"tooltipTemplate\", \"hover\"], [4, \"ngFor\", \"ngForOf\"], [\"ngx-charts-circle-series\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"activeEntries\", \"data\", \"scaleType\", \"visibleValue\", \"tooltipDisabled\", \"tooltipTemplate\", \"select\", \"activate\", \"deactivate\"], [\"ngx-charts-timeline\", \"\", 3, \"results\", \"view\", \"height\", \"scheme\", \"customColors\", \"legend\", \"scaleType\", \"onDomainChange\"], [\"ngx-charts-area-series\", \"\", 3, \"xScale\", \"yScale\", \"baseValue\", \"colors\", \"data\", \"scaleType\", \"gradient\", \"curve\", \"animations\"]],\n  template: function AreaChartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelClick\", function AreaChartComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      })(\"legendLabelActivate\", function AreaChartComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event);\n      })(\"legendLabelDeactivate\", function AreaChartComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"defs\");\n      i0.ɵɵelementStart(2, \"clipPath\");\n      i0.ɵɵelement(3, \"rect\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"g\", 1);\n      i0.ɵɵtemplate(5, AreaChartComponent__svg_g_5_Template, 1, 10, \"g\", 2);\n      i0.ɵɵtemplate(6, AreaChartComponent__svg_g_6_Template, 1, 9, \"g\", 3);\n      i0.ɵɵelementStart(7, \"g\");\n      i0.ɵɵtemplate(8, AreaChartComponent__svg_g_8_Template, 2, 10, \"g\", 4);\n      i0.ɵɵtemplate(9, AreaChartComponent__svg_g_9_Template, 3, 9, \"g\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(10, AreaChartComponent__svg_g_10_Template, 2, 13, \"g\", 6);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(17, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(2);\n      i0.ɵɵattribute(\"id\", ctx.clipPathId);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"width\", ctx.dims.width + 10)(\"height\", ctx.dims.height + 10)(\"transform\", \"translate(-5, -5)\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"clip-path\", ctx.clipPath);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.results)(\"ngForTrackBy\", ctx.trackBy);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.tooltipDisabled);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.timeline && ctx.scaleType != \"ordinal\");\n    }\n  },\n  directives: [ChartComponent, i2.NgIf, i2.NgForOf, XAxisComponent, YAxisComponent, AreaSeriesComponent, TooltipArea, CircleSeriesComponent, Timeline],\n  styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AreaChartComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-area-chart',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-area-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [baseValue]=\"baseValue\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [scaleType]=\"scaleType\"\n              [gradient]=\"gradient\"\n              [curve]=\"curve\"\n              [animations]=\"animations\"\n            />\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results\">\n              <svg:g\n                ngx-charts-circle-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [activeEntries]=\"activeEntries\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event, series)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\"\n        [scaleType]=\"scaleType\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-area-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [baseValue]=\"baseValue\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [gradient]=\"gradient\"\n            [curve]=\"curve\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    baseValue: [{\n      type: Input\n    }],\n    autoScale: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    timeline: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    curve: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    xScaleMin: [{\n      type: Input\n    }],\n    xScaleMax: [{\n      type: Input\n    }],\n    yScaleMin: [{\n      type: Input\n    }],\n    yScaleMax: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }],\n    seriesTooltipTemplate: [{\n      type: ContentChild,\n      args: ['seriesTooltipTemplate']\n    }],\n    hideCircles: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  });\n})();\nclass AreaChartNormalizedComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legend = false;\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.showXAxisLabel = false;\n    this.showYAxisLabel = false;\n    this.showGridLines = true;\n    this.curve = curveLinear;\n    this.activeEntries = [];\n    this.trimXAxisTicks = true;\n    this.trimYAxisTicks = true;\n    this.rotateXAxisTicks = true;\n    this.maxXAxisTickLength = 16;\n    this.maxYAxisTickLength = 16;\n    this.roundDomains = false;\n    this.tooltipDisabled = false;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.yDomain = [0, 100];\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.seriesType = SeriesType;\n    this.timelineHeight = 50;\n    this.timelinePadding = 10;\n    this.trackBy = (index, item) => {\n      return item.name;\n    };\n  }\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n    if (this.timeline) {\n      this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\n    }\n    this.xDomain = this.getXDomain();\n    if (this.filteredDomain) {\n      this.xDomain = this.filteredDomain;\n    }\n    this.seriesDomain = this.getSeriesDomain();\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    this.yScale = this.getYScale(this.yDomain, this.dims.height);\n    for (let i = 0; i < this.xSet.length; i++) {\n      const val = this.xSet[i];\n      let d0 = 0;\n      let total = 0;\n      for (const group of this.results) {\n        const d = group.series.find(item => {\n          let a = item.name;\n          let b = val;\n          if (this.scaleType === ScaleType.Time) {\n            a = a.valueOf();\n            b = b.valueOf();\n          }\n          return a === b;\n        });\n        if (d) {\n          total += d.value;\n        }\n      }\n      for (const group of this.results) {\n        let d = group.series.find(item => {\n          let a = item.name;\n          let b = val;\n          if (this.scaleType === ScaleType.Time) {\n            a = a.valueOf();\n            b = b.valueOf();\n          }\n          return a === b;\n        });\n        if (d) {\n          d.d0 = d0;\n          d.d1 = d0 + d.value;\n          d0 += d.value;\n        } else {\n          d = {\n            name: val,\n            value: 0,\n            d0,\n            d1: d0\n          };\n          group.series.push(d);\n        }\n        if (total > 0) {\n          d.d0 = d.d0 * 100 / total;\n          d.d1 = d.d1 * 100 / total;\n        } else {\n          d.d0 = 0;\n          d.d1 = 0;\n        }\n      }\n    }\n    this.updateTimeline();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    this.clipPathId = 'clip' + id().toString();\n    this.clipPath = `url(#${this.clipPathId})`;\n  }\n  updateTimeline() {\n    if (this.timeline) {\n      this.timelineWidth = this.dims.width;\n      this.timelineXDomain = this.getXDomain();\n      this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n      this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n      this.timelineTransform = `translate(${this.dims.xOffset}, ${-this.margin[2]})`;\n    }\n  }\n  getXDomain() {\n    let values = getUniqueXDomainValues(this.results);\n    this.scaleType = getScaleType(values);\n    let domain = [];\n    if (this.scaleType === ScaleType.Time) {\n      const min = Math.min(...values);\n      const max = Math.max(...values);\n      domain = [new Date(min), new Date(max)];\n      this.xSet = [...values].sort((a, b) => {\n        const aDate = a.getTime();\n        const bDate = b.getTime();\n        if (aDate > bDate) return 1;\n        if (bDate > aDate) return -1;\n        return 0;\n      });\n    } else if (this.scaleType === ScaleType.Linear) {\n      values = values.map(v => Number(v));\n      const min = Math.min(...values);\n      const max = Math.max(...values);\n      domain = [min, max];\n      // Use compare function to sort numbers numerically\n      this.xSet = [...values].sort((a, b) => a - b);\n    } else {\n      domain = values;\n      this.xSet = values;\n    }\n    return domain;\n  }\n  getSeriesDomain() {\n    return this.results.map(d => d.name);\n  }\n  getXScale(domain, width) {\n    let scale;\n    if (this.scaleType === ScaleType.Time) {\n      scale = scaleTime();\n    } else if (this.scaleType === ScaleType.Linear) {\n      scale = scaleLinear();\n    } else if (this.scaleType === ScaleType.Ordinal) {\n      scale = scalePoint().padding(0.1);\n    }\n    scale.range([0, width]).domain(domain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  getYScale(domain, height) {\n    const scale = scaleLinear().range([height, 0]).domain(domain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  updateDomain(domain) {\n    this.filteredDomain = domain;\n    this.xDomain = this.filteredDomain;\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n  }\n  updateHoveredVertical(item) {\n    this.hoveredVertical = item.value;\n    this.deactivateAll();\n  }\n  hideCircles() {\n    this.hoveredVertical = null;\n    this.deactivateAll();\n  }\n  onClick(data, series) {\n    if (series) {\n      data.series = series.name;\n    }\n    this.select.emit(data);\n  }\n  setColors() {\n    let domain;\n    if (this.schemeType === ScaleType.Ordinal) {\n      domain = this.seriesDomain;\n    } else {\n      domain = this.yDomain;\n    }\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === ScaleType.Ordinal) {\n      opts.domain = this.seriesDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.yDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n  onActivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    if (idx > -1) {\n      return;\n    }\n    this.activeEntries = [item, ...this.activeEntries];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  deactivateAll() {\n    this.activeEntries = [...this.activeEntries];\n    for (const entry of this.activeEntries) {\n      this.deactivate.emit({\n        value: entry,\n        entries: []\n      });\n    }\n    this.activeEntries = [];\n  }\n}\nAreaChartNormalizedComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵAreaChartNormalizedComponent_BaseFactory;\n  return function AreaChartNormalizedComponent_Factory(t) {\n    return (ɵAreaChartNormalizedComponent_BaseFactory || (ɵAreaChartNormalizedComponent_BaseFactory = i0.ɵɵgetInheritedFactory(AreaChartNormalizedComponent)))(t || AreaChartNormalizedComponent);\n  };\n}();\nAreaChartNormalizedComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: AreaChartNormalizedComponent,\n  selectors: [[\"ngx-charts-area-chart-normalized\"]],\n  contentQueries: function AreaChartNormalizedComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n      i0.ɵɵcontentQuery(dirIndex, _c23, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.seriesTooltipTemplate = _t.first);\n    }\n  },\n  hostBindings: function AreaChartNormalizedComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mouseleave\", function AreaChartNormalizedComponent_mouseleave_HostBindingHandler() {\n        return ctx.hideCircles();\n      });\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    timeline: \"timeline\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    curve: \"curve\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    roundDomains: \"roundDomains\",\n    tooltipDisabled: \"tooltipDisabled\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 11,\n  vars: 20,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"], [1, \"area-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"mouseleave\", 4, \"ngIf\"], [\"ngx-charts-timeline\", \"\", 3, \"results\", \"view\", \"height\", \"scheme\", \"customColors\", \"legend\", \"scaleType\", \"onDomainChange\", 4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\"], [\"ngx-charts-area-series\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"data\", \"scaleType\", \"activeEntries\", \"gradient\", \"normalized\", \"curve\", \"animations\"], [3, \"mouseleave\"], [\"ngx-charts-tooltip-area\", \"\", 3, \"dims\", \"xSet\", \"xScale\", \"yScale\", \"results\", \"colors\", \"showPercentage\", \"tooltipDisabled\", \"tooltipTemplate\", \"hover\"], [4, \"ngFor\", \"ngForOf\"], [\"ngx-charts-circle-series\", \"\", 3, \"type\", \"xScale\", \"yScale\", \"colors\", \"activeEntries\", \"data\", \"scaleType\", \"visibleValue\", \"tooltipDisabled\", \"tooltipTemplate\", \"select\", \"activate\", \"deactivate\"], [\"ngx-charts-timeline\", \"\", 3, \"results\", \"view\", \"height\", \"scheme\", \"customColors\", \"legend\", \"scaleType\", \"onDomainChange\"], [\"ngx-charts-area-series\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"data\", \"scaleType\", \"gradient\", \"normalized\", \"curve\", \"animations\"]],\n  template: function AreaChartNormalizedComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelClick\", function AreaChartNormalizedComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      })(\"legendLabelActivate\", function AreaChartNormalizedComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event);\n      })(\"legendLabelDeactivate\", function AreaChartNormalizedComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"defs\");\n      i0.ɵɵelementStart(2, \"clipPath\");\n      i0.ɵɵelement(3, \"rect\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"g\", 1);\n      i0.ɵɵtemplate(5, AreaChartNormalizedComponent__svg_g_5_Template, 1, 10, \"g\", 2);\n      i0.ɵɵtemplate(6, AreaChartNormalizedComponent__svg_g_6_Template, 1, 9, \"g\", 3);\n      i0.ɵɵelementStart(7, \"g\");\n      i0.ɵɵtemplate(8, AreaChartNormalizedComponent__svg_g_8_Template, 2, 10, \"g\", 4);\n      i0.ɵɵtemplate(9, AreaChartNormalizedComponent__svg_g_9_Template, 3, 10, \"g\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(10, AreaChartNormalizedComponent__svg_g_10_Template, 2, 13, \"g\", 6);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(17, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(2);\n      i0.ɵɵattribute(\"id\", ctx.clipPathId);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"width\", ctx.dims.width + 10)(\"height\", ctx.dims.height + 10)(\"transform\", \"translate(-5, -5)\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"clip-path\", ctx.clipPath);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.results)(\"ngForTrackBy\", ctx.trackBy);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.tooltipDisabled);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.timeline && ctx.scaleType != \"ordinal\");\n    }\n  },\n  directives: [ChartComponent, i2.NgIf, i2.NgForOf, XAxisComponent, YAxisComponent, AreaSeriesComponent, TooltipArea, CircleSeriesComponent, Timeline],\n  styles: [_c25],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AreaChartNormalizedComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-area-chart-normalized',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-area-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [scaleType]=\"scaleType\"\n              [activeEntries]=\"activeEntries\"\n              [gradient]=\"gradient\"\n              [normalized]=\"true\"\n              [curve]=\"curve\"\n              [animations]=\"animations\"\n            />\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [showPercentage]=\"true\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results\">\n              <svg:g\n                ngx-charts-circle-series\n                [type]=\"seriesType.Stacked\"\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [activeEntries]=\"activeEntries\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event, series)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\"\n        [scaleType]=\"scaleType\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-area-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [gradient]=\"gradient\"\n            [normalized]=\"true\"\n            [curve]=\"curve\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    timeline: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    curve: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }],\n    seriesTooltipTemplate: [{\n      type: ContentChild,\n      args: ['seriesTooltipTemplate']\n    }],\n    hideCircles: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  });\n})();\nclass AreaChartStackedComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legend = false;\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.xAxis = false;\n    this.yAxis = false;\n    this.timeline = false;\n    this.showGridLines = true;\n    this.curve = curveLinear;\n    this.activeEntries = [];\n    this.trimXAxisTicks = true;\n    this.trimYAxisTicks = true;\n    this.rotateXAxisTicks = true;\n    this.maxXAxisTickLength = 16;\n    this.maxYAxisTickLength = 16;\n    this.roundDomains = false;\n    this.tooltipDisabled = false;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.timelineHeight = 50;\n    this.timelinePadding = 10;\n    this.seriesType = SeriesType;\n  }\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n    if (this.timeline) {\n      this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\n    }\n    this.xDomain = this.getXDomain();\n    if (this.filteredDomain) {\n      this.xDomain = this.filteredDomain;\n    }\n    this.yDomain = this.getYDomain();\n    this.seriesDomain = this.getSeriesDomain();\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    this.yScale = this.getYScale(this.yDomain, this.dims.height);\n    for (let i = 0; i < this.xSet.length; i++) {\n      const val = this.xSet[i];\n      let d0 = 0;\n      for (const group of this.results) {\n        let d = group.series.find(item => {\n          let a = item.name;\n          let b = val;\n          if (this.scaleType === ScaleType.Time) {\n            a = a.valueOf();\n            b = b.valueOf();\n          }\n          return a === b;\n        });\n        if (d) {\n          d.d0 = d0;\n          d.d1 = d0 + d.value;\n          d0 += d.value;\n        } else {\n          d = {\n            name: val,\n            value: 0,\n            d0,\n            d1: d0\n          };\n          group.series.push(d);\n        }\n      }\n    }\n    this.updateTimeline();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    this.clipPathId = 'clip' + id().toString();\n    this.clipPath = `url(#${this.clipPathId})`;\n  }\n  updateTimeline() {\n    if (this.timeline) {\n      this.timelineWidth = this.dims.width;\n      this.timelineXDomain = this.getXDomain();\n      this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n      this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n      this.timelineTransform = `translate(${this.dims.xOffset}, ${-this.margin[2]})`;\n    }\n  }\n  getXDomain() {\n    let values = getUniqueXDomainValues(this.results);\n    this.scaleType = getScaleType(values);\n    let domain = [];\n    if (this.scaleType === ScaleType.Linear) {\n      values = values.map(v => Number(v));\n    }\n    let min;\n    let max;\n    if (this.scaleType === ScaleType.Time || this.scaleType === ScaleType.Linear) {\n      min = this.xScaleMin ? this.xScaleMin : Math.min(...values);\n      max = this.xScaleMax ? this.xScaleMax : Math.max(...values);\n    }\n    if (this.scaleType === ScaleType.Time) {\n      domain = [new Date(min), new Date(max)];\n      this.xSet = [...values].sort((a, b) => {\n        const aDate = a.getTime();\n        const bDate = b.getTime();\n        if (aDate > bDate) return 1;\n        if (bDate > aDate) return -1;\n        return 0;\n      });\n    } else if (this.scaleType === ScaleType.Linear) {\n      domain = [min, max];\n      // Use compare function to sort numbers numerically\n      this.xSet = [...values].sort((a, b) => a - b);\n    } else {\n      domain = values;\n      this.xSet = values;\n    }\n    return domain;\n  }\n  getYDomain() {\n    const domain = [];\n    for (let i = 0; i < this.xSet.length; i++) {\n      const val = this.xSet[i];\n      let sum = 0;\n      for (const group of this.results) {\n        const d = group.series.find(item => {\n          let a = item.name;\n          let b = val;\n          if (this.scaleType === ScaleType.Time) {\n            a = a.valueOf();\n            b = b.valueOf();\n          }\n          return a === b;\n        });\n        if (d) {\n          sum += d.value;\n        }\n      }\n      domain.push(sum);\n    }\n    const min = this.yScaleMin ? this.yScaleMin : Math.min(0, ...domain);\n    const max = this.yScaleMax ? this.yScaleMax : Math.max(...domain);\n    return [min, max];\n  }\n  getSeriesDomain() {\n    return this.results.map(d => d.name);\n  }\n  getXScale(domain, width) {\n    let scale;\n    if (this.scaleType === ScaleType.Time) {\n      scale = scaleTime();\n    } else if (this.scaleType === ScaleType.Linear) {\n      scale = scaleLinear();\n    } else if (this.scaleType === ScaleType.Ordinal) {\n      scale = scalePoint().padding(0.1);\n    }\n    scale.range([0, width]).domain(domain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  getYScale(domain, height) {\n    const scale = scaleLinear().range([height, 0]).domain(domain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  updateDomain(domain) {\n    this.filteredDomain = domain;\n    this.xDomain = this.filteredDomain;\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n  }\n  updateHoveredVertical(item) {\n    this.hoveredVertical = item.value;\n    this.deactivateAll();\n  }\n  hideCircles() {\n    this.hoveredVertical = null;\n    this.deactivateAll();\n  }\n  onClick(data, series) {\n    if (series) {\n      data.series = series.name;\n    }\n    this.select.emit(data);\n  }\n  trackBy(index, item) {\n    return `${item.name}`;\n  }\n  setColors() {\n    let domain;\n    if (this.schemeType === ScaleType.Ordinal) {\n      domain = this.seriesDomain;\n    } else {\n      domain = this.yDomain;\n    }\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === ScaleType.Ordinal) {\n      opts.domain = this.seriesDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.yDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n  onActivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    if (idx > -1) {\n      return;\n    }\n    this.activeEntries = [item, ...this.activeEntries];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  deactivateAll() {\n    this.activeEntries = [...this.activeEntries];\n    for (const entry of this.activeEntries) {\n      this.deactivate.emit({\n        value: entry,\n        entries: []\n      });\n    }\n    this.activeEntries = [];\n  }\n}\nAreaChartStackedComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵAreaChartStackedComponent_BaseFactory;\n  return function AreaChartStackedComponent_Factory(t) {\n    return (ɵAreaChartStackedComponent_BaseFactory || (ɵAreaChartStackedComponent_BaseFactory = i0.ɵɵgetInheritedFactory(AreaChartStackedComponent)))(t || AreaChartStackedComponent);\n  };\n}();\nAreaChartStackedComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: AreaChartStackedComponent,\n  selectors: [[\"ngx-charts-area-chart-stacked\"]],\n  contentQueries: function AreaChartStackedComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n      i0.ɵɵcontentQuery(dirIndex, _c23, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.seriesTooltipTemplate = _t.first);\n    }\n  },\n  hostBindings: function AreaChartStackedComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mouseleave\", function AreaChartStackedComponent_mouseleave_HostBindingHandler() {\n        return ctx.hideCircles();\n      });\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    timeline: \"timeline\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    curve: \"curve\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    roundDomains: \"roundDomains\",\n    tooltipDisabled: \"tooltipDisabled\",\n    xScaleMin: \"xScaleMin\",\n    xScaleMax: \"xScaleMax\",\n    yScaleMin: \"yScaleMin\",\n    yScaleMax: \"yScaleMax\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 11,\n  vars: 20,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"], [1, \"area-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"mouseleave\", 4, \"ngIf\"], [\"ngx-charts-timeline\", \"\", 3, \"results\", \"view\", \"height\", \"scheme\", \"customColors\", \"legend\", \"scaleType\", \"onDomainChange\", 4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\"], [\"ngx-charts-area-series\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"data\", \"scaleType\", \"gradient\", \"activeEntries\", \"stacked\", \"curve\", \"animations\"], [3, \"mouseleave\"], [\"ngx-charts-tooltip-area\", \"\", 3, \"dims\", \"xSet\", \"xScale\", \"yScale\", \"results\", \"colors\", \"tooltipDisabled\", \"tooltipTemplate\", \"hover\"], [\"ngx-charts-circle-series\", \"\", 3, \"type\", \"xScale\", \"yScale\", \"colors\", \"activeEntries\", \"data\", \"scaleType\", \"visibleValue\", \"tooltipDisabled\", \"tooltipTemplate\", \"select\", \"activate\", \"deactivate\"], [\"ngx-charts-timeline\", \"\", 3, \"results\", \"view\", \"height\", \"scheme\", \"customColors\", \"legend\", \"scaleType\", \"onDomainChange\"], [\"ngx-charts-area-series\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"data\", \"scaleType\", \"gradient\", \"stacked\", \"curve\", \"animations\"]],\n  template: function AreaChartStackedComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelClick\", function AreaChartStackedComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      })(\"legendLabelActivate\", function AreaChartStackedComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event);\n      })(\"legendLabelDeactivate\", function AreaChartStackedComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"defs\");\n      i0.ɵɵelementStart(2, \"clipPath\");\n      i0.ɵɵelement(3, \"rect\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"g\", 1);\n      i0.ɵɵtemplate(5, AreaChartStackedComponent__svg_g_5_Template, 1, 10, \"g\", 2);\n      i0.ɵɵtemplate(6, AreaChartStackedComponent__svg_g_6_Template, 1, 9, \"g\", 3);\n      i0.ɵɵelementStart(7, \"g\");\n      i0.ɵɵtemplate(8, AreaChartStackedComponent__svg_g_8_Template, 2, 10, \"g\", 4);\n      i0.ɵɵtemplate(9, AreaChartStackedComponent__svg_g_9_Template, 3, 10, \"g\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(10, AreaChartStackedComponent__svg_g_10_Template, 2, 13, \"g\", 6);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(17, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(2);\n      i0.ɵɵattribute(\"id\", ctx.clipPathId);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"width\", ctx.dims.width + 10)(\"height\", ctx.dims.height + 10)(\"transform\", \"translate(-5, -5)\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"clip-path\", ctx.clipPath);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.results)(\"ngForTrackBy\", ctx.trackBy);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.tooltipDisabled);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.timeline && ctx.scaleType != \"ordinal\");\n    }\n  },\n  directives: [ChartComponent, i2.NgIf, i2.NgForOf, XAxisComponent, YAxisComponent, AreaSeriesComponent, TooltipArea, CircleSeriesComponent, Timeline],\n  styles: [_c25],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AreaChartStackedComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-area-chart-stacked',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-area-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [scaleType]=\"scaleType\"\n              [gradient]=\"gradient\"\n              [activeEntries]=\"activeEntries\"\n              [stacked]=\"true\"\n              [curve]=\"curve\"\n              [animations]=\"animations\"\n            />\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n              <svg:g\n                ngx-charts-circle-series\n                [type]=\"seriesType.Stacked\"\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [activeEntries]=\"activeEntries\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event, series)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\"\n        [scaleType]=\"scaleType\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-area-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [gradient]=\"gradient\"\n            [stacked]=\"true\"\n            [curve]=\"curve\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    timeline: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    curve: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    xScaleMin: [{\n      type: Input\n    }],\n    xScaleMax: [{\n      type: Input\n    }],\n    yScaleMin: [{\n      type: Input\n    }],\n    yScaleMax: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }],\n    seriesTooltipTemplate: [{\n      type: ContentChild,\n      args: ['seriesTooltipTemplate']\n    }],\n    hideCircles: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  });\n})();\nclass AreaChartModule {}\nAreaChartModule.ɵfac = function AreaChartModule_Factory(t) {\n  return new (t || AreaChartModule)();\n};\nAreaChartModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: AreaChartModule\n});\nAreaChartModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ChartCommonModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AreaChartModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ChartCommonModule],\n      declarations: [AreaChartComponent, AreaChartNormalizedComponent, AreaChartStackedComponent, AreaSeriesComponent],\n      exports: [AreaChartComponent, AreaChartNormalizedComponent, AreaChartStackedComponent, AreaSeriesComponent]\n    }]\n  }], null, null);\n})();\nclass BarComponent {\n  constructor(element) {\n    this.roundEdges = true;\n    this.gradient = false;\n    this.offset = 0;\n    this.isActive = false;\n    this.animations = true;\n    this.noBarWhenZero = true;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.hasGradient = false;\n    this.hideBar = false;\n    this.element = element.nativeElement;\n  }\n  ngOnChanges(changes) {\n    if (changes.roundEdges) {\n      this.loadAnimation();\n    }\n    this.update();\n  }\n  update() {\n    this.gradientId = 'grad' + id().toString();\n    this.gradientFill = `url(#${this.gradientId})`;\n    if (this.gradient || this.stops) {\n      this.gradientStops = this.getGradient();\n      this.hasGradient = true;\n    } else {\n      this.hasGradient = false;\n    }\n    this.updatePathEl();\n    this.checkToHideBar();\n  }\n  loadAnimation() {\n    this.path = this.getStartingPath();\n    setTimeout(this.update.bind(this), 100);\n  }\n  updatePathEl() {\n    const node = select(this.element).select('.bar');\n    const path = this.getPath();\n    if (this.animations) {\n      node.transition().duration(500).attr('d', path);\n    } else {\n      node.attr('d', path);\n    }\n  }\n  getGradient() {\n    if (this.stops) {\n      return this.stops;\n    }\n    return [{\n      offset: 0,\n      color: this.fill,\n      opacity: this.getStartOpacity()\n    }, {\n      offset: 100,\n      color: this.fill,\n      opacity: 1\n    }];\n  }\n  getStartingPath() {\n    if (!this.animations) {\n      return this.getPath();\n    }\n    let radius = this.getRadius();\n    let path;\n    if (this.roundEdges) {\n      if (this.orientation === BarOrientation.Vertical) {\n        radius = Math.min(this.height, radius);\n        path = roundedRect(this.x, this.y + this.height, this.width, 1, 0, this.edges);\n      } else if (this.orientation === BarOrientation.Horizontal) {\n        radius = Math.min(this.width, radius);\n        path = roundedRect(this.x, this.y, 1, this.height, 0, this.edges);\n      }\n    } else {\n      if (this.orientation === BarOrientation.Vertical) {\n        path = roundedRect(this.x, this.y + this.height, this.width, 1, 0, this.edges);\n      } else if (this.orientation === BarOrientation.Horizontal) {\n        path = roundedRect(this.x, this.y, 1, this.height, 0, this.edges);\n      }\n    }\n    return path;\n  }\n  getPath() {\n    let radius = this.getRadius();\n    let path;\n    if (this.roundEdges) {\n      if (this.orientation === BarOrientation.Vertical) {\n        radius = Math.min(this.height, radius);\n        path = roundedRect(this.x, this.y, this.width, this.height, radius, this.edges);\n      } else if (this.orientation === BarOrientation.Horizontal) {\n        radius = Math.min(this.width, radius);\n        path = roundedRect(this.x, this.y, this.width, this.height, radius, this.edges);\n      }\n    } else {\n      path = roundedRect(this.x, this.y, this.width, this.height, radius, this.edges);\n    }\n    return path;\n  }\n  getRadius() {\n    let radius = 0;\n    if (this.roundEdges && this.height > 5 && this.width > 5) {\n      radius = Math.floor(Math.min(5, this.height / 2, this.width / 2));\n    }\n    return radius;\n  }\n  getStartOpacity() {\n    if (this.roundEdges) {\n      return 0.2;\n    } else {\n      return 0.5;\n    }\n  }\n  get edges() {\n    let edges = [false, false, false, false];\n    if (this.roundEdges) {\n      if (this.orientation === BarOrientation.Vertical) {\n        if (this.data.value > 0) {\n          edges = [true, true, false, false];\n        } else {\n          edges = [false, false, true, true];\n        }\n      } else if (this.orientation === BarOrientation.Horizontal) {\n        if (this.data.value > 0) {\n          edges = [false, true, false, true];\n        } else {\n          edges = [true, false, true, false];\n        }\n      }\n    }\n    return edges;\n  }\n  onMouseEnter() {\n    this.activate.emit(this.data);\n  }\n  onMouseLeave() {\n    this.deactivate.emit(this.data);\n  }\n  checkToHideBar() {\n    this.hideBar = this.noBarWhenZero && (this.orientation === BarOrientation.Vertical && this.height === 0 || this.orientation === BarOrientation.Horizontal && this.width === 0);\n  }\n}\nBarComponent.ɵfac = function BarComponent_Factory(t) {\n  return new (t || BarComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\nBarComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BarComponent,\n  selectors: [[\"g\", \"ngx-charts-bar\", \"\"]],\n  hostBindings: function BarComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mouseenter\", function BarComponent_mouseenter_HostBindingHandler() {\n        return ctx.onMouseEnter();\n      })(\"mouseleave\", function BarComponent_mouseleave_HostBindingHandler() {\n        return ctx.onMouseLeave();\n      });\n    }\n  },\n  inputs: {\n    fill: \"fill\",\n    data: \"data\",\n    width: \"width\",\n    height: \"height\",\n    x: \"x\",\n    y: \"y\",\n    orientation: \"orientation\",\n    roundEdges: \"roundEdges\",\n    gradient: \"gradient\",\n    offset: \"offset\",\n    isActive: \"isActive\",\n    stops: \"stops\",\n    animations: \"animations\",\n    ariaLabel: \"ariaLabel\",\n    noBarWhenZero: \"noBarWhenZero\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c26,\n  decls: 2,\n  vars: 8,\n  consts: [[4, \"ngIf\"], [\"stroke\", \"none\", \"role\", \"img\", \"tabIndex\", \"-1\", 1, \"bar\", 3, \"click\"], [\"ngx-charts-svg-linear-gradient\", \"\", 3, \"orientation\", \"name\", \"stops\"]],\n  template: function BarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, BarComponent__svg_defs_0_Template, 2, 3, \"defs\", 0);\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"path\", 1);\n      i0.ɵɵlistener(\"click\", function BarComponent_Template__svg_path_click_1_listener() {\n        return ctx.select.emit(ctx.data);\n      });\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.hasGradient);\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"active\", ctx.isActive)(\"hidden\", ctx.hideBar);\n      i0.ɵɵattribute(\"d\", ctx.path)(\"aria-label\", ctx.ariaLabel)(\"fill\", ctx.hasGradient ? ctx.gradientFill : ctx.fill);\n    }\n  },\n  directives: [i2.NgIf, SvgLinearGradientComponent],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BarComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-bar]',\n      template: `\n    <svg:defs *ngIf=\"hasGradient\">\n      <svg:g ngx-charts-svg-linear-gradient [orientation]=\"orientation\" [name]=\"gradientId\" [stops]=\"gradientStops\" />\n    </svg:defs>\n    <svg:path\n      class=\"bar\"\n      stroke=\"none\"\n      role=\"img\"\n      tabIndex=\"-1\"\n      [class.active]=\"isActive\"\n      [class.hidden]=\"hideBar\"\n      [attr.d]=\"path\"\n      [attr.aria-label]=\"ariaLabel\"\n      [attr.fill]=\"hasGradient ? gradientFill : fill\"\n      (click)=\"select.emit(data)\"\n    />\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    fill: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    x: [{\n      type: Input\n    }],\n    y: [{\n      type: Input\n    }],\n    orientation: [{\n      type: Input\n    }],\n    roundEdges: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    offset: [{\n      type: Input\n    }],\n    isActive: [{\n      type: Input\n    }],\n    stops: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    onMouseEnter: [{\n      type: HostListener,\n      args: ['mouseenter']\n    }],\n    onMouseLeave: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  });\n})();\nvar BarChartType;\n(function (BarChartType) {\n  BarChartType[\"Standard\"] = \"standard\";\n  BarChartType[\"Normalized\"] = \"normalized\";\n  BarChartType[\"Stacked\"] = \"stacked\";\n})(BarChartType || (BarChartType = {}));\nvar D0Types;\n(function (D0Types) {\n  D0Types[\"positive\"] = \"positive\";\n  D0Types[\"negative\"] = \"negative\";\n})(D0Types || (D0Types = {}));\nclass BarLabelComponent {\n  constructor(element) {\n    this.dimensionsChanged = new EventEmitter();\n    this.horizontalPadding = 2;\n    this.verticalPadding = 5;\n    this.element = element.nativeElement;\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  getSize() {\n    const h = this.element.getBoundingClientRect().height;\n    const w = this.element.getBoundingClientRect().width;\n    return {\n      height: h,\n      width: w,\n      negative: this.value < 0\n    };\n  }\n  ngAfterViewInit() {\n    this.dimensionsChanged.emit(this.getSize());\n  }\n  update() {\n    if (this.valueFormatting) {\n      this.formatedValue = this.valueFormatting(this.value);\n    } else {\n      this.formatedValue = formatLabel(this.value);\n    }\n    if (this.orientation === 'horizontal') {\n      this.x = this.barX + this.barWidth;\n      // if the value is negative then it's on the left of the x0.\n      // we need to put the data label in front of the bar\n      if (this.value < 0) {\n        this.x = this.x - this.horizontalPadding;\n        this.textAnchor = 'end';\n      } else {\n        this.x = this.x + this.horizontalPadding;\n        this.textAnchor = 'start';\n      }\n      this.y = this.barY + this.barHeight / 2;\n    } else {\n      // orientation must be \"vertical\"\n      this.x = this.barX + this.barWidth / 2;\n      this.y = this.barY + this.barHeight;\n      if (this.value < 0) {\n        this.y = this.y + this.verticalPadding;\n        this.textAnchor = 'end';\n      } else {\n        this.y = this.y - this.verticalPadding;\n        this.textAnchor = 'start';\n      }\n      this.transform = `rotate(-45, ${this.x} , ${this.y})`;\n    }\n  }\n}\nBarLabelComponent.ɵfac = function BarLabelComponent_Factory(t) {\n  return new (t || BarLabelComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\nBarLabelComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BarLabelComponent,\n  selectors: [[\"g\", \"ngx-charts-bar-label\", \"\"]],\n  inputs: {\n    value: \"value\",\n    valueFormatting: \"valueFormatting\",\n    barX: \"barX\",\n    barY: \"barY\",\n    barWidth: \"barWidth\",\n    barHeight: \"barHeight\",\n    orientation: \"orientation\"\n  },\n  outputs: {\n    dimensionsChanged: \"dimensionsChanged\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c27,\n  decls: 2,\n  vars: 5,\n  consts: [[\"alignment-baseline\", \"middle\", 1, \"textDataLabel\"]],\n  template: function BarLabelComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"text\", 0);\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵattribute(\"text-anchor\", ctx.textAnchor)(\"transform\", ctx.transform)(\"x\", ctx.x)(\"y\", ctx.y);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\" \", ctx.formatedValue, \" \");\n    }\n  },\n  styles: [\".textDataLabel[_ngcontent-%COMP%]{font-size:11px}\"],\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BarLabelComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-bar-label]',\n      template: `\n    <svg:text\n      class=\"textDataLabel\"\n      alignment-baseline=\"middle\"\n      [attr.text-anchor]=\"textAnchor\"\n      [attr.transform]=\"transform\"\n      [attr.x]=\"x\"\n      [attr.y]=\"y\"\n    >\n      {{ formatedValue }}\n    </svg:text>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".textDataLabel{font-size:11px}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    value: [{\n      type: Input\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    barX: [{\n      type: Input\n    }],\n    barY: [{\n      type: Input\n    }],\n    barWidth: [{\n      type: Input\n    }],\n    barHeight: [{\n      type: Input\n    }],\n    orientation: [{\n      type: Input\n    }],\n    dimensionsChanged: [{\n      type: Output\n    }]\n  });\n})();\nclass SeriesHorizontal {\n  constructor() {\n    this.type = BarChartType.Standard;\n    this.tooltipDisabled = false;\n    this.animations = true;\n    this.showDataLabel = false;\n    this.noBarWhenZero = true;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.dataLabelWidthChanged = new EventEmitter();\n    this.barsForDataLabels = [];\n    this.barOrientation = BarOrientation;\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    this.updateTooltipSettings();\n    const d0 = {\n      [D0Types.positive]: 0,\n      [D0Types.negative]: 0\n    };\n    let d0Type;\n    d0Type = D0Types.positive;\n    let total;\n    if (this.type === BarChartType.Normalized) {\n      total = this.series.map(d => d.value).reduce((sum, d) => sum + d, 0);\n    }\n    const xScaleMin = Math.max(this.xScale.domain()[0], 0);\n    this.bars = this.series.map(d => {\n      let value = d.value;\n      const label = this.getLabel(d);\n      const formattedLabel = formatLabel(label);\n      const roundEdges = this.roundEdges;\n      d0Type = value > 0 ? D0Types.positive : D0Types.negative;\n      const bar = {\n        value,\n        label,\n        roundEdges,\n        data: d,\n        formattedLabel\n      };\n      bar.height = this.yScale.bandwidth();\n      if (this.type === BarChartType.Standard) {\n        bar.width = Math.abs(this.xScale(value) - this.xScale(xScaleMin));\n        if (value < 0) {\n          bar.x = this.xScale(value);\n        } else {\n          bar.x = this.xScale(xScaleMin);\n        }\n        bar.y = this.yScale(label);\n      } else if (this.type === BarChartType.Stacked) {\n        const offset0 = d0[d0Type];\n        const offset1 = offset0 + value;\n        d0[d0Type] += value;\n        bar.width = this.xScale(offset1) - this.xScale(offset0);\n        bar.x = this.xScale(offset0);\n        bar.y = 0;\n        bar.offset0 = offset0;\n        bar.offset1 = offset1;\n      } else if (this.type === BarChartType.Normalized) {\n        let offset0 = d0[d0Type];\n        let offset1 = offset0 + value;\n        d0[d0Type] += value;\n        if (total > 0) {\n          offset0 = offset0 * 100 / total;\n          offset1 = offset1 * 100 / total;\n        } else {\n          offset0 = 0;\n          offset1 = 0;\n        }\n        bar.width = this.xScale(offset1) - this.xScale(offset0);\n        bar.x = this.xScale(offset0);\n        bar.y = 0;\n        bar.offset0 = offset0;\n        bar.offset1 = offset1;\n        value = (offset1 - offset0).toFixed(2) + '%';\n      }\n      if (this.colors.scaleType === ScaleType.Ordinal) {\n        bar.color = this.colors.getColor(label);\n      } else {\n        if (this.type === BarChartType.Standard) {\n          bar.color = this.colors.getColor(value);\n          bar.gradientStops = this.colors.getLinearGradientStops(value);\n        } else {\n          bar.color = this.colors.getColor(bar.offset1);\n          bar.gradientStops = this.colors.getLinearGradientStops(bar.offset1, bar.offset0);\n        }\n      }\n      let tooltipLabel = formattedLabel;\n      bar.ariaLabel = formattedLabel + ' ' + value.toLocaleString();\n      if (this.seriesName !== null && this.seriesName !== undefined) {\n        tooltipLabel = `${this.seriesName} • ${formattedLabel}`;\n        bar.data.series = this.seriesName;\n        bar.ariaLabel = this.seriesName + ' ' + bar.ariaLabel;\n      }\n      bar.tooltipText = this.tooltipDisabled ? undefined : `\n        <span class=\"tooltip-label\">${escapeLabel(tooltipLabel)}</span>\n        <span class=\"tooltip-val\">${this.dataLabelFormatting ? this.dataLabelFormatting(value) : value.toLocaleString()}</span>\n      `;\n      return bar;\n    });\n    this.updateDataLabels();\n  }\n  updateDataLabels() {\n    if (this.type === BarChartType.Stacked) {\n      this.barsForDataLabels = [];\n      const section = {};\n      section.series = this.seriesName;\n      const totalPositive = this.series.map(d => d.value).reduce((sum, d) => d > 0 ? sum + d : sum, 0);\n      const totalNegative = this.series.map(d => d.value).reduce((sum, d) => d < 0 ? sum + d : sum, 0);\n      section.total = totalPositive + totalNegative;\n      section.x = 0;\n      section.y = 0;\n      // if total is positive then we show it on the right, otherwise on the left\n      if (section.total > 0) {\n        section.width = this.xScale(totalPositive);\n      } else {\n        section.width = this.xScale(totalNegative);\n      }\n      section.height = this.yScale.bandwidth();\n      this.barsForDataLabels.push(section);\n    } else {\n      this.barsForDataLabels = this.series.map(d => {\n        const section = {};\n        section.series = this.seriesName ?? d.label;\n        section.total = d.value;\n        section.x = this.xScale(0);\n        section.y = this.yScale(d.label);\n        section.width = this.xScale(section.total) - this.xScale(0);\n        section.height = this.yScale.bandwidth();\n        return section;\n      });\n    }\n  }\n  updateTooltipSettings() {\n    this.tooltipPlacement = this.tooltipDisabled ? undefined : PlacementTypes.Top;\n    this.tooltipType = this.tooltipDisabled ? undefined : StyleTypes.tooltip;\n  }\n  isActive(entry) {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(active => {\n      return entry.name === active.name && entry.value === active.value;\n    });\n    return item !== undefined;\n  }\n  getLabel(dataItem) {\n    if (dataItem.label) {\n      return dataItem.label;\n    }\n    return dataItem.name;\n  }\n  trackBy(index, bar) {\n    return bar.label;\n  }\n  trackDataLabelBy(index, barLabel) {\n    return index + '#' + barLabel.series + '#' + barLabel.total;\n  }\n  click(data) {\n    this.select.emit(data);\n  }\n}\nSeriesHorizontal.ɵfac = function SeriesHorizontal_Factory(t) {\n  return new (t || SeriesHorizontal)();\n};\nSeriesHorizontal.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: SeriesHorizontal,\n  selectors: [[\"g\", \"ngx-charts-series-horizontal\", \"\"]],\n  inputs: {\n    dims: \"dims\",\n    type: \"type\",\n    series: \"series\",\n    xScale: \"xScale\",\n    yScale: \"yScale\",\n    colors: \"colors\",\n    tooltipDisabled: \"tooltipDisabled\",\n    gradient: \"gradient\",\n    activeEntries: \"activeEntries\",\n    seriesName: \"seriesName\",\n    tooltipTemplate: \"tooltipTemplate\",\n    roundEdges: \"roundEdges\",\n    animations: \"animations\",\n    showDataLabel: \"showDataLabel\",\n    dataLabelFormatting: \"dataLabelFormatting\",\n    noBarWhenZero: \"noBarWhenZero\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\",\n    dataLabelWidthChanged: \"dataLabelWidthChanged\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c28,\n  decls: 2,\n  vars: 3,\n  consts: [[\"ngx-charts-bar\", \"\", \"ngx-tooltip\", \"\", 3, \"width\", \"height\", \"x\", \"y\", \"fill\", \"stops\", \"data\", \"orientation\", \"roundEdges\", \"gradient\", \"isActive\", \"ariaLabel\", \"animations\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"noBarWhenZero\", \"select\", \"activate\", \"deactivate\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [4, \"ngIf\"], [\"ngx-charts-bar\", \"\", \"ngx-tooltip\", \"\", 3, \"width\", \"height\", \"x\", \"y\", \"fill\", \"stops\", \"data\", \"orientation\", \"roundEdges\", \"gradient\", \"isActive\", \"ariaLabel\", \"animations\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"noBarWhenZero\", \"select\", \"activate\", \"deactivate\"], [\"ngx-charts-bar-label\", \"\", 3, \"barX\", \"barY\", \"barWidth\", \"barHeight\", \"value\", \"valueFormatting\", \"orientation\", \"dimensionsChanged\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-bar-label\", \"\", 3, \"barX\", \"barY\", \"barWidth\", \"barHeight\", \"value\", \"valueFormatting\", \"orientation\", \"dimensionsChanged\"]],\n  template: function SeriesHorizontal_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, SeriesHorizontal__svg_g_0_Template, 1, 21, \"g\", 0);\n      i0.ɵɵtemplate(1, SeriesHorizontal__svg_g_1_Template, 2, 2, \"g\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.bars)(\"ngForTrackBy\", ctx.trackBy);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showDataLabel);\n    }\n  },\n  directives: [i2.NgForOf, i2.NgIf, BarComponent, TooltipDirective, BarLabelComponent],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1\n    }), animate(500, style({\n      opacity: 0\n    }))])])]\n  },\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SeriesHorizontal, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-series-horizontal]',\n      template: `\n    <svg:g\n      ngx-charts-bar\n      *ngFor=\"let bar of bars; trackBy: trackBy\"\n      [@animationState]=\"'active'\"\n      [width]=\"bar.width\"\n      [height]=\"bar.height\"\n      [x]=\"bar.x\"\n      [y]=\"bar.y\"\n      [fill]=\"bar.color\"\n      [stops]=\"bar.gradientStops\"\n      [data]=\"bar.data\"\n      [orientation]=\"barOrientation.Horizontal\"\n      [roundEdges]=\"bar.roundEdges\"\n      (select)=\"click($event)\"\n      [gradient]=\"gradient\"\n      [isActive]=\"isActive(bar.data)\"\n      [ariaLabel]=\"bar.ariaLabel\"\n      [animations]=\"animations\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"tooltipPlacement\"\n      [tooltipType]=\"tooltipType\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : bar.tooltipText\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"bar.data\"\n      [noBarWhenZero]=\"noBarWhenZero\"\n    ></svg:g>\n    <svg:g *ngIf=\"showDataLabel\">\n      <svg:g\n        ngx-charts-bar-label\n        *ngFor=\"let b of barsForDataLabels; let i = index; trackBy: trackDataLabelBy\"\n        [barX]=\"b.x\"\n        [barY]=\"b.y\"\n        [barWidth]=\"b.width\"\n        [barHeight]=\"b.height\"\n        [value]=\"b.total\"\n        [valueFormatting]=\"dataLabelFormatting\"\n        [orientation]=\"barOrientation.Horizontal\"\n        (dimensionsChanged)=\"dataLabelWidthChanged.emit({ size: $event, index: i })\"\n      />\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1\n      }), animate(500, style({\n        opacity: 0\n      }))])])]\n    }]\n  }], null, {\n    dims: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    series: [{\n      type: Input\n    }],\n    xScale: [{\n      type: Input\n    }],\n    yScale: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    seriesName: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    roundEdges: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    showDataLabel: [{\n      type: Input\n    }],\n    dataLabelFormatting: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    dataLabelWidthChanged: [{\n      type: Output\n    }]\n  });\n})();\nclass BarHorizontalComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legend = false;\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.tooltipDisabled = false;\n    this.showGridLines = true;\n    this.activeEntries = [];\n    this.trimXAxisTicks = true;\n    this.trimYAxisTicks = true;\n    this.rotateXAxisTicks = true;\n    this.maxXAxisTickLength = 16;\n    this.maxYAxisTickLength = 16;\n    this.barPadding = 8;\n    this.roundDomains = false;\n    this.roundEdges = true;\n    this.showDataLabel = false;\n    this.noBarWhenZero = true;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.dataLabelMaxWidth = {\n      negative: 0,\n      positive: 0\n    };\n  }\n  update() {\n    super.update();\n    if (!this.showDataLabel) {\n      this.dataLabelMaxWidth = {\n        negative: 0,\n        positive: 0\n      };\n    }\n    this.margin = [10, 20 + this.dataLabelMaxWidth.positive, 10, 20 + this.dataLabelMaxWidth.negative];\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n    this.formatDates();\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n  }\n  getXScale() {\n    this.xDomain = this.getXDomain();\n    const scale = scaleLinear().range([0, this.dims.width]).domain(this.xDomain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  getYScale() {\n    this.yDomain = this.getYDomain();\n    const spacing = this.yDomain.length / (this.dims.height / this.barPadding + 1);\n    return scaleBand().rangeRound([0, this.dims.height]).paddingInner(spacing).domain(this.yDomain);\n  }\n  getXDomain() {\n    const values = this.results.map(d => d.value);\n    const min = this.xScaleMin ? Math.min(this.xScaleMin, ...values) : Math.min(0, ...values);\n    const max = this.xScaleMax ? Math.max(this.xScaleMax, ...values) : Math.max(0, ...values);\n    return [min, max];\n  }\n  getYDomain() {\n    return this.results.map(d => d.label);\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n  setColors() {\n    let domain;\n    if (this.schemeType === ScaleType.Ordinal) {\n      domain = this.yDomain;\n    } else {\n      domain = this.xDomain;\n    }\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === 'ordinal') {\n      opts.domain = this.yDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.xDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n  onDataLabelMaxWidthChanged(event) {\n    if (event.size.negative) {\n      this.dataLabelMaxWidth.negative = Math.max(this.dataLabelMaxWidth.negative, event.size.width);\n    } else {\n      this.dataLabelMaxWidth.positive = Math.max(this.dataLabelMaxWidth.positive, event.size.width);\n    }\n    if (event.index === this.results.length - 1) {\n      setTimeout(() => this.update());\n    }\n  }\n  onActivate(item, fromLegend = false) {\n    item = this.results.find(d => {\n      if (fromLegend) {\n        return d.label === item.name;\n      } else {\n        return d.name === item.name;\n      }\n    });\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    if (idx > -1) {\n      return;\n    }\n    this.activeEntries = [item, ...this.activeEntries];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(item, fromLegend = false) {\n    item = this.results.find(d => {\n      if (fromLegend) {\n        return d.label === item.name;\n      } else {\n        return d.name === item.name;\n      }\n    });\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n}\nBarHorizontalComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵBarHorizontalComponent_BaseFactory;\n  return function BarHorizontalComponent_Factory(t) {\n    return (ɵBarHorizontalComponent_BaseFactory || (ɵBarHorizontalComponent_BaseFactory = i0.ɵɵgetInheritedFactory(BarHorizontalComponent)))(t || BarHorizontalComponent);\n  };\n}();\nBarHorizontalComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BarHorizontalComponent,\n  selectors: [[\"ngx-charts-bar-horizontal\"]],\n  contentQueries: function BarHorizontalComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    tooltipDisabled: \"tooltipDisabled\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    barPadding: \"barPadding\",\n    roundDomains: \"roundDomains\",\n    roundEdges: \"roundEdges\",\n    xScaleMax: \"xScaleMax\",\n    xScaleMin: \"xScaleMin\",\n    showDataLabel: \"showDataLabel\",\n    dataLabelFormatting: \"dataLabelFormatting\",\n    noBarWhenZero: \"noBarWhenZero\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 5,\n  vars: 25,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"], [1, \"bar-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"yAxisOffset\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-series-horizontal\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"series\", \"dims\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"activeEntries\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\", \"select\", \"activate\", \"deactivate\", \"dataLabelWidthChanged\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"yAxisOffset\", \"dimensionsChanged\"]],\n  template: function BarHorizontalComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelClick\", function BarHorizontalComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      })(\"legendLabelActivate\", function BarHorizontalComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event, true);\n      })(\"legendLabelDeactivate\", function BarHorizontalComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event, true);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵtemplate(2, BarHorizontalComponent__svg_g_2_Template, 1, 10, \"g\", 2);\n      i0.ɵɵtemplate(3, BarHorizontalComponent__svg_g_3_Template, 1, 9, \"g\", 3);\n      i0.ɵɵelementStart(4, \"g\", 4);\n      i0.ɵɵlistener(\"select\", function BarHorizontalComponent_Template__svg_g_select_4_listener($event) {\n        return ctx.onClick($event);\n      })(\"activate\", function BarHorizontalComponent_Template__svg_g_activate_4_listener($event) {\n        return ctx.onActivate($event);\n      })(\"deactivate\", function BarHorizontalComponent_Template__svg_g_deactivate_4_listener($event) {\n        return ctx.onDeactivate($event);\n      })(\"dataLabelWidthChanged\", function BarHorizontalComponent_Template__svg_g_dataLabelWidthChanged_4_listener($event) {\n        return ctx.onDataLabelMaxWidthChanged($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(22, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"xScale\", ctx.xScale)(\"yScale\", ctx.yScale)(\"colors\", ctx.colors)(\"series\", ctx.results)(\"dims\", ctx.dims)(\"gradient\", ctx.gradient)(\"tooltipDisabled\", ctx.tooltipDisabled)(\"tooltipTemplate\", ctx.tooltipTemplate)(\"activeEntries\", ctx.activeEntries)(\"roundEdges\", ctx.roundEdges)(\"animations\", ctx.animations)(\"showDataLabel\", ctx.showDataLabel)(\"dataLabelFormatting\", ctx.dataLabelFormatting)(\"noBarWhenZero\", ctx.noBarWhenZero);\n    }\n  },\n  directives: [ChartComponent, i2.NgIf, SeriesHorizontal, XAxisComponent, YAxisComponent],\n  styles: [_c25],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BarHorizontalComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-bar-horizontal',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, true)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [yAxisOffset]=\"dataLabelMaxWidth.negative\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-series-horizontal\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [series]=\"results\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [activeEntries]=\"activeEntries\"\n          [roundEdges]=\"roundEdges\"\n          [animations]=\"animations\"\n          [showDataLabel]=\"showDataLabel\"\n          [dataLabelFormatting]=\"dataLabelFormatting\"\n          [noBarWhenZero]=\"noBarWhenZero\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event)\"\n          (deactivate)=\"onDeactivate($event)\"\n          (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event)\"\n        ></svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    barPadding: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    roundEdges: [{\n      type: Input\n    }],\n    xScaleMax: [{\n      type: Input\n    }],\n    xScaleMin: [{\n      type: Input\n    }],\n    showDataLabel: [{\n      type: Input\n    }],\n    dataLabelFormatting: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\nclass BarHorizontal2DComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legend = false;\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.tooltipDisabled = false;\n    this.showGridLines = true;\n    this.activeEntries = [];\n    this.trimXAxisTicks = true;\n    this.trimYAxisTicks = true;\n    this.rotateXAxisTicks = true;\n    this.maxXAxisTickLength = 16;\n    this.maxYAxisTickLength = 16;\n    this.groupPadding = 16;\n    this.barPadding = 8;\n    this.roundDomains = false;\n    this.roundEdges = true;\n    this.showDataLabel = false;\n    this.noBarWhenZero = true;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.dataLabelMaxWidth = {\n      negative: 0,\n      positive: 0\n    };\n    this.isSSR = false;\n    this.barOrientation = BarOrientation;\n    this.trackBy = (index, item) => {\n      return item.name;\n    };\n  }\n  ngOnInit() {\n    if (isPlatformServer(this.platformId)) {\n      this.isSSR = true;\n    }\n  }\n  update() {\n    super.update();\n    if (!this.showDataLabel) {\n      this.dataLabelMaxWidth = {\n        negative: 0,\n        positive: 0\n      };\n    }\n    this.margin = [10, 20 + this.dataLabelMaxWidth.positive, 10, 20 + this.dataLabelMaxWidth.negative];\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n    this.formatDates();\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.valueDomain = this.getValueDomain();\n    this.groupScale = this.getGroupScale();\n    this.innerScale = this.getInnerScale();\n    this.valueScale = this.getValueScale();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n  }\n  getGroupScale() {\n    const spacing = this.groupDomain.length / (this.dims.height / this.groupPadding + 1);\n    return scaleBand().rangeRound([0, this.dims.height]).paddingInner(spacing).paddingOuter(spacing / 2).domain(this.groupDomain);\n  }\n  getInnerScale() {\n    const height = this.groupScale.bandwidth();\n    const spacing = this.innerDomain.length / (height / this.barPadding + 1);\n    return scaleBand().rangeRound([0, height]).paddingInner(spacing).domain(this.innerDomain);\n  }\n  getValueScale() {\n    const scale = scaleLinear().range([0, this.dims.width]).domain(this.valueDomain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  getGroupDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      if (!domain.includes(group.label)) {\n        domain.push(group.label);\n      }\n    }\n    return domain;\n  }\n  getInnerDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.label)) {\n          domain.push(d.label);\n        }\n      }\n    }\n    return domain;\n  }\n  getValueDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.value)) {\n          domain.push(d.value);\n        }\n      }\n    }\n    const min = Math.min(0, ...domain);\n    const max = this.xScaleMax ? Math.max(this.xScaleMax, ...domain) : Math.max(0, ...domain);\n    return [min, max];\n  }\n  groupTransform(group) {\n    return `translate(0, ${this.groupScale(group.label)})`;\n  }\n  onClick(data, group) {\n    if (group) {\n      data.series = group.name;\n    }\n    this.select.emit(data);\n  }\n  setColors() {\n    let domain;\n    if (this.schemeType === ScaleType.Ordinal) {\n      domain = this.innerDomain;\n    } else {\n      domain = this.valueDomain;\n    }\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === ScaleType.Ordinal) {\n      opts.domain = this.innerDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.valueDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n  onDataLabelMaxWidthChanged(event, groupIndex) {\n    if (event.size.negative) {\n      this.dataLabelMaxWidth.negative = Math.max(this.dataLabelMaxWidth.negative, event.size.width);\n    } else {\n      this.dataLabelMaxWidth.positive = Math.max(this.dataLabelMaxWidth.positive, event.size.width);\n    }\n    if (groupIndex === this.results.length - 1) {\n      setTimeout(() => this.update());\n    }\n  }\n  onActivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n    const items = this.results.map(g => g.series).flat().filter(i => {\n      if (fromLegend) {\n        return i.label === item.name;\n      } else {\n        return i.name === item.name && i.series === item.series;\n      }\n    });\n    this.activeEntries = [...items];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n    this.activeEntries = this.activeEntries.filter(i => {\n      if (fromLegend) {\n        return i.label !== item.name;\n      } else {\n        return !(i.name === item.name && i.series === item.series);\n      }\n    });\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n}\nBarHorizontal2DComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵBarHorizontal2DComponent_BaseFactory;\n  return function BarHorizontal2DComponent_Factory(t) {\n    return (ɵBarHorizontal2DComponent_BaseFactory || (ɵBarHorizontal2DComponent_BaseFactory = i0.ɵɵgetInheritedFactory(BarHorizontal2DComponent)))(t || BarHorizontal2DComponent);\n  };\n}();\nBarHorizontal2DComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BarHorizontal2DComponent,\n  selectors: [[\"ngx-charts-bar-horizontal-2d\"]],\n  contentQueries: function BarHorizontal2DComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    tooltipDisabled: \"tooltipDisabled\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    groupPadding: \"groupPadding\",\n    barPadding: \"barPadding\",\n    roundDomains: \"roundDomains\",\n    roundEdges: \"roundEdges\",\n    xScaleMax: \"xScaleMax\",\n    showDataLabel: \"showDataLabel\",\n    dataLabelFormatting: \"dataLabelFormatting\",\n    noBarWhenZero: \"noBarWhenZero\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 7,\n  vars: 18,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelActivate\", \"legendLabelDeactivate\", \"legendLabelClick\"], [1, \"bar-chart\", \"chart\"], [\"ngx-charts-grid-panel-series\", \"\", 3, \"xScale\", \"yScale\", \"data\", \"dims\", \"orient\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"yAxisOffset\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"yAxisOffset\", \"dimensionsChanged\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-series-horizontal\", \"\", 3, \"xScale\", \"activeEntries\", \"yScale\", \"colors\", \"series\", \"dims\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"seriesName\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\", \"select\", \"activate\", \"deactivate\", \"dataLabelWidthChanged\"]],\n  template: function BarHorizontal2DComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelActivate\", function BarHorizontal2DComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event, undefined, true);\n      })(\"legendLabelDeactivate\", function BarHorizontal2DComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event, undefined, true);\n      })(\"legendLabelClick\", function BarHorizontal2DComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵelement(2, \"g\", 2);\n      i0.ɵɵtemplate(3, BarHorizontal2DComponent__svg_g_3_Template, 1, 10, \"g\", 3);\n      i0.ɵɵtemplate(4, BarHorizontal2DComponent__svg_g_4_Template, 1, 9, \"g\", 4);\n      i0.ɵɵtemplate(5, BarHorizontal2DComponent__svg_g_5_Template, 2, 2, \"g\", 5);\n      i0.ɵɵtemplate(6, BarHorizontal2DComponent__svg_g_6_Template, 2, 2, \"g\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(15, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"xScale\", ctx.valueScale)(\"yScale\", ctx.groupScale)(\"data\", ctx.results)(\"dims\", ctx.dims)(\"orient\", ctx.barOrientation.Horizontal);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n    }\n  },\n  directives: [ChartComponent, GridPanelSeriesComponent, i2.NgIf, XAxisComponent, YAxisComponent, i2.NgForOf, SeriesHorizontal],\n  styles: [_c25],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1,\n      transform: '*'\n    }), animate(500, style({\n      opacity: 0,\n      transform: 'scale(0)'\n    }))])])]\n  },\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BarHorizontal2DComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-bar-horizontal-2d',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-grid-panel-series\n          [xScale]=\"valueScale\"\n          [yScale]=\"groupScale\"\n          [data]=\"results\"\n          [dims]=\"dims\"\n          [orient]=\"barOrientation.Horizontal\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"valueScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"groupScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [yAxisOffset]=\"dataLabelMaxWidth.negative\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [xScale]=\"valueScale\"\n              [activeEntries]=\"activeEntries\"\n              [yScale]=\"innerScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [roundEdges]=\"roundEdges\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [xScale]=\"valueScale\"\n              [activeEntries]=\"activeEntries\"\n              [yScale]=\"innerScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [roundEdges]=\"roundEdges\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1,\n        transform: '*'\n      }), animate(500, style({\n        opacity: 0,\n        transform: 'scale(0)'\n      }))])])],\n      styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    groupPadding: [{\n      type: Input\n    }],\n    barPadding: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    roundEdges: [{\n      type: Input\n    }],\n    xScaleMax: [{\n      type: Input\n    }],\n    showDataLabel: [{\n      type: Input\n    }],\n    dataLabelFormatting: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\nclass BarHorizontalNormalizedComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legend = false;\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.tooltipDisabled = false;\n    this.showGridLines = true;\n    this.activeEntries = [];\n    this.trimXAxisTicks = true;\n    this.trimYAxisTicks = true;\n    this.rotateXAxisTicks = true;\n    this.maxXAxisTickLength = 16;\n    this.maxYAxisTickLength = 16;\n    this.barPadding = 8;\n    this.roundDomains = false;\n    this.noBarWhenZero = true;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.valueDomain = [0, 100];\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.barChartType = BarChartType;\n    this.isSSR = false;\n    this.trackBy = (index, item) => {\n      return item.name;\n    };\n  }\n  ngOnInit() {\n    if (isPlatformServer(this.platformId)) {\n      this.isSSR = true;\n    }\n  }\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n    this.formatDates();\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n  }\n  getGroupDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      if (!domain.includes(group.label)) {\n        domain.push(group.label);\n      }\n    }\n    return domain;\n  }\n  getInnerDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.label)) {\n          domain.push(d.label);\n        }\n      }\n    }\n    return domain;\n  }\n  getYScale() {\n    const spacing = this.groupDomain.length / (this.dims.height / this.barPadding + 1);\n    return scaleBand().rangeRound([0, this.dims.height]).paddingInner(spacing).domain(this.groupDomain);\n  }\n  getXScale() {\n    const scale = scaleLinear().range([0, this.dims.width]).domain(this.valueDomain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  groupTransform(group) {\n    return `translate(0, ${this.yScale(group.name)})`;\n  }\n  onClick(data, group) {\n    if (group) {\n      data.series = group.name;\n    }\n    this.select.emit(data);\n  }\n  setColors() {\n    let domain;\n    if (this.schemeType === ScaleType.Ordinal) {\n      domain = this.innerDomain;\n    } else {\n      domain = this.valueDomain;\n    }\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === ScaleType.Ordinal) {\n      opts.domain = this.innerDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.valueDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n  onActivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n    const items = this.results.map(g => g.series).flat().filter(i => {\n      if (fromLegend) {\n        return i.label === item.name;\n      } else {\n        return i.name === item.name && i.series === item.series;\n      }\n    });\n    this.activeEntries = [...items];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n    this.activeEntries = this.activeEntries.filter(i => {\n      if (fromLegend) {\n        return i.label !== item.name;\n      } else {\n        return !(i.name === item.name && i.series === item.series);\n      }\n    });\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n}\nBarHorizontalNormalizedComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵBarHorizontalNormalizedComponent_BaseFactory;\n  return function BarHorizontalNormalizedComponent_Factory(t) {\n    return (ɵBarHorizontalNormalizedComponent_BaseFactory || (ɵBarHorizontalNormalizedComponent_BaseFactory = i0.ɵɵgetInheritedFactory(BarHorizontalNormalizedComponent)))(t || BarHorizontalNormalizedComponent);\n  };\n}();\nBarHorizontalNormalizedComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BarHorizontalNormalizedComponent,\n  selectors: [[\"ngx-charts-bar-horizontal-normalized\"]],\n  contentQueries: function BarHorizontalNormalizedComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    tooltipDisabled: \"tooltipDisabled\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    barPadding: \"barPadding\",\n    roundDomains: \"roundDomains\",\n    noBarWhenZero: \"noBarWhenZero\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 6,\n  vars: 13,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelActivate\", \"legendLabelDeactivate\", \"legendLabelClick\"], [1, \"bar-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-series-horizontal\", \"\", 3, \"type\", \"xScale\", \"yScale\", \"activeEntries\", \"colors\", \"series\", \"dims\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"seriesName\", \"animations\", \"noBarWhenZero\", \"select\", \"activate\", \"deactivate\"]],\n  template: function BarHorizontalNormalizedComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelActivate\", function BarHorizontalNormalizedComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event, undefined, true);\n      })(\"legendLabelDeactivate\", function BarHorizontalNormalizedComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event, undefined, true);\n      })(\"legendLabelClick\", function BarHorizontalNormalizedComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵtemplate(2, BarHorizontalNormalizedComponent__svg_g_2_Template, 1, 10, \"g\", 2);\n      i0.ɵɵtemplate(3, BarHorizontalNormalizedComponent__svg_g_3_Template, 1, 8, \"g\", 3);\n      i0.ɵɵtemplate(4, BarHorizontalNormalizedComponent__svg_g_4_Template, 2, 2, \"g\", 4);\n      i0.ɵɵtemplate(5, BarHorizontalNormalizedComponent__svg_g_5_Template, 2, 2, \"g\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(10, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n    }\n  },\n  directives: [ChartComponent, i2.NgIf, XAxisComponent, YAxisComponent, i2.NgForOf, SeriesHorizontal],\n  styles: [_c25],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1,\n      transform: '*'\n    }), animate(500, style({\n      opacity: 0,\n      transform: 'scale(0)'\n    }))])])]\n  },\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BarHorizontalNormalizedComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-bar-horizontal-normalized',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g *ngFor=\"let group of results; trackBy: trackBy\" [attr.transform]=\"groupTransform(group)\">\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1,\n        transform: '*'\n      }), animate(500, style({\n        opacity: 0,\n        transform: 'scale(0)'\n      }))])])],\n      styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    barPadding: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\nclass BarHorizontalStackedComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legend = false;\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.tooltipDisabled = false;\n    this.showGridLines = true;\n    this.activeEntries = [];\n    this.trimXAxisTicks = true;\n    this.trimYAxisTicks = true;\n    this.rotateXAxisTicks = true;\n    this.maxXAxisTickLength = 16;\n    this.maxYAxisTickLength = 16;\n    this.barPadding = 8;\n    this.roundDomains = false;\n    this.showDataLabel = false;\n    this.noBarWhenZero = true;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.dataLabelMaxWidth = {\n      negative: 0,\n      positive: 0\n    };\n    this.barChartType = BarChartType;\n    this.isSSR = false;\n    this.trackBy = (index, item) => {\n      return item.name;\n    };\n  }\n  ngOnInit() {\n    if (isPlatformServer(this.platformId)) {\n      this.isSSR = true;\n    }\n  }\n  update() {\n    super.update();\n    if (!this.showDataLabel) {\n      this.dataLabelMaxWidth = {\n        negative: 0,\n        positive: 0\n      };\n    }\n    this.margin = [10, 20 + this.dataLabelMaxWidth.positive, 10, 20 + this.dataLabelMaxWidth.negative];\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n    this.formatDates();\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.valueDomain = this.getValueDomain();\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n  }\n  getGroupDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      if (!domain.includes(group.label)) {\n        domain.push(group.label);\n      }\n    }\n    return domain;\n  }\n  getInnerDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.label)) {\n          domain.push(d.label);\n        }\n      }\n    }\n    return domain;\n  }\n  getValueDomain() {\n    const domain = [];\n    let smallest = 0;\n    let biggest = 0;\n    for (const group of this.results) {\n      let smallestSum = 0;\n      let biggestSum = 0;\n      for (const d of group.series) {\n        if (d.value < 0) {\n          smallestSum += d.value;\n        } else {\n          biggestSum += d.value;\n        }\n        smallest = d.value < smallest ? d.value : smallest;\n        biggest = d.value > biggest ? d.value : biggest;\n      }\n      domain.push(smallestSum);\n      domain.push(biggestSum);\n    }\n    domain.push(smallest);\n    domain.push(biggest);\n    const min = Math.min(0, ...domain);\n    const max = this.xScaleMax ? Math.max(this.xScaleMax, ...domain) : Math.max(...domain);\n    return [min, max];\n  }\n  getYScale() {\n    const spacing = this.groupDomain.length / (this.dims.height / this.barPadding + 1);\n    return scaleBand().rangeRound([0, this.dims.height]).paddingInner(spacing).domain(this.groupDomain);\n  }\n  getXScale() {\n    const scale = scaleLinear().range([0, this.dims.width]).domain(this.valueDomain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  groupTransform(group) {\n    return `translate(0, ${this.yScale(group.name)})`;\n  }\n  onClick(data, group) {\n    if (group) {\n      data.series = group.name;\n    }\n    this.select.emit(data);\n  }\n  setColors() {\n    let domain;\n    if (this.schemeType === ScaleType.Ordinal) {\n      domain = this.innerDomain;\n    } else {\n      domain = this.valueDomain;\n    }\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === ScaleType.Ordinal) {\n      opts.domain = this.innerDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.valueDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n  onDataLabelMaxWidthChanged(event, groupIndex) {\n    if (event.size.negative) {\n      this.dataLabelMaxWidth.negative = Math.max(this.dataLabelMaxWidth.negative, event.size.width);\n    } else {\n      this.dataLabelMaxWidth.positive = Math.max(this.dataLabelMaxWidth.positive, event.size.width);\n    }\n    if (groupIndex === this.results.length - 1) {\n      setTimeout(() => this.update());\n    }\n  }\n  onActivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n    const items = this.results.map(g => g.series).flat().filter(i => {\n      if (fromLegend) {\n        return i.label === item.name;\n      } else {\n        return i.name === item.name && i.series === item.series;\n      }\n    });\n    this.activeEntries = [...items];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n    this.activeEntries = this.activeEntries.filter(i => {\n      if (fromLegend) {\n        return i.label !== item.name;\n      } else {\n        return !(i.name === item.name && i.series === item.series);\n      }\n    });\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n}\nBarHorizontalStackedComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵBarHorizontalStackedComponent_BaseFactory;\n  return function BarHorizontalStackedComponent_Factory(t) {\n    return (ɵBarHorizontalStackedComponent_BaseFactory || (ɵBarHorizontalStackedComponent_BaseFactory = i0.ɵɵgetInheritedFactory(BarHorizontalStackedComponent)))(t || BarHorizontalStackedComponent);\n  };\n}();\nBarHorizontalStackedComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BarHorizontalStackedComponent,\n  selectors: [[\"ngx-charts-bar-horizontal-stacked\"]],\n  contentQueries: function BarHorizontalStackedComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    tooltipDisabled: \"tooltipDisabled\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    barPadding: \"barPadding\",\n    roundDomains: \"roundDomains\",\n    xScaleMax: \"xScaleMax\",\n    showDataLabel: \"showDataLabel\",\n    dataLabelFormatting: \"dataLabelFormatting\",\n    noBarWhenZero: \"noBarWhenZero\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 6,\n  vars: 13,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelActivate\", \"legendLabelDeactivate\", \"legendLabelClick\"], [1, \"bar-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"yAxisOffset\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"yAxisOffset\", \"dimensionsChanged\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-series-horizontal\", \"\", 3, \"type\", \"xScale\", \"yScale\", \"colors\", \"series\", \"activeEntries\", \"dims\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"seriesName\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\", \"select\", \"activate\", \"deactivate\", \"dataLabelWidthChanged\"]],\n  template: function BarHorizontalStackedComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelActivate\", function BarHorizontalStackedComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event, undefined, true);\n      })(\"legendLabelDeactivate\", function BarHorizontalStackedComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event, undefined, true);\n      })(\"legendLabelClick\", function BarHorizontalStackedComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵtemplate(2, BarHorizontalStackedComponent__svg_g_2_Template, 1, 10, \"g\", 2);\n      i0.ɵɵtemplate(3, BarHorizontalStackedComponent__svg_g_3_Template, 1, 9, \"g\", 3);\n      i0.ɵɵtemplate(4, BarHorizontalStackedComponent__svg_g_4_Template, 2, 2, \"g\", 4);\n      i0.ɵɵtemplate(5, BarHorizontalStackedComponent__svg_g_5_Template, 2, 2, \"g\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(10, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n    }\n  },\n  directives: [ChartComponent, i2.NgIf, XAxisComponent, YAxisComponent, i2.NgForOf, SeriesHorizontal],\n  styles: [_c25],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1,\n      transform: '*'\n    }), animate(500, style({\n      opacity: 0,\n      transform: 'scale(0)'\n    }))])])]\n  },\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BarHorizontalStackedComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-bar-horizontal-stacked',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [yAxisOffset]=\"dataLabelMaxWidth.negative\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Stacked\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [activeEntries]=\"activeEntries\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Stacked\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [activeEntries]=\"activeEntries\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1,\n        transform: '*'\n      }), animate(500, style({\n        opacity: 0,\n        transform: 'scale(0)'\n      }))])])],\n      styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    barPadding: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    xScaleMax: [{\n      type: Input\n    }],\n    showDataLabel: [{\n      type: Input\n    }],\n    dataLabelFormatting: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\nclass SeriesVerticalComponent {\n  constructor(platformId) {\n    this.platformId = platformId;\n    this.type = BarChartType.Standard;\n    this.tooltipDisabled = false;\n    this.animations = true;\n    this.showDataLabel = false;\n    this.noBarWhenZero = true;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.dataLabelHeightChanged = new EventEmitter();\n    this.barsForDataLabels = [];\n    this.barOrientation = BarOrientation;\n    this.isSSR = false;\n  }\n  ngOnInit() {\n    if (isPlatformServer(this.platformId)) {\n      this.isSSR = true;\n    }\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    this.updateTooltipSettings();\n    let width;\n    if (this.series.length) {\n      width = this.xScale.bandwidth();\n    }\n    width = Math.round(width);\n    const yScaleMin = Math.max(this.yScale.domain()[0], 0);\n    const d0 = {\n      [D0Types.positive]: 0,\n      [D0Types.negative]: 0\n    };\n    let d0Type = D0Types.positive;\n    let total;\n    if (this.type === BarChartType.Normalized) {\n      total = this.series.map(d => d.value).reduce((sum, d) => sum + d, 0);\n    }\n    this.bars = this.series.map((d, index) => {\n      let value = d.value;\n      const label = this.getLabel(d);\n      const formattedLabel = formatLabel(label);\n      const roundEdges = this.roundEdges;\n      d0Type = value > 0 ? D0Types.positive : D0Types.negative;\n      const bar = {\n        value,\n        label,\n        roundEdges,\n        data: d,\n        width,\n        formattedLabel,\n        height: 0,\n        x: 0,\n        y: 0\n      };\n      if (this.type === BarChartType.Standard) {\n        bar.height = Math.abs(this.yScale(value) - this.yScale(yScaleMin));\n        bar.x = this.xScale(label);\n        if (value < 0) {\n          bar.y = this.yScale(0);\n        } else {\n          bar.y = this.yScale(value);\n        }\n      } else if (this.type === BarChartType.Stacked) {\n        const offset0 = d0[d0Type];\n        const offset1 = offset0 + value;\n        d0[d0Type] += value;\n        bar.height = this.yScale(offset0) - this.yScale(offset1);\n        bar.x = 0;\n        bar.y = this.yScale(offset1);\n        bar.offset0 = offset0;\n        bar.offset1 = offset1;\n      } else if (this.type === BarChartType.Normalized) {\n        let offset0 = d0[d0Type];\n        let offset1 = offset0 + value;\n        d0[d0Type] += value;\n        if (total > 0) {\n          offset0 = offset0 * 100 / total;\n          offset1 = offset1 * 100 / total;\n        } else {\n          offset0 = 0;\n          offset1 = 0;\n        }\n        bar.height = this.yScale(offset0) - this.yScale(offset1);\n        bar.x = 0;\n        bar.y = this.yScale(offset1);\n        bar.offset0 = offset0;\n        bar.offset1 = offset1;\n        value = (offset1 - offset0).toFixed(2) + '%';\n      }\n      if (this.colors.scaleType === ScaleType.Ordinal) {\n        bar.color = this.colors.getColor(label);\n      } else {\n        if (this.type === BarChartType.Standard) {\n          bar.color = this.colors.getColor(value);\n          bar.gradientStops = this.colors.getLinearGradientStops(value);\n        } else {\n          bar.color = this.colors.getColor(bar.offset1);\n          bar.gradientStops = this.colors.getLinearGradientStops(bar.offset1, bar.offset0);\n        }\n      }\n      let tooltipLabel = formattedLabel;\n      bar.ariaLabel = formattedLabel + ' ' + value.toLocaleString();\n      if (this.seriesName !== null && this.seriesName !== undefined) {\n        tooltipLabel = `${this.seriesName} • ${formattedLabel}`;\n        bar.data.series = this.seriesName;\n        bar.ariaLabel = this.seriesName + ' ' + bar.ariaLabel;\n      }\n      bar.tooltipText = this.tooltipDisabled ? undefined : `\n        <span class=\"tooltip-label\">${escapeLabel(tooltipLabel)}</span>\n        <span class=\"tooltip-val\">${this.dataLabelFormatting ? this.dataLabelFormatting(value) : value.toLocaleString()}</span>\n      `;\n      return bar;\n    });\n    this.updateDataLabels();\n  }\n  updateDataLabels() {\n    if (this.type === BarChartType.Stacked) {\n      this.barsForDataLabels = [];\n      const section = {};\n      section.series = this.seriesName;\n      const totalPositive = this.series.map(d => d.value).reduce((sum, d) => d > 0 ? sum + d : sum, 0);\n      const totalNegative = this.series.map(d => d.value).reduce((sum, d) => d < 0 ? sum + d : sum, 0);\n      section.total = totalPositive + totalNegative;\n      section.x = 0;\n      section.y = 0;\n      if (section.total > 0) {\n        section.height = this.yScale(totalPositive);\n      } else {\n        section.height = this.yScale(totalNegative);\n      }\n      section.width = this.xScale.bandwidth();\n      this.barsForDataLabels.push(section);\n    } else {\n      this.barsForDataLabels = this.series.map(d => {\n        const section = {};\n        section.series = this.seriesName ?? d.label;\n        section.total = d.value;\n        section.x = this.xScale(d.label);\n        section.y = this.yScale(0);\n        section.height = this.yScale(section.total) - this.yScale(0);\n        section.width = this.xScale.bandwidth();\n        return section;\n      });\n    }\n  }\n  updateTooltipSettings() {\n    this.tooltipPlacement = this.tooltipDisabled ? undefined : PlacementTypes.Top;\n    this.tooltipType = this.tooltipDisabled ? undefined : StyleTypes.tooltip;\n  }\n  isActive(entry) {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(active => {\n      return entry.name === active.name && entry.value === active.value;\n    });\n    return item !== undefined;\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n  getLabel(dataItem) {\n    if (dataItem.label) {\n      return dataItem.label;\n    }\n    return dataItem.name;\n  }\n  trackBy(index, bar) {\n    return bar.label;\n  }\n  trackDataLabelBy(index, barLabel) {\n    return index + '#' + barLabel.series + '#' + barLabel.total;\n  }\n}\nSeriesVerticalComponent.ɵfac = function SeriesVerticalComponent_Factory(t) {\n  return new (t || SeriesVerticalComponent)(i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\nSeriesVerticalComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: SeriesVerticalComponent,\n  selectors: [[\"g\", \"ngx-charts-series-vertical\", \"\"]],\n  inputs: {\n    dims: \"dims\",\n    type: \"type\",\n    series: \"series\",\n    xScale: \"xScale\",\n    yScale: \"yScale\",\n    colors: \"colors\",\n    gradient: \"gradient\",\n    activeEntries: \"activeEntries\",\n    seriesName: \"seriesName\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipTemplate: \"tooltipTemplate\",\n    roundEdges: \"roundEdges\",\n    animations: \"animations\",\n    showDataLabel: \"showDataLabel\",\n    dataLabelFormatting: \"dataLabelFormatting\",\n    noBarWhenZero: \"noBarWhenZero\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\",\n    dataLabelHeightChanged: \"dataLabelHeightChanged\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c29,\n  decls: 3,\n  vars: 3,\n  consts: [[4, \"ngIf\"], [\"ngx-charts-bar\", \"\", \"ngx-tooltip\", \"\", 3, \"width\", \"height\", \"x\", \"y\", \"fill\", \"stops\", \"data\", \"orientation\", \"roundEdges\", \"gradient\", \"ariaLabel\", \"isActive\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"noBarWhenZero\", \"animations\", \"select\", \"activate\", \"deactivate\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-bar\", \"\", \"ngx-tooltip\", \"\", 3, \"width\", \"height\", \"x\", \"y\", \"fill\", \"stops\", \"data\", \"orientation\", \"roundEdges\", \"gradient\", \"ariaLabel\", \"isActive\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"noBarWhenZero\", \"animations\", \"select\", \"activate\", \"deactivate\"], [\"ngx-charts-bar-label\", \"\", 3, \"barX\", \"barY\", \"barWidth\", \"barHeight\", \"value\", \"valueFormatting\", \"orientation\", \"dimensionsChanged\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-bar-label\", \"\", 3, \"barX\", \"barY\", \"barWidth\", \"barHeight\", \"value\", \"valueFormatting\", \"orientation\", \"dimensionsChanged\"]],\n  template: function SeriesVerticalComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, SeriesVerticalComponent__svg_g_0_Template, 2, 2, \"g\", 0);\n      i0.ɵɵtemplate(1, SeriesVerticalComponent__svg_g_1_Template, 2, 2, \"g\", 0);\n      i0.ɵɵtemplate(2, SeriesVerticalComponent__svg_g_2_Template, 2, 2, \"g\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showDataLabel);\n    }\n  },\n  directives: [i2.NgIf, i2.NgForOf, BarComponent, TooltipDirective, BarLabelComponent],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1\n    }), animate(500, style({\n      opacity: 0\n    }))])])]\n  },\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SeriesVerticalComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-series-vertical]',\n      template: `\n    <svg:g *ngIf=\"!isSSR\">\n      <svg:g\n        ngx-charts-bar\n        *ngFor=\"let bar of bars; trackBy: trackBy\"\n        [@animationState]=\"'active'\"\n        [@.disabled]=\"!animations\"\n        [width]=\"bar.width\"\n        [height]=\"bar.height\"\n        [x]=\"bar.x\"\n        [y]=\"bar.y\"\n        [fill]=\"bar.color\"\n        [stops]=\"bar.gradientStops\"\n        [data]=\"bar.data\"\n        [orientation]=\"barOrientation.Vertical\"\n        [roundEdges]=\"bar.roundEdges\"\n        [gradient]=\"gradient\"\n        [ariaLabel]=\"bar.ariaLabel\"\n        [isActive]=\"isActive(bar.data)\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"tooltipPlacement\"\n        [tooltipType]=\"tooltipType\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : bar.tooltipText\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"bar.data\"\n        [noBarWhenZero]=\"noBarWhenZero\"\n        [animations]=\"animations\"\n      ></svg:g>\n    </svg:g>\n    <svg:g *ngIf=\"isSSR\">\n      <svg:g\n        ngx-charts-bar\n        *ngFor=\"let bar of bars; trackBy: trackBy\"\n        [width]=\"bar.width\"\n        [height]=\"bar.height\"\n        [x]=\"bar.x\"\n        [y]=\"bar.y\"\n        [fill]=\"bar.color\"\n        [stops]=\"bar.gradientStops\"\n        [data]=\"bar.data\"\n        [orientation]=\"barOrientation.Vertical\"\n        [roundEdges]=\"bar.roundEdges\"\n        [gradient]=\"gradient\"\n        [ariaLabel]=\"bar.ariaLabel\"\n        [isActive]=\"isActive(bar.data)\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"tooltipPlacement\"\n        [tooltipType]=\"tooltipType\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : bar.tooltipText\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"bar.data\"\n        [noBarWhenZero]=\"noBarWhenZero\"\n        [animations]=\"animations\"\n      ></svg:g>\n    </svg:g>\n    <svg:g *ngIf=\"showDataLabel\">\n      <svg:g\n        ngx-charts-bar-label\n        *ngFor=\"let b of barsForDataLabels; let i = index; trackBy: trackDataLabelBy\"\n        [barX]=\"b.x\"\n        [barY]=\"b.y\"\n        [barWidth]=\"b.width\"\n        [barHeight]=\"b.height\"\n        [value]=\"b.total\"\n        [valueFormatting]=\"dataLabelFormatting\"\n        [orientation]=\"barOrientation.Vertical\"\n        (dimensionsChanged)=\"dataLabelHeightChanged.emit({ size: $event, index: i })\"\n      />\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1\n      }), animate(500, style({\n        opacity: 0\n      }))])])]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    dims: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    series: [{\n      type: Input\n    }],\n    xScale: [{\n      type: Input\n    }],\n    yScale: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    seriesName: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    roundEdges: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    showDataLabel: [{\n      type: Input\n    }],\n    dataLabelFormatting: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    dataLabelHeightChanged: [{\n      type: Output\n    }]\n  });\n})();\nclass BarVerticalComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legend = false;\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.tooltipDisabled = false;\n    this.showGridLines = true;\n    this.activeEntries = [];\n    this.trimXAxisTicks = true;\n    this.trimYAxisTicks = true;\n    this.rotateXAxisTicks = true;\n    this.maxXAxisTickLength = 16;\n    this.maxYAxisTickLength = 16;\n    this.barPadding = 8;\n    this.roundDomains = false;\n    this.roundEdges = true;\n    this.showDataLabel = false;\n    this.noBarWhenZero = true;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.dataLabelMaxHeight = {\n      negative: 0,\n      positive: 0\n    };\n  }\n  update() {\n    super.update();\n    if (!this.showDataLabel) {\n      this.dataLabelMaxHeight = {\n        negative: 0,\n        positive: 0\n      };\n    }\n    this.margin = [10 + this.dataLabelMaxHeight.positive, 20, 10 + this.dataLabelMaxHeight.negative, 20];\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n    this.formatDates();\n    if (this.showDataLabel) {\n      this.dims.height -= this.dataLabelMaxHeight.negative;\n    }\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0] + this.dataLabelMaxHeight.negative})`;\n  }\n  getXScale() {\n    this.xDomain = this.getXDomain();\n    const spacing = this.xDomain.length / (this.dims.width / this.barPadding + 1);\n    return scaleBand().range([0, this.dims.width]).paddingInner(spacing).domain(this.xDomain);\n  }\n  getYScale() {\n    this.yDomain = this.getYDomain();\n    const scale = scaleLinear().range([this.dims.height, 0]).domain(this.yDomain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  getXDomain() {\n    return this.results.map(d => d.label);\n  }\n  getYDomain() {\n    const values = this.results.map(d => d.value);\n    let min = this.yScaleMin ? Math.min(this.yScaleMin, ...values) : Math.min(0, ...values);\n    if (this.yAxisTicks && !this.yAxisTicks.some(isNaN)) {\n      min = Math.min(min, ...this.yAxisTicks);\n    }\n    let max = this.yScaleMax ? Math.max(this.yScaleMax, ...values) : Math.max(0, ...values);\n    if (this.yAxisTicks && !this.yAxisTicks.some(isNaN)) {\n      max = Math.max(max, ...this.yAxisTicks);\n    }\n    return [min, max];\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n  setColors() {\n    let domain;\n    if (this.schemeType === ScaleType.Ordinal) {\n      domain = this.xDomain;\n    } else {\n      domain = this.yDomain;\n    }\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === ScaleType.Ordinal) {\n      opts.domain = this.xDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.yDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n  onDataLabelMaxHeightChanged(event) {\n    if (event.size.negative) {\n      this.dataLabelMaxHeight.negative = Math.max(this.dataLabelMaxHeight.negative, event.size.height);\n    } else {\n      this.dataLabelMaxHeight.positive = Math.max(this.dataLabelMaxHeight.positive, event.size.height);\n    }\n    if (event.index === this.results.length - 1) {\n      setTimeout(() => this.update());\n    }\n  }\n  onActivate(item, fromLegend = false) {\n    item = this.results.find(d => {\n      if (fromLegend) {\n        return d.label === item.name;\n      } else {\n        return d.name === item.name;\n      }\n    });\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    if (idx > -1) {\n      return;\n    }\n    this.activeEntries = [item, ...this.activeEntries];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(item, fromLegend = false) {\n    item = this.results.find(d => {\n      if (fromLegend) {\n        return d.label === item.name;\n      } else {\n        return d.name === item.name;\n      }\n    });\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n}\nBarVerticalComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵBarVerticalComponent_BaseFactory;\n  return function BarVerticalComponent_Factory(t) {\n    return (ɵBarVerticalComponent_BaseFactory || (ɵBarVerticalComponent_BaseFactory = i0.ɵɵgetInheritedFactory(BarVerticalComponent)))(t || BarVerticalComponent);\n  };\n}();\nBarVerticalComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BarVerticalComponent,\n  selectors: [[\"ngx-charts-bar-vertical\"]],\n  contentQueries: function BarVerticalComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    tooltipDisabled: \"tooltipDisabled\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    barPadding: \"barPadding\",\n    roundDomains: \"roundDomains\",\n    roundEdges: \"roundEdges\",\n    yScaleMax: \"yScaleMax\",\n    yScaleMin: \"yScaleMin\",\n    showDataLabel: \"showDataLabel\",\n    dataLabelFormatting: \"dataLabelFormatting\",\n    noBarWhenZero: \"noBarWhenZero\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 5,\n  vars: 25,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"], [1, \"bar-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"xAxisOffset\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-series-vertical\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"series\", \"dims\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"showDataLabel\", \"dataLabelFormatting\", \"activeEntries\", \"roundEdges\", \"animations\", \"noBarWhenZero\", \"activate\", \"deactivate\", \"select\", \"dataLabelHeightChanged\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"xAxisOffset\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\"]],\n  template: function BarVerticalComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelClick\", function BarVerticalComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      })(\"legendLabelActivate\", function BarVerticalComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event, true);\n      })(\"legendLabelDeactivate\", function BarVerticalComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event, true);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵtemplate(2, BarVerticalComponent__svg_g_2_Template, 1, 11, \"g\", 2);\n      i0.ɵɵtemplate(3, BarVerticalComponent__svg_g_3_Template, 1, 9, \"g\", 3);\n      i0.ɵɵelementStart(4, \"g\", 4);\n      i0.ɵɵlistener(\"activate\", function BarVerticalComponent_Template__svg_g_activate_4_listener($event) {\n        return ctx.onActivate($event);\n      })(\"deactivate\", function BarVerticalComponent_Template__svg_g_deactivate_4_listener($event) {\n        return ctx.onDeactivate($event);\n      })(\"select\", function BarVerticalComponent_Template__svg_g_select_4_listener($event) {\n        return ctx.onClick($event);\n      })(\"dataLabelHeightChanged\", function BarVerticalComponent_Template__svg_g_dataLabelHeightChanged_4_listener($event) {\n        return ctx.onDataLabelMaxHeightChanged($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(22, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"xScale\", ctx.xScale)(\"yScale\", ctx.yScale)(\"colors\", ctx.colors)(\"series\", ctx.results)(\"dims\", ctx.dims)(\"gradient\", ctx.gradient)(\"tooltipDisabled\", ctx.tooltipDisabled)(\"tooltipTemplate\", ctx.tooltipTemplate)(\"showDataLabel\", ctx.showDataLabel)(\"dataLabelFormatting\", ctx.dataLabelFormatting)(\"activeEntries\", ctx.activeEntries)(\"roundEdges\", ctx.roundEdges)(\"animations\", ctx.animations)(\"noBarWhenZero\", ctx.noBarWhenZero);\n    }\n  },\n  directives: [ChartComponent, i2.NgIf, SeriesVerticalComponent, XAxisComponent, YAxisComponent],\n  styles: [_c25],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BarVerticalComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-bar-vertical',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, true)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-series-vertical\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [series]=\"results\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [showDataLabel]=\"showDataLabel\"\n          [dataLabelFormatting]=\"dataLabelFormatting\"\n          [activeEntries]=\"activeEntries\"\n          [roundEdges]=\"roundEdges\"\n          [animations]=\"animations\"\n          [noBarWhenZero]=\"noBarWhenZero\"\n          (activate)=\"onActivate($event)\"\n          (deactivate)=\"onDeactivate($event)\"\n          (select)=\"onClick($event)\"\n          (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event)\"\n        ></svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    barPadding: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    roundEdges: [{\n      type: Input\n    }],\n    yScaleMax: [{\n      type: Input\n    }],\n    yScaleMin: [{\n      type: Input\n    }],\n    showDataLabel: [{\n      type: Input\n    }],\n    dataLabelFormatting: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\nclass BarVertical2DComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legend = false;\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.tooltipDisabled = false;\n    this.scaleType = ScaleType.Ordinal;\n    this.showGridLines = true;\n    this.activeEntries = [];\n    this.trimXAxisTicks = true;\n    this.trimYAxisTicks = true;\n    this.rotateXAxisTicks = true;\n    this.maxXAxisTickLength = 16;\n    this.maxYAxisTickLength = 16;\n    this.groupPadding = 16;\n    this.barPadding = 8;\n    this.roundDomains = false;\n    this.roundEdges = true;\n    this.showDataLabel = false;\n    this.noBarWhenZero = true;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.dataLabelMaxHeight = {\n      negative: 0,\n      positive: 0\n    };\n    this.isSSR = false;\n    this.barOrientation = BarOrientation;\n    this.trackBy = (index, item) => {\n      return item.name;\n    };\n  }\n  ngOnInit() {\n    if (isPlatformServer(this.platformId)) {\n      this.isSSR = true;\n    }\n  }\n  update() {\n    super.update();\n    if (!this.showDataLabel) {\n      this.dataLabelMaxHeight = {\n        negative: 0,\n        positive: 0\n      };\n    }\n    this.margin = [10 + this.dataLabelMaxHeight.positive, 20, 10 + this.dataLabelMaxHeight.negative, 20];\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n    if (this.showDataLabel) {\n      this.dims.height -= this.dataLabelMaxHeight.negative;\n    }\n    this.formatDates();\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.valueDomain = this.getValueDomain();\n    this.groupScale = this.getGroupScale();\n    this.innerScale = this.getInnerScale();\n    this.valueScale = this.getValueScale();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0] + this.dataLabelMaxHeight.negative})`;\n  }\n  onDataLabelMaxHeightChanged(event, groupIndex) {\n    if (event.size.negative) {\n      this.dataLabelMaxHeight.negative = Math.max(this.dataLabelMaxHeight.negative, event.size.height);\n    } else {\n      this.dataLabelMaxHeight.positive = Math.max(this.dataLabelMaxHeight.positive, event.size.height);\n    }\n    if (groupIndex === this.results.length - 1) {\n      setTimeout(() => this.update());\n    }\n  }\n  getGroupScale() {\n    const spacing = this.groupDomain.length / (this.dims.height / this.groupPadding + 1);\n    return scaleBand().rangeRound([0, this.dims.width]).paddingInner(spacing).paddingOuter(spacing / 2).domain(this.groupDomain);\n  }\n  getInnerScale() {\n    const width = this.groupScale.bandwidth();\n    const spacing = this.innerDomain.length / (width / this.barPadding + 1);\n    return scaleBand().rangeRound([0, width]).paddingInner(spacing).domain(this.innerDomain);\n  }\n  getValueScale() {\n    const scale = scaleLinear().range([this.dims.height, 0]).domain(this.valueDomain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  getGroupDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      if (!domain.includes(group.label)) {\n        domain.push(group.label);\n      }\n    }\n    return domain;\n  }\n  getInnerDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.label)) {\n          domain.push(d.label);\n        }\n      }\n    }\n    return domain;\n  }\n  getValueDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.value)) {\n          domain.push(d.value);\n        }\n      }\n    }\n    const min = Math.min(0, ...domain);\n    const max = this.yScaleMax ? Math.max(this.yScaleMax, ...domain) : Math.max(0, ...domain);\n    return [min, max];\n  }\n  groupTransform(group) {\n    return `translate(${this.groupScale(group.label)}, 0)`;\n  }\n  onClick(data, group) {\n    if (group) {\n      data.series = group.name;\n    }\n    this.select.emit(data);\n  }\n  setColors() {\n    let domain;\n    if (this.schemeType === ScaleType.Ordinal) {\n      domain = this.innerDomain;\n    } else {\n      domain = this.valueDomain;\n    }\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === ScaleType.Ordinal) {\n      opts.domain = this.innerDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.valueDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n  onActivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n    const items = this.results.map(g => g.series).flat().filter(i => {\n      if (fromLegend) {\n        return i.label === item.name;\n      } else {\n        return i.name === item.name && i.series === item.series;\n      }\n    });\n    this.activeEntries = [...items];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n    this.activeEntries = this.activeEntries.filter(i => {\n      if (fromLegend) {\n        return i.label !== item.name;\n      } else {\n        return !(i.name === item.name && i.series === item.series);\n      }\n    });\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n}\nBarVertical2DComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵBarVertical2DComponent_BaseFactory;\n  return function BarVertical2DComponent_Factory(t) {\n    return (ɵBarVertical2DComponent_BaseFactory || (ɵBarVertical2DComponent_BaseFactory = i0.ɵɵgetInheritedFactory(BarVertical2DComponent)))(t || BarVertical2DComponent);\n  };\n}();\nBarVertical2DComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BarVertical2DComponent,\n  selectors: [[\"ngx-charts-bar-vertical-2d\"]],\n  contentQueries: function BarVertical2DComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    tooltipDisabled: \"tooltipDisabled\",\n    scaleType: \"scaleType\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    groupPadding: \"groupPadding\",\n    barPadding: \"barPadding\",\n    roundDomains: \"roundDomains\",\n    roundEdges: \"roundEdges\",\n    yScaleMax: \"yScaleMax\",\n    showDataLabel: \"showDataLabel\",\n    dataLabelFormatting: \"dataLabelFormatting\",\n    noBarWhenZero: \"noBarWhenZero\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 7,\n  vars: 18,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelActivate\", \"legendLabelDeactivate\", \"legendLabelClick\"], [1, \"bar-chart\", \"chart\"], [\"ngx-charts-grid-panel-series\", \"\", 3, \"xScale\", \"yScale\", \"data\", \"dims\", \"orient\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"xAxisOffset\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"xAxisOffset\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\"], [\"ngx-charts-series-vertical\", \"\", 3, \"activeEntries\", \"xScale\", \"yScale\", \"colors\", \"series\", \"dims\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"showDataLabel\", \"dataLabelFormatting\", \"seriesName\", \"roundEdges\", \"animations\", \"noBarWhenZero\", \"select\", \"activate\", \"deactivate\", \"dataLabelHeightChanged\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-series-vertical\", \"\", 3, \"activeEntries\", \"xScale\", \"yScale\", \"colors\", \"series\", \"dims\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"showDataLabel\", \"dataLabelFormatting\", \"seriesName\", \"roundEdges\", \"animations\", \"noBarWhenZero\", \"select\", \"activate\", \"deactivate\", \"dataLabelHeightChanged\"]],\n  template: function BarVertical2DComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelActivate\", function BarVertical2DComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event, undefined, true);\n      })(\"legendLabelDeactivate\", function BarVertical2DComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event, undefined, true);\n      })(\"legendLabelClick\", function BarVertical2DComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵelement(2, \"g\", 2);\n      i0.ɵɵtemplate(3, BarVertical2DComponent__svg_g_3_Template, 1, 10, \"g\", 3);\n      i0.ɵɵtemplate(4, BarVertical2DComponent__svg_g_4_Template, 1, 9, \"g\", 4);\n      i0.ɵɵtemplate(5, BarVertical2DComponent__svg_g_5_Template, 2, 2, \"g\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(6, BarVertical2DComponent__svg_g_6_Template, 2, 2, \"g\", 5);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(15, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"xScale\", ctx.groupScale)(\"yScale\", ctx.valueScale)(\"data\", ctx.results)(\"dims\", ctx.dims)(\"orient\", ctx.barOrientation.Vertical);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n    }\n  },\n  directives: [ChartComponent, GridPanelSeriesComponent, i2.NgIf, XAxisComponent, YAxisComponent, i2.NgForOf, SeriesVerticalComponent],\n  styles: [_c25],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1,\n      transform: '*'\n    }), animate(500, style({\n      opacity: 0,\n      transform: 'scale(0)'\n    }))])])]\n  },\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BarVertical2DComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-bar-vertical-2d',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-grid-panel-series\n          [xScale]=\"groupScale\"\n          [yScale]=\"valueScale\"\n          [data]=\"results\"\n          [dims]=\"dims\"\n          [orient]=\"barOrientation.Vertical\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"groupScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"valueScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            ngx-charts-series-vertical\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n            [activeEntries]=\"activeEntries\"\n            [xScale]=\"innerScale\"\n            [yScale]=\"valueScale\"\n            [colors]=\"colors\"\n            [series]=\"group.series\"\n            [dims]=\"dims\"\n            [gradient]=\"gradient\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [showDataLabel]=\"showDataLabel\"\n            [dataLabelFormatting]=\"dataLabelFormatting\"\n            [seriesName]=\"group.name\"\n            [roundEdges]=\"roundEdges\"\n            [animations]=\"animations\"\n            [noBarWhenZero]=\"noBarWhenZero\"\n            (select)=\"onClick($event, group)\"\n            (activate)=\"onActivate($event, group)\"\n            (deactivate)=\"onDeactivate($event, group)\"\n            (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n          />\n        </svg:g>\n      </svg:g>\n      <svg:g *ngIf=\"isSSR\">\n        <svg:g\n          ngx-charts-series-vertical\n          *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n          [attr.transform]=\"groupTransform(group)\"\n          [activeEntries]=\"activeEntries\"\n          [xScale]=\"innerScale\"\n          [yScale]=\"valueScale\"\n          [colors]=\"colors\"\n          [series]=\"group.series\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [showDataLabel]=\"showDataLabel\"\n          [dataLabelFormatting]=\"dataLabelFormatting\"\n          [seriesName]=\"group.name\"\n          [roundEdges]=\"roundEdges\"\n          [animations]=\"animations\"\n          [noBarWhenZero]=\"noBarWhenZero\"\n          (select)=\"onClick($event, group)\"\n          (activate)=\"onActivate($event, group)\"\n          (deactivate)=\"onDeactivate($event, group)\"\n          (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1,\n        transform: '*'\n      }), animate(500, style({\n        opacity: 0,\n        transform: 'scale(0)'\n      }))])])],\n      styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    scaleType: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    groupPadding: [{\n      type: Input\n    }],\n    barPadding: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    roundEdges: [{\n      type: Input\n    }],\n    yScaleMax: [{\n      type: Input\n    }],\n    showDataLabel: [{\n      type: Input\n    }],\n    dataLabelFormatting: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\nclass BarVerticalNormalizedComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legend = false;\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.tooltipDisabled = false;\n    this.showGridLines = true;\n    this.activeEntries = [];\n    this.trimXAxisTicks = true;\n    this.trimYAxisTicks = true;\n    this.rotateXAxisTicks = true;\n    this.maxXAxisTickLength = 16;\n    this.maxYAxisTickLength = 16;\n    this.barPadding = 8;\n    this.roundDomains = false;\n    this.noBarWhenZero = true;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.valueDomain = [0, 100];\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.isSSR = false;\n    this.barChartType = BarChartType;\n    this.trackBy = (index, item) => {\n      return item.name;\n    };\n  }\n  ngOnInit() {\n    if (isPlatformServer(this.platformId)) {\n      this.isSSR = true;\n    }\n  }\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n    this.formatDates();\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n  }\n  getGroupDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      if (!domain.includes(group.label)) {\n        domain.push(group.label);\n      }\n    }\n    return domain;\n  }\n  getInnerDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.label)) {\n          domain.push(d.label);\n        }\n      }\n    }\n    return domain;\n  }\n  getXScale() {\n    const spacing = this.groupDomain.length / (this.dims.width / this.barPadding + 1);\n    return scaleBand().rangeRound([0, this.dims.width]).paddingInner(spacing).domain(this.groupDomain);\n  }\n  getYScale() {\n    const scale = scaleLinear().range([this.dims.height, 0]).domain(this.valueDomain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  groupTransform(group) {\n    return `translate(${this.xScale(group.name)}, 0)`;\n  }\n  onClick(data, group) {\n    if (group) {\n      data.series = group.name;\n    }\n    this.select.emit(data);\n  }\n  setColors() {\n    let domain;\n    if (this.schemeType === ScaleType.Ordinal) {\n      domain = this.innerDomain;\n    } else {\n      domain = this.valueDomain;\n    }\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === ScaleType.Ordinal) {\n      opts.domain = this.innerDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.valueDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n  onActivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n    const items = this.results.map(g => g.series).flat().filter(i => {\n      if (fromLegend) {\n        return i.label === item.name;\n      } else {\n        return i.name === item.name && i.series === item.series;\n      }\n    });\n    this.activeEntries = [...items];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n    this.activeEntries = this.activeEntries.filter(i => {\n      if (fromLegend) {\n        return i.label !== item.name;\n      } else {\n        return !(i.name === item.name && i.series === item.series);\n      }\n    });\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n}\nBarVerticalNormalizedComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵBarVerticalNormalizedComponent_BaseFactory;\n  return function BarVerticalNormalizedComponent_Factory(t) {\n    return (ɵBarVerticalNormalizedComponent_BaseFactory || (ɵBarVerticalNormalizedComponent_BaseFactory = i0.ɵɵgetInheritedFactory(BarVerticalNormalizedComponent)))(t || BarVerticalNormalizedComponent);\n  };\n}();\nBarVerticalNormalizedComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BarVerticalNormalizedComponent,\n  selectors: [[\"ngx-charts-bar-vertical-normalized\"]],\n  contentQueries: function BarVerticalNormalizedComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    tooltipDisabled: \"tooltipDisabled\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    barPadding: \"barPadding\",\n    roundDomains: \"roundDomains\",\n    noBarWhenZero: \"noBarWhenZero\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 6,\n  vars: 13,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelActivate\", \"legendLabelDeactivate\", \"legendLabelClick\"], [1, \"bar-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-series-vertical\", \"\", 3, \"type\", \"xScale\", \"yScale\", \"activeEntries\", \"colors\", \"series\", \"dims\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"seriesName\", \"animations\", \"noBarWhenZero\", \"select\", \"activate\", \"deactivate\"]],\n  template: function BarVerticalNormalizedComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelActivate\", function BarVerticalNormalizedComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event, undefined, true);\n      })(\"legendLabelDeactivate\", function BarVerticalNormalizedComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event, undefined, true);\n      })(\"legendLabelClick\", function BarVerticalNormalizedComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵtemplate(2, BarVerticalNormalizedComponent__svg_g_2_Template, 1, 9, \"g\", 2);\n      i0.ɵɵtemplate(3, BarVerticalNormalizedComponent__svg_g_3_Template, 1, 9, \"g\", 3);\n      i0.ɵɵtemplate(4, BarVerticalNormalizedComponent__svg_g_4_Template, 2, 2, \"g\", 4);\n      i0.ɵɵtemplate(5, BarVerticalNormalizedComponent__svg_g_5_Template, 2, 2, \"g\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(10, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n    }\n  },\n  directives: [ChartComponent, i2.NgIf, XAxisComponent, YAxisComponent, i2.NgForOf, SeriesVerticalComponent],\n  styles: [_c25],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1,\n      transform: '*'\n    }), animate(500, style({\n      opacity: 0,\n      transform: 'scale(0)'\n    }))])])]\n  },\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BarVerticalNormalizedComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-bar-vertical-normalized',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-vertical\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g *ngFor=\"let group of results; trackBy: trackBy\" [attr.transform]=\"groupTransform(group)\">\n            <svg:g\n              ngx-charts-series-vertical\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1,\n        transform: '*'\n      }), animate(500, style({\n        opacity: 0,\n        transform: 'scale(0)'\n      }))])])],\n      styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    barPadding: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\nclass BarVerticalStackedComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legend = false;\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.tooltipDisabled = false;\n    this.showGridLines = true;\n    this.activeEntries = [];\n    this.trimXAxisTicks = true;\n    this.trimYAxisTicks = true;\n    this.rotateXAxisTicks = true;\n    this.maxXAxisTickLength = 16;\n    this.maxYAxisTickLength = 16;\n    this.barPadding = 8;\n    this.roundDomains = false;\n    this.showDataLabel = false;\n    this.noBarWhenZero = true;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.dataLabelMaxHeight = {\n      negative: 0,\n      positive: 0\n    };\n    this.isSSR = false;\n    this.barChartType = BarChartType;\n    this.trackBy = (index, item) => {\n      return item.name;\n    };\n  }\n  ngOnInit() {\n    if (isPlatformServer(this.platformId)) {\n      this.isSSR = true;\n    }\n  }\n  update() {\n    super.update();\n    if (!this.showDataLabel) {\n      this.dataLabelMaxHeight = {\n        negative: 0,\n        positive: 0\n      };\n    }\n    this.margin = [10 + this.dataLabelMaxHeight.positive, 20, 10 + this.dataLabelMaxHeight.negative, 20];\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n    if (this.showDataLabel) {\n      this.dims.height -= this.dataLabelMaxHeight.negative;\n    }\n    this.formatDates();\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.valueDomain = this.getValueDomain();\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0] + this.dataLabelMaxHeight.negative})`;\n  }\n  getGroupDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      if (!domain.includes(group.label)) {\n        domain.push(group.label);\n      }\n    }\n    return domain;\n  }\n  getInnerDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.label)) {\n          domain.push(d.label);\n        }\n      }\n    }\n    return domain;\n  }\n  getValueDomain() {\n    const domain = [];\n    let smallest = 0;\n    let biggest = 0;\n    for (const group of this.results) {\n      let smallestSum = 0;\n      let biggestSum = 0;\n      for (const d of group.series) {\n        if (d.value < 0) {\n          smallestSum += d.value;\n        } else {\n          biggestSum += d.value;\n        }\n        smallest = d.value < smallest ? d.value : smallest;\n        biggest = d.value > biggest ? d.value : biggest;\n      }\n      domain.push(smallestSum);\n      domain.push(biggestSum);\n    }\n    domain.push(smallest);\n    domain.push(biggest);\n    const min = Math.min(0, ...domain);\n    const max = this.yScaleMax ? Math.max(this.yScaleMax, ...domain) : Math.max(...domain);\n    return [min, max];\n  }\n  getXScale() {\n    const spacing = this.groupDomain.length / (this.dims.width / this.barPadding + 1);\n    return scaleBand().rangeRound([0, this.dims.width]).paddingInner(spacing).domain(this.groupDomain);\n  }\n  getYScale() {\n    const scale = scaleLinear().range([this.dims.height, 0]).domain(this.valueDomain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  onDataLabelMaxHeightChanged(event, groupIndex) {\n    if (event.size.negative) {\n      this.dataLabelMaxHeight.negative = Math.max(this.dataLabelMaxHeight.negative, event.size.height);\n    } else {\n      this.dataLabelMaxHeight.positive = Math.max(this.dataLabelMaxHeight.positive, event.size.height);\n    }\n    if (groupIndex === this.results.length - 1) {\n      setTimeout(() => this.update());\n    }\n  }\n  groupTransform(group) {\n    return `translate(${this.xScale(group.name) || 0}, 0)`;\n  }\n  onClick(data, group) {\n    if (group) {\n      data.series = group.name;\n    }\n    this.select.emit(data);\n  }\n  setColors() {\n    let domain;\n    if (this.schemeType === ScaleType.Ordinal) {\n      domain = this.innerDomain;\n    } else {\n      domain = this.valueDomain;\n    }\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === ScaleType.Ordinal) {\n      opts.domain = this.innerDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.valueDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n  onActivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n    const items = this.results.map(g => g.series).flat().filter(i => {\n      if (fromLegend) {\n        return i.label === item.name;\n      } else {\n        return i.name === item.name && i.series === item.series;\n      }\n    });\n    this.activeEntries = [...items];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n    this.activeEntries = this.activeEntries.filter(i => {\n      if (fromLegend) {\n        return i.label !== item.name;\n      } else {\n        return !(i.name === item.name && i.series === item.series);\n      }\n    });\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n}\nBarVerticalStackedComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵBarVerticalStackedComponent_BaseFactory;\n  return function BarVerticalStackedComponent_Factory(t) {\n    return (ɵBarVerticalStackedComponent_BaseFactory || (ɵBarVerticalStackedComponent_BaseFactory = i0.ɵɵgetInheritedFactory(BarVerticalStackedComponent)))(t || BarVerticalStackedComponent);\n  };\n}();\nBarVerticalStackedComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BarVerticalStackedComponent,\n  selectors: [[\"ngx-charts-bar-vertical-stacked\"]],\n  contentQueries: function BarVerticalStackedComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    tooltipDisabled: \"tooltipDisabled\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    barPadding: \"barPadding\",\n    roundDomains: \"roundDomains\",\n    yScaleMax: \"yScaleMax\",\n    showDataLabel: \"showDataLabel\",\n    dataLabelFormatting: \"dataLabelFormatting\",\n    noBarWhenZero: \"noBarWhenZero\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 6,\n  vars: 13,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelActivate\", \"legendLabelDeactivate\", \"legendLabelClick\"], [1, \"bar-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"xAxisOffset\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"xAxisOffset\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-series-vertical\", \"\", 3, \"type\", \"xScale\", \"yScale\", \"activeEntries\", \"colors\", \"series\", \"dims\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"showDataLabel\", \"dataLabelFormatting\", \"seriesName\", \"animations\", \"noBarWhenZero\", \"select\", \"activate\", \"deactivate\", \"dataLabelHeightChanged\"]],\n  template: function BarVerticalStackedComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelActivate\", function BarVerticalStackedComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event, undefined, true);\n      })(\"legendLabelDeactivate\", function BarVerticalStackedComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event, undefined, true);\n      })(\"legendLabelClick\", function BarVerticalStackedComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵtemplate(2, BarVerticalStackedComponent__svg_g_2_Template, 1, 10, \"g\", 2);\n      i0.ɵɵtemplate(3, BarVerticalStackedComponent__svg_g_3_Template, 1, 9, \"g\", 3);\n      i0.ɵɵtemplate(4, BarVerticalStackedComponent__svg_g_4_Template, 2, 2, \"g\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(5, BarVerticalStackedComponent__svg_g_5_Template, 2, 2, \"g\", 4);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(10, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n    }\n  },\n  directives: [ChartComponent, i2.NgIf, XAxisComponent, YAxisComponent, i2.NgForOf, SeriesVerticalComponent],\n  styles: [_c25],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1,\n      transform: '*'\n    }), animate(500, style({\n      opacity: 0,\n      transform: 'scale(0)'\n    }))])])]\n  },\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BarVerticalStackedComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-bar-vertical-stacked',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-vertical\n              [type]=\"barChartType.Stacked\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g *ngIf=\"isSSR\">\n        <svg:g\n          *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n          [attr.transform]=\"groupTransform(group)\"\n        >\n          <svg:g\n            ngx-charts-series-vertical\n            [type]=\"barChartType.Stacked\"\n            [xScale]=\"xScale\"\n            [yScale]=\"yScale\"\n            [activeEntries]=\"activeEntries\"\n            [colors]=\"colors\"\n            [series]=\"group.series\"\n            [dims]=\"dims\"\n            [gradient]=\"gradient\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [showDataLabel]=\"showDataLabel\"\n            [dataLabelFormatting]=\"dataLabelFormatting\"\n            [seriesName]=\"group.name\"\n            [animations]=\"animations\"\n            [noBarWhenZero]=\"noBarWhenZero\"\n            (select)=\"onClick($event, group)\"\n            (activate)=\"onActivate($event, group)\"\n            (deactivate)=\"onDeactivate($event, group)\"\n            (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1,\n        transform: '*'\n      }), animate(500, style({\n        opacity: 0,\n        transform: 'scale(0)'\n      }))])])],\n      styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    barPadding: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    yScaleMax: [{\n      type: Input\n    }],\n    showDataLabel: [{\n      type: Input\n    }],\n    dataLabelFormatting: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\nclass BarChartModule {}\nBarChartModule.ɵfac = function BarChartModule_Factory(t) {\n  return new (t || BarChartModule)();\n};\nBarChartModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: BarChartModule\n});\nBarChartModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ChartCommonModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BarChartModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ChartCommonModule],\n      declarations: [BarComponent, BarHorizontalComponent, BarHorizontal2DComponent, BarHorizontalNormalizedComponent, BarHorizontalStackedComponent, BarVerticalComponent, BarVertical2DComponent, BarVerticalNormalizedComponent, BarVerticalStackedComponent, BarLabelComponent, SeriesHorizontal, SeriesVerticalComponent],\n      exports: [BarComponent, BarHorizontalComponent, BarHorizontal2DComponent, BarHorizontalNormalizedComponent, BarHorizontalStackedComponent, BarVerticalComponent, BarVertical2DComponent, BarVerticalNormalizedComponent, BarVerticalStackedComponent, BarLabelComponent, SeriesHorizontal, SeriesVerticalComponent]\n    }]\n  }], null, null);\n})();\nconst cloneDeep = rfdc();\nclass BoxComponent {\n  constructor(element, cd) {\n    this.cd = cd;\n    this.roundEdges = true;\n    this.gradient = false;\n    this.offset = 0;\n    this.isActive = false;\n    this.animations = true;\n    this.noBarWhenZero = true;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.BarOrientation = BarOrientation;\n    this.initialized = false;\n    this.hasGradient = false;\n    this.hideBar = false;\n    this.nativeElm = element.nativeElement;\n  }\n  ngOnChanges(changes) {\n    if (!this.initialized) {\n      this.loadAnimation();\n      this.initialized = true;\n    } else {\n      this.update();\n    }\n  }\n  update() {\n    this.boxStrokeWidth = Math.max(this.strokeWidth, 1);\n    this.whiskerStrokeWidth = Math.max(this.strokeWidth / 2, 1);\n    this.medianLineWidth = 1.5 * this.strokeWidth;\n    this.gradientId = 'grad' + id().toString();\n    this.gradientFill = `url(#${this.gradientId})`;\n    if (this.gradient) {\n      this.gradientStops = this.getGradient();\n      this.hasGradient = true;\n    } else {\n      this.hasGradient = false;\n    }\n    this.updateLineEl();\n    this.updatePathEl();\n    this.checkToHideBar();\n    this.maskLineId = 'mask' + id().toString();\n    this.maskLine = `url(#${this.maskLineId})`;\n    if (this.cd) {\n      this.cd.markForCheck();\n    }\n  }\n  loadAnimation() {\n    this.boxPath = this.oldPath = this.getStartingPath();\n    this.oldLineCoordinates = this.getStartingLineCoordinates();\n    setTimeout(this.update.bind(this), 100);\n  }\n  updatePathEl() {\n    const nodeBar = select(this.nativeElm).selectAll('.bar');\n    const path = this.getPath();\n    if (this.animations) {\n      nodeBar.attr('d', this.oldPath).transition().ease(easeSinInOut).duration(500).attrTween('d', this.pathTween(path, 4));\n    } else {\n      nodeBar.attr('d', path);\n    }\n    this.oldPath = path;\n  }\n  updateLineEl() {\n    const lineEl = select(this.nativeElm).selectAll('.bar-line');\n    const lineCoordinates = this.lineCoordinates;\n    const oldLineCoordinates = this.oldLineCoordinates;\n    if (this.animations) {\n      lineEl.attr('x1', (_, index) => oldLineCoordinates[index].v1.x).attr('y1', (_, index) => oldLineCoordinates[index].v1.y).attr('x2', (_, index) => oldLineCoordinates[index].v2.x).attr('y2', (_, index) => oldLineCoordinates[index].v2.y).transition().ease(easeSinInOut).duration(500).attr('x1', (_, index) => lineCoordinates[index].v1.x).attr('y1', (_, index) => lineCoordinates[index].v1.y).attr('x2', (_, index) => lineCoordinates[index].v2.x).attr('y2', (_, index) => lineCoordinates[index].v2.y);\n    } else {\n      lineEl.attr('x1', (_, index) => lineCoordinates[index].v1.x).attr('y1', (_, index) => lineCoordinates[index].v1.y).attr('x2', (_, index) => lineCoordinates[index].v2.x).attr('y2', (_, index) => lineCoordinates[index].v2.y);\n    }\n    this.oldLineCoordinates = [...lineCoordinates];\n  }\n  /**\n   * See [D3 Selections](https://www.d3indepth.com/selections/)\n   * @param d The joined data.\n   * @param index The index of the element within the selection\n   * @param node The node element (Line).\n   */\n  lineTween(attr, d, index, node) {\n    const nodeLineEl = node[index];\n    return nodeLineEl[attr].baseVal.value;\n  }\n  // TODO: Refactor into another .ts file if https://github.com/swimlane/ngx-charts/pull/1179 gets merged.\n  pathTween(d1, precision) {\n    return function () {\n      // eslint-disable-next-line @typescript-eslint/no-this-alias\n      const path0 = this;\n      const path1 = this.cloneNode();\n      path1.setAttribute('d', d1);\n      const n0 = path0?.getTotalLength();\n      const n1 = path1?.getTotalLength();\n      // Uniform sampling of distance based on specified precision.\n      const distances = [0];\n      let i = 0;\n      const dt = precision / Math.max(n0, n1);\n      while (i < 1) {\n        distances.push(i);\n        i += dt;\n      }\n      distances.push(1);\n      // Compute point-interpolators at each distance.\n      const points = distances.map(t => {\n        const p0 = path0.getPointAtLength(t * n0);\n        const p1 = path1.getPointAtLength(t * n1);\n        return interpolate([p0.x, p0.y], [p1.x, p1.y]);\n      });\n      // 't': T is the fraction of time (between 0 and 1) since the transition began.\n      return t => {\n        return t < 1 ? 'M' + points.map(p => p(t)).join('L') : d1;\n      };\n    };\n  }\n  getStartingPath() {\n    if (!this.animations) {\n      return this.getPath();\n    }\n    const radius = this.roundEdges ? 1 : 0;\n    const {\n      x,\n      y\n    } = this.lineCoordinates[2].v1;\n    return roundedRect(x - this.width, y - 1, this.width, 2, radius, this.edges);\n  }\n  getPath() {\n    const radius = this.getRadius();\n    let path = '';\n    path = roundedRect(this.x, this.y, this.width, this.height, Math.min(this.height, radius), this.edges);\n    return path;\n  }\n  getStartingLineCoordinates() {\n    if (!this.animations) {\n      return [...this.lineCoordinates];\n    }\n    const lineCoordinates = cloneDeep(this.lineCoordinates);\n    lineCoordinates[1].v1.y = lineCoordinates[1].v2.y = lineCoordinates[3].v1.y = lineCoordinates[3].v2.y = lineCoordinates[0].v1.y = lineCoordinates[0].v2.y = lineCoordinates[2].v1.y;\n    return lineCoordinates;\n  }\n  getRadius() {\n    let radius = 0;\n    if (this.roundEdges && this.height > 5 && this.width > 5) {\n      radius = Math.floor(Math.min(5, this.height / 2, this.width / 2));\n    }\n    return radius;\n  }\n  getGradient() {\n    return [{\n      offset: 0,\n      color: this.fill,\n      opacity: this.getStartOpacity()\n    }, {\n      offset: 100,\n      color: this.fill,\n      opacity: 1\n    }];\n  }\n  getStartOpacity() {\n    if (this.roundEdges) {\n      return 0.2;\n    } else {\n      return 0.5;\n    }\n  }\n  get edges() {\n    let edges = [false, false, false, false];\n    if (this.roundEdges) {\n      edges = [true, true, true, true];\n    }\n    return edges;\n  }\n  onMouseEnter() {\n    this.activate.emit(this.data);\n  }\n  onMouseLeave() {\n    this.deactivate.emit(this.data);\n  }\n  checkToHideBar() {\n    this.hideBar = this.noBarWhenZero && this.height === 0;\n  }\n}\nBoxComponent.ɵfac = function BoxComponent_Factory(t) {\n  return new (t || BoxComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\nBoxComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BoxComponent,\n  selectors: [[\"g\", \"ngx-charts-box\", \"\"]],\n  hostBindings: function BoxComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mouseenter\", function BoxComponent_mouseenter_HostBindingHandler() {\n        return ctx.onMouseEnter();\n      })(\"mouseleave\", function BoxComponent_mouseleave_HostBindingHandler() {\n        return ctx.onMouseLeave();\n      });\n    }\n  },\n  inputs: {\n    strokeColor: \"strokeColor\",\n    strokeWidth: \"strokeWidth\",\n    fill: \"fill\",\n    data: \"data\",\n    width: \"width\",\n    height: \"height\",\n    x: \"x\",\n    y: \"y\",\n    lineCoordinates: \"lineCoordinates\",\n    roundEdges: \"roundEdges\",\n    gradient: \"gradient\",\n    gradientStops: \"gradientStops\",\n    offset: \"offset\",\n    isActive: \"isActive\",\n    animations: \"animations\",\n    ariaLabel: \"ariaLabel\",\n    noBarWhenZero: \"noBarWhenZero\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c30,\n  decls: 9,\n  vars: 13,\n  consts: [[\"ngx-charts-svg-linear-gradient\", \"\", 3, \"orientation\", \"name\", \"stops\", 4, \"ngIf\"], [\"height\", \"100%\", \"width\", \"100%\", \"fill\", \"white\", \"fill-opacity\", \"1\"], [\"fill\", \"black\", \"fill-opacity\", \"1\", 1, \"bar\"], [\"role\", \"img\", \"tabIndex\", \"-1\", 1, \"bar\", 3, \"click\"], [\"class\", \"bar-line\", \"fill\", \"none\", 3, \"hidden\", 4, \"ngFor\", \"ngForOf\"], [\"ngx-charts-svg-linear-gradient\", \"\", 3, \"orientation\", \"name\", \"stops\"], [\"fill\", \"none\", 1, \"bar-line\"]],\n  template: function BoxComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"defs\");\n      i0.ɵɵtemplate(1, BoxComponent__svg_g_1_Template, 1, 3, \"g\", 0);\n      i0.ɵɵelementStart(2, \"mask\");\n      i0.ɵɵelementStart(3, \"g\");\n      i0.ɵɵelement(4, \"rect\", 1);\n      i0.ɵɵelement(5, \"path\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"g\");\n      i0.ɵɵelementStart(7, \"path\", 3);\n      i0.ɵɵlistener(\"click\", function BoxComponent_Template__svg_path_click_7_listener() {\n        return ctx.select.emit(ctx.data);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(8, BoxComponent__svg_line_8_Template, 1, 9, \"line\", 4);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.hasGradient);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"id\", ctx.maskLineId);\n      i0.ɵɵadvance(3);\n      i0.ɵɵattribute(\"d\", ctx.boxPath);\n      i0.ɵɵadvance(2);\n      i0.ɵɵclassProp(\"active\", ctx.isActive)(\"hidden\", ctx.hideBar);\n      i0.ɵɵattribute(\"d\", ctx.boxPath)(\"stroke\", ctx.strokeColor)(\"stroke-width\", ctx.boxStrokeWidth)(\"aria-label\", ctx.ariaLabel)(\"fill\", ctx.hasGradient ? ctx.gradientFill : ctx.fill);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.lineCoordinates);\n    }\n  },\n  directives: [i2.NgIf, i2.NgForOf, SvgLinearGradientComponent],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BoxComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-box]',\n      template: `\n    <svg:defs>\n      <svg:g\n        *ngIf=\"hasGradient\"\n        ngx-charts-svg-linear-gradient\n        [orientation]=\"BarOrientation.Vertical\"\n        [name]=\"gradientId\"\n        [stops]=\"gradientStops\"\n      />\n      <svg:mask [attr.id]=\"maskLineId\">\n        <svg:g>\n          <rect height=\"100%\" width=\"100%\" fill=\"white\" fill-opacity=\"1\" />\n          <path class=\"bar\" [attr.d]=\"boxPath\" fill=\"black\" fill-opacity=\"1\" />\n        </svg:g>\n      </svg:mask>\n    </svg:defs>\n    <svg:g>\n      <svg:path\n        class=\"bar\"\n        role=\"img\"\n        tabIndex=\"-1\"\n        [class.active]=\"isActive\"\n        [class.hidden]=\"hideBar\"\n        [attr.d]=\"boxPath\"\n        [attr.stroke]=\"strokeColor\"\n        [attr.stroke-width]=\"boxStrokeWidth\"\n        [attr.aria-label]=\"ariaLabel\"\n        [attr.fill]=\"hasGradient ? gradientFill : fill\"\n        (click)=\"select.emit(data)\"\n      />\n      <svg:line\n        *ngFor=\"let line of lineCoordinates; let i = index\"\n        class=\"bar-line\"\n        [class.hidden]=\"hideBar\"\n        [attr.x1]=\"line.v1.x\"\n        [attr.y1]=\"line.v1.y\"\n        [attr.x2]=\"line.v2.x\"\n        [attr.y2]=\"line.v2.y\"\n        [attr.stroke]=\"strokeColor\"\n        [attr.stroke-width]=\"i === 2 ? medianLineWidth : whiskerStrokeWidth\"\n        [attr.mask]=\"i ? undefined : maskLine\"\n        fill=\"none\"\n      />\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    strokeColor: [{\n      type: Input\n    }],\n    strokeWidth: [{\n      type: Input\n    }],\n    fill: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    x: [{\n      type: Input\n    }],\n    y: [{\n      type: Input\n    }],\n    lineCoordinates: [{\n      type: Input\n    }],\n    roundEdges: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    gradientStops: [{\n      type: Input\n    }],\n    offset: [{\n      type: Input\n    }],\n    isActive: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    onMouseEnter: [{\n      type: HostListener,\n      args: ['mouseenter']\n    }],\n    onMouseLeave: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  });\n})();\nclass BoxSeriesComponent {\n  constructor() {\n    this.animations = true;\n    this.tooltipDisabled = false;\n    this.gradient = false;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n  update() {\n    this.updateTooltipSettings();\n    const width = this.series && this.series.series.length ? Math.round(this.xScale.bandwidth()) : null;\n    const seriesName = this.series.name;\n    // Calculate Quantile and Whiskers for each box serie.\n    this.counts = this.series.series;\n    const mappedCounts = this.counts.map(serie => Number(serie.value));\n    this.whiskers = [min(mappedCounts), max(mappedCounts)];\n    // We get the group count and must sort it in order to retrieve quantiles.\n    const groupCounts = this.counts.map(item => item.value).sort((a, b) => Number(a) - Number(b));\n    this.quartiles = this.getBoxQuantiles(groupCounts);\n    this.lineCoordinates = this.getLinesCoordinates(seriesName.toString(), this.whiskers, this.quartiles, width);\n    const value = this.quartiles[1];\n    const formattedLabel = formatLabel(seriesName);\n    const box = {\n      value,\n      data: this.counts,\n      label: seriesName,\n      formattedLabel,\n      width,\n      height: 0,\n      x: 0,\n      y: 0,\n      roundEdges: this.roundEdges,\n      quartiles: this.quartiles,\n      lineCoordinates: this.lineCoordinates\n    };\n    box.height = Math.abs(this.yScale(this.quartiles[0]) - this.yScale(this.quartiles[2]));\n    box.x = this.xScale(seriesName.toString());\n    box.y = this.yScale(this.quartiles[2]);\n    box.ariaLabel = formattedLabel + ' - Median: ' + value.toLocaleString();\n    if (this.colors.scaleType === ScaleType.Ordinal) {\n      box.color = this.colors.getColor(seriesName);\n    } else {\n      box.color = this.colors.getColor(this.quartiles[1]);\n      box.gradientStops = this.colors.getLinearGradientStops(this.quartiles[0], this.quartiles[2]);\n    }\n    const tooltipLabel = formattedLabel;\n    const formattedTooltipLabel = `\n    <span class=\"tooltip-label\">${escapeLabel(tooltipLabel)}</span>\n    <span class=\"tooltip-val\">\n      • Q1: ${this.quartiles[0]} • Q2: ${this.quartiles[1]} • Q3: ${this.quartiles[2]}<br>\n      • Min: ${this.whiskers[0]} • Max: ${this.whiskers[1]}\n    </span>`;\n    box.tooltipText = this.tooltipDisabled ? undefined : formattedTooltipLabel;\n    this.tooltipTitle = this.tooltipDisabled ? undefined : box.tooltipText;\n    this.box = box;\n  }\n  getBoxQuantiles(inputData) {\n    return [quantile(inputData, 0.25), quantile(inputData, 0.5), quantile(inputData, 0.75)];\n  }\n  getLinesCoordinates(seriesName, whiskers, quartiles, barWidth) {\n    // The X value is not being centered, so had to sum half the width to align it.\n    const commonX = this.xScale(seriesName);\n    const offsetX = commonX + barWidth / 2;\n    const medianLineWidth = Math.max(barWidth + 4 * this.strokeWidth, 1);\n    const whiskerLineWidth = Math.max(barWidth / 3, 1);\n    const whiskerZero = this.yScale(whiskers[0]);\n    const whiskerOne = this.yScale(whiskers[1]);\n    const median = this.yScale(quartiles[1]);\n    const topLine = {\n      v1: {\n        x: offsetX + whiskerLineWidth / 2,\n        y: whiskerZero\n      },\n      v2: {\n        x: offsetX - whiskerLineWidth / 2,\n        y: whiskerZero\n      }\n    };\n    const medianLine = {\n      v1: {\n        x: offsetX + medianLineWidth / 2,\n        y: median\n      },\n      v2: {\n        x: offsetX - medianLineWidth / 2,\n        y: median\n      }\n    };\n    const bottomLine = {\n      v1: {\n        x: offsetX + whiskerLineWidth / 2,\n        y: whiskerOne\n      },\n      v2: {\n        x: offsetX - whiskerLineWidth / 2,\n        y: whiskerOne\n      }\n    };\n    const verticalLine = {\n      v1: {\n        x: offsetX,\n        y: whiskerZero\n      },\n      v2: {\n        x: offsetX,\n        y: whiskerOne\n      }\n    };\n    return [verticalLine, topLine, medianLine, bottomLine];\n  }\n  updateTooltipSettings() {\n    if (this.tooltipDisabled) {\n      this.tooltipPlacement = undefined;\n      this.tooltipType = undefined;\n    } else {\n      if (!this.tooltipPlacement) {\n        this.tooltipPlacement = PlacementTypes.Top;\n      }\n      if (!this.tooltipType) {\n        this.tooltipType = StyleTypes.tooltip;\n      }\n    }\n  }\n}\nBoxSeriesComponent.ɵfac = function BoxSeriesComponent_Factory(t) {\n  return new (t || BoxSeriesComponent)();\n};\nBoxSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BoxSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-box-series\", \"\"]],\n  inputs: {\n    dims: \"dims\",\n    series: \"series\",\n    xScale: \"xScale\",\n    yScale: \"yScale\",\n    colors: \"colors\",\n    animations: \"animations\",\n    strokeColor: \"strokeColor\",\n    strokeWidth: \"strokeWidth\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipTemplate: \"tooltipTemplate\",\n    tooltipPlacement: \"tooltipPlacement\",\n    tooltipType: \"tooltipType\",\n    roundEdges: \"roundEdges\",\n    gradient: \"gradient\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c31,\n  decls: 1,\n  vars: 22,\n  consts: [[\"ngx-charts-box\", \"\", \"ngx-tooltip\", \"\", 3, \"width\", \"height\", \"x\", \"y\", \"roundEdges\", \"fill\", \"gradientStops\", \"strokeColor\", \"strokeWidth\", \"data\", \"lineCoordinates\", \"gradient\", \"ariaLabel\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"animations\", \"select\", \"activate\", \"deactivate\"]],\n  template: function BoxSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\", 0);\n      i0.ɵɵlistener(\"select\", function BoxSeriesComponent_Template__svg_g_select_0_listener($event) {\n        return ctx.onClick($event);\n      })(\"activate\", function BoxSeriesComponent_Template__svg_g_activate_0_listener($event) {\n        return ctx.activate.emit($event);\n      })(\"deactivate\", function BoxSeriesComponent_Template__svg_g_deactivate_0_listener($event) {\n        return ctx.deactivate.emit($event);\n      });\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"@animationState\", \"active\")(\"@.disabled\", !ctx.animations)(\"width\", ctx.box.width)(\"height\", ctx.box.height)(\"x\", ctx.box.x)(\"y\", ctx.box.y)(\"roundEdges\", ctx.box.roundEdges)(\"fill\", ctx.box.color)(\"gradientStops\", ctx.box.gradientStops)(\"strokeColor\", ctx.strokeColor)(\"strokeWidth\", ctx.strokeWidth)(\"data\", ctx.box.data)(\"lineCoordinates\", ctx.box.lineCoordinates)(\"gradient\", ctx.gradient)(\"ariaLabel\", ctx.box.ariaLabel)(\"tooltipDisabled\", ctx.tooltipDisabled)(\"tooltipPlacement\", ctx.tooltipPlacement)(\"tooltipType\", ctx.tooltipType)(\"tooltipTitle\", ctx.tooltipTitle)(\"tooltipTemplate\", ctx.tooltipTemplate)(\"tooltipContext\", ctx.box.data)(\"animations\", ctx.animations);\n    }\n  },\n  directives: [BoxComponent, TooltipDirective],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1\n    }), animate(500, style({\n      opacity: 0\n    }))])])]\n  },\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BoxSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-box-series]',\n      template: `\n    <svg:g\n      ngx-charts-box\n      [@animationState]=\"'active'\"\n      [@.disabled]=\"!animations\"\n      [width]=\"box.width\"\n      [height]=\"box.height\"\n      [x]=\"box.x\"\n      [y]=\"box.y\"\n      [roundEdges]=\"box.roundEdges\"\n      [fill]=\"box.color\"\n      [gradientStops]=\"box.gradientStops\"\n      [strokeColor]=\"strokeColor\"\n      [strokeWidth]=\"strokeWidth\"\n      [data]=\"box.data\"\n      [lineCoordinates]=\"box.lineCoordinates\"\n      [gradient]=\"gradient\"\n      [ariaLabel]=\"box.ariaLabel\"\n      (select)=\"onClick($event)\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"tooltipPlacement\"\n      [tooltipType]=\"tooltipType\"\n      [tooltipTitle]=\"tooltipTitle\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"box.data\"\n      [animations]=\"animations\"\n    ></svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1\n      }), animate(500, style({\n        opacity: 0\n      }))])])]\n    }]\n  }], null, {\n    dims: [{\n      type: Input\n    }],\n    series: [{\n      type: Input\n    }],\n    xScale: [{\n      type: Input\n    }],\n    yScale: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    strokeColor: [{\n      type: Input\n    }],\n    strokeWidth: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    tooltipPlacement: [{\n      type: Input\n    }],\n    tooltipType: [{\n      type: Input\n    }],\n    roundEdges: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }]\n  });\n})();\nclass BoxChartComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    /** Show or hide the legend. */\n    this.legend = false;\n    this.legendPosition = LegendPosition.Right;\n    this.legendTitle = 'Legend';\n    this.showGridLines = true;\n    this.xAxis = true;\n    this.yAxis = true;\n    this.showXAxisLabel = true;\n    this.showYAxisLabel = true;\n    this.roundDomains = false;\n    this.roundEdges = true;\n    this.strokeColor = '#FFFFFF';\n    this.strokeWidth = 2;\n    this.tooltipDisabled = false;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    /** Chart Margins (For each side, counterclock wise). */\n    this.margin = [10, 20, 10, 20];\n    /** Chart X axis dimension. */\n    this.xAxisHeight = 0;\n    /** Chart Y axis dimension. */\n    this.yAxisWidth = 0;\n  }\n  trackBy(index, item) {\n    return item.name;\n  }\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendPosition: this.legendPosition\n    });\n    this.xDomain = this.getXDomain();\n    this.yDomain = this.getYDomain();\n    this.seriesDomain = this.getSeriesDomain();\n    this.setScales();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n  }\n  setColors() {\n    let domain = [];\n    if (this.schemeType === ScaleType.Ordinal) {\n      domain = this.seriesDomain;\n    } else {\n      domain = this.yDomain;\n    }\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n  setScales() {\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    this.yScale = this.getYScale(this.yDomain, this.dims.height);\n  }\n  getXScale(domain, width) {\n    const scale = scaleBand().domain(domain.map(d => d.toString())).rangeRound([0, width]).padding(0.5);\n    return scale;\n  }\n  getYScale(domain, height) {\n    const scale = scaleLinear().domain(domain).range([height, 0]);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  getUniqueBoxChartXDomainValues(results) {\n    const valueSet = new Set();\n    for (const result of results) {\n      valueSet.add(result.name);\n    }\n    return Array.from(valueSet);\n  }\n  getXDomain() {\n    let domain = [];\n    const values = this.getUniqueBoxChartXDomainValues(this.results);\n    let min;\n    let max;\n    if (typeof values[0] === 'string') {\n      domain = values.map(val => val.toString());\n    } else if (typeof values[0] === 'number') {\n      const mappedValues = values.map(v => Number(v));\n      min = Math.min(...mappedValues);\n      max = Math.max(...mappedValues);\n      domain = [min, max];\n    } else {\n      const mappedValues = values.map(v => Number(new Date(v)));\n      min = Math.min(...mappedValues);\n      max = Math.max(...mappedValues);\n      domain = [new Date(min), new Date(max)];\n    }\n    return domain;\n  }\n  getYDomain() {\n    const domain = [];\n    for (const results of this.results) {\n      for (const d of results.series) {\n        if (domain.indexOf(d.value) < 0) {\n          domain.push(d.value);\n        }\n      }\n    }\n    const values = [...domain];\n    const mappedValues = values.map(v => Number(v));\n    const min = Math.min(...mappedValues);\n    const max = Math.max(...mappedValues);\n    return [min, max];\n  }\n  getSeriesDomain() {\n    return this.results.map(d => `${d.name}`);\n  }\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n  onActivate(data) {\n    this.activate.emit(data);\n  }\n  onDeactivate(data) {\n    this.deactivate.emit(data);\n  }\n  getLegendOptions() {\n    const legendOpts = {\n      scaleType: this.schemeType,\n      colors: this.colors,\n      domain: [],\n      position: this.legendPosition,\n      title: this.legendTitle\n    };\n    if (this.schemeType === ScaleType.Ordinal) {\n      legendOpts.domain = this.xDomain;\n      legendOpts.colors = this.colors;\n    } else {\n      legendOpts.domain = this.yDomain;\n      legendOpts.colors = this.colors.scale;\n    }\n    return legendOpts;\n  }\n}\nBoxChartComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵBoxChartComponent_BaseFactory;\n  return function BoxChartComponent_Factory(t) {\n    return (ɵBoxChartComponent_BaseFactory || (ɵBoxChartComponent_BaseFactory = i0.ɵɵgetInheritedFactory(BoxChartComponent)))(t || BoxChartComponent);\n  };\n}();\nBoxChartComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BoxChartComponent,\n  selectors: [[\"ngx-charts-box-chart\"]],\n  contentQueries: function BoxChartComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendPosition: \"legendPosition\",\n    legendTitle: \"legendTitle\",\n    legendOptionsConfig: \"legendOptionsConfig\",\n    showGridLines: \"showGridLines\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    roundDomains: \"roundDomains\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    roundEdges: \"roundEdges\",\n    strokeColor: \"strokeColor\",\n    strokeWidth: \"strokeWidth\",\n    tooltipDisabled: \"tooltipDisabled\",\n    gradient: \"gradient\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 6,\n  vars: 21,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"animations\", \"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"], [1, \"box-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"showGridLines\", \"dims\", \"xScale\", \"showLabel\", \"labelText\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"showGridLines\", \"dims\", \"yScale\", \"showLabel\", \"labelText\", \"dimensionsChanged\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-box-series\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"roundEdges\", \"strokeColor\", \"strokeWidth\", \"tooltipDisabled\", \"tooltipTemplate\", \"series\", \"dims\", \"animations\", \"gradient\", \"activate\", \"deactivate\", \"select\"]],\n  template: function BoxChartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelClick\", function BoxChartComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      })(\"legendLabelActivate\", function BoxChartComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event);\n      })(\"legendLabelDeactivate\", function BoxChartComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵelementStart(2, \"g\", 2);\n      i0.ɵɵlistener(\"dimensionsChanged\", function BoxChartComponent_Template__svg_g_dimensionsChanged_2_listener($event) {\n        return ctx.updateXAxisHeight($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"g\", 3);\n      i0.ɵɵlistener(\"dimensionsChanged\", function BoxChartComponent_Template__svg_g_dimensionsChanged_3_listener($event) {\n        return ctx.updateYAxisWidth($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"g\");\n      i0.ɵɵtemplate(5, BoxChartComponent__svg_g_5_Template, 2, 12, \"g\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(18, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"showGridLines\", ctx.showGridLines)(\"dims\", ctx.dims)(\"xScale\", ctx.xScale)(\"showLabel\", ctx.showXAxisLabel)(\"labelText\", ctx.xAxisLabel);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"showGridLines\", ctx.showGridLines)(\"dims\", ctx.dims)(\"yScale\", ctx.yScale)(\"showLabel\", ctx.showYAxisLabel)(\"labelText\", ctx.yAxisLabel);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.results)(\"ngForTrackBy\", ctx.trackBy);\n    }\n  },\n  directives: [ChartComponent, XAxisComponent, YAxisComponent, i2.NgForOf, BoxSeriesComponent],\n  styles: [_c25],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BoxChartComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-box-chart',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"box-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          [showGridLines]=\"showGridLines\"\n          [dims]=\"dims\"\n          [xScale]=\"xScale\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        />\n        <svg:g\n          ngx-charts-y-axis\n          [showGridLines]=\"showGridLines\"\n          [dims]=\"dims\"\n          [yScale]=\"yScale\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        />\n      </svg:g>\n      <svg:g [attr.transform]=\"transform\">\n        <svg:g *ngFor=\"let result of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-box-series\n            [xScale]=\"xScale\"\n            [yScale]=\"yScale\"\n            [colors]=\"colors\"\n            [roundEdges]=\"roundEdges\"\n            [strokeColor]=\"strokeColor\"\n            [strokeWidth]=\"strokeWidth\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [series]=\"result\"\n            [dims]=\"dims\"\n            [animations]=\"animations\"\n            [gradient]=\"gradient\"\n            (activate)=\"onActivate($event)\"\n            (deactivate)=\"onDeactivate($event)\"\n            (select)=\"onClick($event)\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendOptionsConfig: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    roundEdges: [{\n      type: Input\n    }],\n    strokeColor: [{\n      type: Input\n    }],\n    strokeWidth: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate', {\n        static: false\n      }]\n    }]\n  });\n})();\nclass BoxChartModule {}\nBoxChartModule.ɵfac = function BoxChartModule_Factory(t) {\n  return new (t || BoxChartModule)();\n};\nBoxChartModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: BoxChartModule\n});\nBoxChartModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ChartCommonModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BoxChartModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ChartCommonModule],\n      declarations: [BoxChartComponent, BoxSeriesComponent, BoxComponent],\n      exports: [BoxChartComponent, BoxSeriesComponent, BoxComponent]\n    }]\n  }], null, null);\n})();\nfunction getDomain(values, scaleType, autoScale, minVal, maxVal) {\n  let domain = [];\n  if (scaleType === ScaleType.Linear) {\n    values = values.map(v => Number(v));\n    if (!autoScale) {\n      values.push(0);\n    }\n  }\n  if (scaleType === ScaleType.Time || scaleType === ScaleType.Linear) {\n    const min = minVal || minVal === 0 ? minVal : Math.min(...values);\n    const max = maxVal ? maxVal : Math.max(...values);\n    domain = [min, max];\n  } else {\n    domain = values;\n  }\n  return domain;\n}\nfunction getScale(domain, range, scaleType, roundDomains) {\n  switch (scaleType) {\n    case ScaleType.Time:\n      return scaleTime().range(range).domain(domain);\n    case ScaleType.Linear:\n      {\n        const scale = scaleLinear().range(range).domain(domain);\n        if (roundDomains) {\n          return scale.nice();\n        }\n        return scale;\n      }\n    case ScaleType.Ordinal:\n      return scalePoint().range([range[0], range[1]]).domain(domain.map(r => r.toString()));\n    default:\n      return undefined;\n  }\n}\nclass BubbleSeriesComponent {\n  constructor(platformId) {\n    this.platformId = platformId;\n    this.tooltipDisabled = false;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.placementTypes = PlacementTypes;\n    this.styleTypes = StyleTypes;\n    this.isSSR = false;\n  }\n  ngOnInit() {\n    if (isPlatformServer(this.platformId)) {\n      this.isSSR = true;\n    }\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    this.circles = this.getCircles();\n  }\n  getCircles() {\n    const seriesName = this.data.name;\n    return this.data.series.map((d, i) => {\n      if (typeof d.y !== 'undefined' && typeof d.x !== 'undefined') {\n        const y = d.y;\n        const x = d.x;\n        const r = d.r;\n        const radius = this.rScale(r || 1);\n        const tooltipLabel = formatLabel(d.name);\n        const cx = this.xScaleType === ScaleType.Linear ? this.xScale(Number(x)) : this.xScale(x);\n        const cy = this.yScaleType === ScaleType.Linear ? this.yScale(Number(y)) : this.yScale(y);\n        const color = this.colors.scaleType === ScaleType.Linear ? this.colors.getColor(r) : this.colors.getColor(seriesName);\n        const isActive = !this.activeEntries.length ? true : this.isActive({\n          name: seriesName\n        });\n        const opacity = isActive ? 1 : 0.3;\n        const data = Object.assign({}, d, {\n          series: seriesName,\n          name: d.name,\n          value: d.y,\n          x: d.x,\n          radius: d.r\n        });\n        return {\n          data,\n          x,\n          y,\n          r,\n          classNames: [`circle-data-${i}`],\n          value: y,\n          label: x,\n          cx,\n          cy,\n          radius,\n          tooltipLabel,\n          color,\n          opacity,\n          seriesName,\n          isActive,\n          transform: `translate(${cx},${cy})`\n        };\n      }\n    }).filter(circle => circle !== undefined);\n  }\n  getTooltipText(circle) {\n    const hasRadius = typeof circle.r !== 'undefined';\n    const hasTooltipLabel = circle.tooltipLabel && circle.tooltipLabel.length;\n    const hasSeriesName = circle.seriesName && circle.seriesName.length;\n    const radiusValue = hasRadius ? formatLabel(circle.r) : '';\n    const xAxisLabel = this.xAxisLabel && this.xAxisLabel !== '' ? `${this.xAxisLabel}:` : '';\n    const yAxisLabel = this.yAxisLabel && this.yAxisLabel !== '' ? `${this.yAxisLabel}:` : '';\n    const x = formatLabel(circle.x);\n    const y = formatLabel(circle.y);\n    const name = hasSeriesName && hasTooltipLabel ? `${circle.seriesName} • ${circle.tooltipLabel}` : circle.seriesName + circle.tooltipLabel;\n    const tooltipTitle = hasSeriesName || hasTooltipLabel ? `<span class=\"tooltip-label\">${escapeLabel(name)}</span>` : '';\n    return `\n      ${tooltipTitle}\n      <span class=\"tooltip-label\">\n        <label>${escapeLabel(xAxisLabel)}</label> ${escapeLabel(x)}<br />\n        <label>${escapeLabel(yAxisLabel)}</label> ${escapeLabel(y)}\n      </span>\n      <span class=\"tooltip-val\">\n        ${escapeLabel(radiusValue)}\n      </span>\n    `;\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n  isActive(entry) {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name;\n    });\n    return item !== undefined;\n  }\n  isVisible(circle) {\n    if (this.activeEntries.length > 0) {\n      return this.isActive({\n        name: circle.seriesName\n      });\n    }\n    return circle.opacity !== 0;\n  }\n  activateCircle(circle) {\n    circle.barVisible = true;\n    this.activate.emit({\n      name: this.data.name\n    });\n  }\n  deactivateCircle(circle) {\n    circle.barVisible = false;\n    this.deactivate.emit({\n      name: this.data.name\n    });\n  }\n  trackBy(index, circle) {\n    return `${circle.data.series} ${circle.data.name}`;\n  }\n}\nBubbleSeriesComponent.ɵfac = function BubbleSeriesComponent_Factory(t) {\n  return new (t || BubbleSeriesComponent)(i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\nBubbleSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BubbleSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-bubble-series\", \"\"]],\n  inputs: {\n    data: \"data\",\n    xScale: \"xScale\",\n    yScale: \"yScale\",\n    rScale: \"rScale\",\n    xScaleType: \"xScaleType\",\n    yScaleType: \"yScaleType\",\n    colors: \"colors\",\n    visibleValue: \"visibleValue\",\n    activeEntries: \"activeEntries\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipTemplate: \"tooltipTemplate\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c32,\n  decls: 1,\n  vars: 2,\n  consts: [[4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-circle\", \"\", \"class\", \"circle\", \"ngx-tooltip\", \"\", 3, \"cx\", \"cy\", \"r\", \"fill\", \"opacity\", \"active\", \"pointerEvents\", \"data\", \"classNames\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"select\", \"activate\", \"deactivate\", 4, \"ngIf\"], [\"ngx-charts-circle\", \"\", \"ngx-tooltip\", \"\", 1, \"circle\", 3, \"cx\", \"cy\", \"r\", \"fill\", \"pointerEvents\", \"data\", \"classNames\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"select\", \"activate\", \"deactivate\"]],\n  template: function BubbleSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, BubbleSeriesComponent__svg_g_0_Template, 4, 3, \"g\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.circles)(\"ngForTrackBy\", ctx.trackBy);\n    }\n  },\n  directives: [i2.NgForOf, i2.NgIf, CircleComponent, TooltipDirective],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':enter', [style({\n      opacity: 0,\n      transform: 'scale(0)'\n    }), animate(250, style({\n      opacity: 1,\n      transform: 'scale(1)'\n    }))])])]\n  },\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BubbleSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-bubble-series]',\n      template: `\n    <svg:g *ngFor=\"let circle of circles; trackBy: trackBy\">\n      <svg:g [attr.transform]=\"circle.transform\">\n        <svg:g\n          *ngIf=\"!isSSR\"\n          ngx-charts-circle\n          [@animationState]=\"'active'\"\n          class=\"circle\"\n          [cx]=\"0\"\n          [cy]=\"0\"\n          [r]=\"circle.radius\"\n          [fill]=\"circle.color\"\n          [style.opacity]=\"circle.opacity\"\n          [class.active]=\"circle.isActive\"\n          [pointerEvents]=\"'all'\"\n          [data]=\"circle.value\"\n          [classNames]=\"circle.classNames\"\n          (select)=\"onClick(circle.data)\"\n          (activate)=\"activateCircle(circle)\"\n          (deactivate)=\"deactivateCircle(circle)\"\n          ngx-tooltip\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipPlacement]=\"placementTypes.Top\"\n          [tooltipType]=\"styleTypes.tooltip\"\n          [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(circle)\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipContext]=\"circle.data\"\n        />\n        <svg:g\n          *ngIf=\"isSSR\"\n          ngx-charts-circle\n          class=\"circle\"\n          [cx]=\"0\"\n          [cy]=\"0\"\n          [r]=\"circle.radius\"\n          [fill]=\"circle.color\"\n          [style.opacity]=\"circle.opacity\"\n          [class.active]=\"circle.isActive\"\n          [pointerEvents]=\"'all'\"\n          [data]=\"circle.value\"\n          [classNames]=\"circle.classNames\"\n          (select)=\"onClick(circle.data)\"\n          (activate)=\"activateCircle(circle)\"\n          (deactivate)=\"deactivateCircle(circle)\"\n          ngx-tooltip\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipPlacement]=\"placementTypes.Top\"\n          [tooltipType]=\"styleTypes.tooltip\"\n          [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(circle)\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipContext]=\"circle.data\"\n        />\n      </svg:g>\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition(':enter', [style({\n        opacity: 0,\n        transform: 'scale(0)'\n      }), animate(250, style({\n        opacity: 1,\n        transform: 'scale(1)'\n      }))])])]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    data: [{\n      type: Input\n    }],\n    xScale: [{\n      type: Input\n    }],\n    yScale: [{\n      type: Input\n    }],\n    rScale: [{\n      type: Input\n    }],\n    xScaleType: [{\n      type: Input\n    }],\n    yScaleType: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    visibleValue: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }]\n  });\n})();\nclass BubbleChartComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.showGridLines = true;\n    this.legend = false;\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.xAxis = true;\n    this.yAxis = true;\n    this.trimXAxisTicks = true;\n    this.trimYAxisTicks = true;\n    this.rotateXAxisTicks = true;\n    this.maxXAxisTickLength = 16;\n    this.maxYAxisTickLength = 16;\n    this.roundDomains = false;\n    this.maxRadius = 10;\n    this.minRadius = 3;\n    this.schemeType = ScaleType.Ordinal;\n    this.tooltipDisabled = false;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.scaleType = ScaleType.Linear;\n    this.margin = [10, 20, 10, 20];\n    this.bubblePadding = [0, 0, 0, 0];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.activeEntries = [];\n    this.isSSR = false;\n  }\n  ngOnInit() {\n    if (isPlatformServer(this.platformId)) {\n      this.isSSR = true;\n    }\n  }\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n    this.seriesDomain = this.results.map(d => d.name);\n    this.rDomain = this.getRDomain();\n    this.xDomain = this.getXDomain();\n    this.yDomain = this.getYDomain();\n    this.transform = `translate(${this.dims.xOffset},${this.margin[0]})`;\n    const colorDomain = this.schemeType === ScaleType.Ordinal ? this.seriesDomain : this.rDomain;\n    this.colors = new ColorHelper(this.scheme, this.schemeType, colorDomain, this.customColors);\n    this.data = this.results;\n    this.minRadius = Math.max(this.minRadius, 1);\n    this.maxRadius = Math.max(this.maxRadius, 1);\n    this.rScale = this.getRScale(this.rDomain, [this.minRadius, this.maxRadius]);\n    this.bubblePadding = [0, 0, 0, 0];\n    this.setScales();\n    this.bubblePadding = this.getBubblePadding();\n    this.setScales();\n    this.legendOptions = this.getLegendOptions();\n    this.clipPathId = 'clip' + id().toString();\n    this.clipPath = `url(#${this.clipPathId})`;\n  }\n  hideCircles() {\n    this.deactivateAll();\n  }\n  onClick(data, series) {\n    if (series) {\n      data.series = series.name;\n    }\n    this.select.emit(data);\n  }\n  getBubblePadding() {\n    let yMin = 0;\n    let xMin = 0;\n    let yMax = this.dims.height;\n    let xMax = this.dims.width;\n    for (const s of this.data) {\n      for (const d of s.series) {\n        const r = this.rScale(d.r);\n        const cx = this.xScaleType === ScaleType.Linear ? this.xScale(Number(d.x)) : this.xScale(d.x);\n        const cy = this.yScaleType === ScaleType.Linear ? this.yScale(Number(d.y)) : this.yScale(d.y);\n        xMin = Math.max(r - cx, xMin);\n        yMin = Math.max(r - cy, yMin);\n        yMax = Math.max(cy + r, yMax);\n        xMax = Math.max(cx + r, xMax);\n      }\n    }\n    xMax = Math.max(xMax - this.dims.width, 0);\n    yMax = Math.max(yMax - this.dims.height, 0);\n    return [yMin, xMax, yMax, xMin];\n  }\n  setScales() {\n    let width = this.dims.width;\n    if (this.xScaleMin === undefined && this.xScaleMax === undefined) {\n      width = width - this.bubblePadding[1];\n    }\n    let height = this.dims.height;\n    if (this.yScaleMin === undefined && this.yScaleMax === undefined) {\n      height = height - this.bubblePadding[2];\n    }\n    this.xScale = this.getXScale(this.xDomain, width);\n    this.yScale = this.getYScale(this.yDomain, height);\n  }\n  getYScale(domain, height) {\n    return getScale(domain, [height, this.bubblePadding[0]], this.yScaleType, this.roundDomains);\n  }\n  getXScale(domain, width) {\n    return getScale(domain, [this.bubblePadding[3], width], this.xScaleType, this.roundDomains);\n  }\n  getRScale(domain, range) {\n    const scale = scaleLinear().range(range).domain(domain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      position: this.legendPosition,\n      title: undefined\n    };\n    if (opts.scaleType === ScaleType.Ordinal) {\n      opts.domain = this.seriesDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.rDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n  getXDomain() {\n    const values = [];\n    for (const results of this.results) {\n      for (const d of results.series) {\n        if (!values.includes(d.x)) {\n          values.push(d.x);\n        }\n      }\n    }\n    this.xScaleType = getScaleType(values);\n    return getDomain(values, this.xScaleType, this.autoScale, this.xScaleMin, this.xScaleMax);\n  }\n  getYDomain() {\n    const values = [];\n    for (const results of this.results) {\n      for (const d of results.series) {\n        if (!values.includes(d.y)) {\n          values.push(d.y);\n        }\n      }\n    }\n    this.yScaleType = getScaleType(values);\n    return getDomain(values, this.yScaleType, this.autoScale, this.yScaleMin, this.yScaleMax);\n  }\n  getRDomain() {\n    let min = Infinity;\n    let max = -Infinity;\n    for (const results of this.results) {\n      for (const d of results.series) {\n        const value = Number(d.r) || 1;\n        min = Math.min(min, value);\n        max = Math.max(max, value);\n      }\n    }\n    return [min, max];\n  }\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n  onActivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name;\n    });\n    if (idx > -1) {\n      return;\n    }\n    this.activeEntries = [item, ...this.activeEntries];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name;\n    });\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  deactivateAll() {\n    this.activeEntries = [...this.activeEntries];\n    for (const entry of this.activeEntries) {\n      this.deactivate.emit({\n        value: entry,\n        entries: []\n      });\n    }\n    this.activeEntries = [];\n  }\n  trackBy(index, item) {\n    return `${item.name}`;\n  }\n}\nBubbleChartComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵBubbleChartComponent_BaseFactory;\n  return function BubbleChartComponent_Factory(t) {\n    return (ɵBubbleChartComponent_BaseFactory || (ɵBubbleChartComponent_BaseFactory = i0.ɵɵgetInheritedFactory(BubbleChartComponent)))(t || BubbleChartComponent);\n  };\n}();\nBubbleChartComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BubbleChartComponent,\n  selectors: [[\"ngx-charts-bubble-chart\"]],\n  contentQueries: function BubbleChartComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  hostBindings: function BubbleChartComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mouseleave\", function BubbleChartComponent_mouseleave_HostBindingHandler() {\n        return ctx.hideCircles();\n      });\n    }\n  },\n  inputs: {\n    showGridLines: \"showGridLines\",\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    roundDomains: \"roundDomains\",\n    maxRadius: \"maxRadius\",\n    minRadius: \"minRadius\",\n    autoScale: \"autoScale\",\n    schemeType: \"schemeType\",\n    tooltipDisabled: \"tooltipDisabled\",\n    xScaleMin: \"xScaleMin\",\n    xScaleMax: \"xScaleMax\",\n    yScaleMin: \"yScaleMin\",\n    yScaleMax: \"yScaleMax\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 10,\n  vars: 19,\n  consts: [[3, \"view\", \"showLegend\", \"activeEntries\", \"legendOptions\", \"animations\", \"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"], [1, \"bubble-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"showGridLines\", \"dims\", \"xScale\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"showGridLines\", \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"x\", \"0\", \"y\", \"0\", 1, \"bubble-chart-area\", 2, \"fill\", \"rgb(255, 0, 0)\", \"opacity\", \"0\", \"cursor\", \"auto\", 3, \"mouseenter\"], [4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"showGridLines\", \"dims\", \"xScale\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"showGridLines\", \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-bubble-series\", \"\", 3, \"xScale\", \"yScale\", \"rScale\", \"xScaleType\", \"yScaleType\", \"xAxisLabel\", \"yAxisLabel\", \"colors\", \"data\", \"activeEntries\", \"tooltipDisabled\", \"tooltipTemplate\", \"select\", \"activate\", \"deactivate\"]],\n  template: function BubbleChartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelClick\", function BubbleChartComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      })(\"legendLabelActivate\", function BubbleChartComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event);\n      })(\"legendLabelDeactivate\", function BubbleChartComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"defs\");\n      i0.ɵɵelementStart(2, \"clipPath\");\n      i0.ɵɵelement(3, \"rect\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"g\", 1);\n      i0.ɵɵtemplate(5, BubbleChartComponent__svg_g_5_Template, 1, 10, \"g\", 2);\n      i0.ɵɵtemplate(6, BubbleChartComponent__svg_g_6_Template, 1, 9, \"g\", 3);\n      i0.ɵɵelementStart(7, \"rect\", 4);\n      i0.ɵɵlistener(\"mouseenter\", function BubbleChartComponent_Template__svg_rect_mouseenter_7_listener() {\n        return ctx.deactivateAll();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(8, BubbleChartComponent__svg_g_8_Template, 2, 3, \"g\", 5);\n      i0.ɵɵtemplate(9, BubbleChartComponent__svg_g_9_Template, 2, 3, \"g\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(16, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"activeEntries\", ctx.activeEntries)(\"legendOptions\", ctx.legendOptions)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(2);\n      i0.ɵɵattribute(\"id\", ctx.clipPathId);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"width\", ctx.dims.width + 10)(\"height\", ctx.dims.height + 10)(\"transform\", \"translate(-5, -5)\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"width\", ctx.dims.width)(\"height\", ctx.dims.height);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n    }\n  },\n  directives: [ChartComponent, i2.NgIf, XAxisComponent, YAxisComponent, i2.NgForOf, BubbleSeriesComponent],\n  styles: [_c25],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1\n    }), animate(500, style({\n      opacity: 0\n    }))])])]\n  },\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BubbleChartComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-bubble-chart',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [activeEntries]=\"activeEntries\"\n      [legendOptions]=\"legendOptions\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"bubble-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [showGridLines]=\"showGridLines\"\n          [dims]=\"dims\"\n          [xScale]=\"xScale\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        />\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [showGridLines]=\"showGridLines\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        />\n        <svg:rect\n          class=\"bubble-chart-area\"\n          x=\"0\"\n          y=\"0\"\n          [attr.width]=\"dims.width\"\n          [attr.height]=\"dims.height\"\n          style=\"fill: rgb(255, 0, 0); opacity: 0; cursor: 'auto';\"\n          (mouseenter)=\"deactivateAll()\"\n        />\n        <svg:g *ngIf=\"!isSSR\" [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of data; trackBy: trackBy\" [@animationState]=\"'active'\">\n            <svg:g\n              ngx-charts-bubble-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [rScale]=\"rScale\"\n              [xScaleType]=\"xScaleType\"\n              [yScaleType]=\"yScaleType\"\n              [xAxisLabel]=\"xAxisLabel\"\n              [yAxisLabel]=\"yAxisLabel\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event, series)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\" [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of data; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-bubble-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [rScale]=\"rScale\"\n              [xScaleType]=\"xScaleType\"\n              [yScaleType]=\"yScaleType\"\n              [xAxisLabel]=\"xAxisLabel\"\n              [yAxisLabel]=\"yAxisLabel\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event, series)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1\n      }), animate(500, style({\n        opacity: 0\n      }))])])],\n      styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    showGridLines: [{\n      type: Input\n    }],\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    maxRadius: [{\n      type: Input\n    }],\n    minRadius: [{\n      type: Input\n    }],\n    autoScale: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    xScaleMin: [{\n      type: Input\n    }],\n    xScaleMax: [{\n      type: Input\n    }],\n    yScaleMin: [{\n      type: Input\n    }],\n    yScaleMax: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }],\n    hideCircles: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  });\n})();\nclass BubbleChartModule {}\nBubbleChartModule.ɵfac = function BubbleChartModule_Factory(t) {\n  return new (t || BubbleChartModule)();\n};\nBubbleChartModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: BubbleChartModule\n});\nBubbleChartModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ChartCommonModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BubbleChartModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ChartCommonModule],\n      declarations: [BubbleChartComponent, BubbleSeriesComponent],\n      exports: [BubbleChartComponent, BubbleSeriesComponent]\n    }]\n  }], null, null);\n})();\nclass HeatMapCellComponent {\n  constructor(element) {\n    this.gradient = false;\n    this.animations = true;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.barOrientation = BarOrientation;\n    this.element = element.nativeElement;\n  }\n  ngOnChanges(changes) {\n    this.transform = `translate(${this.x} , ${this.y})`;\n    this.startOpacity = 0.3;\n    this.gradientId = 'grad' + id().toString();\n    this.gradientUrl = `url(#${this.gradientId})`;\n    this.gradientStops = this.getGradientStops();\n    if (this.animations) {\n      this.loadAnimation();\n    }\n  }\n  getGradientStops() {\n    return [{\n      offset: 0,\n      color: this.fill,\n      opacity: this.startOpacity\n    }, {\n      offset: 100,\n      color: this.fill,\n      opacity: 1\n    }];\n  }\n  loadAnimation() {\n    const node = select(this.element).select('.cell');\n    node.attr('opacity', 0);\n    this.animateToCurrentForm();\n  }\n  animateToCurrentForm() {\n    const node = select(this.element).select('.cell');\n    node.transition().duration(750).attr('opacity', 1);\n  }\n  onClick() {\n    this.select.emit(this.data);\n  }\n  onMouseEnter() {\n    this.activate.emit(this.data);\n  }\n  onMouseLeave() {\n    this.deactivate.emit(this.data);\n  }\n}\nHeatMapCellComponent.ɵfac = function HeatMapCellComponent_Factory(t) {\n  return new (t || HeatMapCellComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\nHeatMapCellComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: HeatMapCellComponent,\n  selectors: [[\"g\", \"ngx-charts-heat-map-cell\", \"\"]],\n  hostBindings: function HeatMapCellComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mouseenter\", function HeatMapCellComponent_mouseenter_HostBindingHandler() {\n        return ctx.onMouseEnter();\n      })(\"mouseleave\", function HeatMapCellComponent_mouseleave_HostBindingHandler() {\n        return ctx.onMouseLeave();\n      });\n    }\n  },\n  inputs: {\n    fill: \"fill\",\n    x: \"x\",\n    y: \"y\",\n    width: \"width\",\n    height: \"height\",\n    data: \"data\",\n    gradient: \"gradient\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c33,\n  decls: 3,\n  vars: 5,\n  consts: [[1, \"cell\"], [4, \"ngIf\"], [\"rx\", \"3\", 1, \"cell\", 3, \"click\"], [\"ngx-charts-svg-linear-gradient\", \"\", 3, \"orientation\", \"name\", \"stops\"]],\n  template: function HeatMapCellComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\", 0);\n      i0.ɵɵtemplate(1, HeatMapCellComponent__svg_defs_1_Template, 2, 3, \"defs\", 1);\n      i0.ɵɵelementStart(2, \"rect\", 2);\n      i0.ɵɵlistener(\"click\", function HeatMapCellComponent_Template__svg_rect_click_2_listener() {\n        return ctx.onClick();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.gradient);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"fill\", ctx.gradient ? ctx.gradientUrl : ctx.fill)(\"width\", ctx.width)(\"height\", ctx.height);\n    }\n  },\n  directives: [i2.NgIf, SvgLinearGradientComponent],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HeatMapCellComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-heat-map-cell]',\n      template: `\n    <svg:g [attr.transform]=\"transform\" class=\"cell\">\n      <defs *ngIf=\"gradient\">\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          [orientation]=\"barOrientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:rect\n        [attr.fill]=\"gradient ? gradientUrl : fill\"\n        rx=\"3\"\n        [attr.width]=\"width\"\n        [attr.height]=\"height\"\n        class=\"cell\"\n        (click)=\"onClick()\"\n      />\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    fill: [{\n      type: Input\n    }],\n    x: [{\n      type: Input\n    }],\n    y: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    onMouseEnter: [{\n      type: HostListener,\n      args: ['mouseenter']\n    }],\n    onMouseLeave: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  });\n})();\nclass HeatCellSeriesComponent {\n  constructor() {\n    this.tooltipDisabled = false;\n    this.animations = true;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.placementTypes = PlacementTypes;\n    this.styleTypes = StyleTypes;\n  }\n  ngOnInit() {\n    if (!this.tooltipText) {\n      this.tooltipText = this.getTooltipText;\n    }\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    this.cells = this.getCells();\n  }\n  getCells() {\n    const cells = [];\n    this.data.map(row => {\n      row.series.map(cell => {\n        const value = cell.value;\n        cell.series = row.name;\n        cells.push({\n          row,\n          cell,\n          x: this.xScale(row.name),\n          y: this.yScale(cell.name),\n          width: this.xScale.bandwidth(),\n          height: this.yScale.bandwidth(),\n          fill: this.colors.getColor(value),\n          data: value,\n          label: formatLabel(cell.name),\n          series: row.name\n        });\n      });\n    });\n    return cells;\n  }\n  getTooltipText({\n    label,\n    data,\n    series\n  }) {\n    return `\n      <span class=\"tooltip-label\">${escapeLabel(series)} • ${escapeLabel(label)}</span>\n      <span class=\"tooltip-val\">${data.toLocaleString()}</span>\n    `;\n  }\n  trackBy(index, item) {\n    return item.label;\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n}\nHeatCellSeriesComponent.ɵfac = function HeatCellSeriesComponent_Factory(t) {\n  return new (t || HeatCellSeriesComponent)();\n};\nHeatCellSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: HeatCellSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-heat-map-cell-series\", \"\"]],\n  inputs: {\n    data: \"data\",\n    colors: \"colors\",\n    xScale: \"xScale\",\n    yScale: \"yScale\",\n    gradient: \"gradient\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipText: \"tooltipText\",\n    tooltipTemplate: \"tooltipTemplate\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c34,\n  decls: 1,\n  vars: 2,\n  consts: [[\"ngx-charts-heat-map-cell\", \"\", \"ngx-tooltip\", \"\", 3, \"x\", \"y\", \"width\", \"height\", \"fill\", \"data\", \"gradient\", \"animations\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"select\", \"activate\", \"deactivate\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-heat-map-cell\", \"\", \"ngx-tooltip\", \"\", 3, \"x\", \"y\", \"width\", \"height\", \"fill\", \"data\", \"gradient\", \"animations\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"select\", \"activate\", \"deactivate\"]],\n  template: function HeatCellSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, HeatCellSeriesComponent__svg_g_0_Template, 1, 18, \"g\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.cells)(\"ngForTrackBy\", ctx.trackBy);\n    }\n  },\n  directives: [i2.NgForOf, HeatMapCellComponent, TooltipDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HeatCellSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-heat-map-cell-series]',\n      template: `\n    <svg:g\n      ngx-charts-heat-map-cell\n      *ngFor=\"let c of cells; trackBy: trackBy\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [fill]=\"c.fill\"\n      [data]=\"c.data\"\n      (select)=\"onClick(c.cell)\"\n      (activate)=\"activate.emit(c.cell)\"\n      (deactivate)=\"deactivate.emit(c.cell)\"\n      [gradient]=\"gradient\"\n      [animations]=\"animations\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"placementTypes.Top\"\n      [tooltipType]=\"styleTypes.tooltip\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(c)\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"{ series: c.series, name: c.label, value: c.data }\"\n    ></svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    data: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    xScale: [{\n      type: Input\n    }],\n    yScale: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipText: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }]\n  });\n})();\nclass HeatMapComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.innerPadding = 8;\n    this.trimXAxisTicks = true;\n    this.trimYAxisTicks = true;\n    this.rotateXAxisTicks = true;\n    this.maxXAxisTickLength = 16;\n    this.maxYAxisTickLength = 16;\n    this.tooltipDisabled = false;\n    this.activeEntries = [];\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.scaleType = ScaleType.Linear;\n  }\n  update() {\n    super.update();\n    this.formatDates();\n    this.xDomain = this.getXDomain();\n    this.yDomain = this.getYDomain();\n    this.valueDomain = this.getValueDomain();\n    this.scaleType = getScaleType(this.valueDomain, false);\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.scaleType,\n      legendPosition: this.legendPosition\n    });\n    if (this.scaleType === ScaleType.Linear) {\n      let min = this.min;\n      let max = this.max;\n      if (!this.min) {\n        min = Math.min(0, ...this.valueDomain);\n      }\n      if (!this.max) {\n        max = Math.max(...this.valueDomain);\n      }\n      this.valueDomain = [min, max];\n    }\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    this.rects = this.getRects();\n  }\n  getXDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      if (!domain.includes(group.name)) {\n        domain.push(group.name);\n      }\n    }\n    return domain;\n  }\n  getYDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.name)) {\n          domain.push(d.name);\n        }\n      }\n    }\n    return domain;\n  }\n  getValueDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.value)) {\n          domain.push(d.value);\n        }\n      }\n    }\n    return domain;\n  }\n  /**\n   * Converts the input to gap paddingInner in fraction\n   * Supports the following inputs:\n   *    Numbers: 8\n   *    Strings: \"8\", \"8px\", \"8%\"\n   *    Arrays: [8,2], \"8,2\", \"[8,2]\"\n   *    Mixed: [8,\"2%\"], [\"8px\",\"2%\"], \"8,2%\", \"[8,2%]\"\n   *\n   * @memberOf HeatMapComponent\n   */\n  getDimension(value, index = 0, N, L) {\n    if (typeof value === 'string') {\n      value = value.replace('[', '').replace(']', '').replace('px', '')\n      // tslint:disable-next-line: quotemark\n      .replace(\"'\", '');\n      if (value.includes(',')) {\n        value = value.split(',');\n      }\n    }\n    if (Array.isArray(value) && typeof index === 'number') {\n      return this.getDimension(value[index], null, N, L);\n    }\n    if (typeof value === 'string' && value.includes('%')) {\n      return +value.replace('%', '') / 100;\n    }\n    return N / (L / +value + 1);\n  }\n  getXScale() {\n    const f = this.getDimension(this.innerPadding, 0, this.xDomain.length, this.dims.width);\n    return scaleBand().rangeRound([0, this.dims.width]).domain(this.xDomain).paddingInner(f);\n  }\n  getYScale() {\n    const f = this.getDimension(this.innerPadding, 1, this.yDomain.length, this.dims.height);\n    return scaleBand().rangeRound([this.dims.height, 0]).domain(this.yDomain).paddingInner(f);\n  }\n  getRects() {\n    const rects = [];\n    this.xDomain.map(xVal => {\n      this.yDomain.map(yVal => {\n        rects.push({\n          x: this.xScale(xVal),\n          y: this.yScale(yVal),\n          rx: 3,\n          width: this.xScale.bandwidth(),\n          height: this.yScale.bandwidth(),\n          fill: 'rgba(200,200,200,0.03)'\n        });\n      });\n    });\n    return rects;\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n  setColors() {\n    this.colors = new ColorHelper(this.scheme, this.scaleType, this.valueDomain);\n  }\n  getLegendOptions() {\n    return {\n      scaleType: this.scaleType,\n      domain: this.valueDomain,\n      colors: this.scaleType === ScaleType.Ordinal ? this.colors : this.colors.scale,\n      title: this.scaleType === ScaleType.Ordinal ? this.legendTitle : undefined,\n      position: this.legendPosition\n    };\n  }\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n  onActivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n    const items = this.results.map(g => g.series).flat().filter(i => {\n      if (fromLegend) {\n        return i.label === item.name;\n      } else {\n        return i.name === item.name && i.series === item.series;\n      }\n    });\n    this.activeEntries = [...items];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n    this.activeEntries = this.activeEntries.filter(i => {\n      if (fromLegend) {\n        return i.label !== item.name;\n      } else {\n        return !(i.name === item.name && i.series === item.series);\n      }\n    });\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n}\nHeatMapComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵHeatMapComponent_BaseFactory;\n  return function HeatMapComponent_Factory(t) {\n    return (ɵHeatMapComponent_BaseFactory || (ɵHeatMapComponent_BaseFactory = i0.ɵɵgetInheritedFactory(HeatMapComponent)))(t || HeatMapComponent);\n  };\n}();\nHeatMapComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: HeatMapComponent,\n  selectors: [[\"ngx-charts-heat-map\"]],\n  contentQueries: function HeatMapComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    gradient: \"gradient\",\n    innerPadding: \"innerPadding\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipText: \"tooltipText\",\n    min: \"min\",\n    max: \"max\",\n    activeEntries: \"activeEntries\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 6,\n  vars: 20,\n  consts: [[3, \"view\", \"showLegend\", \"animations\", \"legendOptions\", \"legendLabelClick\"], [1, \"heat-map\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [\"ngx-charts-heat-map-cell-series\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"data\", \"gradient\", \"animations\", \"tooltipDisabled\", \"tooltipTemplate\", \"tooltipText\", \"select\", \"activate\", \"deactivate\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\"]],\n  template: function HeatMapComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelClick\", function HeatMapComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵtemplate(2, HeatMapComponent__svg_g_2_Template, 1, 9, \"g\", 2);\n      i0.ɵɵtemplate(3, HeatMapComponent__svg_g_3_Template, 1, 8, \"g\", 3);\n      i0.ɵɵtemplate(4, HeatMapComponent__svg_rect_4_Template, 1, 6, \"rect\", 4);\n      i0.ɵɵelementStart(5, \"g\", 5);\n      i0.ɵɵlistener(\"select\", function HeatMapComponent_Template__svg_g_select_5_listener($event) {\n        return ctx.onClick($event);\n      })(\"activate\", function HeatMapComponent_Template__svg_g_activate_5_listener($event) {\n        return ctx.onActivate($event, undefined);\n      })(\"deactivate\", function HeatMapComponent_Template__svg_g_deactivate_5_listener($event) {\n        return ctx.onDeactivate($event, undefined);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(17, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"animations\", ctx.animations)(\"legendOptions\", ctx.legendOptions);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.rects);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"xScale\", ctx.xScale)(\"yScale\", ctx.yScale)(\"colors\", ctx.colors)(\"data\", ctx.results)(\"gradient\", ctx.gradient)(\"animations\", ctx.animations)(\"tooltipDisabled\", ctx.tooltipDisabled)(\"tooltipTemplate\", ctx.tooltipTemplate)(\"tooltipText\", ctx.tooltipText);\n    }\n  },\n  directives: [ChartComponent, i2.NgIf, i2.NgForOf, HeatCellSeriesComponent, XAxisComponent, YAxisComponent],\n  styles: [_c25],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HeatMapComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-heat-map',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [animations]=\"animations\"\n      [legendOptions]=\"legendOptions\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"heat-map chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:rect\n          *ngFor=\"let rect of rects\"\n          [attr.x]=\"rect.x\"\n          [attr.y]=\"rect.y\"\n          [attr.rx]=\"rect.rx\"\n          [attr.width]=\"rect.width\"\n          [attr.height]=\"rect.height\"\n          [attr.fill]=\"rect.fill\"\n        />\n        <svg:g\n          ngx-charts-heat-map-cell-series\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [data]=\"results\"\n          [gradient]=\"gradient\"\n          [animations]=\"animations\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipText]=\"tooltipText\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event, undefined)\"\n          (deactivate)=\"onDeactivate($event, undefined)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    innerPadding: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipText: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\nclass HeatMapModule {}\nHeatMapModule.ɵfac = function HeatMapModule_Factory(t) {\n  return new (t || HeatMapModule)();\n};\nHeatMapModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: HeatMapModule\n});\nHeatMapModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ChartCommonModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HeatMapModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ChartCommonModule],\n      declarations: [HeatMapCellComponent, HeatCellSeriesComponent, HeatMapComponent],\n      exports: [HeatMapCellComponent, HeatCellSeriesComponent, HeatMapComponent]\n    }]\n  }], null, null);\n})();\nclass LineComponent {\n  constructor(element, platformId) {\n    this.element = element;\n    this.platformId = platformId;\n    this.fill = 'none';\n    this.animations = true;\n    // @Output() select = new EventEmitter();\n    this.initialized = false;\n    this.isSSR = false;\n  }\n  ngOnInit() {\n    if (isPlatformServer(this.platformId)) {\n      this.isSSR = true;\n    }\n  }\n  ngOnChanges(changes) {\n    if (!this.initialized) {\n      this.initialized = true;\n      this.initialPath = this.path;\n    } else {\n      this.updatePathEl();\n    }\n  }\n  updatePathEl() {\n    const node = select(this.element.nativeElement).select('.line');\n    if (this.animations) {\n      node.transition().duration(750).attr('d', this.path);\n    } else {\n      node.attr('d', this.path);\n    }\n  }\n}\nLineComponent.ɵfac = function LineComponent_Factory(t) {\n  return new (t || LineComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\nLineComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: LineComponent,\n  selectors: [[\"g\", \"ngx-charts-line\", \"\"]],\n  inputs: {\n    path: \"path\",\n    stroke: \"stroke\",\n    data: \"data\",\n    fill: \"fill\",\n    animations: \"animations\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c36,\n  decls: 2,\n  vars: 2,\n  consts: [[4, \"ngIf\"], [\"stroke-width\", \"1.5px\", 1, \"line\"]],\n  template: function LineComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, LineComponent__svg_g_0_Template, 2, 4, \"g\", 0);\n      i0.ɵɵtemplate(1, LineComponent__svg_g_1_Template, 2, 3, \"g\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n    }\n  },\n  directives: [i2.NgIf],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':enter', [style({\n      strokeDasharray: 2000,\n      strokeDashoffset: 2000\n    }), animate(1000, style({\n      strokeDashoffset: 0\n    }))])])]\n  },\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LineComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-line]',\n      template: `\n    <svg:g *ngIf=\"!isSSR\">\n      <svg:path\n        [@animationState]=\"'active'\"\n        class=\"line\"\n        [attr.d]=\"initialPath\"\n        [attr.fill]=\"fill\"\n        [attr.stroke]=\"stroke\"\n        stroke-width=\"1.5px\"\n      />\n    </svg:g>\n    <svg:g *ngIf=\"isSSR\">\n      <svg:path class=\"line\" [attr.d]=\"initialPath\" [attr.fill]=\"fill\" [attr.stroke]=\"stroke\" stroke-width=\"1.5px\" />\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition(':enter', [style({\n        strokeDasharray: 2000,\n        strokeDashoffset: 2000\n      }), animate(1000, style({\n        strokeDashoffset: 0\n      }))])])]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    path: [{\n      type: Input\n    }],\n    stroke: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    fill: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }]\n  });\n})();\nclass LineSeriesComponent {\n  constructor() {\n    this.animations = true;\n    this.barOrientation = BarOrientation;\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    this.updateGradients();\n    const data = this.sortData(this.data.series);\n    const lineGen = this.getLineGenerator();\n    this.path = lineGen(data) || '';\n    const areaGen = this.getAreaGenerator();\n    this.areaPath = areaGen(data) || '';\n    if (this.hasRange) {\n      const range = this.getRangeGenerator();\n      this.outerPath = range(data) || '';\n    }\n    if (this.hasGradient) {\n      this.stroke = this.gradientUrl;\n      const values = this.data.series.map(d => d.value);\n      const max = Math.max(...values);\n      const min = Math.min(...values);\n      if (max === min) {\n        this.stroke = this.colors.getColor(max);\n      }\n    } else {\n      this.stroke = this.colors.getColor(this.data.name);\n    }\n  }\n  getLineGenerator() {\n    return line().x(d => {\n      const label = d.name;\n      let value;\n      if (this.scaleType === ScaleType.Time) {\n        value = this.xScale(label);\n      } else if (this.scaleType === ScaleType.Linear) {\n        value = this.xScale(Number(label));\n      } else {\n        value = this.xScale(label);\n      }\n      return value;\n    }).y(d => this.yScale(d.value)).curve(this.curve);\n  }\n  getRangeGenerator() {\n    return area().x(d => {\n      const label = d.name;\n      let value;\n      if (this.scaleType === ScaleType.Time) {\n        value = this.xScale(label);\n      } else if (this.scaleType === ScaleType.Linear) {\n        value = this.xScale(Number(label));\n      } else {\n        value = this.xScale(label);\n      }\n      return value;\n    }).y0(d => this.yScale(typeof d.min === 'number' ? d.min : d.value)).y1(d => this.yScale(typeof d.max === 'number' ? d.max : d.value)).curve(this.curve);\n  }\n  getAreaGenerator() {\n    const xProperty = d => {\n      const label = d.name;\n      return this.xScale(label);\n    };\n    return area().x(xProperty).y0(() => this.yScale.range()[0]).y1(d => this.yScale(d.value)).curve(this.curve);\n  }\n  sortData(data) {\n    if (this.scaleType === ScaleType.Linear) {\n      data = sortLinear(data, 'name');\n    } else if (this.scaleType === ScaleType.Time) {\n      data = sortByTime(data, 'name');\n    } else {\n      data = sortByDomain(data, 'name', 'asc', this.xScale.domain());\n    }\n    return data;\n  }\n  updateGradients() {\n    if (this.colors.scaleType === ScaleType.Linear) {\n      this.hasGradient = true;\n      this.gradientId = 'grad' + id().toString();\n      this.gradientUrl = `url(#${this.gradientId})`;\n      const values = this.data.series.map(d => d.value);\n      const max = Math.max(...values);\n      const min = Math.min(...values);\n      this.gradientStops = this.colors.getLinearGradientStops(max, min);\n      this.areaGradientStops = this.colors.getLinearGradientStops(max);\n    } else {\n      this.hasGradient = false;\n      this.gradientStops = undefined;\n      this.areaGradientStops = undefined;\n    }\n  }\n  isActive(entry) {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name;\n    });\n    return item !== undefined;\n  }\n  isInactive(entry) {\n    if (!this.activeEntries || this.activeEntries.length === 0) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name;\n    });\n    return item === undefined;\n  }\n}\nLineSeriesComponent.ɵfac = function LineSeriesComponent_Factory(t) {\n  return new (t || LineSeriesComponent)();\n};\nLineSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: LineSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-line-series\", \"\"]],\n  inputs: {\n    data: \"data\",\n    xScale: \"xScale\",\n    yScale: \"yScale\",\n    colors: \"colors\",\n    scaleType: \"scaleType\",\n    curve: \"curve\",\n    activeEntries: \"activeEntries\",\n    rangeFillOpacity: \"rangeFillOpacity\",\n    hasRange: \"hasRange\",\n    animations: \"animations\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c37,\n  decls: 6,\n  vars: 22,\n  consts: [[\"ngx-charts-svg-linear-gradient\", \"\", 3, \"orientation\", \"name\", \"stops\", 4, \"ngIf\"], [\"ngx-charts-area\", \"\", 1, \"line-highlight\", 3, \"data\", \"path\", \"fill\", \"opacity\", \"startOpacity\", \"gradient\", \"stops\", \"animations\"], [\"ngx-charts-line\", \"\", 1, \"line-series\", 3, \"data\", \"path\", \"stroke\", \"animations\"], [\"ngx-charts-area\", \"\", \"class\", \"line-series-range\", 3, \"data\", \"path\", \"fill\", \"active\", \"inactive\", \"opacity\", \"animations\", 4, \"ngIf\"], [\"ngx-charts-svg-linear-gradient\", \"\", 3, \"orientation\", \"name\", \"stops\"], [\"ngx-charts-area\", \"\", 1, \"line-series-range\", 3, \"data\", \"path\", \"fill\", \"opacity\", \"animations\"]],\n  template: function LineSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\");\n      i0.ɵɵelementStart(1, \"defs\");\n      i0.ɵɵtemplate(2, LineSeriesComponent__svg_g_2_Template, 1, 3, \"g\", 0);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"g\", 1);\n      i0.ɵɵelement(4, \"g\", 2);\n      i0.ɵɵtemplate(5, LineSeriesComponent__svg_g_5_Template, 1, 9, \"g\", 3);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.hasGradient);\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"active\", ctx.isActive(ctx.data))(\"inactive\", ctx.isInactive(ctx.data));\n      i0.ɵɵproperty(\"data\", ctx.data)(\"path\", ctx.areaPath)(\"fill\", ctx.hasGradient ? ctx.gradientUrl : ctx.colors.getColor(ctx.data.name))(\"opacity\", 0.25)(\"startOpacity\", 0)(\"gradient\", true)(\"stops\", ctx.areaGradientStops)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"active\", ctx.isActive(ctx.data))(\"inactive\", ctx.isInactive(ctx.data));\n      i0.ɵɵproperty(\"data\", ctx.data)(\"path\", ctx.path)(\"stroke\", ctx.stroke)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.hasRange);\n    }\n  },\n  directives: [i2.NgIf, AreaComponent, LineComponent, SvgLinearGradientComponent],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LineSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-line-series]',\n      template: `\n    <svg:g>\n      <defs>\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          *ngIf=\"hasGradient\"\n          [orientation]=\"barOrientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:g\n        ngx-charts-area\n        class=\"line-highlight\"\n        [data]=\"data\"\n        [path]=\"areaPath\"\n        [fill]=\"hasGradient ? gradientUrl : colors.getColor(data.name)\"\n        [opacity]=\"0.25\"\n        [startOpacity]=\"0\"\n        [gradient]=\"true\"\n        [stops]=\"areaGradientStops\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n        [animations]=\"animations\"\n      />\n      <svg:g\n        ngx-charts-line\n        class=\"line-series\"\n        [data]=\"data\"\n        [path]=\"path\"\n        [stroke]=\"stroke\"\n        [animations]=\"animations\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n      />\n      <svg:g\n        ngx-charts-area\n        *ngIf=\"hasRange\"\n        class=\"line-series-range\"\n        [data]=\"data\"\n        [path]=\"outerPath\"\n        [fill]=\"hasGradient ? gradientUrl : colors.getColor(data.name)\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n        [opacity]=\"rangeFillOpacity\"\n        [animations]=\"animations\"\n      />\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    data: [{\n      type: Input\n    }],\n    xScale: [{\n      type: Input\n    }],\n    yScale: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    scaleType: [{\n      type: Input\n    }],\n    curve: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    rangeFillOpacity: [{\n      type: Input\n    }],\n    hasRange: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }]\n  });\n})();\nclass LineChartComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.showGridLines = true;\n    this.curve = curveLinear;\n    this.activeEntries = [];\n    this.trimXAxisTicks = true;\n    this.trimYAxisTicks = true;\n    this.rotateXAxisTicks = true;\n    this.maxXAxisTickLength = 16;\n    this.maxYAxisTickLength = 16;\n    this.roundDomains = false;\n    this.tooltipDisabled = false;\n    this.showRefLines = false;\n    this.showRefLabels = true;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.timelineHeight = 50;\n    this.timelinePadding = 10;\n    this.isSSR = false;\n  }\n  ngOnInit() {\n    if (isPlatformServer(this.platformId)) {\n      this.isSSR = true;\n    }\n  }\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n    if (this.timeline) {\n      this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\n    }\n    this.xDomain = this.getXDomain();\n    if (this.filteredDomain) {\n      this.xDomain = this.filteredDomain;\n    }\n    this.yDomain = this.getYDomain();\n    this.seriesDomain = this.getSeriesDomain();\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    this.yScale = this.getYScale(this.yDomain, this.dims.height);\n    this.updateTimeline();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    this.clipPathId = 'clip' + id().toString();\n    this.clipPath = `url(#${this.clipPathId})`;\n  }\n  updateTimeline() {\n    if (this.timeline) {\n      this.timelineWidth = this.dims.width;\n      this.timelineXDomain = this.getXDomain();\n      this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n      this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n      this.timelineTransform = `translate(${this.dims.xOffset}, ${-this.margin[2]})`;\n    }\n  }\n  getXDomain() {\n    let values = getUniqueXDomainValues(this.results);\n    this.scaleType = getScaleType(values);\n    let domain = [];\n    if (this.scaleType === ScaleType.Linear) {\n      values = values.map(v => Number(v));\n    }\n    let min;\n    let max;\n    if (this.scaleType === ScaleType.Time || this.scaleType === ScaleType.Linear) {\n      min = this.xScaleMin ? this.xScaleMin : Math.min(...values);\n      max = this.xScaleMax ? this.xScaleMax : Math.max(...values);\n    }\n    if (this.scaleType === ScaleType.Time) {\n      domain = [new Date(min), new Date(max)];\n      this.xSet = [...values].sort((a, b) => {\n        const aDate = a.getTime();\n        const bDate = b.getTime();\n        if (aDate > bDate) return 1;\n        if (bDate > aDate) return -1;\n        return 0;\n      });\n    } else if (this.scaleType === ScaleType.Linear) {\n      domain = [min, max];\n      // Use compare function to sort numbers numerically\n      this.xSet = [...values].sort((a, b) => a - b);\n    } else {\n      domain = values;\n      this.xSet = values;\n    }\n    return domain;\n  }\n  getYDomain() {\n    const domain = [];\n    for (const results of this.results) {\n      for (const d of results.series) {\n        if (domain.indexOf(d.value) < 0) {\n          domain.push(d.value);\n        }\n        if (d.min !== undefined) {\n          this.hasRange = true;\n          if (domain.indexOf(d.min) < 0) {\n            domain.push(d.min);\n          }\n        }\n        if (d.max !== undefined) {\n          this.hasRange = true;\n          if (domain.indexOf(d.max) < 0) {\n            domain.push(d.max);\n          }\n        }\n      }\n    }\n    const values = [...domain];\n    if (!this.autoScale) {\n      values.push(0);\n    }\n    const min = this.yScaleMin ? this.yScaleMin : Math.min(...values);\n    const max = this.yScaleMax ? this.yScaleMax : Math.max(...values);\n    return [min, max];\n  }\n  getSeriesDomain() {\n    return this.results.map(d => d.name);\n  }\n  getXScale(domain, width) {\n    let scale;\n    if (this.scaleType === ScaleType.Time) {\n      scale = scaleTime().range([0, width]).domain(domain);\n    } else if (this.scaleType === ScaleType.Linear) {\n      scale = scaleLinear().range([0, width]).domain(domain);\n      if (this.roundDomains) {\n        scale = scale.nice();\n      }\n    } else if (this.scaleType === ScaleType.Ordinal) {\n      scale = scalePoint().range([0, width]).padding(0.1).domain(domain);\n    }\n    return scale;\n  }\n  getYScale(domain, height) {\n    const scale = scaleLinear().range([height, 0]).domain(domain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  updateDomain(domain) {\n    this.filteredDomain = domain;\n    this.xDomain = this.filteredDomain;\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n  }\n  updateHoveredVertical(item) {\n    this.hoveredVertical = item.value;\n    this.deactivateAll();\n  }\n  hideCircles() {\n    this.hoveredVertical = null;\n    this.deactivateAll();\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n  trackBy(index, item) {\n    return `${item.name}`;\n  }\n  setColors() {\n    let domain;\n    if (this.schemeType === ScaleType.Ordinal) {\n      domain = this.seriesDomain;\n    } else {\n      domain = this.yDomain;\n    }\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === ScaleType.Ordinal) {\n      opts.domain = this.seriesDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.yDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n  onActivate(item) {\n    this.deactivateAll();\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    if (idx > -1) {\n      return;\n    }\n    this.activeEntries = [item];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  deactivateAll() {\n    this.activeEntries = [...this.activeEntries];\n    for (const entry of this.activeEntries) {\n      this.deactivate.emit({\n        value: entry,\n        entries: []\n      });\n    }\n    this.activeEntries = [];\n  }\n}\nLineChartComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵLineChartComponent_BaseFactory;\n  return function LineChartComponent_Factory(t) {\n    return (ɵLineChartComponent_BaseFactory || (ɵLineChartComponent_BaseFactory = i0.ɵɵgetInheritedFactory(LineChartComponent)))(t || LineChartComponent);\n  };\n}();\nLineChartComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: LineChartComponent,\n  selectors: [[\"ngx-charts-line-chart\"]],\n  contentQueries: function LineChartComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n      i0.ɵɵcontentQuery(dirIndex, _c23, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.seriesTooltipTemplate = _t.first);\n    }\n  },\n  hostBindings: function LineChartComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mouseleave\", function LineChartComponent_mouseleave_HostBindingHandler() {\n        return ctx.hideCircles();\n      });\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    autoScale: \"autoScale\",\n    timeline: \"timeline\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    curve: \"curve\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    rangeFillOpacity: \"rangeFillOpacity\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    roundDomains: \"roundDomains\",\n    tooltipDisabled: \"tooltipDisabled\",\n    showRefLines: \"showRefLines\",\n    referenceLines: \"referenceLines\",\n    showRefLabels: \"showRefLabels\",\n    xScaleMin: \"xScaleMin\",\n    xScaleMax: \"xScaleMax\",\n    yScaleMin: \"yScaleMin\",\n    yScaleMax: \"yScaleMax\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 12,\n  vars: 20,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"], [1, \"line-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngIf\"], [3, \"mouseleave\", 4, \"ngIf\"], [\"ngx-charts-timeline\", \"\", 3, \"results\", \"view\", \"height\", \"scheme\", \"customColors\", \"scaleType\", \"legend\", \"onDomainChange\", 4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"dimensionsChanged\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"dimensionsChanged\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-line-series\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"data\", \"activeEntries\", \"scaleType\", \"curve\", \"rangeFillOpacity\", \"hasRange\", \"animations\"], [3, \"mouseleave\"], [\"ngx-charts-tooltip-area\", \"\", 3, \"dims\", \"xSet\", \"xScale\", \"yScale\", \"results\", \"colors\", \"tooltipDisabled\", \"tooltipTemplate\", \"hover\"], [4, \"ngFor\", \"ngForOf\"], [\"ngx-charts-circle-series\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"data\", \"scaleType\", \"visibleValue\", \"activeEntries\", \"tooltipDisabled\", \"tooltipTemplate\", \"select\", \"activate\", \"deactivate\"], [\"ngx-charts-timeline\", \"\", 3, \"results\", \"view\", \"height\", \"scheme\", \"customColors\", \"scaleType\", \"legend\", \"onDomainChange\"], [\"ngx-charts-line-series\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"data\", \"scaleType\", \"curve\", \"hasRange\", \"animations\"]],\n  template: function LineChartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelClick\", function LineChartComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      })(\"legendLabelActivate\", function LineChartComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event);\n      })(\"legendLabelDeactivate\", function LineChartComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"defs\");\n      i0.ɵɵelementStart(2, \"clipPath\");\n      i0.ɵɵelement(3, \"rect\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"g\", 1);\n      i0.ɵɵtemplate(5, LineChartComponent__svg_g_5_Template, 1, 10, \"g\", 2);\n      i0.ɵɵtemplate(6, LineChartComponent__svg_g_6_Template, 1, 12, \"g\", 3);\n      i0.ɵɵelementStart(7, \"g\");\n      i0.ɵɵtemplate(8, LineChartComponent__svg_g_8_Template, 2, 2, \"g\", 4);\n      i0.ɵɵtemplate(9, LineChartComponent__svg_g_9_Template, 2, 2, \"g\", 4);\n      i0.ɵɵtemplate(10, LineChartComponent__svg_g_10_Template, 3, 9, \"g\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(11, LineChartComponent__svg_g_11_Template, 2, 13, \"g\", 6);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(17, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(2);\n      i0.ɵɵattribute(\"id\", ctx.clipPathId);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"width\", ctx.dims.width + 10)(\"height\", ctx.dims.height + 10)(\"transform\", \"translate(-5, -5)\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"clip-path\", ctx.clipPath);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.tooltipDisabled);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.timeline && ctx.scaleType != \"ordinal\");\n    }\n  },\n  directives: [ChartComponent, i2.NgIf, XAxisComponent, YAxisComponent, i2.NgForOf, LineSeriesComponent, TooltipArea, CircleSeriesComponent, Timeline],\n  styles: [_c25],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1\n    }), animate(500, style({\n      opacity: 0\n    }))])])]\n  },\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LineChartComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-line-chart',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"line-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [referenceLines]=\"referenceLines\"\n          [showRefLines]=\"showRefLines\"\n          [showRefLabels]=\"showRefLabels\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngIf=\"!isSSR\">\n            <svg:g *ngFor=\"let series of results; trackBy: trackBy\" [@animationState]=\"'active'\">\n              <svg:g\n                ngx-charts-line-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [data]=\"series\"\n                [activeEntries]=\"activeEntries\"\n                [scaleType]=\"scaleType\"\n                [curve]=\"curve\"\n                [rangeFillOpacity]=\"rangeFillOpacity\"\n                [hasRange]=\"hasRange\"\n                [animations]=\"animations\"\n              />\n            </svg:g>\n          </svg:g>\n          <svg:g *ngIf=\"isSSR\">\n            <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n              <svg:g\n                ngx-charts-line-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [data]=\"series\"\n                [activeEntries]=\"activeEntries\"\n                [scaleType]=\"scaleType\"\n                [curve]=\"curve\"\n                [rangeFillOpacity]=\"rangeFillOpacity\"\n                [hasRange]=\"hasRange\"\n                [animations]=\"animations\"\n              />\n            </svg:g>\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results\">\n              <svg:g\n                ngx-charts-circle-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [activeEntries]=\"activeEntries\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [scaleType]=\"scaleType\"\n        [legend]=\"legend\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-line-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [curve]=\"curve\"\n            [hasRange]=\"hasRange\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1\n      }), animate(500, style({\n        opacity: 0\n      }))])])],\n      styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    autoScale: [{\n      type: Input\n    }],\n    timeline: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    curve: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    rangeFillOpacity: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    showRefLines: [{\n      type: Input\n    }],\n    referenceLines: [{\n      type: Input\n    }],\n    showRefLabels: [{\n      type: Input\n    }],\n    xScaleMin: [{\n      type: Input\n    }],\n    xScaleMax: [{\n      type: Input\n    }],\n    yScaleMin: [{\n      type: Input\n    }],\n    yScaleMax: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }],\n    seriesTooltipTemplate: [{\n      type: ContentChild,\n      args: ['seriesTooltipTemplate']\n    }],\n    hideCircles: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  });\n})();\nclass LineChartModule {}\nLineChartModule.ɵfac = function LineChartModule_Factory(t) {\n  return new (t || LineChartModule)();\n};\nLineChartModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: LineChartModule\n});\nLineChartModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ChartCommonModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LineChartModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ChartCommonModule],\n      declarations: [LineComponent, LineChartComponent, LineSeriesComponent],\n      exports: [LineComponent, LineChartComponent, LineSeriesComponent]\n    }]\n  }], null, null);\n})();\nclass PieLabelComponent {\n  constructor(platformId) {\n    this.platformId = platformId;\n    this.animations = true;\n    this.labelTrim = true;\n    this.labelTrimSize = 10;\n    this.trimLabel = trimLabel;\n  }\n  ngOnChanges(changes) {\n    this.setTransforms();\n    this.update();\n  }\n  setTransforms() {\n    if (isPlatformServer(this.platformId)) {\n      this.styleTransform = `translate3d(${this.textX}px,${this.textY}px, 0)`;\n      this.attrTransform = `translate(${this.textX},${this.textY})`;\n      this.textTransition = !this.animations ? null : 'transform 0.75s';\n    } else {\n      const isIE = /(edge|msie|trident)/i.test(navigator.userAgent);\n      this.styleTransform = isIE ? null : `translate3d(${this.textX}px,${this.textY}px, 0)`;\n      this.attrTransform = !isIE ? null : `translate(${this.textX},${this.textY})`;\n      this.textTransition = isIE || !this.animations ? null : 'transform 0.75s';\n    }\n  }\n  update() {\n    let startRadius = this.radius;\n    if (this.explodeSlices) {\n      startRadius = this.radius * this.value / this.max;\n    }\n    const innerArc = arc().innerRadius(startRadius).outerRadius(startRadius);\n    // Calculate innerPos then scale outer position to match label position\n    const innerPos = innerArc.centroid(this.data);\n    let scale = this.data.pos[1] / innerPos[1];\n    if (this.data.pos[1] === 0 || innerPos[1] === 0) {\n      scale = 1;\n    }\n    const outerPos = [scale * innerPos[0], scale * innerPos[1]];\n    this.line = `M${innerPos}L${outerPos}L${this.data.pos}`;\n  }\n  get textX() {\n    return this.data.pos[0];\n  }\n  get textY() {\n    return this.data.pos[1];\n  }\n  textAnchor() {\n    return this.midAngle(this.data) < Math.PI ? TextAnchor.Start : TextAnchor.End;\n  }\n  midAngle(d) {\n    return d.startAngle + (d.endAngle - d.startAngle) / 2;\n  }\n}\nPieLabelComponent.ɵfac = function PieLabelComponent_Factory(t) {\n  return new (t || PieLabelComponent)(i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\nPieLabelComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PieLabelComponent,\n  selectors: [[\"g\", \"ngx-charts-pie-label\", \"\"]],\n  inputs: {\n    data: \"data\",\n    radius: \"radius\",\n    label: \"label\",\n    color: \"color\",\n    max: \"max\",\n    value: \"value\",\n    explodeSlices: \"explodeSlices\",\n    animations: \"animations\",\n    labelTrim: \"labelTrim\",\n    labelTrimSize: \"labelTrimSize\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c38,\n  decls: 6,\n  vars: 17,\n  consts: [[\"dy\", \".35em\", 1, \"pie-label\"], [\"fill\", \"none\", 1, \"pie-label-line\", \"line\"]],\n  template: function PieLabelComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"title\");\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(2, \"g\");\n      i0.ɵɵelementStart(3, \"text\", 0);\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"path\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate(ctx.label);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"transform\", ctx.styleTransform)(\"transition\", ctx.textTransition);\n      i0.ɵɵattribute(\"transform\", ctx.attrTransform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"text-anchor\", ctx.textAnchor())(\"shape-rendering\", \"crispEdges\");\n      i0.ɵɵclassProp(\"animation\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\" \", ctx.labelTrim ? ctx.trimLabel(ctx.label, ctx.labelTrimSize) : ctx.label, \" \");\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"animation\", ctx.animations);\n      i0.ɵɵattribute(\"d\", ctx.line)(\"stroke\", ctx.color);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PieLabelComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-pie-label]',\n      template: `\n    <title>{{ label }}</title>\n    <svg:g [attr.transform]=\"attrTransform\" [style.transform]=\"styleTransform\" [style.transition]=\"textTransition\">\n      <svg:text\n        class=\"pie-label\"\n        [class.animation]=\"animations\"\n        dy=\".35em\"\n        [style.textAnchor]=\"textAnchor()\"\n        [style.shapeRendering]=\"'crispEdges'\"\n      >\n        {{ labelTrim ? trimLabel(label, labelTrimSize) : label }}\n      </svg:text>\n    </svg:g>\n    <svg:path\n      [attr.d]=\"line\"\n      [attr.stroke]=\"color\"\n      fill=\"none\"\n      class=\"pie-label-line line\"\n      [class.animation]=\"animations\"\n    ></svg:path>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    data: [{\n      type: Input\n    }],\n    radius: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    color: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    explodeSlices: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    labelTrim: [{\n      type: Input\n    }],\n    labelTrimSize: [{\n      type: Input\n    }]\n  });\n})();\nclass PolarSeriesComponent {\n  constructor() {\n    this.tooltipDisabled = false;\n    this.gradient = false;\n    this.animations = true;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.circleRadius = 3;\n    this.barOrientation = BarOrientation;\n    this.placementTypes = PlacementTypes;\n    this.styleTypes = StyleTypes;\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    this.updateGradients();\n    const line = this.getLineGenerator();\n    const data = this.sortData(this.data.series);\n    const seriesName = this.data.name;\n    const linearScaleType = this.colors.scaleType === ScaleType.Linear;\n    const min = this.yScale.domain()[0];\n    this.seriesColor = this.colors.getColor(linearScaleType ? min : seriesName);\n    this.path = line(data) || '';\n    this.circles = data.map(d => {\n      const a = this.getAngle(d);\n      const r = this.getRadius(d);\n      const value = d.value;\n      const color = this.colors.getColor(linearScaleType ? Math.abs(value) : seriesName);\n      const cData = Object.assign({}, d, {\n        series: seriesName,\n        value,\n        name: d.name\n      });\n      return {\n        data: cData,\n        cx: r * Math.sin(a),\n        cy: -r * Math.cos(a),\n        value,\n        color,\n        label: d.name\n      };\n    });\n    this.active = this.isActive(this.data);\n    this.inactive = this.isInactive(this.data);\n    this.tooltipText = this.tooltipText || (c => this.defaultTooltipText(c));\n  }\n  getAngle(d) {\n    const label = d.name;\n    if (this.scaleType === ScaleType.Time) {\n      return this.xScale(label);\n    } else if (this.scaleType === ScaleType.Linear) {\n      return this.xScale(Number(label));\n    }\n    return this.xScale(label);\n  }\n  getRadius(d) {\n    return this.yScale(d.value);\n  }\n  getLineGenerator() {\n    return lineRadial().angle(d => this.getAngle(d)).radius(d => this.getRadius(d)).curve(this.curve);\n  }\n  sortData(data) {\n    if (this.scaleType === ScaleType.Linear) {\n      return sortLinear(data, 'name');\n    } else if (this.scaleType === ScaleType.Time) {\n      return sortByTime(data, 'name');\n    }\n    return sortByDomain(data, 'name', 'asc', this.xScale.domain());\n  }\n  isActive(entry) {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name;\n    });\n    return item !== undefined;\n  }\n  isInactive(entry) {\n    if (!this.activeEntries || this.activeEntries.length === 0) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name;\n    });\n    return item === undefined;\n  }\n  defaultTooltipText({\n    label,\n    value\n  }) {\n    return `\n      <span class=\"tooltip-label\">${escapeLabel(this.data.name)} • ${escapeLabel(label)}</span>\n      <span class=\"tooltip-val\">${value.toLocaleString()}</span>\n    `;\n  }\n  updateGradients() {\n    this.hasGradient = this.gradient || this.colors.scaleType === ScaleType.Linear;\n    if (!this.hasGradient) {\n      return;\n    }\n    this.gradientId = 'grad' + id().toString();\n    this.gradientUrl = `url(#${this.gradientId})`;\n    if (this.colors.scaleType === ScaleType.Linear) {\n      const values = this.data.series.map(d => d.value);\n      const max = Math.max(...values);\n      const min = Math.min(...values);\n      this.gradientStops = this.colors.getLinearGradientStops(max, min);\n    } else {\n      this.gradientStops = undefined;\n    }\n  }\n}\nPolarSeriesComponent.ɵfac = function PolarSeriesComponent_Factory(t) {\n  return new (t || PolarSeriesComponent)();\n};\nPolarSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PolarSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-polar-series\", \"\"]],\n  inputs: {\n    name: \"name\",\n    data: \"data\",\n    xScale: \"xScale\",\n    yScale: \"yScale\",\n    colors: \"colors\",\n    scaleType: \"scaleType\",\n    curve: \"curve\",\n    activeEntries: \"activeEntries\",\n    rangeFillOpacity: \"rangeFillOpacity\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipText: \"tooltipText\",\n    gradient: \"gradient\",\n    tooltipTemplate: \"tooltipTemplate\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c39,\n  decls: 5,\n  vars: 11,\n  consts: [[1, \"polar-charts-series\"], [\"ngx-charts-svg-radial-gradient\", \"\", 3, \"color\", \"name\", \"startOpacity\", \"endOpacity\", \"stops\", 4, \"ngIf\"], [\"ngx-charts-line\", \"\", 1, \"polar-series-path\", 3, \"path\", \"stroke\", \"fill\", \"animations\"], [\"ngx-charts-circle\", \"\", \"class\", \"circle\", \"ngx-tooltip\", \"\", 3, \"cx\", \"cy\", \"r\", \"fill\", \"opacity\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"select\", \"activate\", \"deactivate\", 4, \"ngFor\", \"ngForOf\"], [\"ngx-charts-svg-radial-gradient\", \"\", 3, \"color\", \"name\", \"startOpacity\", \"endOpacity\", \"stops\"], [\"ngx-charts-circle\", \"\", \"ngx-tooltip\", \"\", 1, \"circle\", 3, \"cx\", \"cy\", \"r\", \"fill\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"select\", \"activate\", \"deactivate\"]],\n  template: function PolarSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\", 0);\n      i0.ɵɵelementStart(1, \"defs\");\n      i0.ɵɵtemplate(2, PolarSeriesComponent__svg_g_2_Template, 1, 5, \"g\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"g\", 2);\n      i0.ɵɵtemplate(4, PolarSeriesComponent__svg_g_4_Template, 1, 12, \"g\", 3);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.hasGradient);\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"active\", ctx.active)(\"inactive\", ctx.inactive);\n      i0.ɵɵproperty(\"path\", ctx.path)(\"stroke\", ctx.hasGradient ? ctx.gradientUrl : ctx.seriesColor)(\"fill\", ctx.hasGradient ? ctx.gradientUrl : ctx.seriesColor)(\"animations\", ctx.animations);\n      i0.ɵɵattribute(\"fill-opacity\", ctx.rangeFillOpacity);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.circles);\n    }\n  },\n  directives: [i2.NgIf, LineComponent, i2.NgForOf, SvgRadialGradientComponent, CircleComponent, TooltipDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PolarSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-polar-series]',\n      template: `\n    <svg:g class=\"polar-charts-series\">\n      <defs>\n        <svg:g\n          ngx-charts-svg-radial-gradient\n          *ngIf=\"hasGradient\"\n          [color]=\"seriesColor\"\n          [name]=\"gradientId\"\n          [startOpacity]=\"0.25\"\n          [endOpacity]=\"1\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:g\n        ngx-charts-line\n        class=\"polar-series-path\"\n        [path]=\"path\"\n        [stroke]=\"hasGradient ? gradientUrl : seriesColor\"\n        [class.active]=\"active\"\n        [class.inactive]=\"inactive\"\n        [attr.fill-opacity]=\"rangeFillOpacity\"\n        [fill]=\"hasGradient ? gradientUrl : seriesColor\"\n        [animations]=\"animations\"\n      />\n      <svg:g\n        ngx-charts-circle\n        *ngFor=\"let circle of circles\"\n        class=\"circle\"\n        [cx]=\"circle.cx\"\n        [cy]=\"circle.cy\"\n        [r]=\"circleRadius\"\n        [fill]=\"circle.color\"\n        [style.opacity]=\"inactive ? 0.2 : 1\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Top\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(circle)\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"circle.data\"\n        (select)=\"select.emit(circle.data)\"\n        (activate)=\"activate.emit({ name: circle.data.series })\"\n        (deactivate)=\"deactivate.emit({ name: circle.data.series })\"\n      ></svg:g>\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    name: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    xScale: [{\n      type: Input\n    }],\n    yScale: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    scaleType: [{\n      type: Input\n    }],\n    curve: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    rangeFillOpacity: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipText: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }]\n  });\n})();\nconst twoPI = 2 * Math.PI;\nclass PolarChartComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.showGridLines = true;\n    this.curve = curveCardinalClosed;\n    this.activeEntries = [];\n    this.rangeFillOpacity = 0.15;\n    this.trimYAxisTicks = true;\n    this.maxYAxisTickLength = 16;\n    this.roundDomains = false;\n    this.tooltipDisabled = false;\n    this.showSeriesOnHover = true;\n    this.gradient = false;\n    this.yAxisMinScale = 0;\n    this.labelTrim = true;\n    this.labelTrimSize = 10;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    // series: any; // ???\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.orientation = Orientation;\n    this.isSSR = false;\n  }\n  ngOnInit() {\n    if (isPlatformServer(this.platformId)) {\n      this.isSSR = true;\n    }\n  }\n  update() {\n    super.update();\n    this.setDims();\n    this.setScales();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.setTicks();\n  }\n  setDims() {\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n    const halfWidth = Math.floor(this.dims.width / 2);\n    const halfHeight = Math.floor(this.dims.height / 2);\n    const outerRadius = this.outerRadius = Math.min(halfHeight / 1.5, halfWidth / 1.5);\n    const yOffset = Math.max(0, halfHeight - outerRadius);\n    this.yAxisDims = {\n      ...this.dims,\n      width: halfWidth\n    };\n    this.transform = `translate(${this.dims.xOffset}, ${this.margin[0]})`;\n    this.transformYAxis = `translate(0, ${yOffset})`;\n    this.labelOffset = this.dims.height + 40;\n    this.transformPlot = `translate(${halfWidth}, ${halfHeight})`;\n  }\n  setScales() {\n    const xValues = this.getXValues();\n    this.scaleType = getScaleType(xValues);\n    this.xDomain = this.filteredDomain || this.getXDomain(xValues);\n    this.yDomain = this.getYDomain();\n    this.seriesDomain = this.getSeriesDomain();\n    this.xScale = this.getXScale(this.xDomain, twoPI);\n    this.yScale = this.getYScale(this.yDomain, this.outerRadius);\n    this.yAxisScale = this.getYScale(this.yDomain.reverse(), this.outerRadius);\n  }\n  setTicks() {\n    let tickFormat;\n    if (this.xAxisTickFormatting) {\n      tickFormat = this.xAxisTickFormatting;\n    } else if (this.xScale.tickFormat) {\n      tickFormat = this.xScale.tickFormat.apply(this.xScale, [5]);\n    } else {\n      tickFormat = d => {\n        if (isDate(d)) {\n          return d.toLocaleDateString();\n        }\n        return d.toLocaleString();\n      };\n    }\n    const outerRadius = this.outerRadius;\n    const s = 1.1;\n    this.thetaTicks = this.xDomain.map(d => {\n      const startAngle = this.xScale(d);\n      const dd = s * outerRadius * (startAngle > Math.PI ? -1 : 1);\n      const label = tickFormat(d);\n      const startPos = [outerRadius * Math.sin(startAngle), -outerRadius * Math.cos(startAngle)];\n      const pos = [dd, s * startPos[1]];\n      return {\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle: startAngle,\n        value: outerRadius,\n        label,\n        startPos,\n        pos\n      };\n    });\n    const minDistance = 10;\n    /* from pie chart, abstract out -*/\n    for (let i = 0; i < this.thetaTicks.length - 1; i++) {\n      const a = this.thetaTicks[i];\n      for (let j = i + 1; j < this.thetaTicks.length; j++) {\n        const b = this.thetaTicks[j];\n        // if they're on the same side\n        if (b.pos[0] * a.pos[0] > 0) {\n          // if they're overlapping\n          const o = minDistance - Math.abs(b.pos[1] - a.pos[1]);\n          if (o > 0) {\n            // push the second up or down\n            b.pos[1] += Math.sign(b.pos[0]) * o;\n          }\n        }\n      }\n    }\n    this.radiusTicks = this.yAxisScale.ticks(Math.floor(this.dims.height / 50)).map(d => this.yScale(d));\n  }\n  getXValues() {\n    const values = [];\n    for (const results of this.results) {\n      for (const d of results.series) {\n        if (!values.includes(d.name)) {\n          values.push(d.name);\n        }\n      }\n    }\n    return values;\n  }\n  getXDomain(values = this.getXValues()) {\n    if (this.scaleType === ScaleType.Time) {\n      const min = Math.min(...values);\n      const max = Math.max(...values);\n      return [min, max];\n    } else if (this.scaleType === ScaleType.Linear) {\n      values = values.map(v => Number(v));\n      const min = Math.min(...values);\n      const max = Math.max(...values);\n      return [min, max];\n    }\n    return values;\n  }\n  getYValues() {\n    const domain = [];\n    for (const results of this.results) {\n      for (const d of results.series) {\n        if (domain.indexOf(d.value) < 0) {\n          domain.push(d.value);\n        }\n        if (d.min !== undefined) {\n          if (domain.indexOf(d.min) < 0) {\n            domain.push(d.min);\n          }\n        }\n        if (d.max !== undefined) {\n          if (domain.indexOf(d.max) < 0) {\n            domain.push(d.max);\n          }\n        }\n      }\n    }\n    return domain;\n  }\n  getYDomain(domain = this.getYValues()) {\n    let min = Math.min(...domain);\n    const max = Math.max(this.yAxisMinScale, ...domain);\n    min = Math.max(0, min);\n    if (!this.autoScale) {\n      min = Math.min(0, min);\n    }\n    return [min, max];\n  }\n  getSeriesDomain() {\n    return this.results.map(d => d.name);\n  }\n  getXScale(domain, width) {\n    switch (this.scaleType) {\n      case ScaleType.Time:\n        return scaleTime().range([0, width]).domain(domain);\n      case ScaleType.Linear:\n        {\n          const scale = scaleLinear().range([0, width]).domain(domain);\n          return this.roundDomains ? scale.nice() : scale;\n        }\n      default:\n        return scalePoint().range([0, width - twoPI / domain.length]).padding(0).domain(domain);\n    }\n  }\n  getYScale(domain, height) {\n    const scale = scaleLinear().range([0, height]).domain(domain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  onClick(data, series) {\n    if (series) {\n      data.series = series.name;\n    }\n    this.select.emit(data);\n  }\n  setColors() {\n    const domain = this.schemeType === ScaleType.Ordinal ? this.seriesDomain : this.yDomain.reverse();\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n  getLegendOptions() {\n    if (this.schemeType === ScaleType.Ordinal) {\n      return {\n        scaleType: this.schemeType,\n        colors: this.colors,\n        domain: this.seriesDomain,\n        title: this.legendTitle,\n        position: this.legendPosition\n      };\n    }\n    return {\n      scaleType: this.schemeType,\n      colors: this.colors.scale,\n      domain: this.yDomain,\n      title: undefined,\n      position: this.legendPosition\n    };\n  }\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n  onActivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    if (idx > -1) {\n      return;\n    }\n    this.activeEntries = this.showSeriesOnHover ? [item, ...this.activeEntries] : this.activeEntries;\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  deactivateAll() {\n    this.activeEntries = [...this.activeEntries];\n    for (const entry of this.activeEntries) {\n      this.deactivate.emit({\n        value: entry,\n        entries: []\n      });\n    }\n    this.activeEntries = [];\n  }\n  trackBy(index, item) {\n    return `${item.name}`;\n  }\n}\nPolarChartComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵPolarChartComponent_BaseFactory;\n  return function PolarChartComponent_Factory(t) {\n    return (ɵPolarChartComponent_BaseFactory || (ɵPolarChartComponent_BaseFactory = i0.ɵɵgetInheritedFactory(PolarChartComponent)))(t || PolarChartComponent);\n  };\n}();\nPolarChartComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PolarChartComponent,\n  selectors: [[\"ngx-charts-polar-chart\"]],\n  contentQueries: function PolarChartComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    autoScale: \"autoScale\",\n    showGridLines: \"showGridLines\",\n    curve: \"curve\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    rangeFillOpacity: \"rangeFillOpacity\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    roundDomains: \"roundDomains\",\n    tooltipDisabled: \"tooltipDisabled\",\n    showSeriesOnHover: \"showSeriesOnHover\",\n    gradient: \"gradient\",\n    yAxisMinScale: \"yAxisMinScale\",\n    labelTrim: \"labelTrim\",\n    labelTrimSize: \"labelTrimSize\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 10,\n  vars: 17,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"], [1, \"polar-chart\", \"chart\"], [\"cx\", \"0\", \"cy\", \"0\", 1, \"polar-chart-background\"], [4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-axis-label\", \"\", 3, \"label\", \"offset\", \"orient\", \"height\", \"width\", 4, \"ngIf\"], [\"class\", \"gridline-path radial-gridline-path\", \"cx\", \"0\", \"cy\", \"0\", 4, \"ngFor\", \"ngForOf\"], [\"cx\", \"0\", \"cy\", \"0\", 1, \"gridline-path\", \"radial-gridline-path\"], [\"ngx-charts-pie-label\", \"\", 3, \"data\", \"radius\", \"label\", \"max\", \"value\", \"explodeSlices\", \"animations\", \"labelTrim\", \"labelTrimSize\", 4, \"ngFor\", \"ngForOf\"], [\"ngx-charts-pie-label\", \"\", 3, \"data\", \"radius\", \"label\", \"max\", \"value\", \"explodeSlices\", \"animations\", \"labelTrim\", \"labelTrimSize\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"dimensionsChanged\"], [\"ngx-charts-axis-label\", \"\", 3, \"label\", \"offset\", \"orient\", \"height\", \"width\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-polar-series\", \"\", 3, \"gradient\", \"xScale\", \"yScale\", \"colors\", \"data\", \"activeEntries\", \"scaleType\", \"curve\", \"rangeFillOpacity\", \"animations\", \"tooltipDisabled\", \"tooltipTemplate\", \"select\", \"activate\", \"deactivate\"]],\n  template: function PolarChartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelClick\", function PolarChartComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      })(\"legendLabelActivate\", function PolarChartComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event);\n      })(\"legendLabelDeactivate\", function PolarChartComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵelementStart(2, \"g\");\n      i0.ɵɵelement(3, \"circle\", 2);\n      i0.ɵɵtemplate(4, PolarChartComponent__svg_g_4_Template, 2, 1, \"g\", 3);\n      i0.ɵɵtemplate(5, PolarChartComponent__svg_g_5_Template, 2, 1, \"g\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(6, PolarChartComponent__svg_g_6_Template, 1, 9, \"g\", 4);\n      i0.ɵɵtemplate(7, PolarChartComponent__svg_g_7_Template, 1, 5, \"g\", 5);\n      i0.ɵɵtemplate(8, PolarChartComponent__svg_g_8_Template, 2, 3, \"g\", 3);\n      i0.ɵɵtemplate(9, PolarChartComponent__svg_g_9_Template, 2, 3, \"g\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(14, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transformPlot);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"r\", ctx.outerRadius);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showGridLines);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis && ctx.showXAxisLabel);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n    }\n  },\n  directives: [ChartComponent, i2.NgIf, i2.NgForOf, PieLabelComponent, YAxisComponent, AxisLabelComponent, PolarSeriesComponent],\n  styles: [_c25, \".pie-label{font-size:11px}.pie-label.animation{-webkit-animation:.75s ease-in fadeIn;animation:.75s ease-in fadeIn}@-webkit-keyframes fadeIn{0%{opacity:0}to{opacity:1}}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}.pie-label-line{stroke-dasharray:100%}.pie-label-line.animation{-webkit-animation:3s linear drawOut;animation:3s linear drawOut;transition:d .75s}@-webkit-keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}@keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}\\n\", \".polar-chart .polar-chart-background{fill:none}.polar-chart .radial-gridline-path{stroke-dasharray:10 10;fill:none}.polar-chart .pie-label-line{stroke:#2f3646}.polar-charts-series .polar-series-area,.polar-series-path{pointer-events:none}\\n\"],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1\n    }), animate(500, style({\n      opacity: 0\n    }))])])]\n  },\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PolarChartComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-polar-chart',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:g class=\"polar-chart chart\" [attr.transform]=\"transform\">\n        <svg:g [attr.transform]=\"transformPlot\">\n          <svg:circle class=\"polar-chart-background\" cx=\"0\" cy=\"0\" [attr.r]=\"this.outerRadius\" />\n          <svg:g *ngIf=\"showGridLines\">\n            <svg:circle\n              *ngFor=\"let r of radiusTicks\"\n              class=\"gridline-path radial-gridline-path\"\n              cx=\"0\"\n              cy=\"0\"\n              [attr.r]=\"r\"\n            />\n          </svg:g>\n          <svg:g *ngIf=\"xAxis\">\n            <svg:g\n              ngx-charts-pie-label\n              *ngFor=\"let tick of thetaTicks\"\n              [data]=\"tick\"\n              [radius]=\"outerRadius\"\n              [label]=\"tick.label\"\n              [max]=\"outerRadius\"\n              [value]=\"showGridLines ? 1 : outerRadius\"\n              [explodeSlices]=\"true\"\n              [animations]=\"animations\"\n              [labelTrim]=\"labelTrim\"\n              [labelTrimSize]=\"labelTrimSize\"\n            ></svg:g>\n          </svg:g>\n        </svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          [attr.transform]=\"transformYAxis\"\n          *ngIf=\"yAxis\"\n          [yScale]=\"yAxisScale\"\n          [dims]=\"yAxisDims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-axis-label\n          *ngIf=\"xAxis && showXAxisLabel\"\n          [label]=\"xAxisLabel\"\n          [offset]=\"labelOffset\"\n          [orient]=\"orientation.Bottom\"\n          [height]=\"dims.height\"\n          [width]=\"dims.width\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\" [attr.transform]=\"transformPlot\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\" [@animationState]=\"'active'\">\n            <svg:g\n              ngx-charts-polar-series\n              [gradient]=\"gradient\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [scaleType]=\"scaleType\"\n              [curve]=\"curve\"\n              [rangeFillOpacity]=\"rangeFillOpacity\"\n              [animations]=\"animations\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\" [attr.transform]=\"transformPlot\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-polar-series\n              [gradient]=\"gradient\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [scaleType]=\"scaleType\"\n              [curve]=\"curve\"\n              [rangeFillOpacity]=\"rangeFillOpacity\"\n              [animations]=\"animations\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1\n      }), animate(500, style({\n        opacity: 0\n      }))])])],\n      styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".pie-label{font-size:11px}.pie-label.animation{-webkit-animation:.75s ease-in fadeIn;animation:.75s ease-in fadeIn}@-webkit-keyframes fadeIn{0%{opacity:0}to{opacity:1}}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}.pie-label-line{stroke-dasharray:100%}.pie-label-line.animation{-webkit-animation:3s linear drawOut;animation:3s linear drawOut;transition:d .75s}@-webkit-keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}@keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}\\n\", \".polar-chart .polar-chart-background{fill:none}.polar-chart .radial-gridline-path{stroke-dasharray:10 10;fill:none}.polar-chart .pie-label-line{stroke:#2f3646}.polar-charts-series .polar-series-area,.polar-series-path{pointer-events:none}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    autoScale: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    curve: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    rangeFillOpacity: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    showSeriesOnHover: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    yAxisMinScale: [{\n      type: Input\n    }],\n    labelTrim: [{\n      type: Input\n    }],\n    labelTrimSize: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\nclass PieArcComponent {\n  constructor(element) {\n    this.startAngle = 0;\n    this.endAngle = Math.PI * 2;\n    this.cornerRadius = 0;\n    this.explodeSlices = false;\n    this.gradient = false;\n    this.animate = true;\n    this.pointerEvents = true;\n    this.isActive = false;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.dblclick = new EventEmitter();\n    this.barOrientation = BarOrientation;\n    this.initialized = false;\n    this.element = element.nativeElement;\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  getGradient() {\n    return this.gradient ? this.gradientFill : this.fill;\n  }\n  getPointerEvents() {\n    return this.pointerEvents ? 'auto' : 'none';\n  }\n  update() {\n    const calc = this.calculateArc();\n    this.startOpacity = 0.5;\n    this.radialGradientId = 'linearGrad' + id().toString();\n    this.gradientFill = `url(#${this.radialGradientId})`;\n    if (this.animate) {\n      if (this.initialized) {\n        this.updateAnimation();\n      } else {\n        this.loadAnimation();\n        this.initialized = true;\n      }\n    } else {\n      this.path = calc.startAngle(this.startAngle).endAngle(this.endAngle)();\n    }\n  }\n  calculateArc() {\n    let outerRadius = this.outerRadius;\n    if (this.explodeSlices && this.innerRadius === 0) {\n      outerRadius = this.outerRadius * this.value / this.max;\n    }\n    return arc().innerRadius(this.innerRadius).outerRadius(outerRadius).cornerRadius(this.cornerRadius);\n  }\n  loadAnimation() {\n    const node = select(this.element).selectAll('.arc').data([{\n      startAngle: this.startAngle,\n      endAngle: this.endAngle\n    }]);\n    const calc = this.calculateArc();\n    node.transition().attrTween('d', function (d) {\n      this._current = this._current || d;\n      const copyOfD = Object.assign({}, d);\n      copyOfD.endAngle = copyOfD.startAngle;\n      const interpolater = interpolate(copyOfD, copyOfD);\n      this._current = interpolater(0);\n      return function (t) {\n        return calc(interpolater(t));\n      };\n    }).transition().duration(750).attrTween('d', function (d) {\n      this._current = this._current || d;\n      const interpolater = interpolate(this._current, d);\n      this._current = interpolater(0);\n      return function (t) {\n        return calc(interpolater(t));\n      };\n    });\n  }\n  updateAnimation() {\n    const node = select(this.element).selectAll('.arc').data([{\n      startAngle: this.startAngle,\n      endAngle: this.endAngle\n    }]);\n    const calc = this.calculateArc();\n    node.transition().duration(750).attrTween('d', function (d) {\n      this._current = this._current || d;\n      const interpolater = interpolate(this._current, d);\n      this._current = interpolater(0);\n      return function (t) {\n        return calc(interpolater(t));\n      };\n    });\n  }\n  onClick() {\n    clearTimeout(this._timeout);\n    this._timeout = setTimeout(() => this.select.emit(this.data), 200);\n  }\n  onDblClick(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    clearTimeout(this._timeout);\n    this.dblclick.emit({\n      data: this.data,\n      nativeEvent: event\n    });\n  }\n}\nPieArcComponent.ɵfac = function PieArcComponent_Factory(t) {\n  return new (t || PieArcComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\nPieArcComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PieArcComponent,\n  selectors: [[\"g\", \"ngx-charts-pie-arc\", \"\"]],\n  inputs: {\n    fill: \"fill\",\n    startAngle: \"startAngle\",\n    endAngle: \"endAngle\",\n    innerRadius: \"innerRadius\",\n    outerRadius: \"outerRadius\",\n    cornerRadius: \"cornerRadius\",\n    value: \"value\",\n    max: \"max\",\n    data: \"data\",\n    explodeSlices: \"explodeSlices\",\n    gradient: \"gradient\",\n    animate: \"animate\",\n    pointerEvents: \"pointerEvents\",\n    isActive: \"isActive\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\",\n    dblclick: \"dblclick\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c40,\n  decls: 3,\n  vars: 7,\n  consts: [[1, \"arc-group\"], [4, \"ngIf\"], [1, \"arc\", 3, \"click\", \"dblclick\", \"mouseenter\", \"mouseleave\"], [\"ngx-charts-svg-radial-gradient\", \"\", 3, \"color\", \"name\", \"startOpacity\"]],\n  template: function PieArcComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\", 0);\n      i0.ɵɵtemplate(1, PieArcComponent__svg_defs_1_Template, 2, 3, \"defs\", 1);\n      i0.ɵɵelementStart(2, \"path\", 2);\n      i0.ɵɵlistener(\"click\", function PieArcComponent_Template__svg_path_click_2_listener() {\n        return ctx.onClick();\n      })(\"dblclick\", function PieArcComponent_Template__svg_path_dblclick_2_listener($event) {\n        return ctx.onDblClick($event);\n      })(\"mouseenter\", function PieArcComponent_Template__svg_path_mouseenter_2_listener() {\n        return ctx.activate.emit(ctx.data);\n      })(\"mouseleave\", function PieArcComponent_Template__svg_path_mouseleave_2_listener() {\n        return ctx.deactivate.emit(ctx.data);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.gradient);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"pointer-events\", ctx.getPointerEvents());\n      i0.ɵɵclassProp(\"active\", ctx.isActive);\n      i0.ɵɵattribute(\"d\", ctx.path)(\"fill\", ctx.getGradient());\n    }\n  },\n  directives: [i2.NgIf, SvgRadialGradientComponent],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PieArcComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-pie-arc]',\n      template: `\n    <svg:g class=\"arc-group\">\n      <svg:defs *ngIf=\"gradient\">\n        <svg:g ngx-charts-svg-radial-gradient [color]=\"fill\" [name]=\"radialGradientId\" [startOpacity]=\"startOpacity\" />\n      </svg:defs>\n      <svg:path\n        [attr.d]=\"path\"\n        class=\"arc\"\n        [class.active]=\"isActive\"\n        [attr.fill]=\"getGradient()\"\n        (click)=\"onClick()\"\n        (dblclick)=\"onDblClick($event)\"\n        (mouseenter)=\"activate.emit(data)\"\n        (mouseleave)=\"deactivate.emit(data)\"\n        [style.pointer-events]=\"getPointerEvents()\"\n      />\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    fill: [{\n      type: Input\n    }],\n    startAngle: [{\n      type: Input\n    }],\n    endAngle: [{\n      type: Input\n    }],\n    innerRadius: [{\n      type: Input\n    }],\n    outerRadius: [{\n      type: Input\n    }],\n    cornerRadius: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    explodeSlices: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    animate: [{\n      type: Input\n    }],\n    pointerEvents: [{\n      type: Input\n    }],\n    isActive: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    dblclick: [{\n      type: Output\n    }]\n  });\n})();\nclass PieSeriesComponent {\n  constructor() {\n    this.series = [];\n    this.innerRadius = 60;\n    this.outerRadius = 80;\n    this.trimLabels = true;\n    this.maxLabelLength = 10;\n    this.tooltipDisabled = false;\n    this.animations = true;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.dblclick = new EventEmitter();\n    this.placementTypes = PlacementTypes;\n    this.styleTypes = StyleTypes;\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    const pieGenerator = pie().value(d => d.value).sort(null);\n    const arcData = pieGenerator(this.series);\n    this.max = max(arcData, d => {\n      return d.value;\n    });\n    this.data = this.calculateLabelPositions(arcData);\n    this.tooltipText = this.tooltipText || this.defaultTooltipText;\n  }\n  midAngle(d) {\n    return d.startAngle + (d.endAngle - d.startAngle) / 2;\n  }\n  outerArc() {\n    const factor = 1.5;\n    return arc().innerRadius(this.outerRadius * factor).outerRadius(this.outerRadius * factor);\n  }\n  calculateLabelPositions(pieData) {\n    const factor = 1.5;\n    const minDistance = 10;\n    const labelPositions = pieData;\n    labelPositions.forEach(d => {\n      d.pos = this.outerArc().centroid(d);\n      d.pos[0] = factor * this.outerRadius * (this.midAngle(d) < Math.PI ? 1 : -1);\n    });\n    for (let i = 0; i < labelPositions.length - 1; i++) {\n      const a = labelPositions[i];\n      if (!this.labelVisible(a)) {\n        continue;\n      }\n      for (let j = i + 1; j < labelPositions.length; j++) {\n        const b = labelPositions[j];\n        if (!this.labelVisible(b)) {\n          continue;\n        }\n        // if they're on the same side\n        if (b.pos[0] * a.pos[0] > 0) {\n          // if they're overlapping\n          const o = minDistance - Math.abs(b.pos[1] - a.pos[1]);\n          if (o > 0) {\n            // push the second up or down\n            b.pos[1] += Math.sign(b.pos[0]) * o;\n          }\n        }\n      }\n    }\n    return labelPositions;\n  }\n  labelVisible(myArc) {\n    return this.showLabels && myArc.endAngle - myArc.startAngle > Math.PI / 30;\n  }\n  getTooltipTitle(a) {\n    return this.tooltipTemplate ? undefined : this.tooltipText(a);\n  }\n  labelText(myArc) {\n    if (this.labelFormatting) {\n      return this.labelFormatting(myArc.data.name);\n    }\n    return this.label(myArc);\n  }\n  label(myArc) {\n    return formatLabel(myArc.data.name);\n  }\n  defaultTooltipText(myArc) {\n    const label = this.label(myArc);\n    const val = formatLabel(myArc.data.value);\n    return `\n      <span class=\"tooltip-label\">${escapeLabel(label)}</span>\n      <span class=\"tooltip-val\">${val}</span>\n    `;\n  }\n  color(myArc) {\n    return this.colors.getColor(this.label(myArc));\n  }\n  trackBy(index, item) {\n    return item.data.name;\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n  isActive(entry) {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name && entry.series === d.series;\n    });\n    return item !== undefined;\n  }\n}\nPieSeriesComponent.ɵfac = function PieSeriesComponent_Factory(t) {\n  return new (t || PieSeriesComponent)();\n};\nPieSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PieSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-pie-series\", \"\"]],\n  inputs: {\n    colors: \"colors\",\n    series: \"series\",\n    dims: \"dims\",\n    innerRadius: \"innerRadius\",\n    outerRadius: \"outerRadius\",\n    explodeSlices: \"explodeSlices\",\n    showLabels: \"showLabels\",\n    gradient: \"gradient\",\n    activeEntries: \"activeEntries\",\n    labelFormatting: \"labelFormatting\",\n    trimLabels: \"trimLabels\",\n    maxLabelLength: \"maxLabelLength\",\n    tooltipText: \"tooltipText\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipTemplate: \"tooltipTemplate\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\",\n    dblclick: \"dblclick\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c41,\n  decls: 1,\n  vars: 2,\n  consts: [[4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-pie-label\", \"\", 3, \"data\", \"radius\", \"color\", \"label\", \"labelTrim\", \"labelTrimSize\", \"max\", \"value\", \"explodeSlices\", \"animations\", 4, \"ngIf\"], [\"ngx-charts-pie-arc\", \"\", \"ngx-tooltip\", \"\", 3, \"startAngle\", \"endAngle\", \"innerRadius\", \"outerRadius\", \"fill\", \"value\", \"gradient\", \"data\", \"max\", \"explodeSlices\", \"isActive\", \"animate\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"select\", \"activate\", \"deactivate\", \"dblclick\"], [\"ngx-charts-pie-label\", \"\", 3, \"data\", \"radius\", \"color\", \"label\", \"labelTrim\", \"labelTrimSize\", \"max\", \"value\", \"explodeSlices\", \"animations\"]],\n  template: function PieSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, PieSeriesComponent__svg_g_0_Template, 3, 19, \"g\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.data)(\"ngForTrackBy\", ctx.trackBy);\n    }\n  },\n  directives: [i2.NgForOf, i2.NgIf, PieArcComponent, TooltipDirective, PieLabelComponent],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PieSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-pie-series]',\n      template: `\n    <svg:g *ngFor=\"let arc of data; trackBy: trackBy\">\n      <svg:g\n        ngx-charts-pie-label\n        *ngIf=\"labelVisible(arc)\"\n        [data]=\"arc\"\n        [radius]=\"outerRadius\"\n        [color]=\"color(arc)\"\n        [label]=\"labelText(arc)\"\n        [labelTrim]=\"trimLabels\"\n        [labelTrimSize]=\"maxLabelLength\"\n        [max]=\"max\"\n        [value]=\"arc.value\"\n        [explodeSlices]=\"explodeSlices\"\n        [animations]=\"animations\"\n      ></svg:g>\n      <svg:g\n        ngx-charts-pie-arc\n        [startAngle]=\"arc.startAngle\"\n        [endAngle]=\"arc.endAngle\"\n        [innerRadius]=\"innerRadius\"\n        [outerRadius]=\"outerRadius\"\n        [fill]=\"color(arc)\"\n        [value]=\"arc.data.value\"\n        [gradient]=\"gradient\"\n        [data]=\"arc.data\"\n        [max]=\"max\"\n        [explodeSlices]=\"explodeSlices\"\n        [isActive]=\"isActive(arc.data)\"\n        [animate]=\"animations\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n        (dblclick)=\"dblclick.emit($event)\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Top\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipTitle]=\"getTooltipTitle(arc)\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"arc.data\"\n      ></svg:g>\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    colors: [{\n      type: Input\n    }],\n    series: [{\n      type: Input\n    }],\n    dims: [{\n      type: Input\n    }],\n    innerRadius: [{\n      type: Input\n    }],\n    outerRadius: [{\n      type: Input\n    }],\n    explodeSlices: [{\n      type: Input\n    }],\n    showLabels: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    labelFormatting: [{\n      type: Input\n    }],\n    trimLabels: [{\n      type: Input\n    }],\n    maxLabelLength: [{\n      type: Input\n    }],\n    tooltipText: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    dblclick: [{\n      type: Output\n    }]\n  });\n})();\nclass AdvancedPieChartComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.activeEntries = [];\n    this.tooltipDisabled = false;\n    this.label = 'Total';\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.margin = [20, 20, 20, 20];\n  }\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions({\n      width: this.width * 4 / 12.0,\n      height: this.height,\n      margins: this.margin\n    });\n    this.formatDates();\n    this.domain = this.getDomain();\n    this.setColors();\n    const xOffset = this.dims.width / 2;\n    const yOffset = this.margin[0] + this.dims.height / 2;\n    this.legendWidth = this.width - this.dims.width - this.margin[1];\n    this.outerRadius = Math.min(this.dims.width, this.dims.height) / 2.5;\n    this.innerRadius = this.outerRadius * 0.75;\n    this.transform = `translate(${xOffset} , ${yOffset})`;\n  }\n  getDomain() {\n    return this.results.map(d => d.label);\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n  setColors() {\n    this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n  }\n  onActivate(item, fromLegend = false) {\n    item = this.results.find(d => {\n      if (fromLegend) {\n        return d.label === item.name;\n      } else {\n        return d.name === item.name;\n      }\n    });\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    if (idx > -1) {\n      return;\n    }\n    this.activeEntries = [item, ...this.activeEntries];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(item, fromLegend = false) {\n    item = this.results.find(d => {\n      if (fromLegend) {\n        return d.label === item.name;\n      } else {\n        return d.name === item.name;\n      }\n    });\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n}\nAdvancedPieChartComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵAdvancedPieChartComponent_BaseFactory;\n  return function AdvancedPieChartComponent_Factory(t) {\n    return (ɵAdvancedPieChartComponent_BaseFactory || (ɵAdvancedPieChartComponent_BaseFactory = i0.ɵɵgetInheritedFactory(AdvancedPieChartComponent)))(t || AdvancedPieChartComponent);\n  };\n}();\nAdvancedPieChartComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: AdvancedPieChartComponent,\n  selectors: [[\"ngx-charts-advanced-pie-chart\"]],\n  contentQueries: function AdvancedPieChartComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    gradient: \"gradient\",\n    activeEntries: \"activeEntries\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipText: \"tooltipText\",\n    label: \"label\",\n    valueFormatting: \"valueFormatting\",\n    nameFormatting: \"nameFormatting\",\n    percentageFormatting: \"percentageFormatting\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 7,\n  vars: 37,\n  consts: [[1, \"advanced-pie\", \"chart\"], [3, \"view\", \"showLegend\", \"animations\"], [1, \"pie\", \"chart\"], [\"ngx-charts-pie-series\", \"\", 3, \"colors\", \"series\", \"innerRadius\", \"activeEntries\", \"outerRadius\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"tooltipText\", \"animations\", \"select\", \"activate\", \"deactivate\"], [1, \"advanced-pie-legend-wrapper\"], [3, \"data\", \"colors\", \"width\", \"label\", \"animations\", \"valueFormatting\", \"labelFormatting\", \"percentageFormatting\", \"select\", \"activate\", \"deactivate\"]],\n  template: function AdvancedPieChartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\");\n      i0.ɵɵelementStart(1, \"div\", 0);\n      i0.ɵɵelementStart(2, \"ngx-charts-chart\", 1);\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(3, \"g\", 2);\n      i0.ɵɵelementStart(4, \"g\", 3);\n      i0.ɵɵlistener(\"select\", function AdvancedPieChartComponent_Template__svg_g_select_4_listener($event) {\n        return ctx.onClick($event);\n      })(\"activate\", function AdvancedPieChartComponent_Template__svg_g_activate_4_listener($event) {\n        return ctx.onActivate($event);\n      })(\"deactivate\", function AdvancedPieChartComponent_Template__svg_g_deactivate_4_listener($event) {\n        return ctx.onDeactivate($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵnamespaceHTML();\n      i0.ɵɵelementStart(5, \"div\", 4);\n      i0.ɵɵelementStart(6, \"ngx-charts-advanced-legend\", 5);\n      i0.ɵɵlistener(\"select\", function AdvancedPieChartComponent_Template_ngx_charts_advanced_legend_select_6_listener($event) {\n        return ctx.onClick($event);\n      })(\"activate\", function AdvancedPieChartComponent_Template_ngx_charts_advanced_legend_activate_6_listener($event) {\n        return ctx.onActivate($event, true);\n      })(\"deactivate\", function AdvancedPieChartComponent_Template_ngx_charts_advanced_legend_deactivate_6_listener($event) {\n        return ctx.onDeactivate($event, true);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"width\", ctx.width, \"px\")(\"height\", ctx.height, \"px\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"width\", ctx.dims.width, \"px\")(\"height\", ctx.dims.height, \"px\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(34, _c24, ctx.width, ctx.height))(\"showLegend\", false)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"colors\", ctx.colors)(\"series\", ctx.results)(\"innerRadius\", ctx.innerRadius)(\"activeEntries\", ctx.activeEntries)(\"outerRadius\", ctx.outerRadius)(\"gradient\", ctx.gradient)(\"tooltipDisabled\", ctx.tooltipDisabled)(\"tooltipTemplate\", ctx.tooltipTemplate)(\"tooltipText\", ctx.tooltipText)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"width\", ctx.width - ctx.dims.width, \"px\")(\"height\", ctx.height, \"px\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"data\", ctx.results)(\"colors\", ctx.colors)(\"width\", ctx.width - ctx.dims.width - ctx.margin[1])(\"label\", ctx.label)(\"animations\", ctx.animations)(\"valueFormatting\", ctx.valueFormatting)(\"labelFormatting\", ctx.nameFormatting)(\"percentageFormatting\", ctx.percentageFormatting);\n    }\n  },\n  directives: [ChartComponent, PieSeriesComponent, AdvancedLegendComponent],\n  styles: [_c25, \".advanced-pie{display:inline-block;float:left}.advanced-pie-legend-wrapper{display:inline-block}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AdvancedPieChartComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-advanced-pie-chart',\n      template: `\n    <div [style.width.px]=\"width\" [style.height.px]=\"height\">\n      <div class=\"advanced-pie chart\" [style.width.px]=\"dims.width\" [style.height.px]=\"dims.height\">\n        <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n          <svg:g [attr.transform]=\"transform\" class=\"pie chart\">\n            <svg:g\n              ngx-charts-pie-series\n              [colors]=\"colors\"\n              [series]=\"results\"\n              [innerRadius]=\"innerRadius\"\n              [activeEntries]=\"activeEntries\"\n              [outerRadius]=\"outerRadius\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [tooltipText]=\"tooltipText\"\n              (select)=\"onClick($event)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n              [animations]=\"animations\"\n            ></svg:g>\n          </svg:g>\n        </ngx-charts-chart>\n      </div>\n      <div class=\"advanced-pie-legend-wrapper\" [style.width.px]=\"width - dims.width\" [style.height.px]=\"height\">\n        <ngx-charts-advanced-legend\n          [data]=\"results\"\n          [colors]=\"colors\"\n          [width]=\"width - dims.width - margin[1]\"\n          [label]=\"label\"\n          [animations]=\"animations\"\n          [valueFormatting]=\"valueFormatting\"\n          [labelFormatting]=\"nameFormatting\"\n          [percentageFormatting]=\"percentageFormatting\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event, true)\"\n          (deactivate)=\"onDeactivate($event, true)\"\n        >\n        </ngx-charts-advanced-legend>\n      </div>\n    </div>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".advanced-pie{display:inline-block;float:left}.advanced-pie-legend-wrapper{display:inline-block}\\n\"]\n    }]\n  }], null, {\n    gradient: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipText: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    nameFormatting: [{\n      type: Input\n    }],\n    percentageFormatting: [{\n      type: Input\n    }]\n  });\n})();\nclass PieChartComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.labels = false;\n    this.legend = false;\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.explodeSlices = false;\n    this.doughnut = false;\n    this.arcWidth = 0.25;\n    this.activeEntries = [];\n    this.tooltipDisabled = false;\n    this.trimLabels = true;\n    this.maxLabelLength = 10;\n    this.dblclick = new EventEmitter();\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n  }\n  update() {\n    super.update();\n    if (this.labels && this.hasNoOptionalMarginsSet()) {\n      this.margins = [30, 80, 30, 80];\n    } else if (!this.labels && this.hasNoOptionalMarginsSet()) {\n      // default value for margins\n      this.margins = [20, 20, 20, 20];\n    }\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margins,\n      showLegend: this.legend,\n      legendPosition: this.legendPosition\n    });\n    this.formatDates();\n    const xOffset = this.margins[3] + this.dims.width / 2;\n    const yOffset = this.margins[0] + this.dims.height / 2;\n    this.translation = `translate(${xOffset}, ${yOffset})`;\n    this.outerRadius = Math.min(this.dims.width, this.dims.height);\n    if (this.labels) {\n      // make room for labels\n      this.outerRadius /= 3;\n    } else {\n      this.outerRadius /= 2;\n    }\n    this.innerRadius = 0;\n    if (this.doughnut) {\n      this.innerRadius = this.outerRadius * (1 - this.arcWidth);\n    }\n    this.domain = this.getDomain();\n    // sort data according to domain\n    this.data = this.results.sort((a, b) => {\n      return this.domain.indexOf(a.name) - this.domain.indexOf(b.name);\n    });\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n  }\n  getDomain() {\n    return this.results.map(d => d.label);\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n  setColors() {\n    this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n  }\n  getLegendOptions() {\n    return {\n      scaleType: ScaleType.Ordinal,\n      domain: this.domain,\n      colors: this.colors,\n      title: this.legendTitle,\n      position: this.legendPosition\n    };\n  }\n  onActivate(item, fromLegend = false) {\n    item = this.results.find(d => {\n      if (fromLegend) {\n        return d.label === item.name;\n      } else {\n        return d.name === item.name;\n      }\n    });\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    if (idx > -1) {\n      return;\n    }\n    this.activeEntries = [item, ...this.activeEntries];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(item, fromLegend = false) {\n    item = this.results.find(d => {\n      if (fromLegend) {\n        return d.label === item.name;\n      } else {\n        return d.name === item.name;\n      }\n    });\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  hasNoOptionalMarginsSet() {\n    return !this.margins || this.margins.length <= 0;\n  }\n}\nPieChartComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵPieChartComponent_BaseFactory;\n  return function PieChartComponent_Factory(t) {\n    return (ɵPieChartComponent_BaseFactory || (ɵPieChartComponent_BaseFactory = i0.ɵɵgetInheritedFactory(PieChartComponent)))(t || PieChartComponent);\n  };\n}();\nPieChartComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PieChartComponent,\n  selectors: [[\"ngx-charts-pie-chart\"]],\n  contentQueries: function PieChartComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    labels: \"labels\",\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    explodeSlices: \"explodeSlices\",\n    doughnut: \"doughnut\",\n    arcWidth: \"arcWidth\",\n    gradient: \"gradient\",\n    activeEntries: \"activeEntries\",\n    tooltipDisabled: \"tooltipDisabled\",\n    labelFormatting: \"labelFormatting\",\n    trimLabels: \"trimLabels\",\n    maxLabelLength: \"maxLabelLength\",\n    tooltipText: \"tooltipText\",\n    margins: \"margins\"\n  },\n  outputs: {\n    dblclick: \"dblclick\",\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 3,\n  vars: 24,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelActivate\", \"legendLabelDeactivate\", \"legendLabelClick\"], [1, \"pie-chart\", \"chart\"], [\"ngx-charts-pie-series\", \"\", 3, \"colors\", \"series\", \"showLabels\", \"labelFormatting\", \"trimLabels\", \"maxLabelLength\", \"activeEntries\", \"innerRadius\", \"outerRadius\", \"explodeSlices\", \"gradient\", \"animations\", \"tooltipDisabled\", \"tooltipTemplate\", \"tooltipText\", \"dblclick\", \"select\", \"activate\", \"deactivate\"]],\n  template: function PieChartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelActivate\", function PieChartComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event, true);\n      })(\"legendLabelDeactivate\", function PieChartComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event, true);\n      })(\"legendLabelClick\", function PieChartComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵelementStart(2, \"g\", 2);\n      i0.ɵɵlistener(\"dblclick\", function PieChartComponent_Template__svg_g_dblclick_2_listener($event) {\n        return ctx.dblclick.emit($event);\n      })(\"select\", function PieChartComponent_Template__svg_g_select_2_listener($event) {\n        return ctx.onClick($event);\n      })(\"activate\", function PieChartComponent_Template__svg_g_activate_2_listener($event) {\n        return ctx.onActivate($event);\n      })(\"deactivate\", function PieChartComponent_Template__svg_g_deactivate_2_listener($event) {\n        return ctx.onDeactivate($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(21, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.translation);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"colors\", ctx.colors)(\"series\", ctx.data)(\"showLabels\", ctx.labels)(\"labelFormatting\", ctx.labelFormatting)(\"trimLabels\", ctx.trimLabels)(\"maxLabelLength\", ctx.maxLabelLength)(\"activeEntries\", ctx.activeEntries)(\"innerRadius\", ctx.innerRadius)(\"outerRadius\", ctx.outerRadius)(\"explodeSlices\", ctx.explodeSlices)(\"gradient\", ctx.gradient)(\"animations\", ctx.animations)(\"tooltipDisabled\", ctx.tooltipDisabled)(\"tooltipTemplate\", ctx.tooltipTemplate)(\"tooltipText\", ctx.tooltipText);\n    }\n  },\n  directives: [ChartComponent, PieSeriesComponent],\n  styles: [_c25, _c42],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PieChartComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-pie-chart',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"translation\" class=\"pie-chart chart\">\n        <svg:g\n          ngx-charts-pie-series\n          [colors]=\"colors\"\n          [series]=\"data\"\n          [showLabels]=\"labels\"\n          [labelFormatting]=\"labelFormatting\"\n          [trimLabels]=\"trimLabels\"\n          [maxLabelLength]=\"maxLabelLength\"\n          [activeEntries]=\"activeEntries\"\n          [innerRadius]=\"innerRadius\"\n          [outerRadius]=\"outerRadius\"\n          [explodeSlices]=\"explodeSlices\"\n          [gradient]=\"gradient\"\n          [animations]=\"animations\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipText]=\"tooltipText\"\n          (dblclick)=\"dblclick.emit($event)\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event)\"\n          (deactivate)=\"onDeactivate($event)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".pie-label{font-size:11px}.pie-label.animation{-webkit-animation:.75s ease-in fadeIn;animation:.75s ease-in fadeIn}@-webkit-keyframes fadeIn{0%{opacity:0}to{opacity:1}}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}.pie-label-line{stroke-dasharray:100%}.pie-label-line.animation{-webkit-animation:3s linear drawOut;animation:3s linear drawOut;transition:d .75s}@-webkit-keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}@keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}\\n\"]\n    }]\n  }], null, {\n    labels: [{\n      type: Input\n    }],\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    explodeSlices: [{\n      type: Input\n    }],\n    doughnut: [{\n      type: Input\n    }],\n    arcWidth: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    labelFormatting: [{\n      type: Input\n    }],\n    trimLabels: [{\n      type: Input\n    }],\n    maxLabelLength: [{\n      type: Input\n    }],\n    tooltipText: [{\n      type: Input\n    }],\n    dblclick: [{\n      type: Output\n    }],\n    margins: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\nfunction gridSize(dims, len, minWidth) {\n  let rows = 1;\n  let cols = len;\n  const width = dims.width;\n  if (width > minWidth) {\n    while (width / cols < minWidth) {\n      rows += 1;\n      cols = Math.ceil(len / rows);\n    }\n  }\n  return [cols, rows];\n}\nfunction gridLayout(dims, data, minWidth, designatedTotal) {\n  const xScale = scaleBand();\n  const yScale = scaleBand();\n  const width = dims.width;\n  const height = dims.height;\n  const [columns, rows] = gridSize(dims, data.length, minWidth);\n  const xDomain = [];\n  const yDomain = [];\n  for (let i = 0; i < rows; i++) {\n    yDomain.push(i);\n  }\n  for (let i = 0; i < columns; i++) {\n    xDomain.push(i);\n  }\n  xScale.domain(xDomain);\n  yScale.domain(yDomain);\n  xScale.rangeRound([0, width], 0.1);\n  yScale.rangeRound([0, height], 0.1);\n  const res = [];\n  const total = designatedTotal ? designatedTotal : getTotal(data);\n  const cardWidth = xScale.bandwidth();\n  const cardHeight = yScale.bandwidth();\n  for (let i = 0; i < data.length; i++) {\n    res[i] = {};\n    res[i].data = {\n      name: data[i] ? data[i].name : '',\n      value: data[i] ? data[i].value : undefined,\n      extra: data[i] ? data[i].extra : undefined,\n      label: data[i] ? data[i].label : ''\n    };\n    res[i].x = xScale(i % columns);\n    res[i].y = yScale(Math.floor(i / columns));\n    res[i].width = cardWidth;\n    res[i].height = cardHeight;\n    res[i].data.percent = total > 0 ? res[i].data.value / total : 0;\n    res[i].data.total = total;\n  }\n  return res;\n}\nfunction getTotal(results) {\n  return results.map(d => d ? d.value : 0).reduce((sum, val) => sum + val, 0);\n}\nclass PieGridSeriesComponent {\n  constructor(element) {\n    this.innerRadius = 70;\n    this.outerRadius = 80;\n    this.animations = true;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.element = element.nativeElement;\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    this.layout = pie().value(d => d.data.value).sort(null);\n    this.arcs = this.getArcs();\n  }\n  getArcs() {\n    return this.layout(this.data).map((arc, index) => {\n      const label = arc.data.data.name;\n      const other = arc.data.data.other;\n      if (index === 0) {\n        arc.startAngle = 0;\n      }\n      const color = this.colors(label);\n      return {\n        data: arc.data.data,\n        class: 'arc ' + 'arc' + index,\n        fill: color,\n        startAngle: other ? 0 : arc.startAngle,\n        endAngle: arc.endAngle,\n        animate: this.animations && !other,\n        pointerEvents: !other\n      };\n    });\n  }\n  onClick(data) {\n    this.select.emit(this.data[0].data);\n  }\n  trackBy(index, item) {\n    return item.data.name;\n  }\n  label(arc) {\n    return arc.data.name;\n  }\n  color(arc) {\n    return this.colors(this.label(arc));\n  }\n}\nPieGridSeriesComponent.ɵfac = function PieGridSeriesComponent_Factory(t) {\n  return new (t || PieGridSeriesComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\nPieGridSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PieGridSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-pie-grid-series\", \"\"]],\n  inputs: {\n    colors: \"colors\",\n    data: \"data\",\n    innerRadius: \"innerRadius\",\n    outerRadius: \"outerRadius\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c43,\n  decls: 2,\n  vars: 2,\n  consts: [[1, \"pie-grid-arcs\"], [\"ngx-charts-pie-arc\", \"\", 3, \"startAngle\", \"endAngle\", \"innerRadius\", \"outerRadius\", \"fill\", \"value\", \"data\", \"gradient\", \"pointerEvents\", \"animate\", \"select\", \"activate\", \"deactivate\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-pie-arc\", \"\", 3, \"startAngle\", \"endAngle\", \"innerRadius\", \"outerRadius\", \"fill\", \"value\", \"data\", \"gradient\", \"pointerEvents\", \"animate\", \"select\", \"activate\", \"deactivate\"]],\n  template: function PieGridSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\", 0);\n      i0.ɵɵtemplate(1, PieGridSeriesComponent__svg_g_1_Template, 1, 11, \"g\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.arcs)(\"ngForTrackBy\", ctx.trackBy);\n    }\n  },\n  directives: [i2.NgForOf, PieArcComponent],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PieGridSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-pie-grid-series]',\n      template: `\n    <svg:g class=\"pie-grid-arcs\">\n      <svg:g\n        ngx-charts-pie-arc\n        *ngFor=\"let arc of arcs; trackBy: trackBy\"\n        [attr.class]=\"arc.class\"\n        [startAngle]=\"arc.startAngle\"\n        [endAngle]=\"arc.endAngle\"\n        [innerRadius]=\"innerRadius\"\n        [outerRadius]=\"outerRadius\"\n        [fill]=\"color(arc)\"\n        [value]=\"arc.data.value\"\n        [data]=\"arc.data\"\n        [gradient]=\"false\"\n        [pointerEvents]=\"arc.pointerEvents\"\n        [animate]=\"arc.animate\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n      ></svg:g>\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    colors: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    innerRadius: [{\n      type: Input\n    }],\n    outerRadius: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }]\n  });\n})();\nclass PieGridComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.tooltipDisabled = false;\n    this.label = 'Total';\n    this.minWidth = 150;\n    this.activeEntries = [];\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.margin = [20, 20, 20, 20];\n    this.placementTypes = PlacementTypes;\n    this.styleTypes = StyleTypes;\n  }\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin\n    });\n    this.formatDates();\n    this.domain = this.getDomain();\n    this.data = gridLayout(this.dims, this.results, this.minWidth, this.designatedTotal);\n    this.transform = `translate(${this.margin[3]} , ${this.margin[0]})`;\n    this.series = this.getSeries();\n    this.setColors();\n    this.tooltipText = this.tooltipText || this.defaultTooltipText;\n  }\n  defaultTooltipText({\n    data\n  }) {\n    const label = trimLabel(formatLabel(data.name));\n    const val = data.value.toLocaleString();\n    return `\n      <span class=\"tooltip-label\">${label}</span>\n      <span class=\"tooltip-val\">${val}</span>\n    `;\n  }\n  getDomain() {\n    return this.results.map(d => d.label);\n  }\n  getSeries() {\n    const total = this.designatedTotal ? this.designatedTotal : this.getTotal();\n    return this.data.map(d => {\n      const baselineLabelHeight = 20;\n      const padding = 10;\n      const name = d.data.name;\n      const label = formatLabel(name);\n      const value = d.data.value;\n      const radius = min([d.width - padding, d.height - baselineLabelHeight]) / 2 - 5;\n      const innerRadius = radius * 0.9;\n      let count = 0;\n      const colors = () => {\n        count += 1;\n        if (count === 1) {\n          return 'rgba(100,100,100,0.3)';\n        } else {\n          return this.colorScale.getColor(label);\n        }\n      };\n      const xPos = d.x + (d.width - padding) / 2;\n      const yPos = d.y + (d.height - baselineLabelHeight) / 2;\n      return {\n        transform: `translate(${xPos}, ${yPos})`,\n        colors,\n        innerRadius,\n        outerRadius: radius,\n        name,\n        label: trimLabel(label),\n        total: value,\n        value,\n        percent: format('.1%')(d.data.percent),\n        data: [d, {\n          data: {\n            other: true,\n            value: total - value,\n            name: d.data.name\n          }\n        }]\n      };\n    });\n  }\n  getTotal() {\n    return this.results.map(d => d.value).reduce((sum, d) => sum + d, 0);\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n  setColors() {\n    this.colorScale = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n  }\n  onActivate(item, fromLegend = false) {\n    item = this.results.find(d => {\n      if (fromLegend) {\n        return d.label === item.name;\n      } else {\n        return d.name === item.name;\n      }\n    });\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    if (idx > -1) {\n      return;\n    }\n    this.activeEntries = [item, ...this.activeEntries];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(item, fromLegend = false) {\n    item = this.results.find(d => {\n      if (fromLegend) {\n        return d.label === item.name;\n      } else {\n        return d.name === item.name;\n      }\n    });\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n}\nPieGridComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵPieGridComponent_BaseFactory;\n  return function PieGridComponent_Factory(t) {\n    return (ɵPieGridComponent_BaseFactory || (ɵPieGridComponent_BaseFactory = i0.ɵɵgetInheritedFactory(PieGridComponent)))(t || PieGridComponent);\n  };\n}();\nPieGridComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PieGridComponent,\n  selectors: [[\"ngx-charts-pie-grid\"]],\n  contentQueries: function PieGridComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    designatedTotal: \"designatedTotal\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipText: \"tooltipText\",\n    label: \"label\",\n    minWidth: \"minWidth\",\n    activeEntries: \"activeEntries\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 3,\n  vars: 8,\n  consts: [[3, \"view\", \"showLegend\", \"animations\"], [1, \"pie-grid\", \"chart\"], [\"class\", \"pie-grid-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"pie-grid-item\"], [\"ngx-charts-pie-grid-series\", \"\", \"ngx-tooltip\", \"\", 3, \"colors\", \"data\", \"innerRadius\", \"outerRadius\", \"animations\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"select\", \"activate\", \"deactivate\"], [\"class\", \"label percent-label\", \"dy\", \"-0.5em\", \"x\", \"0\", \"y\", \"5\", \"ngx-charts-count-up\", \"\", \"text-anchor\", \"middle\", 3, \"countTo\", \"countSuffix\", 4, \"ngIf\"], [\"class\", \"label percent-label\", \"dy\", \"-0.5em\", \"x\", \"0\", \"y\", \"5\", \"text-anchor\", \"middle\", 4, \"ngIf\"], [\"dy\", \"0.5em\", \"x\", \"0\", \"y\", \"5\", \"text-anchor\", \"middle\", 1, \"label\"], [\"class\", \"label\", \"dy\", \"1.23em\", \"x\", \"0\", \"text-anchor\", \"middle\", \"ngx-charts-count-up\", \"\", 3, \"countTo\", \"countPrefix\", 4, \"ngIf\"], [\"class\", \"label\", \"dy\", \"1.23em\", \"x\", \"0\", \"text-anchor\", \"middle\", 4, \"ngIf\"], [\"dy\", \"-0.5em\", \"x\", \"0\", \"y\", \"5\", \"ngx-charts-count-up\", \"\", \"text-anchor\", \"middle\", 1, \"label\", \"percent-label\", 3, \"countTo\", \"countSuffix\"], [\"dy\", \"-0.5em\", \"x\", \"0\", \"y\", \"5\", \"text-anchor\", \"middle\", 1, \"label\", \"percent-label\"], [\"dy\", \"1.23em\", \"x\", \"0\", \"text-anchor\", \"middle\", \"ngx-charts-count-up\", \"\", 1, \"label\", 3, \"countTo\", \"countPrefix\"], [\"dy\", \"1.23em\", \"x\", \"0\", \"text-anchor\", \"middle\", 1, \"label\"]],\n  template: function PieGridComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵtemplate(2, PieGridComponent__svg_g_2_Template, 8, 19, \"g\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(5, _c24, ctx.width, ctx.height))(\"showLegend\", false)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.series);\n    }\n  },\n  directives: [ChartComponent, i2.NgForOf, PieGridSeriesComponent, TooltipDirective, i2.NgIf, CountUpDirective],\n  styles: [_c25, \".pie-grid .arc1{opacity:.4}.pie-grid .percent-label{font-size:16px;font-weight:400}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PieGridComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-pie-grid',\n      template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"pie-grid chart\">\n        <svg:g *ngFor=\"let series of series\" class=\"pie-grid-item\" [attr.transform]=\"series.transform\">\n          <svg:g\n            ngx-charts-pie-grid-series\n            [colors]=\"series.colors\"\n            [data]=\"series.data\"\n            [innerRadius]=\"series.innerRadius\"\n            [outerRadius]=\"series.outerRadius\"\n            [animations]=\"animations\"\n            (select)=\"onClick($event)\"\n            ngx-tooltip\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipPlacement]=\"placementTypes.Top\"\n            [tooltipType]=\"styleTypes.tooltip\"\n            [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText({ data: series })\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [tooltipContext]=\"series.data[0].data\"\n            (activate)=\"onActivate($event)\"\n            (deactivate)=\"onDeactivate($event)\"\n          />\n          <svg:text\n            *ngIf=\"animations\"\n            class=\"label percent-label\"\n            dy=\"-0.5em\"\n            x=\"0\"\n            y=\"5\"\n            ngx-charts-count-up\n            [countTo]=\"series.percent\"\n            [countSuffix]=\"'%'\"\n            text-anchor=\"middle\"\n          ></svg:text>\n          <svg:text *ngIf=\"!animations\" class=\"label percent-label\" dy=\"-0.5em\" x=\"0\" y=\"5\" text-anchor=\"middle\">\n            {{ series.percent.toLocaleString() }}\n          </svg:text>\n          <svg:text class=\"label\" dy=\"0.5em\" x=\"0\" y=\"5\" text-anchor=\"middle\">\n            {{ series.label }}\n          </svg:text>\n          <svg:text\n            *ngIf=\"animations\"\n            class=\"label\"\n            dy=\"1.23em\"\n            x=\"0\"\n            [attr.y]=\"series.outerRadius\"\n            text-anchor=\"middle\"\n            ngx-charts-count-up\n            [countTo]=\"series.total\"\n            [countPrefix]=\"label + ': '\"\n          ></svg:text>\n          <svg:text\n            *ngIf=\"!animations\"\n            class=\"label\"\n            dy=\"1.23em\"\n            x=\"0\"\n            [attr.y]=\"series.outerRadius\"\n            text-anchor=\"middle\"\n          >\n            {{ label }}: {{ series.total.toLocaleString() }}\n          </svg:text>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".pie-grid .arc1{opacity:.4}.pie-grid .percent-label{font-size:16px;font-weight:400}\\n\"]\n    }]\n  }], null, {\n    designatedTotal: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipText: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    minWidth: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\nclass PieChartModule {}\nPieChartModule.ɵfac = function PieChartModule_Factory(t) {\n  return new (t || PieChartModule)();\n};\nPieChartModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: PieChartModule\n});\nPieChartModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ChartCommonModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PieChartModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ChartCommonModule],\n      declarations: [AdvancedPieChartComponent, PieLabelComponent, PieArcComponent, PieChartComponent, PieGridComponent, PieGridSeriesComponent, PieSeriesComponent],\n      exports: [AdvancedPieChartComponent, PieLabelComponent, PieArcComponent, PieChartComponent, PieGridComponent, PieGridSeriesComponent, PieSeriesComponent]\n    }]\n  }], null, null);\n})();\nclass PolarChartModule {}\nPolarChartModule.ɵfac = function PolarChartModule_Factory(t) {\n  return new (t || PolarChartModule)();\n};\nPolarChartModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: PolarChartModule\n});\nPolarChartModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ChartCommonModule, PieChartModule, LineChartModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PolarChartModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ChartCommonModule, PieChartModule, LineChartModule],\n      declarations: [PolarChartComponent, PolarSeriesComponent],\n      exports: [PolarChartComponent, PolarSeriesComponent]\n    }]\n  }], null, null);\n})();\nfunction calculateTextWidth(fontFamilyKey, text, defaultWidth = 8) {\n  return text.split('').reduce((acc, curr) => {\n    const width = fontFamilyKey[curr] || defaultWidth;\n    return acc + width;\n  }, 0);\n}\nconst VERDANA_FONT_WIDTHS_16_PX = {\n  '0': 10,\n  '1': 10,\n  '2': 10,\n  '3': 10,\n  '4': 10,\n  '5': 10,\n  '6': 10,\n  '7': 10,\n  '8': 10,\n  '9': 10,\n  A: 11,\n  B: 11,\n  C: 11,\n  D: 12,\n  E: 10,\n  F: 9,\n  G: 12,\n  H: 12,\n  I: 7,\n  J: 7,\n  K: 11,\n  L: 9,\n  M: 13,\n  N: 12,\n  O: 13,\n  P: 10,\n  Q: 13,\n  R: 11,\n  S: 11,\n  T: 10,\n  U: 12,\n  V: 11,\n  W: 16,\n  X: 11,\n  Y: 10,\n  Z: 11,\n  a: 10,\n  b: 10,\n  c: 8,\n  d: 10,\n  e: 10,\n  f: 6,\n  g: 10,\n  h: 10,\n  i: 4,\n  j: 6,\n  k: 9,\n  l: 4,\n  m: 16,\n  n: 10,\n  o: 10,\n  p: 10,\n  q: 10,\n  r: 7,\n  s: 8,\n  t: 6,\n  u: 10,\n  v: 9,\n  w: 13,\n  x: 9,\n  y: 9,\n  z: 8,\n  '!': 6,\n  '@': 16,\n  '#': 13,\n  $: 10,\n  '%': 17,\n  '^': 13,\n  '&': 12,\n  '*': 10,\n  '(': 7,\n  ')': 7,\n  _: 10,\n  '-': 7,\n  '+': 13,\n  '=': 13,\n  ',': 6,\n  '.': 6,\n  '/': 7,\n  \"'\": 4,\n  ':': 7,\n  '|': 7,\n  '?': 9,\n  ';': 7,\n  '<': 13,\n  '>': 13\n};\nclass CardComponent {\n  constructor(element, cd, zone, platformId) {\n    this.cd = cd;\n    this.zone = zone;\n    this.platformId = platformId;\n    this.animations = true;\n    this.select = new EventEmitter();\n    this.value = '';\n    this.textFontSize = 12;\n    this.textTransform = '';\n    this.initialized = false;\n    this.bandHeight = 10;\n    this.textPadding = [10, 20, 5, 20];\n    this.labelFontSize = 15;\n    this.element = element.nativeElement;\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  ngOnInit() {\n    if (isPlatformServer(this.platformId)) {\n      this.scaleTextSSR();\n    }\n  }\n  ngOnDestroy() {\n    if (isPlatformBrowser(this.platformId)) {\n      cancelAnimationFrame(this.animationReq);\n    }\n  }\n  update() {\n    this.zone.run(() => {\n      const hasValue = this.data && typeof this.data.value !== 'undefined';\n      const valueFormatting = this.valueFormatting || (card => card.value.toLocaleString());\n      const labelFormatting = this.labelFormatting || (card => escapeLabel(trimLabel(card.label, 55)));\n      this.transform = `translate(${this.x} , ${this.y})`;\n      this.textWidth = Math.max(0, this.width) - this.textPadding[1] - this.textPadding[3];\n      this.cardWidth = Math.max(0, this.width);\n      this.cardHeight = Math.max(0, this.height);\n      this.label = this.label ? this.label : this.data.name;\n      const cardData = {\n        label: this.label,\n        data: this.data,\n        value: this.data.value\n      };\n      this.formattedLabel = labelFormatting(cardData);\n      this.transformBand = `translate(0 , ${this.cardHeight - this.bandHeight})`;\n      const value = hasValue ? valueFormatting(cardData) : '';\n      this.value = this.paddedValue(value);\n      this.setPadding();\n      this.bandPath = roundedRect(0, 0, this.cardWidth, this.bandHeight, 3, [false, false, true, true]);\n      setTimeout(() => {\n        if (isPlatformBrowser(this.platformId)) {\n          this.scaleText();\n        }\n        this.value = value;\n        if (hasValue && !this.initialized) {\n          setTimeout(() => this.startCount(), 20);\n        }\n      }, 8);\n    });\n  }\n  paddedValue(value) {\n    if (this.medianSize && this.medianSize > value.length) {\n      value += '\\u2007'.repeat(this.medianSize - value.length);\n    }\n    return value;\n  }\n  startCount() {\n    if (!this.initialized && this.animations) {\n      cancelAnimationFrame(this.animationReq);\n      const val = this.data.value;\n      const decs = decimalChecker(val);\n      const valueFormatting = this.valueFormatting || (card => card.value.toLocaleString());\n      const callback = ({\n        value,\n        finished\n      }) => {\n        this.zone.run(() => {\n          value = finished ? val : value;\n          this.value = valueFormatting({\n            label: this.label,\n            data: this.data,\n            value\n          });\n          if (!finished) {\n            this.value = this.paddedValue(this.value);\n          }\n          this.cd.markForCheck();\n        });\n      };\n      this.animationReq = count(0, val, decs, 1, callback);\n      this.initialized = true;\n    }\n  }\n  scaleText() {\n    this.zone.run(() => {\n      const {\n        width,\n        height\n      } = this.textEl.nativeElement.getBoundingClientRect();\n      if (width === 0 || height === 0) {\n        return;\n      }\n      const textPadding = this.textPadding[1] = this.textPadding[3] = this.cardWidth / 8;\n      const availableWidth = this.cardWidth - 2 * textPadding;\n      const availableHeight = this.cardHeight / 3;\n      const resizeScale = Math.min(availableWidth / width, availableHeight / height);\n      this.textFontSize = Math.floor(this.textFontSize * resizeScale);\n      this.labelFontSize = Math.min(this.textFontSize, 15);\n      this.setPadding();\n      this.cd.markForCheck();\n    });\n  }\n  scaleTextSSR() {\n    const width = calculateTextWidth(VERDANA_FONT_WIDTHS_16_PX, this.value, 10);\n    const height = 18;\n    const textPadding = this.textPadding[1] = this.textPadding[3] = this.cardWidth / 8;\n    const availableWidth = this.cardWidth - 2 * textPadding;\n    const availableHeight = this.cardHeight / 3;\n    const resizeScale = Math.min(availableWidth / width, availableHeight / height);\n    this.textFontSize = Math.floor(this.textFontSize * resizeScale);\n    this.labelFontSize = Math.min(this.textFontSize, 15);\n    this.setPadding();\n  }\n  setPadding() {\n    this.textPadding[1] = this.textPadding[3] = this.cardWidth / 8;\n    const padding = this.cardHeight / 2;\n    this.textPadding[0] = padding - this.textFontSize - this.labelFontSize / 2;\n    this.textPadding[2] = padding - this.labelFontSize;\n  }\n  onClick() {\n    this.select.emit(this.data);\n  }\n}\nCardComponent.ɵfac = function CardComponent_Factory(t) {\n  return new (t || CardComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\nCardComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CardComponent,\n  selectors: [[\"g\", \"ngx-charts-card\", \"\"]],\n  viewQuery: function CardComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c45, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.textEl = _t.first);\n    }\n  },\n  inputs: {\n    color: \"color\",\n    bandColor: \"bandColor\",\n    textColor: \"textColor\",\n    x: \"x\",\n    y: \"y\",\n    width: \"width\",\n    height: \"height\",\n    label: \"label\",\n    data: \"data\",\n    medianSize: \"medianSize\",\n    valueFormatting: \"valueFormatting\",\n    labelFormatting: \"labelFormatting\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c46,\n  decls: 10,\n  vars: 25,\n  consts: [[1, \"cell\", 3, \"click\"], [\"rx\", \"3\", \"ry\", \"3\", 1, \"card\"], [\"class\", \"card-band\", \"stroke\", \"none\", 4, \"ngIf\"], [\"x\", \"5\", \"alignment-baseline\", \"hanging\", 1, \"trimmed-label\"], [3, \"innerHTML\"], [\"text-anchor\", \"start\", \"alignment-baseline\", \"hanging\", 1, \"value-text\"], [\"textEl\", \"\"], [\"stroke\", \"none\", 1, \"card-band\"]],\n  template: function CardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\", 0);\n      i0.ɵɵlistener(\"click\", function CardComponent_Template__svg_g_click_0_listener() {\n        return ctx.onClick();\n      });\n      i0.ɵɵelement(1, \"rect\", 1);\n      i0.ɵɵtemplate(2, CardComponent__svg_path_2_Template, 1, 3, \"path\", 2);\n      i0.ɵɵelementStart(3, \"title\");\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"foreignObject\", 3);\n      i0.ɵɵnamespaceHTML();\n      i0.ɵɵelement(6, \"p\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(7, \"text\", 5, 6);\n      i0.ɵɵtext(9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"fill\", ctx.color);\n      i0.ɵɵattribute(\"width\", ctx.cardWidth)(\"height\", ctx.cardHeight);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.bandColor && ctx.bandColor !== ctx.color);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.label);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"x\", ctx.textPadding[3])(\"y\", ctx.cardHeight - ctx.textPadding[2])(\"width\", ctx.textWidth)(\"height\", ctx.labelFontSize + ctx.textPadding[2]);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"color\", ctx.textColor)(\"font-size\", ctx.labelFontSize, \"px\")(\"line-height\", ctx.labelFontSize, \"px\");\n      i0.ɵɵproperty(\"innerHTML\", ctx.formattedLabel, i0.ɵɵsanitizeHtml);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"fill\", ctx.textColor)(\"font-size\", ctx.textFontSize, \"pt\");\n      i0.ɵɵattribute(\"x\", ctx.textPadding[3])(\"y\", ctx.textPadding[0]);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.value, \" \");\n    }\n  },\n  directives: [i2.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CardComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-card]',\n      template: `\n    <svg:g [attr.transform]=\"transform\" class=\"cell\" (click)=\"onClick()\">\n      <svg:rect class=\"card\" [style.fill]=\"color\" [attr.width]=\"cardWidth\" [attr.height]=\"cardHeight\" rx=\"3\" ry=\"3\" />\n      <svg:path\n        *ngIf=\"bandColor && bandColor !== color\"\n        class=\"card-band\"\n        [attr.fill]=\"bandColor\"\n        [attr.transform]=\"transformBand\"\n        stroke=\"none\"\n        [attr.d]=\"bandPath\"\n      />\n      <title>{{ label }}</title>\n      <svg:foreignObject\n        class=\"trimmed-label\"\n        x=\"5\"\n        [attr.x]=\"textPadding[3]\"\n        [attr.y]=\"cardHeight - textPadding[2]\"\n        [attr.width]=\"textWidth\"\n        [attr.height]=\"labelFontSize + textPadding[2]\"\n        alignment-baseline=\"hanging\"\n      >\n        <xhtml:p\n          [style.color]=\"textColor\"\n          [style.fontSize.px]=\"labelFontSize\"\n          [style.lineHeight.px]=\"labelFontSize\"\n          [innerHTML]=\"formattedLabel\"\n        >\n        </xhtml:p>\n      </svg:foreignObject>\n      <svg:text\n        #textEl\n        class=\"value-text\"\n        [attr.x]=\"textPadding[3]\"\n        [attr.y]=\"textPadding[0]\"\n        [style.fill]=\"textColor\"\n        text-anchor=\"start\"\n        alignment-baseline=\"hanging\"\n        [style.font-size.pt]=\"textFontSize\"\n      >\n        {{ value }}\n      </svg:text>\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    color: [{\n      type: Input\n    }],\n    bandColor: [{\n      type: Input\n    }],\n    textColor: [{\n      type: Input\n    }],\n    x: [{\n      type: Input\n    }],\n    y: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    medianSize: [{\n      type: Input\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    labelFormatting: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    textEl: [{\n      type: ViewChild,\n      args: ['textEl', {\n        static: false\n      }]\n    }]\n  });\n})();\n\n/**\n * Converts a hex to RGB\n *\n * @export\n */\nfunction hexToRgb(value) {\n  // deprecated, use d3.color()\n  return d3_color.rgb(value);\n}\n/**\n * Accepts a color (string) and returns a inverted hex color (string)\n * http://stackoverflow.com/questions/9600295/automatically-change-text-color-to-assure-readability\n *\n * @export\n */\nfunction invertColor(value) {\n  const color = d3_color.rgb(value);\n  const {\n    r,\n    g,\n    b,\n    opacity\n  } = color;\n  if (opacity === 0) {\n    return color.toString();\n  }\n  const yiq = (r * 299 + g * 587 + b * 114) / 1000;\n  const depth = yiq >= 128 ? -0.8 : 0.8;\n  return shadeRGBColor(color, depth);\n}\n/**\n * Given a rgb, it will darken/lighten\n * http://stackoverflow.com/questions/5560248/programmatically-lighten-or-darken-a-hex-color-or-rgb-and-blend-colors\n *\n * @export\n * @param \\{ r, g, b }\n */\nfunction shadeRGBColor({\n  r,\n  g,\n  b\n}, percent) {\n  const t = percent < 0 ? 0 : 255;\n  const p = percent < 0 ? percent * -1 : percent;\n  r = Math.round((t - r) * p) + r;\n  g = Math.round((t - g) * p) + g;\n  b = Math.round((t - b) * p) + b;\n  return `rgb(${r}, ${g}, ${b})`;\n}\nclass CardSeriesComponent {\n  constructor() {\n    this.innerPadding = 15;\n    this.emptyColor = 'rgba(0, 0, 0, 0)';\n    this.animations = true;\n    this.select = new EventEmitter();\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    if (this.data.length > 2) {\n      const valueFormatting = this.valueFormatting || (card => card.value.toLocaleString());\n      const sortedLengths = this.data.map(d => {\n        const hasValue = d && d.data && typeof d.data.value !== 'undefined' && d.data.value !== null;\n        return hasValue ? valueFormatting({\n          data: d.data,\n          label: d ? d.data.name : '',\n          value: d && d.data ? d.data.value : ''\n        }).length : 0;\n      }).sort((a, b) => b - a);\n      const idx = Math.ceil(this.data.length / 2);\n      this.medianSize = sortedLengths[idx];\n    }\n    const cards = this.getCards();\n    this.cards = cards.filter(d => d.data.value !== null);\n    this.emptySlots = cards.filter(d => d.data.value === null);\n  }\n  getCards() {\n    const yPadding = typeof this.innerPadding === 'number' ? this.innerPadding : this.innerPadding[0] + this.innerPadding[2];\n    const xPadding = typeof this.innerPadding === 'number' ? this.innerPadding : this.innerPadding[1] + this.innerPadding[3];\n    return this.data.map((d, index) => {\n      let label = d.data.name;\n      if (label && label.constructor.name === 'Date') {\n        label = label.toLocaleDateString();\n      } else {\n        label = label ? label.toLocaleString() : label;\n      }\n      const value = d.data.value;\n      const valueColor = label ? this.colors.getColor(label) : this.emptyColor;\n      const color = this.cardColor || valueColor || '#000';\n      return {\n        x: d.x,\n        y: d.y,\n        width: d.width - xPadding,\n        height: d.height - yPadding,\n        color,\n        bandColor: this.bandColor || valueColor,\n        textColor: this.textColor || invertColor(color),\n        label,\n        data: d.data,\n        tooltipText: `${label}: ${value}`\n      };\n    });\n  }\n  trackBy(index, card) {\n    return card.label;\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n}\nCardSeriesComponent.ɵfac = function CardSeriesComponent_Factory(t) {\n  return new (t || CardSeriesComponent)();\n};\nCardSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CardSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-card-series\", \"\"]],\n  inputs: {\n    data: \"data\",\n    dims: \"dims\",\n    colors: \"colors\",\n    innerPadding: \"innerPadding\",\n    cardColor: \"cardColor\",\n    bandColor: \"bandColor\",\n    emptyColor: \"emptyColor\",\n    textColor: \"textColor\",\n    valueFormatting: \"valueFormatting\",\n    labelFormatting: \"labelFormatting\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c47,\n  decls: 2,\n  vars: 4,\n  consts: [[\"class\", \"card-empty\", \"rx\", \"3\", \"ry\", \"3\", 3, \"fill\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-card\", \"\", 3, \"x\", \"y\", \"width\", \"height\", \"color\", \"bandColor\", \"textColor\", \"data\", \"label\", \"medianSize\", \"valueFormatting\", \"labelFormatting\", \"animations\", \"select\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"rx\", \"3\", \"ry\", \"3\", 1, \"card-empty\"], [\"ngx-charts-card\", \"\", 3, \"x\", \"y\", \"width\", \"height\", \"color\", \"bandColor\", \"textColor\", \"data\", \"label\", \"medianSize\", \"valueFormatting\", \"labelFormatting\", \"animations\", \"select\"]],\n  template: function CardSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, CardSeriesComponent__svg_rect_0_Template, 1, 6, \"rect\", 0);\n      i0.ɵɵtemplate(1, CardSeriesComponent__svg_g_1_Template, 1, 13, \"g\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.emptySlots)(\"ngForTrackBy\", ctx.trackBy);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.cards)(\"ngForTrackBy\", ctx.trackBy);\n    }\n  },\n  directives: [i2.NgForOf, CardComponent],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CardSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-card-series]',\n      template: `\n    <svg:rect\n      *ngFor=\"let c of emptySlots; trackBy: trackBy\"\n      class=\"card-empty\"\n      [attr.x]=\"c.x\"\n      [attr.y]=\"c.y\"\n      [style.fill]=\"emptyColor\"\n      [attr.width]=\"c.width\"\n      [attr.height]=\"c.height\"\n      rx=\"3\"\n      ry=\"3\"\n    />\n    <svg:g\n      ngx-charts-card\n      *ngFor=\"let c of cards; trackBy: trackBy\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [color]=\"c.color\"\n      [bandColor]=\"c.bandColor\"\n      [textColor]=\"c.textColor\"\n      [data]=\"c.data\"\n      [label]=\"c.label\"\n      [medianSize]=\"medianSize\"\n      [valueFormatting]=\"valueFormatting\"\n      [labelFormatting]=\"labelFormatting\"\n      [animations]=\"animations\"\n      (select)=\"onClick($event)\"\n    />\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    data: [{\n      type: Input\n    }],\n    dims: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    innerPadding: [{\n      type: Input\n    }],\n    cardColor: [{\n      type: Input\n    }],\n    bandColor: [{\n      type: Input\n    }],\n    emptyColor: [{\n      type: Input\n    }],\n    textColor: [{\n      type: Input\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    labelFormatting: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }]\n  });\n})();\nclass NumberCardComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.emptyColor = 'rgba(0, 0, 0, 0)';\n    this.innerPadding = 15;\n    this.margin = [10, 10, 10, 10];\n  }\n  get clickable() {\n    return !!this.select.observers.length;\n  }\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin\n    });\n    this.formatDates();\n    this.domain = this.getDomain();\n    this.setColors();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    const size = gridSize(this.dims, this.results.length, 150);\n    const N = size[0] * size[1];\n    const data = this.results.slice();\n    while (data.length < N) {\n      data.push({\n        value: null\n      });\n    }\n    this.data = gridLayout(this.dims, data, 150, this.designatedTotal);\n  }\n  getDomain() {\n    return this.results.map(d => d.label);\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n  setColors() {\n    this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n  }\n}\nNumberCardComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵNumberCardComponent_BaseFactory;\n  return function NumberCardComponent_Factory(t) {\n    return (ɵNumberCardComponent_BaseFactory || (ɵNumberCardComponent_BaseFactory = i0.ɵɵgetInheritedFactory(NumberCardComponent)))(t || NumberCardComponent);\n  };\n}();\nNumberCardComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NumberCardComponent,\n  selectors: [[\"ngx-charts-number-card\"]],\n  inputs: {\n    cardColor: \"cardColor\",\n    bandColor: \"bandColor\",\n    emptyColor: \"emptyColor\",\n    innerPadding: \"innerPadding\",\n    textColor: \"textColor\",\n    valueFormatting: \"valueFormatting\",\n    labelFormatting: \"labelFormatting\",\n    designatedTotal: \"designatedTotal\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 3,\n  vars: 20,\n  consts: [[3, \"view\", \"showLegend\", \"animations\"], [1, \"number-card\", \"chart\"], [\"ngx-charts-card-series\", \"\", 3, \"colors\", \"cardColor\", \"bandColor\", \"textColor\", \"emptyColor\", \"data\", \"dims\", \"innerPadding\", \"valueFormatting\", \"labelFormatting\", \"animations\", \"select\"]],\n  template: function NumberCardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵelementStart(2, \"g\", 2);\n      i0.ɵɵlistener(\"select\", function NumberCardComponent_Template__svg_g_select_2_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(17, _c24, ctx.width, ctx.height))(\"showLegend\", false)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"clickable\", ctx.clickable);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"colors\", ctx.colors)(\"cardColor\", ctx.cardColor)(\"bandColor\", ctx.bandColor)(\"textColor\", ctx.textColor)(\"emptyColor\", ctx.emptyColor)(\"data\", ctx.data)(\"dims\", ctx.dims)(\"innerPadding\", ctx.innerPadding)(\"valueFormatting\", ctx.valueFormatting)(\"labelFormatting\", ctx.labelFormatting)(\"animations\", ctx.animations);\n    }\n  },\n  directives: [ChartComponent, CardSeriesComponent],\n  styles: [_c25, \"ngx-charts-number-card .cell .trimmed-label{font-size:12px;pointer-events:none;overflow:hidden;text-align:left;line-height:1em}ngx-charts-number-card .cell .trimmed-label p{overflow:hidden;white-space:nowrap;text-overflow:ellipsis;width:100%;padding:0;margin:0}ngx-charts-number-card .cell .value-text{pointer-events:none}ngx-charts-number-card .number-card.clickable .cell .card,ngx-charts-number-card .number-card.clickable .cell .card-band{cursor:pointer}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NumberCardComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-number-card',\n      template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"number-card chart\" [class.clickable]=\"clickable\">\n        <svg:g\n          ngx-charts-card-series\n          [colors]=\"colors\"\n          [cardColor]=\"cardColor\"\n          [bandColor]=\"bandColor\"\n          [textColor]=\"textColor\"\n          [emptyColor]=\"emptyColor\"\n          [data]=\"data\"\n          [dims]=\"dims\"\n          [innerPadding]=\"innerPadding\"\n          [valueFormatting]=\"valueFormatting\"\n          [labelFormatting]=\"labelFormatting\"\n          [animations]=\"animations\"\n          (select)=\"onClick($event)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \"ngx-charts-number-card .cell .trimmed-label{font-size:12px;pointer-events:none;overflow:hidden;text-align:left;line-height:1em}ngx-charts-number-card .cell .trimmed-label p{overflow:hidden;white-space:nowrap;text-overflow:ellipsis;width:100%;padding:0;margin:0}ngx-charts-number-card .cell .value-text{pointer-events:none}ngx-charts-number-card .number-card.clickable .cell .card,ngx-charts-number-card .number-card.clickable .cell .card-band{cursor:pointer}\\n\"]\n    }]\n  }], null, {\n    cardColor: [{\n      type: Input\n    }],\n    bandColor: [{\n      type: Input\n    }],\n    emptyColor: [{\n      type: Input\n    }],\n    innerPadding: [{\n      type: Input\n    }],\n    textColor: [{\n      type: Input\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    labelFormatting: [{\n      type: Input\n    }],\n    designatedTotal: [{\n      type: Input\n    }]\n  });\n})();\nclass NumberCardModule {}\nNumberCardModule.ɵfac = function NumberCardModule_Factory(t) {\n  return new (t || NumberCardModule)();\n};\nNumberCardModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NumberCardModule\n});\nNumberCardModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ChartCommonModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NumberCardModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ChartCommonModule],\n      declarations: [CardComponent, CardSeriesComponent, NumberCardComponent],\n      exports: [CardComponent, CardSeriesComponent, NumberCardComponent]\n    }]\n  }], null, null);\n})();\nclass TreeMapCellComponent {\n  constructor(element) {\n    this.gradient = false;\n    this.animations = true;\n    this.select = new EventEmitter();\n    this.initialized = false;\n    this.orientation = BarOrientation;\n    this.element = element.nativeElement;\n  }\n  ngOnChanges() {\n    this.update();\n    this.valueFormatting = this.valueFormatting || (value => value.toLocaleString());\n    const labelFormatting = this.labelFormatting || (cell => escapeLabel(trimLabel(cell.label, 55)));\n    const cellData = {\n      data: this.data,\n      label: this.label,\n      value: this.value\n    };\n    this.formattedValue = this.valueFormatting(cellData.value);\n    this.formattedLabel = labelFormatting(cellData);\n    this.gradientId = 'grad' + id().toString();\n    this.gradientUrl = `url(#${this.gradientId})`;\n    this.gradientStops = this.getGradientStops();\n  }\n  update() {\n    if (this.initialized) {\n      this.animateToCurrentForm();\n    } else {\n      if (this.animations) {\n        this.loadAnimation();\n      }\n      this.initialized = true;\n    }\n  }\n  loadAnimation() {\n    const node = select(this.element).select('.cell');\n    node.attr('opacity', 0).attr('x', this.x).attr('y', this.y);\n    this.animateToCurrentForm();\n  }\n  getTextColor() {\n    return invertColor(this.fill);\n  }\n  animateToCurrentForm() {\n    const node = select(this.element).select('.cell');\n    if (this.animations) {\n      node.transition().duration(750).attr('opacity', 1).attr('x', this.x).attr('y', this.y).attr('width', this.width).attr('height', this.height);\n    } else {\n      node.attr('opacity', 1).attr('x', this.x).attr('y', this.y).attr('width', this.width).attr('height', this.height);\n    }\n  }\n  onClick() {\n    this.select.emit(this.data);\n  }\n  getGradientStops() {\n    return [{\n      offset: 0,\n      color: this.fill,\n      opacity: 0.3\n    }, {\n      offset: 100,\n      color: this.fill,\n      opacity: 1\n    }];\n  }\n}\nTreeMapCellComponent.ɵfac = function TreeMapCellComponent_Factory(t) {\n  return new (t || TreeMapCellComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\nTreeMapCellComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TreeMapCellComponent,\n  selectors: [[\"g\", \"ngx-charts-tree-map-cell\", \"\"]],\n  inputs: {\n    data: \"data\",\n    fill: \"fill\",\n    x: \"x\",\n    y: \"y\",\n    width: \"width\",\n    height: \"height\",\n    label: \"label\",\n    value: \"value\",\n    valueFormatting: \"valueFormatting\",\n    labelFormatting: \"labelFormatting\",\n    gradient: \"gradient\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c48,\n  decls: 4,\n  vars: 7,\n  consts: [[4, \"ngIf\"], [1, \"cell\", 3, \"click\"], [\"class\", \"treemap-label\", 3, \"pointer-events\", 4, \"ngIf\"], [\"ngx-charts-svg-linear-gradient\", \"\", 3, \"orientation\", \"name\", \"stops\"], [1, \"treemap-label\"], [1, \"treemap-label\", 3, \"innerHTML\"], [\"class\", \"treemap-val\", \"ngx-charts-count-up\", \"\", 3, \"countTo\", \"valueFormatting\", 4, \"ngIf\"], [\"class\", \"treemap-val\", 4, \"ngIf\"], [\"ngx-charts-count-up\", \"\", 1, \"treemap-val\", 3, \"countTo\", \"valueFormatting\"], [1, \"treemap-val\"]],\n  template: function TreeMapCellComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\");\n      i0.ɵɵtemplate(1, TreeMapCellComponent__svg_defs_1_Template, 2, 3, \"defs\", 0);\n      i0.ɵɵelementStart(2, \"rect\", 1);\n      i0.ɵɵlistener(\"click\", function TreeMapCellComponent_Template__svg_rect_click_2_listener() {\n        return ctx.onClick();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, TreeMapCellComponent__svg_foreignObject_3_Template, 6, 15, \"foreignObject\", 2);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.gradient);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"fill\", ctx.gradient ? ctx.gradientUrl : ctx.fill)(\"width\", ctx.width)(\"height\", ctx.height)(\"x\", ctx.x)(\"y\", ctx.y);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.width >= 70 && ctx.height >= 35);\n    }\n  },\n  directives: [i2.NgIf, SvgLinearGradientComponent, CountUpDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TreeMapCellComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-tree-map-cell]',\n      template: `\n    <svg:g>\n      <defs *ngIf=\"gradient\">\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          [orientation]=\"orientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:rect\n        [attr.fill]=\"gradient ? gradientUrl : fill\"\n        [attr.width]=\"width\"\n        [attr.height]=\"height\"\n        [attr.x]=\"x\"\n        [attr.y]=\"y\"\n        class=\"cell\"\n        (click)=\"onClick()\"\n      />\n      <svg:foreignObject\n        *ngIf=\"width >= 70 && height >= 35\"\n        [attr.x]=\"x\"\n        [attr.y]=\"y\"\n        [attr.width]=\"width\"\n        [attr.height]=\"height\"\n        class=\"treemap-label\"\n        [style.pointer-events]=\"'none'\"\n      >\n        <xhtml:p [style.color]=\"getTextColor()\" [style.height]=\"height + 'px'\" [style.width]=\"width + 'px'\">\n          <xhtml:span class=\"treemap-label\" [innerHTML]=\"formattedLabel\"> </xhtml:span>\n          <xhtml:br />\n          <xhtml:span\n            *ngIf=\"animations\"\n            class=\"treemap-val\"\n            ngx-charts-count-up\n            [countTo]=\"value\"\n            [valueFormatting]=\"valueFormatting\"\n          >\n          </xhtml:span>\n          <xhtml:span *ngIf=\"!animations\" class=\"treemap-val\">\n            {{ formattedValue }}\n          </xhtml:span>\n        </xhtml:p>\n      </svg:foreignObject>\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    data: [{\n      type: Input\n    }],\n    fill: [{\n      type: Input\n    }],\n    x: [{\n      type: Input\n    }],\n    y: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    labelFormatting: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }]\n  });\n})();\nclass TreeMapCellSeriesComponent {\n  constructor() {\n    this.gradient = false;\n    this.tooltipDisabled = false;\n    this.animations = true;\n    this.select = new EventEmitter();\n    this.styleTypes = StyleTypes;\n    this.placementTypes = PlacementTypes;\n  }\n  ngOnChanges(changes) {\n    this.cells = this.getCells();\n  }\n  getCells() {\n    return this.data.children.filter(d => {\n      return d.depth === 1;\n    }).map((d, index) => {\n      const label = d.id;\n      return {\n        data: d.data,\n        x: d.x0,\n        y: d.y0,\n        width: d.x1 - d.x0,\n        height: d.y1 - d.y0,\n        fill: this.colors.getColor(label),\n        label,\n        value: d.value\n      };\n    });\n  }\n  getTooltipText({\n    label,\n    value\n  }) {\n    return `\n      <span class=\"tooltip-label\">${escapeLabel(label)}</span>\n      <span class=\"tooltip-val\">${value.toLocaleString()}</span>\n    `;\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n  trackBy(index, item) {\n    return item.label;\n  }\n}\nTreeMapCellSeriesComponent.ɵfac = function TreeMapCellSeriesComponent_Factory(t) {\n  return new (t || TreeMapCellSeriesComponent)();\n};\nTreeMapCellSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TreeMapCellSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-tree-map-cell-series\", \"\"]],\n  inputs: {\n    data: \"data\",\n    dims: \"dims\",\n    colors: \"colors\",\n    valueFormatting: \"valueFormatting\",\n    labelFormatting: \"labelFormatting\",\n    gradient: \"gradient\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipTemplate: \"tooltipTemplate\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c49,\n  decls: 1,\n  vars: 2,\n  consts: [[\"ngx-charts-tree-map-cell\", \"\", \"ngx-tooltip\", \"\", 3, \"data\", \"x\", \"y\", \"width\", \"height\", \"fill\", \"label\", \"value\", \"valueFormatting\", \"labelFormatting\", \"gradient\", \"animations\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"select\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-tree-map-cell\", \"\", \"ngx-tooltip\", \"\", 3, \"data\", \"x\", \"y\", \"width\", \"height\", \"fill\", \"label\", \"value\", \"valueFormatting\", \"labelFormatting\", \"gradient\", \"animations\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"select\"]],\n  template: function TreeMapCellSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, TreeMapCellSeriesComponent__svg_g_0_Template, 1, 18, \"g\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.cells)(\"ngForTrackBy\", ctx.trackBy);\n    }\n  },\n  directives: [i2.NgForOf, TreeMapCellComponent, TooltipDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TreeMapCellSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-tree-map-cell-series]',\n      template: `\n    <svg:g\n      ngx-charts-tree-map-cell\n      *ngFor=\"let c of cells; trackBy: trackBy\"\n      [data]=\"c.data\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [fill]=\"c.fill\"\n      [label]=\"c.label\"\n      [value]=\"c.value\"\n      [valueFormatting]=\"valueFormatting\"\n      [labelFormatting]=\"labelFormatting\"\n      [gradient]=\"gradient\"\n      [animations]=\"animations\"\n      (select)=\"onClick($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"placementTypes.Top\"\n      [tooltipType]=\"styleTypes.tooltip\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(c)\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"c.data\"\n    ></svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    data: [{\n      type: Input\n    }],\n    dims: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    labelFormatting: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }]\n  });\n})();\nclass TreeMapComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.tooltipDisabled = false;\n    this.gradient = false;\n    this.select = new EventEmitter();\n    this.margin = [10, 10, 10, 10];\n  }\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin\n    });\n    this.domain = this.getDomain();\n    this.treemap = treemap().size([this.dims.width, this.dims.height]);\n    const rootNode = {\n      name: 'root',\n      value: 0,\n      isRoot: true\n    };\n    const root = stratify().id(d => {\n      let label = d.name;\n      if (label.constructor.name === 'Date') {\n        label = label.toLocaleDateString();\n      } else {\n        label = label.toLocaleString();\n      }\n      return label;\n    }).parentId(d => d.isRoot ? null : 'root')([rootNode, ...this.results]).sum(d => d.value);\n    this.data = this.treemap(root);\n    this.setColors();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n  }\n  getDomain() {\n    return this.results.map(d => d.name);\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n  setColors() {\n    this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n  }\n}\nTreeMapComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵTreeMapComponent_BaseFactory;\n  return function TreeMapComponent_Factory(t) {\n    return (ɵTreeMapComponent_BaseFactory || (ɵTreeMapComponent_BaseFactory = i0.ɵɵgetInheritedFactory(TreeMapComponent)))(t || TreeMapComponent);\n  };\n}();\nTreeMapComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TreeMapComponent,\n  selectors: [[\"ngx-charts-tree-map\"]],\n  contentQueries: function TreeMapComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    results: \"results\",\n    tooltipDisabled: \"tooltipDisabled\",\n    valueFormatting: \"valueFormatting\",\n    labelFormatting: \"labelFormatting\",\n    gradient: \"gradient\"\n  },\n  outputs: {\n    select: \"select\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 3,\n  vars: 16,\n  consts: [[3, \"view\", \"showLegend\", \"animations\"], [1, \"tree-map\", \"chart\"], [\"ngx-charts-tree-map-cell-series\", \"\", 3, \"colors\", \"data\", \"dims\", \"tooltipDisabled\", \"tooltipTemplate\", \"valueFormatting\", \"labelFormatting\", \"gradient\", \"animations\", \"select\"]],\n  template: function TreeMapComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵelementStart(2, \"g\", 2);\n      i0.ɵɵlistener(\"select\", function TreeMapComponent_Template__svg_g_select_2_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(13, _c24, ctx.width, ctx.height))(\"showLegend\", false)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"colors\", ctx.colors)(\"data\", ctx.data)(\"dims\", ctx.dims)(\"tooltipDisabled\", ctx.tooltipDisabled)(\"tooltipTemplate\", ctx.tooltipTemplate)(\"valueFormatting\", ctx.valueFormatting)(\"labelFormatting\", ctx.labelFormatting)(\"gradient\", ctx.gradient)(\"animations\", ctx.animations);\n    }\n  },\n  directives: [ChartComponent, TreeMapCellSeriesComponent],\n  styles: [\".tree-map .treemap-val{font-size:1.3em;padding-top:5px;display:inline-block}.tree-map .treemap-label p{display:table-cell;text-align:center;line-height:1.2em;vertical-align:middle}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TreeMapComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-tree-map',\n      template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"tree-map chart\">\n        <svg:g\n          ngx-charts-tree-map-cell-series\n          [colors]=\"colors\"\n          [data]=\"data\"\n          [dims]=\"dims\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [valueFormatting]=\"valueFormatting\"\n          [labelFormatting]=\"labelFormatting\"\n          [gradient]=\"gradient\"\n          [animations]=\"animations\"\n          (select)=\"onClick($event)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".tree-map .treemap-val{font-size:1.3em;padding-top:5px;display:inline-block}.tree-map .treemap-label p{display:table-cell;text-align:center;line-height:1.2em;vertical-align:middle}\\n\"]\n    }]\n  }], null, {\n    results: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    labelFormatting: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\nclass TreeMapModule {}\nTreeMapModule.ɵfac = function TreeMapModule_Factory(t) {\n  return new (t || TreeMapModule)();\n};\nTreeMapModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: TreeMapModule\n});\nTreeMapModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ChartCommonModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TreeMapModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ChartCommonModule],\n      declarations: [TreeMapCellComponent, TreeMapCellSeriesComponent, TreeMapComponent],\n      exports: [TreeMapCellComponent, TreeMapCellSeriesComponent, TreeMapComponent]\n    }]\n  }], null, null);\n})();\nvar ElementType;\n(function (ElementType) {\n  ElementType[\"Value\"] = \"value\";\n  ElementType[\"Units\"] = \"units\";\n})(ElementType || (ElementType = {}));\nclass LinearGaugeComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.min = 0;\n    this.max = 100;\n    this.value = 0;\n    this.margin = [10, 20, 10, 20];\n    this.valueResizeScale = 1;\n    this.unitsResizeScale = 1;\n    this.valueTextTransform = '';\n    this.valueTranslate = '';\n    this.unitsTextTransform = '';\n    this.unitsTranslate = '';\n    this.barOrientation = BarOrientation;\n  }\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n    setTimeout(() => {\n      this.scaleText(ElementType.Value);\n      this.scaleText(ElementType.Units);\n    });\n  }\n  update() {\n    super.update();\n    this.hasPreviousValue = this.previousValue !== undefined;\n    this.max = Math.max(this.max, this.value);\n    this.min = Math.min(this.min, this.value);\n    if (this.hasPreviousValue) {\n      this.max = Math.max(this.max, this.previousValue);\n      this.min = Math.min(this.min, this.previousValue);\n    }\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin\n    });\n    this.valueDomain = this.getValueDomain();\n    this.valueScale = this.getValueScale();\n    this.displayValue = this.getDisplayValue();\n    this.setColors();\n    const xOffset = this.margin[3] + this.dims.width / 2;\n    const yOffset = this.margin[0] + this.dims.height / 2;\n    this.transform = `translate(${xOffset}, ${yOffset})`;\n    this.transformLine = `translate(${this.margin[3] + this.valueScale(this.previousValue)}, ${yOffset})`;\n    this.valueTranslate = `translate(0, -15)`;\n    this.unitsTranslate = `translate(0, 15)`;\n    if (isPlatformServer(this.platformId)) {\n      this.scaleTextSSR('value');\n      this.scaleTextSSR('units');\n    } else {\n      setTimeout(() => this.scaleText(ElementType.Value), 50);\n      setTimeout(() => this.scaleText(ElementType.Units), 50);\n    }\n  }\n  getValueDomain() {\n    return [this.min, this.max];\n  }\n  getValueScale() {\n    return scaleLinear().range([0, this.dims.width]).domain(this.valueDomain);\n  }\n  getDisplayValue() {\n    if (this.valueFormatting) {\n      return this.valueFormatting(this.value);\n    }\n    return this.value.toLocaleString();\n  }\n  scaleText(element, repeat = true) {\n    let el;\n    let resizeScale;\n    if (element === ElementType.Value) {\n      el = this.valueTextEl;\n      resizeScale = this.valueResizeScale;\n    } else {\n      el = this.unitsTextEl;\n      resizeScale = this.unitsResizeScale;\n    }\n    const {\n      width,\n      height\n    } = el.nativeElement.getBoundingClientRect();\n    if (width === 0 || height === 0) return;\n    const oldScale = resizeScale;\n    const availableWidth = this.dims.width;\n    const availableHeight = Math.max(this.dims.height / 2 - 15, 0);\n    const resizeScaleWidth = Math.floor(availableWidth / (width / resizeScale) * 100) / 100;\n    const resizeScaleHeight = Math.floor(availableHeight / (height / resizeScale) * 100) / 100;\n    resizeScale = Math.min(resizeScaleHeight, resizeScaleWidth);\n    if (resizeScale !== oldScale) {\n      if (element === ElementType.Value) {\n        this.valueResizeScale = resizeScale;\n        this.valueTextTransform = `scale(${resizeScale}, ${resizeScale})`;\n      } else {\n        this.unitsResizeScale = resizeScale;\n        this.unitsTextTransform = `scale(${resizeScale}, ${resizeScale})`;\n      }\n      this.cd.markForCheck();\n      if (repeat && isPlatformBrowser(this.platformId)) {\n        setTimeout(() => {\n          this.scaleText(element, false);\n        }, 50);\n      }\n    }\n  }\n  scaleTextSSR(element) {\n    let resizeScale = 1;\n    const value = element === 'value' ? this.displayValue : this.units;\n    const width = calculateTextWidth(VERDANA_FONT_WIDTHS_16_PX, value, 10);\n    const height = 25;\n    const availableWidth = this.dims.width;\n    const availableHeight = Math.max(this.dims.height / 2 - 15, 0);\n    const resizeScaleWidth = Math.floor(availableWidth / (width / resizeScale) * 100) / 100;\n    const resizeScaleHeight = Math.floor(availableHeight / (height / resizeScale) * 100) / 100;\n    resizeScale = Math.min(resizeScaleHeight, resizeScaleWidth);\n    if (element === 'value') {\n      this.valueResizeScale = resizeScale;\n      this.valueTextTransform = `scale(${resizeScale}, ${resizeScale})`;\n    } else {\n      this.unitsResizeScale = resizeScale;\n      this.unitsTextTransform = `scale(${resizeScale}, ${resizeScale})`;\n    }\n    this.cd.markForCheck();\n  }\n  onClick() {\n    this.select.emit({\n      name: 'Value',\n      value: this.value\n    });\n  }\n  setColors() {\n    this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, [this.value], this.customColors);\n  }\n}\nLinearGaugeComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵLinearGaugeComponent_BaseFactory;\n  return function LinearGaugeComponent_Factory(t) {\n    return (ɵLinearGaugeComponent_BaseFactory || (ɵLinearGaugeComponent_BaseFactory = i0.ɵɵgetInheritedFactory(LinearGaugeComponent)))(t || LinearGaugeComponent);\n  };\n}();\nLinearGaugeComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: LinearGaugeComponent,\n  selectors: [[\"ngx-charts-linear-gauge\"]],\n  viewQuery: function LinearGaugeComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c50, 5);\n      i0.ɵɵviewQuery(_c51, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.valueTextEl = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.unitsTextEl = _t.first);\n    }\n  },\n  inputs: {\n    min: \"min\",\n    max: \"max\",\n    value: \"value\",\n    units: \"units\",\n    previousValue: \"previousValue\",\n    valueFormatting: \"valueFormatting\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 15,\n  vars: 38,\n  consts: [[3, \"view\", \"showLegend\", \"animations\", \"click\"], [1, \"linear-gauge\", \"chart\"], [\"ngx-charts-bar\", \"\", 1, \"background-bar\", 3, \"width\", \"height\", \"x\", \"y\", \"data\", \"orientation\", \"roundEdges\", \"animations\"], [\"ngx-charts-bar\", \"\", 3, \"width\", \"height\", \"x\", \"y\", \"fill\", \"data\", \"orientation\", \"roundEdges\", \"animations\"], [\"x1\", \"0\", \"y1\", \"5\", \"x2\", \"0\", \"y2\", \"15\", 4, \"ngIf\"], [\"x1\", \"0\", \"y1\", \"-5\", \"x2\", \"0\", \"y2\", \"-15\", 4, \"ngIf\"], [\"alignment-baseline\", \"after-edge\", 1, \"value\"], [\"valueTextEl\", \"\"], [\"alignment-baseline\", \"before-edge\", 1, \"units\"], [\"unitsTextEl\", \"\"], [\"x1\", \"0\", \"y1\", \"5\", \"x2\", \"0\", \"y2\", \"15\"], [\"x1\", \"0\", \"y1\", \"-5\", \"x2\", \"0\", \"y2\", \"-15\"]],\n  template: function LinearGaugeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"click\", function LinearGaugeComponent_Template_ngx_charts_chart_click_0_listener() {\n        return ctx.onClick();\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵelement(2, \"g\", 2);\n      i0.ɵɵelement(3, \"g\", 3);\n      i0.ɵɵtemplate(4, LinearGaugeComponent__svg_line_4_Template, 1, 2, \"line\", 4);\n      i0.ɵɵtemplate(5, LinearGaugeComponent__svg_line_5_Template, 1, 2, \"line\", 5);\n      i0.ɵɵelementStart(6, \"g\");\n      i0.ɵɵelementStart(7, \"g\");\n      i0.ɵɵelementStart(8, \"text\", 6, 7);\n      i0.ɵɵtext(10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"g\");\n      i0.ɵɵelementStart(12, \"text\", 8, 9);\n      i0.ɵɵtext(14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(33, _c24, ctx.width, ctx.height))(\"showLegend\", false)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"width\", ctx.dims.width)(\"height\", 3)(\"x\", ctx.margin[3])(\"y\", ctx.dims.height / 2 + ctx.margin[0] - 2)(\"data\", i0.ɵɵpureFunction0(36, _c52))(\"orientation\", ctx.barOrientation.Horizontal)(\"roundEdges\", true)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"width\", ctx.valueScale(ctx.value))(\"height\", 3)(\"x\", ctx.margin[3])(\"y\", ctx.dims.height / 2 + ctx.margin[0] - 2)(\"fill\", ctx.colors.getColor(ctx.units))(\"data\", i0.ɵɵpureFunction0(37, _c52))(\"orientation\", ctx.barOrientation.Horizontal)(\"roundEdges\", true)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.hasPreviousValue);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.hasPreviousValue);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.valueTranslate);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"text-anchor\", \"middle\");\n      i0.ɵɵattribute(\"transform\", ctx.valueTextTransform);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.displayValue, \" \");\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.unitsTranslate);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"text-anchor\", \"middle\");\n      i0.ɵɵattribute(\"transform\", ctx.unitsTextTransform);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.units, \" \");\n    }\n  },\n  directives: [ChartComponent, BarComponent, i2.NgIf],\n  styles: [_c25, \".linear-gauge{cursor:pointer}.linear-gauge .background-bar path{fill:#0000000d}.linear-gauge .units{fill:#666}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LinearGaugeComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-linear-gauge',\n      template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\" (click)=\"onClick()\">\n      <svg:g class=\"linear-gauge chart\">\n        <svg:g\n          ngx-charts-bar\n          class=\"background-bar\"\n          [width]=\"dims.width\"\n          [height]=\"3\"\n          [x]=\"margin[3]\"\n          [y]=\"dims.height / 2 + margin[0] - 2\"\n          [data]=\"{}\"\n          [orientation]=\"barOrientation.Horizontal\"\n          [roundEdges]=\"true\"\n          [animations]=\"animations\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-bar\n          [width]=\"valueScale(value)\"\n          [height]=\"3\"\n          [x]=\"margin[3]\"\n          [y]=\"dims.height / 2 + margin[0] - 2\"\n          [fill]=\"colors.getColor(units)\"\n          [data]=\"{}\"\n          [orientation]=\"barOrientation.Horizontal\"\n          [roundEdges]=\"true\"\n          [animations]=\"animations\"\n        ></svg:g>\n\n        <svg:line\n          *ngIf=\"hasPreviousValue\"\n          [attr.transform]=\"transformLine\"\n          x1=\"0\"\n          y1=\"5\"\n          x2=\"0\"\n          y2=\"15\"\n          [attr.stroke]=\"colors.getColor(units)\"\n        />\n\n        <svg:line\n          *ngIf=\"hasPreviousValue\"\n          [attr.transform]=\"transformLine\"\n          x1=\"0\"\n          y1=\"-5\"\n          x2=\"0\"\n          y2=\"-15\"\n          [attr.stroke]=\"colors.getColor(units)\"\n        />\n\n        <svg:g [attr.transform]=\"transform\">\n          <svg:g [attr.transform]=\"valueTranslate\">\n            <svg:text\n              #valueTextEl\n              class=\"value\"\n              [style.textAnchor]=\"'middle'\"\n              [attr.transform]=\"valueTextTransform\"\n              alignment-baseline=\"after-edge\"\n            >\n              {{ displayValue }}\n            </svg:text>\n          </svg:g>\n\n          <svg:g [attr.transform]=\"unitsTranslate\">\n            <svg:text\n              #unitsTextEl\n              class=\"units\"\n              [style.textAnchor]=\"'middle'\"\n              [attr.transform]=\"unitsTextTransform\"\n              alignment-baseline=\"before-edge\"\n            >\n              {{ units }}\n            </svg:text>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".linear-gauge{cursor:pointer}.linear-gauge .background-bar path{fill:#0000000d}.linear-gauge .units{fill:#666}\\n\"]\n    }]\n  }], null, {\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    units: [{\n      type: Input\n    }],\n    previousValue: [{\n      type: Input\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    valueTextEl: [{\n      type: ViewChild,\n      args: ['valueTextEl']\n    }],\n    unitsTextEl: [{\n      type: ViewChild,\n      args: ['unitsTextEl']\n    }]\n  });\n})();\nclass GaugeArcComponent {\n  constructor() {\n    this.isActive = false;\n    this.tooltipDisabled = false;\n    this.animations = true;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.placementTypes = PlacementTypes;\n    this.styleTypes = StyleTypes;\n  }\n  tooltipText(arc) {\n    const label = formatLabel(arc.data.name);\n    let val;\n    if (this.valueFormatting) {\n      val = this.valueFormatting(arc.data.value);\n    } else {\n      val = formatLabel(arc.data.value);\n    }\n    return `\n      <span class=\"tooltip-label\">${escapeLabel(label)}</span>\n      <span class=\"tooltip-val\">${val}</span>\n    `;\n  }\n}\nGaugeArcComponent.ɵfac = function GaugeArcComponent_Factory(t) {\n  return new (t || GaugeArcComponent)();\n};\nGaugeArcComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: GaugeArcComponent,\n  selectors: [[\"g\", \"ngx-charts-gauge-arc\", \"\"]],\n  inputs: {\n    backgroundArc: \"backgroundArc\",\n    valueArc: \"valueArc\",\n    cornerRadius: \"cornerRadius\",\n    colors: \"colors\",\n    isActive: \"isActive\",\n    tooltipDisabled: \"tooltipDisabled\",\n    valueFormatting: \"valueFormatting\",\n    tooltipTemplate: \"tooltipTemplate\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  attrs: _c53,\n  decls: 2,\n  vars: 23,\n  consts: [[\"ngx-charts-pie-arc\", \"\", 1, \"background-arc\", 3, \"startAngle\", \"endAngle\", \"innerRadius\", \"outerRadius\", \"cornerRadius\", \"data\", \"animate\", \"pointerEvents\"], [\"ngx-charts-pie-arc\", \"\", \"ngx-tooltip\", \"\", 3, \"startAngle\", \"endAngle\", \"innerRadius\", \"outerRadius\", \"cornerRadius\", \"fill\", \"data\", \"animate\", \"isActive\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"select\", \"activate\", \"deactivate\"]],\n  template: function GaugeArcComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelement(0, \"g\", 0);\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵlistener(\"select\", function GaugeArcComponent_Template__svg_g_select_1_listener($event) {\n        return ctx.select.emit($event);\n      })(\"activate\", function GaugeArcComponent_Template__svg_g_activate_1_listener($event) {\n        return ctx.activate.emit($event);\n      })(\"deactivate\", function GaugeArcComponent_Template__svg_g_deactivate_1_listener($event) {\n        return ctx.deactivate.emit($event);\n      });\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"startAngle\", 0)(\"endAngle\", ctx.backgroundArc.endAngle)(\"innerRadius\", ctx.backgroundArc.innerRadius)(\"outerRadius\", ctx.backgroundArc.outerRadius)(\"cornerRadius\", ctx.cornerRadius)(\"data\", ctx.backgroundArc.data)(\"animate\", false)(\"pointerEvents\", false);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"startAngle\", 0)(\"endAngle\", ctx.valueArc.endAngle)(\"innerRadius\", ctx.valueArc.innerRadius)(\"outerRadius\", ctx.valueArc.outerRadius)(\"cornerRadius\", ctx.cornerRadius)(\"fill\", ctx.colors.getColor(ctx.valueArc.data.name))(\"data\", ctx.valueArc.data)(\"animate\", ctx.animations)(\"isActive\", ctx.isActive)(\"tooltipDisabled\", ctx.tooltipDisabled)(\"tooltipPlacement\", ctx.placementTypes.Top)(\"tooltipType\", ctx.styleTypes.tooltip)(\"tooltipTitle\", ctx.tooltipTemplate ? undefined : ctx.tooltipText(ctx.valueArc))(\"tooltipTemplate\", ctx.tooltipTemplate)(\"tooltipContext\", ctx.valueArc.data);\n    }\n  },\n  directives: [PieArcComponent, TooltipDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GaugeArcComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-gauge-arc]',\n      template: `\n    <svg:g\n      ngx-charts-pie-arc\n      class=\"background-arc\"\n      [startAngle]=\"0\"\n      [endAngle]=\"backgroundArc.endAngle\"\n      [innerRadius]=\"backgroundArc.innerRadius\"\n      [outerRadius]=\"backgroundArc.outerRadius\"\n      [cornerRadius]=\"cornerRadius\"\n      [data]=\"backgroundArc.data\"\n      [animate]=\"false\"\n      [pointerEvents]=\"false\"\n    ></svg:g>\n    <svg:g\n      ngx-charts-pie-arc\n      [startAngle]=\"0\"\n      [endAngle]=\"valueArc.endAngle\"\n      [innerRadius]=\"valueArc.innerRadius\"\n      [outerRadius]=\"valueArc.outerRadius\"\n      [cornerRadius]=\"cornerRadius\"\n      [fill]=\"colors.getColor(valueArc.data.name)\"\n      [data]=\"valueArc.data\"\n      [animate]=\"animations\"\n      [isActive]=\"isActive\"\n      (select)=\"select.emit($event)\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"placementTypes.Top\"\n      [tooltipType]=\"styleTypes.tooltip\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(valueArc)\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"valueArc.data\"\n    ></svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    backgroundArc: [{\n      type: Input\n    }],\n    valueArc: [{\n      type: Input\n    }],\n    cornerRadius: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    isActive: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }]\n  });\n})();\nclass GaugeAxisComponent {\n  constructor() {\n    this.rotate = '';\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    this.rotationAngle = -90 + this.startAngle;\n    this.rotate = `rotate(${this.rotationAngle})`;\n    this.ticks = this.getTicks();\n  }\n  getTicks() {\n    const bigTickSegment = this.angleSpan / this.bigSegments;\n    const smallTickSegment = bigTickSegment / this.smallSegments;\n    const tickLength = 20;\n    const ticks = {\n      big: [],\n      small: []\n    };\n    const startDistance = this.radius + 10;\n    const textDist = startDistance + tickLength + 10;\n    for (let i = 0; i <= this.bigSegments; i++) {\n      const angleDeg = i * bigTickSegment;\n      const angle = angleDeg * Math.PI / 180;\n      const textAnchor = this.getTextAnchor(angleDeg);\n      let skip = false;\n      if (i === 0 && this.angleSpan === 360) {\n        skip = true;\n      }\n      if (!skip) {\n        let text = Number.parseFloat(this.valueScale.invert(angleDeg).toString()).toLocaleString();\n        if (this.tickFormatting) {\n          text = this.tickFormatting(text);\n        }\n        ticks.big.push({\n          line: this.getTickPath(startDistance, tickLength, angle),\n          textAnchor,\n          text,\n          textTransform: `\n            translate(${textDist * Math.cos(angle)}, ${textDist * Math.sin(angle)}) rotate(${-this.rotationAngle})\n          `\n        });\n      }\n      if (i === this.bigSegments) {\n        continue;\n      }\n      for (let j = 1; j <= this.smallSegments; j++) {\n        const smallAngleDeg = angleDeg + j * smallTickSegment;\n        const smallAngle = smallAngleDeg * Math.PI / 180;\n        ticks.small.push({\n          line: this.getTickPath(startDistance, tickLength / 2, smallAngle)\n        });\n      }\n    }\n    return ticks;\n  }\n  getTextAnchor(angle) {\n    // [0, 45] = 'middle';\n    // [46, 135] = 'start';\n    // [136, 225] = 'middle';\n    // [226, 315] = 'end';\n    angle = (this.startAngle + angle) % 360;\n    let textAnchor = TextAnchor.Middle;\n    if (angle > 45 && angle <= 135) {\n      textAnchor = TextAnchor.Start;\n    } else if (angle > 225 && angle <= 315) {\n      textAnchor = TextAnchor.End;\n    }\n    return textAnchor;\n  }\n  getTickPath(startDistance, tickLength, angle) {\n    const y1 = startDistance * Math.sin(angle);\n    const y2 = (startDistance + tickLength) * Math.sin(angle);\n    const x1 = startDistance * Math.cos(angle);\n    const x2 = (startDistance + tickLength) * Math.cos(angle);\n    const points = [{\n      x: x1,\n      y: y1\n    }, {\n      x: x2,\n      y: y2\n    }];\n    const lineGenerator = line().x(d => d.x).y(d => d.y);\n    return lineGenerator(points);\n  }\n}\nGaugeAxisComponent.ɵfac = function GaugeAxisComponent_Factory(t) {\n  return new (t || GaugeAxisComponent)();\n};\nGaugeAxisComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: GaugeAxisComponent,\n  selectors: [[\"g\", \"ngx-charts-gauge-axis\", \"\"]],\n  inputs: {\n    bigSegments: \"bigSegments\",\n    smallSegments: \"smallSegments\",\n    min: \"min\",\n    max: \"max\",\n    angleSpan: \"angleSpan\",\n    startAngle: \"startAngle\",\n    radius: \"radius\",\n    valueScale: \"valueScale\",\n    tickFormatting: \"tickFormatting\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c54,\n  decls: 4,\n  vars: 4,\n  consts: [[\"class\", \"gauge-tick gauge-tick-large\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"gauge-tick gauge-tick-small\", 4, \"ngFor\", \"ngForOf\"], [1, \"gauge-tick\", \"gauge-tick-large\"], [\"alignment-baseline\", \"central\"], [1, \"gauge-tick\", \"gauge-tick-small\"]],\n  template: function GaugeAxisComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\");\n      i0.ɵɵtemplate(1, GaugeAxisComponent__svg_g_1_Template, 2, 1, \"g\", 0);\n      i0.ɵɵtemplate(2, GaugeAxisComponent__svg_g_2_Template, 3, 4, \"g\", 0);\n      i0.ɵɵtemplate(3, GaugeAxisComponent__svg_g_3_Template, 2, 1, \"g\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵattribute(\"transform\", ctx.rotate);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.ticks.big);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.ticks.big);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.ticks.small);\n    }\n  },\n  directives: [i2.NgForOf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GaugeAxisComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-gauge-axis]',\n      template: `\n    <svg:g [attr.transform]=\"rotate\">\n      <svg:g *ngFor=\"let tick of ticks.big\" class=\"gauge-tick gauge-tick-large\">\n        <svg:path [attr.d]=\"tick.line\" />\n      </svg:g>\n      <svg:g *ngFor=\"let tick of ticks.big\" class=\"gauge-tick gauge-tick-large\">\n        <svg:text\n          [style.textAnchor]=\"tick.textAnchor\"\n          [attr.transform]=\"tick.textTransform\"\n          alignment-baseline=\"central\"\n        >\n          {{ tick.text }}\n        </svg:text>\n      </svg:g>\n      <svg:g *ngFor=\"let tick of ticks.small\" class=\"gauge-tick gauge-tick-small\">\n        <svg:path [attr.d]=\"tick.line\" />\n      </svg:g>\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    bigSegments: [{\n      type: Input\n    }],\n    smallSegments: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    angleSpan: [{\n      type: Input\n    }],\n    startAngle: [{\n      type: Input\n    }],\n    radius: [{\n      type: Input\n    }],\n    valueScale: [{\n      type: Input\n    }],\n    tickFormatting: [{\n      type: Input\n    }]\n  });\n})();\nclass GaugeComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legend = false;\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.min = 0;\n    this.max = 100;\n    this.bigSegments = 10;\n    this.smallSegments = 5;\n    this.showAxis = true;\n    this.startAngle = -120;\n    this.angleSpan = 240;\n    this.activeEntries = [];\n    this.tooltipDisabled = false;\n    this.showText = true;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.resizeScale = 1;\n    this.rotation = '';\n    this.textTransform = 'scale(1, 1)';\n    this.cornerRadius = 10;\n  }\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n    setTimeout(() => this.scaleText());\n  }\n  update() {\n    super.update();\n    if (!this.showAxis) {\n      if (!this.margin) {\n        this.margin = [10, 20, 10, 20];\n      }\n    } else {\n      if (!this.margin) {\n        this.margin = [60, 100, 60, 100];\n      }\n    }\n    // make the starting angle positive\n    if (this.startAngle < 0) {\n      this.startAngle = this.startAngle % 360 + 360;\n    }\n    this.angleSpan = Math.min(this.angleSpan, 360);\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showLegend: this.legend,\n      legendPosition: this.legendPosition\n    });\n    this.domain = this.getDomain();\n    this.valueDomain = this.getValueDomain();\n    this.valueScale = this.getValueScale();\n    this.displayValue = this.getDisplayValue();\n    this.outerRadius = Math.min(this.dims.width, this.dims.height) / 2;\n    this.arcs = this.getArcs();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    const xOffset = this.margin[3] + this.dims.width / 2;\n    const yOffset = this.margin[0] + this.dims.height / 2;\n    this.transform = `translate(${xOffset}, ${yOffset})`;\n    this.rotation = `rotate(${this.startAngle})`;\n    setTimeout(() => this.scaleText(), 50);\n  }\n  getArcs() {\n    const arcs = [];\n    const availableRadius = this.outerRadius * 0.7;\n    const radiusPerArc = Math.min(availableRadius / this.results.length, 10);\n    const arcWidth = radiusPerArc * 0.7;\n    this.textRadius = this.outerRadius - this.results.length * radiusPerArc;\n    this.cornerRadius = Math.floor(arcWidth / 2);\n    let i = 0;\n    for (const d of this.results) {\n      const outerRadius = this.outerRadius - i * radiusPerArc;\n      const innerRadius = outerRadius - arcWidth;\n      const backgroundArc = {\n        endAngle: this.angleSpan * Math.PI / 180,\n        innerRadius,\n        outerRadius,\n        data: {\n          value: this.max,\n          name: d.name\n        }\n      };\n      const valueArc = {\n        endAngle: Math.min(this.valueScale(d.value), this.angleSpan) * Math.PI / 180,\n        innerRadius,\n        outerRadius,\n        data: {\n          value: d.value,\n          name: d.name\n        }\n      };\n      const arc = {\n        backgroundArc,\n        valueArc\n      };\n      arcs.push(arc);\n      i++;\n    }\n    return arcs;\n  }\n  getDomain() {\n    return this.results.map(d => d.name);\n  }\n  getValueDomain() {\n    const values = this.results.map(d => d.value);\n    const dataMin = Math.min(...values);\n    const dataMax = Math.max(...values);\n    if (this.min !== undefined) {\n      this.min = Math.min(this.min, dataMin);\n    } else {\n      this.min = dataMin;\n    }\n    if (this.max !== undefined) {\n      this.max = Math.max(this.max, dataMax);\n    } else {\n      this.max = dataMax;\n    }\n    return [this.min, this.max];\n  }\n  getValueScale() {\n    return scaleLinear().range([0, this.angleSpan]).nice().domain(this.valueDomain);\n  }\n  getDisplayValue() {\n    const value = this.results.map(d => d.value).reduce((a, b) => a + b, 0);\n    if (this.textValue && 0 !== this.textValue.length) {\n      return this.textValue.toLocaleString();\n    }\n    if (this.valueFormatting) {\n      return this.valueFormatting(value);\n    }\n    return value.toLocaleString();\n  }\n  scaleText(repeat = true) {\n    if (!this.showText) {\n      return;\n    }\n    const {\n      width\n    } = this.textEl.nativeElement.getBoundingClientRect();\n    const oldScale = this.resizeScale;\n    if (width === 0) {\n      this.resizeScale = 1;\n    } else {\n      const availableSpace = this.textRadius;\n      this.resizeScale = Math.floor(availableSpace / (width / this.resizeScale) * 100) / 100;\n    }\n    if (this.resizeScale !== oldScale) {\n      this.textTransform = `scale(${this.resizeScale}, ${this.resizeScale})`;\n      this.cd.markForCheck();\n      if (repeat) {\n        setTimeout(() => this.scaleText(false), 50);\n      }\n    }\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n  getLegendOptions() {\n    return {\n      scaleType: ScaleType.Ordinal,\n      colors: this.colors,\n      domain: this.domain,\n      title: this.legendTitle,\n      position: this.legendPosition\n    };\n  }\n  setColors() {\n    this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n  }\n  onActivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    if (idx > -1) {\n      return;\n    }\n    this.activeEntries = [item, ...this.activeEntries];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  isActive(entry) {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name && entry.series === d.series;\n    });\n    return item !== undefined;\n  }\n  trackBy(index, item) {\n    return item.valueArc.data.name;\n  }\n}\nGaugeComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵGaugeComponent_BaseFactory;\n  return function GaugeComponent_Factory(t) {\n    return (ɵGaugeComponent_BaseFactory || (ɵGaugeComponent_BaseFactory = i0.ɵɵgetInheritedFactory(GaugeComponent)))(t || GaugeComponent);\n  };\n}();\nGaugeComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: GaugeComponent,\n  selectors: [[\"ngx-charts-gauge\"]],\n  contentQueries: function GaugeComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  viewQuery: function GaugeComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c45, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.textEl = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    min: \"min\",\n    max: \"max\",\n    textValue: \"textValue\",\n    units: \"units\",\n    bigSegments: \"bigSegments\",\n    smallSegments: \"smallSegments\",\n    results: \"results\",\n    showAxis: \"showAxis\",\n    startAngle: \"startAngle\",\n    angleSpan: \"angleSpan\",\n    activeEntries: \"activeEntries\",\n    axisTickFormatting: \"axisTickFormatting\",\n    tooltipDisabled: \"tooltipDisabled\",\n    valueFormatting: \"valueFormatting\",\n    showText: \"showText\",\n    margin: \"margin\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 5,\n  vars: 13,\n  consts: [[3, \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\", \"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"], [1, \"gauge\", \"chart\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-gauge-axis\", \"\", 3, \"bigSegments\", \"smallSegments\", \"min\", \"max\", \"radius\", \"angleSpan\", \"valueScale\", \"startAngle\", \"tickFormatting\", 4, \"ngIf\"], [\"alignment-baseline\", \"central\", 3, \"textAnchor\", 4, \"ngIf\"], [\"ngx-charts-gauge-arc\", \"\", 3, \"backgroundArc\", \"valueArc\", \"cornerRadius\", \"colors\", \"isActive\", \"tooltipDisabled\", \"tooltipTemplate\", \"valueFormatting\", \"animations\", \"select\", \"activate\", \"deactivate\"], [\"ngx-charts-gauge-axis\", \"\", 3, \"bigSegments\", \"smallSegments\", \"min\", \"max\", \"radius\", \"angleSpan\", \"valueScale\", \"startAngle\", \"tickFormatting\"], [\"alignment-baseline\", \"central\"], [\"textEl\", \"\"], [\"x\", \"0\", \"dy\", \"0\"], [\"x\", \"0\", \"dy\", \"1.2em\"]],\n  template: function GaugeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelClick\", function GaugeComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      })(\"legendLabelActivate\", function GaugeComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event);\n      })(\"legendLabelDeactivate\", function GaugeComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵtemplate(2, GaugeComponent__svg_g_2_Template, 2, 10, \"g\", 2);\n      i0.ɵɵtemplate(3, GaugeComponent__svg_g_3_Template, 1, 9, \"g\", 3);\n      i0.ɵɵtemplate(4, GaugeComponent__svg_text_4_Template, 6, 5, \"text\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(10, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.arcs)(\"ngForTrackBy\", ctx.trackBy);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showAxis);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showText);\n    }\n  },\n  directives: [ChartComponent, i2.NgForOf, i2.NgIf, GaugeArcComponent, GaugeAxisComponent],\n  styles: [_c25, \".gauge .background-arc path{fill:#0000000d}.gauge .gauge-tick path{stroke:#666}.gauge .gauge-tick text{font-size:12px;fill:#666;font-weight:700}.gauge .gauge-tick-large path{stroke-width:2px}.gauge .gauge-tick-small path{stroke-width:1px}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GaugeComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-gauge',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"gauge chart\">\n        <svg:g *ngFor=\"let arc of arcs; trackBy: trackBy\" [attr.transform]=\"rotation\">\n          <svg:g\n            ngx-charts-gauge-arc\n            [backgroundArc]=\"arc.backgroundArc\"\n            [valueArc]=\"arc.valueArc\"\n            [cornerRadius]=\"cornerRadius\"\n            [colors]=\"colors\"\n            [isActive]=\"isActive(arc.valueArc.data)\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [valueFormatting]=\"valueFormatting\"\n            [animations]=\"animations\"\n            (select)=\"onClick($event)\"\n            (activate)=\"onActivate($event)\"\n            (deactivate)=\"onDeactivate($event)\"\n          ></svg:g>\n        </svg:g>\n\n        <svg:g\n          ngx-charts-gauge-axis\n          *ngIf=\"showAxis\"\n          [bigSegments]=\"bigSegments\"\n          [smallSegments]=\"smallSegments\"\n          [min]=\"min\"\n          [max]=\"max\"\n          [radius]=\"outerRadius\"\n          [angleSpan]=\"angleSpan\"\n          [valueScale]=\"valueScale\"\n          [startAngle]=\"startAngle\"\n          [tickFormatting]=\"axisTickFormatting\"\n        ></svg:g>\n\n        <svg:text\n          #textEl\n          *ngIf=\"showText\"\n          [style.textAnchor]=\"'middle'\"\n          [attr.transform]=\"textTransform\"\n          alignment-baseline=\"central\"\n        >\n          <tspan x=\"0\" dy=\"0\">{{ displayValue }}</tspan>\n          <tspan x=\"0\" dy=\"1.2em\">{{ units }}</tspan>\n        </svg:text>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".gauge .background-arc path{fill:#0000000d}.gauge .gauge-tick path{stroke:#666}.gauge .gauge-tick text{font-size:12px;fill:#666;font-weight:700}.gauge .gauge-tick-large path{stroke-width:2px}.gauge .gauge-tick-small path{stroke-width:1px}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    textValue: [{\n      type: Input\n    }],\n    units: [{\n      type: Input\n    }],\n    bigSegments: [{\n      type: Input\n    }],\n    smallSegments: [{\n      type: Input\n    }],\n    results: [{\n      type: Input\n    }],\n    showAxis: [{\n      type: Input\n    }],\n    startAngle: [{\n      type: Input\n    }],\n    angleSpan: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    axisTickFormatting: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    showText: [{\n      type: Input\n    }],\n    margin: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }],\n    textEl: [{\n      type: ViewChild,\n      args: ['textEl']\n    }]\n  });\n})();\nclass GaugeModule {}\nGaugeModule.ɵfac = function GaugeModule_Factory(t) {\n  return new (t || GaugeModule)();\n};\nGaugeModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: GaugeModule\n});\nGaugeModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ChartCommonModule, PieChartModule, BarChartModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GaugeModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ChartCommonModule, PieChartModule, BarChartModule],\n      declarations: [LinearGaugeComponent, GaugeComponent, GaugeArcComponent, GaugeAxisComponent],\n      exports: [LinearGaugeComponent, GaugeComponent, GaugeArcComponent, GaugeAxisComponent]\n    }]\n  }], null, null);\n})();\n\n// The export is needed here to generate a valid polyfills.metadata.json file\nfunction ngxChartsPolyfills() {\n  // IE11 fix\n  // Ref: https://github.com/swimlane/ngx-charts/issues/386\n  if (typeof SVGElement !== 'undefined' && typeof SVGElement.prototype.contains === 'undefined') {\n    SVGElement.prototype.contains = HTMLDivElement.prototype.contains;\n  }\n}\nclass NgxChartsModule {\n  constructor() {\n    ngxChartsPolyfills();\n  }\n}\nNgxChartsModule.ɵfac = function NgxChartsModule_Factory(t) {\n  return new (t || NgxChartsModule)();\n};\nNgxChartsModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NgxChartsModule\n});\nNgxChartsModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [ChartCommonModule, AreaChartModule, BarChartModule, BoxChartModule, BubbleChartModule, HeatMapModule, LineChartModule, PolarChartModule, NumberCardModule, PieChartModule, TreeMapModule, GaugeModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxChartsModule, [{\n    type: NgModule,\n    args: [{\n      exports: [ChartCommonModule, AreaChartModule, BarChartModule, BoxChartModule, BubbleChartModule, HeatMapModule, LineChartModule, PolarChartModule, NumberCardModule, PieChartModule, TreeMapModule, GaugeModule]\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\nfunction tickFormat(fieldType, groupByType) {\n  return function (label) {\n    if (label === 'No Value' || label === 'Other') {\n      return label;\n    }\n    if (fieldType === 'date' && groupByType === 'groupBy') {\n      const formatter = timeFormat('MM/DD/YYYY');\n      return formatter(label);\n    }\n    return label.toString();\n  };\n}\n\n/* eslint-disable @typescript-eslint/no-empty-interface */\n\n/*\n * Public API Surface of ngx-charts\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AdvancedLegendComponent, AdvancedPieChartComponent, AreaChartComponent, AreaChartModule, AreaChartNormalizedComponent, AreaChartStackedComponent, AreaComponent, AreaSeriesComponent, AxesModule, AxisLabelComponent, BarChartModule, BarChartType, BarComponent, BarHorizontal2DComponent, BarHorizontalComponent, BarHorizontalNormalizedComponent, BarHorizontalStackedComponent, BarLabelComponent, BarOrientation, BarVertical2DComponent, BarVerticalComponent, BarVerticalNormalizedComponent, BarVerticalStackedComponent, BaseChartComponent, BoxChartComponent, BoxChartModule, BoxComponent, BoxSeriesComponent, BubbleChartComponent, BubbleChartModule, BubbleSeriesComponent, CardComponent, CardSeriesComponent, ChartCommonModule, ChartComponent, CircleComponent, CircleSeriesComponent, ColorHelper, CountUpDirective, D0Types, GaugeArcComponent, GaugeAxisComponent, GaugeComponent, GaugeModule, GridPanelComponent, GridPanelSeriesComponent, HeatCellSeriesComponent, HeatMapCellComponent, HeatMapComponent, HeatMapModule, LegendComponent, LegendEntryComponent, LegendPosition, LegendType, LineChartComponent, LineChartModule, LineComponent, LineSeriesComponent, LinearGaugeComponent, NgxChartsModule, NumberCardComponent, NumberCardModule, Orientation, PieArcComponent, PieChartComponent, PieChartModule, PieGridComponent, PieGridSeriesComponent, PieLabelComponent, PieSeriesComponent, PlacementTypes, PolarChartComponent, PolarChartModule, PolarSeriesComponent, ScaleLegendComponent, ScaleType, SeriesHorizontal, SeriesType, SeriesVerticalComponent, ShowTypes, StyleTypes, SvgLinearGradientComponent, SvgRadialGradientComponent, TextAnchor, Timeline, TooltipArea, TooltipContentComponent, TooltipDirective, TooltipModule, TooltipService, TreeMapCellComponent, TreeMapCellSeriesComponent, TreeMapComponent, TreeMapModule, VisibilityObserver, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent, calculateViewDimensions, colorSets, count, decimalChecker, escapeLabel, formatLabel, getDomain, getScale, getScaleType, getUniqueXDomainValues, getXDomainArray, gridLayout, gridSize, hexToRgb, id, invertColor, reduceTicks, shadeRGBColor, sortByDomain, sortByTime, sortLinear, throttle, throttleable, tickFormat, trimLabel };\n//# sourceMappingURL=swimlane-ngx-charts.mjs.map","map":{"version":3,"names":["i0","PLATFORM_ID","Component","ViewEncapsulation","Inject","Input","ViewChild","HostBinding","HostListener","Injectable","ChangeDetectionStrategy","EventEmitter","Output","Directive","NgModule","ContentChild","i2","isPlatformBrowser","isPlatformServer","CommonModule","__decorate","DomPortalOutlet","ComponentPortal","fromEvent","debounceTime","trigger","transition","style","animate","select","brushX","scaleTime","scaleLinear","scalePoint","scaleOrdinal","scaleQuantile","scaleBand","area","curveLinear","line","arc","lineRadial","curveCardinalClosed","pie","range","min","max","quantile","interpolate","easeSinInOut","rfdc","format","d3_color","treemap","stratify","timeFormat","_c0","TooltipContentComponent_span_4_ng_template_1_Template","rf","ctx","_c1","a0","model","TooltipContentComponent_span_4_Template","ɵɵelementStart","ɵɵtemplate","ɵɵelementEnd","ctx_r1","ɵɵnextContext","ɵɵadvance","ɵɵproperty","template","ɵɵpureFunction1","context","TooltipContentComponent_span_5_Template","ɵɵelement","ctx_r2","title","ɵɵsanitizeHtml","LegendComponent_header_1_Template","ɵɵtext","ctx_r0","ɵɵtextInterpolate","LegendComponent_li_4_Template","_r4","ɵɵgetCurrentView","ɵɵlistener","LegendComponent_li_4_Template_ngx_charts_legend_entry_select_1_listener","$event","ɵɵrestoreView","ctx_r3","labelClick","emit","LegendComponent_li_4_Template_ngx_charts_legend_entry_activate_1_listener","ctx_r5","activate","LegendComponent_li_4_Template_ngx_charts_legend_entry_deactivate_1_listener","ctx_r6","deactivate","entry_r2","$implicit","label","formattedLabel","color","isActive","ChartComponent_ngx_charts_scale_legend_3_Template","ɵɵnamespaceSVG","ɵɵnamespaceHTML","legendOptions","position","LegendPosition","Below","domain","colors","view","legendWidth","ChartComponent_ngx_charts_legend_4_Template","_r3","ChartComponent_ngx_charts_legend_4_Template_ngx_charts_legend_labelClick_0_listener","legendLabelClick","ChartComponent_ngx_charts_legend_4_Template_ngx_charts_legend_labelActivate_0_listener","ctx_r4","legendLabelActivate","ChartComponent_ngx_charts_legend_4_Template_ngx_charts_legend_labelDeactivate_0_listener","legendLabelDeactivate","activeEntries","_c2","_c3","_c4","_c5","XAxisTicksComponent__svg_g_2_Template","tick_r3","ɵɵattribute","tickTransform","tickFormat","ɵɵstyleProp","textAnchor","textTransform","ɵɵtextInterpolate1","tickTrim","XAxisTicksComponent__svg_g_3__svg_g_1_Template","gridLineTransform","gridLineHeight","XAxisTicksComponent__svg_g_3_Template","tick_r4","showGridLines","_c6","XAxisComponent__svg_g_1_Template","XAxisComponent__svg_g_1_Template__svg_g_dimensionsChanged_0_listener","emitTicksHeight","trimTicks","rotateTicks","maxTickLength","tickFormatting","tickArguments","tickStroke","xScale","xOrient","dims","height","width","ticks","XAxisComponent__svg_g_2_Template","labelText","labelOffset","orientation","Bottom","_c7","YAxisTicksComponent__svg_g_2_Template","tick_r5","transform","dy","x1","y1","YAxisTicksComponent__svg_path_3_Template","referenceAreaPath","YAxisTicksComponent__svg_g_4__svg_g_1__svg_line_1_Template","ctx_r8","gridLineWidth","YAxisTicksComponent__svg_g_4__svg_g_1__svg_line_2_Template","ctx_r9","YAxisTicksComponent__svg_g_4__svg_g_1_Template","ctx_r7","orient","Orientation","Left","Right","YAxisTicksComponent__svg_g_4_Template","tick_r6","YAxisTicksComponent__svg_g_5__svg_g_1__svg_g_2_Template","refLine_r10","ctx_r12","value","name","YAxisTicksComponent__svg_g_5__svg_g_1_Template","ctx_r11","showRefLabels","YAxisTicksComponent__svg_g_5_Template","showRefLines","_c8","YAxisComponent__svg_g_1_Template","YAxisComponent__svg_g_1_Template__svg_g_dimensionsChanged_0_listener","emitTicksWidth","yScale","yOrient","referenceLines","YAxisComponent__svg_g_2_Template","_c9","SvgLinearGradientComponent__svg_stop_1_Template","stop_r1","opacity","offset","_c10","_c11","CircleSeriesComponent__svg_g_0__svg_rect_3_Template","circle","cx","radius","cy","gradientFill","CircleSeriesComponent__svg_g_0__svg_rect_4_Template","_c12","CircleSeriesComponent__svg_g_0_Template","CircleSeriesComponent__svg_g_0_Template__svg_g_select_5_listener","onClick","data","CircleSeriesComponent__svg_g_0_Template__svg_g_activate_5_listener","activateCircle","CircleSeriesComponent__svg_g_0_Template__svg_g_deactivate_5_listener","deactivateCircle","barOrientation","Vertical","gradientId","gradientStops","isSSR","barVisible","type","ɵɵclassProp","seriesName","classNames","tooltipDisabled","placementTypes","Top","styleTypes","tooltip","tooltipTemplate","undefined","getTooltipText","_c13","_c14","GridPanelSeriesComponent__svg_g_0_Template","gridPanel_r1","class","x","y","_c15","SvgRadialGradientComponent__svg_stop_1_Template","_c16","AreaComponent__svg_defs_0_Template","_c17","_c18","_c19","TooltipArea__svg_ng_template_2__xhtml_div_1_Template","tooltipItem_r5","getToolTipText","TooltipArea__svg_ng_template_2_Template","model_r3","_c20","AdvancedLegendComponent_div_1_Template","roundedTotal","valueFormatting","AdvancedLegendComponent_div_2_Template","defaultValueFormatting","AdvancedLegendComponent_div_7_div_2_Template","legendItem_r3","_value","AdvancedLegendComponent_div_7_div_3_Template","AdvancedLegendComponent_div_7_div_6_Template","percentage","AdvancedLegendComponent_div_7_div_7_Template","toLocaleString","AdvancedLegendComponent_div_7_Template","_r13","AdvancedLegendComponent_div_7_Template_div_mouseenter_0_listener","restoredCtx","AdvancedLegendComponent_div_7_Template_div_mouseleave_0_listener","ctx_r14","AdvancedLegendComponent_div_7_Template_div_click_0_listener","ctx_r15","animations","displayLabel","_c21","_c22","_c23","AreaChartComponent__svg_g_5_Template","_r6","AreaChartComponent__svg_g_5_Template__svg_g_dimensionsChanged_0_listener","updateXAxisHeight","showXAxisLabel","xAxisLabel","trimXAxisTicks","rotateXAxisTicks","maxXAxisTickLength","xAxisTickFormatting","xAxisTicks","AreaChartComponent__svg_g_6_Template","_r8","AreaChartComponent__svg_g_6_Template__svg_g_dimensionsChanged_0_listener","updateYAxisWidth","showYAxisLabel","yAxisLabel","trimYAxisTicks","maxYAxisTickLength","yAxisTickFormatting","yAxisTicks","AreaChartComponent__svg_g_8_Template","series_r9","baseValue","scaleType","gradient","curve","AreaChartComponent__svg_g_9__svg_g_2_Template","AreaChartComponent__svg_g_9__svg_g_2_Template__svg_g_select_1_listener","series_r11","AreaChartComponent__svg_g_9__svg_g_2_Template__svg_g_activate_1_listener","onActivate","AreaChartComponent__svg_g_9__svg_g_2_Template__svg_g_deactivate_1_listener","onDeactivate","ctx_r10","hoveredVertical","AreaChartComponent__svg_g_9_Template","_r17","AreaChartComponent__svg_g_9_Template__svg_g_mouseleave_0_listener","ctx_r16","hideCircles","AreaChartComponent__svg_g_9_Template__svg_g_hover_1_listener","ctx_r18","updateHoveredVertical","xSet","results","seriesTooltipTemplate","AreaChartComponent__svg_g_10__svg_g_1_Template","series_r20","ctx_r19","timelineXScale","timelineYScale","_c24","a1","AreaChartComponent__svg_g_10_Template","_r22","AreaChartComponent__svg_g_10_Template__svg_g_onDomainChange_0_listener","ctx_r21","updateDomain","ɵɵpureFunction2","timelineWidth","timelineHeight","scheme","customColors","legend","timelineTransform","trackBy","AreaChartNormalizedComponent__svg_g_5_Template","AreaChartNormalizedComponent__svg_g_5_Template__svg_g_dimensionsChanged_0_listener","AreaChartNormalizedComponent__svg_g_6_Template","AreaChartNormalizedComponent__svg_g_6_Template__svg_g_dimensionsChanged_0_listener","AreaChartNormalizedComponent__svg_g_8_Template","AreaChartNormalizedComponent__svg_g_9__svg_g_2_Template","AreaChartNormalizedComponent__svg_g_9__svg_g_2_Template__svg_g_select_1_listener","AreaChartNormalizedComponent__svg_g_9__svg_g_2_Template__svg_g_activate_1_listener","AreaChartNormalizedComponent__svg_g_9__svg_g_2_Template__svg_g_deactivate_1_listener","seriesType","Stacked","AreaChartNormalizedComponent__svg_g_9_Template","AreaChartNormalizedComponent__svg_g_9_Template__svg_g_mouseleave_0_listener","AreaChartNormalizedComponent__svg_g_9_Template__svg_g_hover_1_listener","AreaChartNormalizedComponent__svg_g_10__svg_g_1_Template","AreaChartNormalizedComponent__svg_g_10_Template","AreaChartNormalizedComponent__svg_g_10_Template__svg_g_onDomainChange_0_listener","_c25","AreaChartStackedComponent__svg_g_5_Template","AreaChartStackedComponent__svg_g_5_Template__svg_g_dimensionsChanged_0_listener","AreaChartStackedComponent__svg_g_6_Template","AreaChartStackedComponent__svg_g_6_Template__svg_g_dimensionsChanged_0_listener","AreaChartStackedComponent__svg_g_8_Template","AreaChartStackedComponent__svg_g_9__svg_g_2_Template","AreaChartStackedComponent__svg_g_9__svg_g_2_Template__svg_g_select_1_listener","AreaChartStackedComponent__svg_g_9__svg_g_2_Template__svg_g_activate_1_listener","AreaChartStackedComponent__svg_g_9__svg_g_2_Template__svg_g_deactivate_1_listener","AreaChartStackedComponent__svg_g_9_Template","AreaChartStackedComponent__svg_g_9_Template__svg_g_mouseleave_0_listener","AreaChartStackedComponent__svg_g_9_Template__svg_g_hover_1_listener","AreaChartStackedComponent__svg_g_10__svg_g_1_Template","AreaChartStackedComponent__svg_g_10_Template","AreaChartStackedComponent__svg_g_10_Template__svg_g_onDomainChange_0_listener","_c26","BarComponent__svg_defs_0_Template","_c27","_c28","SeriesHorizontal__svg_g_0_Template","SeriesHorizontal__svg_g_0_Template__svg_g_select_0_listener","click","SeriesHorizontal__svg_g_0_Template__svg_g_activate_0_listener","SeriesHorizontal__svg_g_0_Template__svg_g_deactivate_0_listener","bar_r2","Horizontal","roundEdges","ariaLabel","tooltipPlacement","tooltipType","tooltipText","noBarWhenZero","SeriesHorizontal__svg_g_1__svg_g_1_Template","_r11","SeriesHorizontal__svg_g_1__svg_g_1_Template__svg_g_dimensionsChanged_0_listener","i_r9","index","dataLabelWidthChanged","size","b_r8","total","dataLabelFormatting","SeriesHorizontal__svg_g_1_Template","barsForDataLabels","trackDataLabelBy","BarHorizontalComponent__svg_g_2_Template","BarHorizontalComponent__svg_g_2_Template__svg_g_dimensionsChanged_0_listener","BarHorizontalComponent__svg_g_3_Template","_r5","BarHorizontalComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener","dataLabelMaxWidth","negative","BarHorizontal2DComponent__svg_g_3_Template","BarHorizontal2DComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener","valueScale","BarHorizontal2DComponent__svg_g_4_Template","_r7","BarHorizontal2DComponent__svg_g_4_Template__svg_g_dimensionsChanged_0_listener","groupScale","BarHorizontal2DComponent__svg_g_5__svg_g_1_Template","_r12","BarHorizontal2DComponent__svg_g_5__svg_g_1_Template__svg_g_select_1_listener","group_r9","BarHorizontal2DComponent__svg_g_5__svg_g_1_Template__svg_g_activate_1_listener","ctx_r13","BarHorizontal2DComponent__svg_g_5__svg_g_1_Template__svg_g_deactivate_1_listener","BarHorizontal2DComponent__svg_g_5__svg_g_1_Template__svg_g_dataLabelWidthChanged_1_listener","index_r10","onDataLabelMaxWidthChanged","groupTransform","innerScale","series","showDataLabel","BarHorizontal2DComponent__svg_g_5_Template","BarHorizontal2DComponent__svg_g_6__svg_g_1_Template","_r20","BarHorizontal2DComponent__svg_g_6__svg_g_1_Template__svg_g_select_1_listener","group_r17","BarHorizontal2DComponent__svg_g_6__svg_g_1_Template__svg_g_activate_1_listener","BarHorizontal2DComponent__svg_g_6__svg_g_1_Template__svg_g_deactivate_1_listener","ctx_r22","BarHorizontal2DComponent__svg_g_6__svg_g_1_Template__svg_g_dataLabelWidthChanged_1_listener","index_r18","ctx_r23","BarHorizontal2DComponent__svg_g_6_Template","BarHorizontalNormalizedComponent__svg_g_2_Template","BarHorizontalNormalizedComponent__svg_g_2_Template__svg_g_dimensionsChanged_0_listener","BarHorizontalNormalizedComponent__svg_g_3_Template","BarHorizontalNormalizedComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener","BarHorizontalNormalizedComponent__svg_g_4__svg_g_1_Template","BarHorizontalNormalizedComponent__svg_g_4__svg_g_1_Template__svg_g_select_1_listener","BarHorizontalNormalizedComponent__svg_g_4__svg_g_1_Template__svg_g_activate_1_listener","BarHorizontalNormalizedComponent__svg_g_4__svg_g_1_Template__svg_g_deactivate_1_listener","barChartType","Normalized","BarHorizontalNormalizedComponent__svg_g_4_Template","BarHorizontalNormalizedComponent__svg_g_5__svg_g_1_Template","BarHorizontalNormalizedComponent__svg_g_5__svg_g_1_Template__svg_g_select_1_listener","group_r15","BarHorizontalNormalizedComponent__svg_g_5__svg_g_1_Template__svg_g_activate_1_listener","BarHorizontalNormalizedComponent__svg_g_5__svg_g_1_Template__svg_g_deactivate_1_listener","BarHorizontalNormalizedComponent__svg_g_5_Template","BarHorizontalStackedComponent__svg_g_2_Template","BarHorizontalStackedComponent__svg_g_2_Template__svg_g_dimensionsChanged_0_listener","BarHorizontalStackedComponent__svg_g_3_Template","BarHorizontalStackedComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener","BarHorizontalStackedComponent__svg_g_4__svg_g_1_Template","BarHorizontalStackedComponent__svg_g_4__svg_g_1_Template__svg_g_select_1_listener","BarHorizontalStackedComponent__svg_g_4__svg_g_1_Template__svg_g_activate_1_listener","BarHorizontalStackedComponent__svg_g_4__svg_g_1_Template__svg_g_deactivate_1_listener","BarHorizontalStackedComponent__svg_g_4__svg_g_1_Template__svg_g_dataLabelWidthChanged_1_listener","BarHorizontalStackedComponent__svg_g_4_Template","BarHorizontalStackedComponent__svg_g_5__svg_g_1_Template","BarHorizontalStackedComponent__svg_g_5__svg_g_1_Template__svg_g_select_1_listener","BarHorizontalStackedComponent__svg_g_5__svg_g_1_Template__svg_g_activate_1_listener","BarHorizontalStackedComponent__svg_g_5__svg_g_1_Template__svg_g_deactivate_1_listener","BarHorizontalStackedComponent__svg_g_5__svg_g_1_Template__svg_g_dataLabelWidthChanged_1_listener","BarHorizontalStackedComponent__svg_g_5_Template","_c29","SeriesVerticalComponent__svg_g_0__svg_g_1_Template","SeriesVerticalComponent__svg_g_0__svg_g_1_Template__svg_g_select_0_listener","SeriesVerticalComponent__svg_g_0__svg_g_1_Template__svg_g_activate_0_listener","SeriesVerticalComponent__svg_g_0__svg_g_1_Template__svg_g_deactivate_0_listener","bar_r4","SeriesVerticalComponent__svg_g_0_Template","bars","SeriesVerticalComponent__svg_g_1__svg_g_1_Template","SeriesVerticalComponent__svg_g_1__svg_g_1_Template__svg_g_select_0_listener","SeriesVerticalComponent__svg_g_1__svg_g_1_Template__svg_g_activate_0_listener","SeriesVerticalComponent__svg_g_1__svg_g_1_Template__svg_g_deactivate_0_listener","bar_r10","SeriesVerticalComponent__svg_g_1_Template","SeriesVerticalComponent__svg_g_2__svg_g_1_Template","_r19","SeriesVerticalComponent__svg_g_2__svg_g_1_Template__svg_g_dimensionsChanged_0_listener","i_r17","dataLabelHeightChanged","b_r16","SeriesVerticalComponent__svg_g_2_Template","BarVerticalComponent__svg_g_2_Template","BarVerticalComponent__svg_g_2_Template__svg_g_dimensionsChanged_0_listener","dataLabelMaxHeight","BarVerticalComponent__svg_g_3_Template","BarVerticalComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener","BarVertical2DComponent__svg_g_3_Template","BarVertical2DComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener","BarVertical2DComponent__svg_g_4_Template","BarVertical2DComponent__svg_g_4_Template__svg_g_dimensionsChanged_0_listener","BarVertical2DComponent__svg_g_5__svg_g_1_Template","BarVertical2DComponent__svg_g_5__svg_g_1_Template__svg_g_select_0_listener","BarVertical2DComponent__svg_g_5__svg_g_1_Template__svg_g_activate_0_listener","BarVertical2DComponent__svg_g_5__svg_g_1_Template__svg_g_deactivate_0_listener","BarVertical2DComponent__svg_g_5__svg_g_1_Template__svg_g_dataLabelHeightChanged_0_listener","onDataLabelMaxHeightChanged","BarVertical2DComponent__svg_g_5_Template","BarVertical2DComponent__svg_g_6__svg_g_1_Template","BarVertical2DComponent__svg_g_6__svg_g_1_Template__svg_g_select_0_listener","BarVertical2DComponent__svg_g_6__svg_g_1_Template__svg_g_activate_0_listener","BarVertical2DComponent__svg_g_6__svg_g_1_Template__svg_g_deactivate_0_listener","BarVertical2DComponent__svg_g_6__svg_g_1_Template__svg_g_dataLabelHeightChanged_0_listener","BarVertical2DComponent__svg_g_6_Template","BarVerticalNormalizedComponent__svg_g_2_Template","BarVerticalNormalizedComponent__svg_g_2_Template__svg_g_dimensionsChanged_0_listener","BarVerticalNormalizedComponent__svg_g_3_Template","BarVerticalNormalizedComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener","BarVerticalNormalizedComponent__svg_g_4__svg_g_1_Template","BarVerticalNormalizedComponent__svg_g_4__svg_g_1_Template__svg_g_select_1_listener","BarVerticalNormalizedComponent__svg_g_4__svg_g_1_Template__svg_g_activate_1_listener","BarVerticalNormalizedComponent__svg_g_4__svg_g_1_Template__svg_g_deactivate_1_listener","BarVerticalNormalizedComponent__svg_g_4_Template","BarVerticalNormalizedComponent__svg_g_5__svg_g_1_Template","BarVerticalNormalizedComponent__svg_g_5__svg_g_1_Template__svg_g_select_1_listener","BarVerticalNormalizedComponent__svg_g_5__svg_g_1_Template__svg_g_activate_1_listener","BarVerticalNormalizedComponent__svg_g_5__svg_g_1_Template__svg_g_deactivate_1_listener","BarVerticalNormalizedComponent__svg_g_5_Template","BarVerticalStackedComponent__svg_g_2_Template","BarVerticalStackedComponent__svg_g_2_Template__svg_g_dimensionsChanged_0_listener","BarVerticalStackedComponent__svg_g_3_Template","BarVerticalStackedComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener","BarVerticalStackedComponent__svg_g_4__svg_g_1_Template","BarVerticalStackedComponent__svg_g_4__svg_g_1_Template__svg_g_select_1_listener","BarVerticalStackedComponent__svg_g_4__svg_g_1_Template__svg_g_activate_1_listener","BarVerticalStackedComponent__svg_g_4__svg_g_1_Template__svg_g_deactivate_1_listener","BarVerticalStackedComponent__svg_g_4__svg_g_1_Template__svg_g_dataLabelHeightChanged_1_listener","BarVerticalStackedComponent__svg_g_4_Template","BarVerticalStackedComponent__svg_g_5__svg_g_1_Template","BarVerticalStackedComponent__svg_g_5__svg_g_1_Template__svg_g_select_1_listener","BarVerticalStackedComponent__svg_g_5__svg_g_1_Template__svg_g_activate_1_listener","BarVerticalStackedComponent__svg_g_5__svg_g_1_Template__svg_g_deactivate_1_listener","BarVerticalStackedComponent__svg_g_5__svg_g_1_Template__svg_g_dataLabelHeightChanged_1_listener","BarVerticalStackedComponent__svg_g_5_Template","_c30","BoxComponent__svg_g_1_Template","BarOrientation","BoxComponent__svg_line_8_Template","line_r2","i_r3","hideBar","v1","v2","strokeColor","medianLineWidth","whiskerStrokeWidth","maskLine","_c31","BoxChartComponent__svg_g_5_Template","BoxChartComponent__svg_g_5_Template__svg_g_activate_1_listener","BoxChartComponent__svg_g_5_Template__svg_g_deactivate_1_listener","BoxChartComponent__svg_g_5_Template__svg_g_select_1_listener","result_r1","strokeWidth","_c32","BubbleSeriesComponent__svg_g_0__svg_g_2_Template","BubbleSeriesComponent__svg_g_0__svg_g_2_Template__svg_g_select_0_listener","circle_r1","BubbleSeriesComponent__svg_g_0__svg_g_2_Template__svg_g_activate_0_listener","BubbleSeriesComponent__svg_g_0__svg_g_2_Template__svg_g_deactivate_0_listener","BubbleSeriesComponent__svg_g_0__svg_g_3_Template","_r14","BubbleSeriesComponent__svg_g_0__svg_g_3_Template__svg_g_select_0_listener","BubbleSeriesComponent__svg_g_0__svg_g_3_Template__svg_g_activate_0_listener","BubbleSeriesComponent__svg_g_0__svg_g_3_Template__svg_g_deactivate_0_listener","ctx_r17","BubbleSeriesComponent__svg_g_0_Template","BubbleChartComponent__svg_g_5_Template","BubbleChartComponent__svg_g_5_Template__svg_g_dimensionsChanged_0_listener","BubbleChartComponent__svg_g_6_Template","BubbleChartComponent__svg_g_6_Template__svg_g_dimensionsChanged_0_listener","BubbleChartComponent__svg_g_8__svg_g_1_Template","BubbleChartComponent__svg_g_8__svg_g_1_Template__svg_g_select_1_listener","BubbleChartComponent__svg_g_8__svg_g_1_Template__svg_g_activate_1_listener","BubbleChartComponent__svg_g_8__svg_g_1_Template__svg_g_deactivate_1_listener","rScale","xScaleType","yScaleType","BubbleChartComponent__svg_g_8_Template","clipPath","BubbleChartComponent__svg_g_9__svg_g_1_Template","BubbleChartComponent__svg_g_9__svg_g_1_Template__svg_g_select_1_listener","series_r15","BubbleChartComponent__svg_g_9__svg_g_1_Template__svg_g_activate_1_listener","BubbleChartComponent__svg_g_9__svg_g_1_Template__svg_g_deactivate_1_listener","BubbleChartComponent__svg_g_9_Template","_c33","HeatMapCellComponent__svg_defs_1_Template","_c34","_c35","a2","HeatCellSeriesComponent__svg_g_0_Template","HeatCellSeriesComponent__svg_g_0_Template__svg_g_select_0_listener","c_r1","cell","HeatCellSeriesComponent__svg_g_0_Template__svg_g_activate_0_listener","HeatCellSeriesComponent__svg_g_0_Template__svg_g_deactivate_0_listener","fill","ɵɵpureFunction3","HeatMapComponent__svg_g_2_Template","HeatMapComponent__svg_g_2_Template__svg_g_dimensionsChanged_0_listener","HeatMapComponent__svg_g_3_Template","HeatMapComponent__svg_g_3_Template__svg_g_dimensionsChanged_0_listener","HeatMapComponent__svg_rect_4_Template","rect_r7","rx","_c36","LineComponent__svg_g_0_Template","initialPath","stroke","LineComponent__svg_g_1_Template","_c37","LineSeriesComponent__svg_g_2_Template","LineSeriesComponent__svg_g_5_Template","isInactive","outerPath","hasGradient","gradientUrl","getColor","rangeFillOpacity","LineChartComponent__svg_g_5_Template","LineChartComponent__svg_g_5_Template__svg_g_dimensionsChanged_0_listener","LineChartComponent__svg_g_6_Template","_r9","LineChartComponent__svg_g_6_Template__svg_g_dimensionsChanged_0_listener","LineChartComponent__svg_g_8__svg_g_1_Template","hasRange","LineChartComponent__svg_g_8_Template","LineChartComponent__svg_g_9__svg_g_1_Template","series_r13","LineChartComponent__svg_g_9_Template","LineChartComponent__svg_g_10__svg_g_2_Template","LineChartComponent__svg_g_10__svg_g_2_Template__svg_g_select_1_listener","LineChartComponent__svg_g_10__svg_g_2_Template__svg_g_activate_1_listener","LineChartComponent__svg_g_10__svg_g_2_Template__svg_g_deactivate_1_listener","LineChartComponent__svg_g_10_Template","_r21","LineChartComponent__svg_g_10_Template__svg_g_mouseleave_0_listener","ctx_r20","LineChartComponent__svg_g_10_Template__svg_g_hover_1_listener","LineChartComponent__svg_g_11__svg_g_1_Template","series_r24","LineChartComponent__svg_g_11_Template","_r26","LineChartComponent__svg_g_11_Template__svg_g_onDomainChange_0_listener","ctx_r25","_c38","_c39","PolarSeriesComponent__svg_g_2_Template","seriesColor","PolarSeriesComponent__svg_g_4_Template","PolarSeriesComponent__svg_g_4_Template__svg_g_select_0_listener","circle_r2","PolarSeriesComponent__svg_g_4_Template__svg_g_activate_0_listener","PolarSeriesComponent__svg_g_4_Template__svg_g_deactivate_0_listener","inactive","circleRadius","PolarChartComponent__svg_g_4__svg_circle_1_Template","r_r7","PolarChartComponent__svg_g_4_Template","radiusTicks","PolarChartComponent__svg_g_5__svg_g_1_Template","tick_r9","outerRadius","labelTrim","labelTrimSize","PolarChartComponent__svg_g_5_Template","thetaTicks","PolarChartComponent__svg_g_6_Template","PolarChartComponent__svg_g_6_Template__svg_g_dimensionsChanged_0_listener","yAxisScale","yAxisDims","transformYAxis","PolarChartComponent__svg_g_7_Template","PolarChartComponent__svg_g_8__svg_g_1_Template","_r15","PolarChartComponent__svg_g_8__svg_g_1_Template__svg_g_select_1_listener","PolarChartComponent__svg_g_8__svg_g_1_Template__svg_g_activate_1_listener","PolarChartComponent__svg_g_8__svg_g_1_Template__svg_g_deactivate_1_listener","PolarChartComponent__svg_g_8_Template","transformPlot","PolarChartComponent__svg_g_9__svg_g_1_Template","PolarChartComponent__svg_g_9__svg_g_1_Template__svg_g_select_1_listener","PolarChartComponent__svg_g_9__svg_g_1_Template__svg_g_activate_1_listener","PolarChartComponent__svg_g_9__svg_g_1_Template__svg_g_deactivate_1_listener","series_r19","PolarChartComponent__svg_g_9_Template","_c40","PieArcComponent__svg_defs_1_Template","radialGradientId","startOpacity","_c41","PieSeriesComponent__svg_g_0__svg_g_1_Template","arc_r1","trimLabels","maxLabelLength","explodeSlices","PieSeriesComponent__svg_g_0_Template","PieSeriesComponent__svg_g_0_Template__svg_g_select_2_listener","PieSeriesComponent__svg_g_0_Template__svg_g_activate_2_listener","PieSeriesComponent__svg_g_0_Template__svg_g_deactivate_2_listener","PieSeriesComponent__svg_g_0_Template__svg_g_dblclick_2_listener","dblclick","labelVisible","startAngle","endAngle","innerRadius","getTooltipTitle","_c42","_c43","PieGridSeriesComponent__svg_g_1_Template","PieGridSeriesComponent__svg_g_1_Template__svg_g_select_0_listener","PieGridSeriesComponent__svg_g_1_Template__svg_g_activate_0_listener","PieGridSeriesComponent__svg_g_1_Template__svg_g_deactivate_0_listener","pointerEvents","PieGridComponent__svg_g_2__svg_text_2_Template","series_r1","percent","PieGridComponent__svg_g_2__svg_text_3_Template","PieGridComponent__svg_g_2__svg_text_6_Template","PieGridComponent__svg_g_2__svg_text_7_Template","ɵɵtextInterpolate2","_c44","PieGridComponent__svg_g_2_Template","PieGridComponent__svg_g_2_Template__svg_g_select_1_listener","PieGridComponent__svg_g_2_Template__svg_g_activate_1_listener","PieGridComponent__svg_g_2_Template__svg_g_deactivate_1_listener","_c45","_c46","CardComponent__svg_path_2_Template","bandColor","transformBand","bandPath","_c47","CardSeriesComponent__svg_rect_0_Template","c_r2","emptyColor","CardSeriesComponent__svg_g_1_Template","CardSeriesComponent__svg_g_1_Template__svg_g_select_0_listener","c_r3","textColor","medianSize","labelFormatting","_c48","TreeMapCellComponent__svg_defs_1_Template","TreeMapCellComponent__svg_foreignObject_3__xhtml_span_4_Template","TreeMapCellComponent__svg_foreignObject_3__xhtml_span_5_Template","formattedValue","TreeMapCellComponent__svg_foreignObject_3_Template","getTextColor","_c49","TreeMapCellSeriesComponent__svg_g_0_Template","TreeMapCellSeriesComponent__svg_g_0_Template__svg_g_select_0_listener","_c50","_c51","LinearGaugeComponent__svg_line_4_Template","transformLine","units","LinearGaugeComponent__svg_line_5_Template","_c52","_c53","_c54","GaugeAxisComponent__svg_g_1_Template","GaugeAxisComponent__svg_g_2_Template","text","GaugeAxisComponent__svg_g_3_Template","GaugeComponent__svg_g_2_Template","GaugeComponent__svg_g_2_Template__svg_g_select_1_listener","GaugeComponent__svg_g_2_Template__svg_g_activate_1_listener","GaugeComponent__svg_g_2_Template__svg_g_deactivate_1_listener","arc_r3","rotation","backgroundArc","valueArc","cornerRadius","GaugeComponent__svg_g_3_Template","bigSegments","smallSegments","angleSpan","axisTickFormatting","GaugeComponent__svg_text_4_Template","displayValue","throttle","func","wait","options","args","result","timeout","previous","later","leading","Date","apply","now","remaining","arguments","clearTimeout","trailing","setTimeout","throttleable","duration","innerDecorator","target","key","descriptor","configurable","enumerable","get","getter","Object","defineProperty","PlacementTypes","caretOffset","verticalPosition","elDimensions","popoverDimensions","alignment","top","Center","horizontalPosition","left","PositionHelper","calculateVerticalAlignment","window","innerHeight","calculateVerticalCaret","caretDimensions","popoverPosition","calculateHorizontalAlignment","innerWidth","calculateHorizontalCaret","shouldFlip","placement","spacing","flip","positionCaret","elmDim","hostDim","positionContent","determinePlacement","TooltipContentComponent","constructor","element","renderer","platformId","cssClasses","clz","cssClass","ngAfterViewInit","bind","nativeElm","nativeElement","host","getBoundingClientRect","checkFlip","showCaret","addClass","setStyle","caretElm","onWindowResize","ɵfac","TooltipContentComponent_Factory","t","ɵɵdirectiveInject","ElementRef","Renderer2","ɵcmp","ɵɵdefineComponent","selectors","viewQuery","TooltipContentComponent_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","hostVars","hostBindings","TooltipContentComponent_HostBindings","TooltipContentComponent_resize_HostBindingHandler","ɵɵresolveWindow","ɵɵclassMap","inputs","decls","vars","consts","TooltipContentComponent_Template","ɵɵclassMapInterpolate1","directives","NgIf","NgTemplateOutlet","styles","encapsulation","prototype","ngDevMode","ɵsetClassMetadata","selector","None","decorators","InjectionRegisteryService","injectionService","defaults","components","Map","getByType","create","bindings","createByType","assignDefaults","component","injectComponent","register","destroy","instance","compsByType","componentType","length","idx","indexOf","splice","destroyAll","destroyByType","comps","i","appendComponent","outputs","has","set","types","push","isViewContainerRef","InjectionService","applicationRef","componentFactoryResolver","injector","setGlobalRootViewContainer","container","globalRootViewContainer","getRootViewContainer","_container","Error","setRootViewContainer","getComponentRootNode","hostView","rootNodes","location","getRootViewContainerNode","projectComponentBindings","bindingKeys","getOwnPropertyNames","bindingName","eventKeys","eventName","componentClass","appendLocation","portalHost","portal","componentRef","attach","InjectionService_Factory","ɵɵinject","ApplicationRef","ComponentFactoryResolver","Injector","ɵprov","ɵɵdefineInjectable","token","factory","TooltipService","TooltipService_Factory","LegendType","ScaleType","ScaleLegendComponent","horizontal","ngOnChanges","changes","gradientValues","gradientString","direction","splits","pairs","reverse","forEach","c","Math","round","join","ScaleLegendComponent_Factory","valueRange","features","ɵɵNgOnChangesFeature","ScaleLegendComponent_Template","changeDetection","OnPush","formatLabel","toLocaleDateString","escapeLabel","replace","match","LegendEntryComponent","toggle","trimmedLabel","onMouseEnter","onMouseLeave","LegendEntryComponent_Factory","LegendEntryComponent_HostBindings","LegendEntryComponent_mouseenter_HostBindingHandler","LegendEntryComponent_mouseleave_HostBindingHandler","LegendEntryComponent_Template","LegendEntryComponent_Template_span_click_0_listener","LegendEntryComponent_Template_span_click_1_listener","LegendComponent","cd","labelActivate","labelDeactivate","legendEntries","update","markForCheck","getLegendEntries","items","findIndex","entry","item","find","d","LegendComponent_Factory","ChangeDetectorRef","LegendComponent_Template","NgForOf","ChartComponent","showLegend","legendColumns","legendType","getLegendType","ScaleLegend","chartColumns","chartWidth","floor","Linear","Legend","ChartComponent_Factory","ɵɵProvidersFeature","ngContentSelectors","ChartComponent_Template","ɵɵprojectionDef","ɵɵprojection","providers","VisibilityObserver","zone","visible","isVisible","runCheck","onVisibilityChange","run","check","offsetHeight","offsetWidth","runOutsideAngular","VisibilityObserver_Factory","NgZone","ɵdir","ɵɵdefineDirective","isDate","toString","call","isNumber","BaseChartComponent","chartElement","schemeType","Ordinal","ngOnInit","bindWindowResizeEvent","visibilityObserver","subscribe","ngOnDestroy","unbindEvents","unsubscribe","cloneData","getContainerDims","hostElem","parentNode","formatDates","g","j","resizeSubscription","source","subscription","pipe","e","copy","seriesItem","seriesItemCopy","assign","JSON","parse","stringify","BaseChartComponent_Factory","BaseChartComponent_Template","AxisLabelComponent","textHeight","margin","AxisLabelComponent_Factory","attrs","AxisLabelComponent_Template","trimLabel","s","trim","slice","reduceTicks","maxTicks","reduced","modulus","TextAnchor","XAxisTicksComponent","dimensionsChanged","verticalSpacing","rotateLabels","innerTickSize","outerTickSize","tickPadding","Middle","maxTicksLength","maxAllowedLength","approxHeight","updateDims","parseInt","ticksElement","scale","getTicks","angle","getRotationAngle","adjustedScale","bandwidth","End","tick","tickLength","len","charWidth","wordWidth","baseWidth","maxBaseWidth","cos","PI","abs","sin","getMaxTicks","maxScaleTicks","tickValues","tickWidth","XAxisTicksComponent_Factory","XAxisTicksComponent_Query","XAxisTicksComponent_Template","XAxisComponent","xAxisOffset","xAxisClassName","padding","xAxisTickCount","newLabelOffset","XAxisComponent_Factory","XAxisComponent_Query","ticksComponent","showLabel","XAxisComponent_Template","roundedRect","w","h","r","tl","tr","bl","br","retval","YAxisTicksComponent","referenceLineLength","getApproximateAxisWidth","sign","tickSpacing","setReferencelines","y2","x2","Start","refMin","map","refMax","tickHeight","maxChars","YAxisTicksComponent_Factory","YAxisTicksComponent_Query","YAxisTicksComponent_Template","YAxisComponent","yAxisOffset","yAxisClassName","yAxisTickCount","YAxisComponent_Factory","YAxisComponent_Query","YAxisComponent_Template","AxesModule","AxesModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","declarations","exports","StyleTypes","ShowTypes","TooltipDirective","tooltipService","viewContainerRef","tooltipCssClass","tooltipAppendToBody","tooltipSpacing","tooltipShowCaret","tooltipAlignment","popover","tooltipCloseOnClickOutside","tooltipCloseOnMouseLeave","tooltipHideTimeout","tooltipShowTimeout","tooltipShowEvent","all","tooltipImmediateExit","show","hide","listensForFocus","focus","listensForHover","mouseover","hideTooltip","onFocus","showTooltip","onBlur","contentDom","contains","onMouseClick","immediate","time","navigator","userAgent","createBoundOptions","addHideListeners","mouseEnterContentEvent","listen","mouseLeaveContentEvent","documentClickEvent","event","destroyFn","tooltipTitle","tooltipContext","TooltipDirective_Factory","ViewContainerRef","TooltipDirective_HostBindings","TooltipDirective_focusin_HostBindingHandler","TooltipDirective_blur_HostBindingHandler","TooltipDirective_mouseenter_HostBindingHandler","TooltipDirective_mouseleave_HostBindingHandler","TooltipDirective_click_HostBindingHandler","TooltipModule","TooltipModule_Factory","entryComponents","cache","id","newId","random","pow","SvgLinearGradientComponent","SvgLinearGradientComponent_Factory","stops","SvgLinearGradientComponent_Template","CircleComponent","Array","isArray","CircleComponent_Factory","CircleComponent_HostBindings","CircleComponent_click_HostBindingHandler","CircleComponent_mouseenter_HostBindingHandler","CircleComponent_mouseleave_HostBindingHandler","circleOpacity","CircleComponent_Template","SeriesType","CircleSeriesComponent","Standard","getActiveCircle","indexActiveDataPoint","visibleValue","mapDataPointToCircle","tooltipLabel","Time","Number","d1","getGradientStops","getTooltipMinMaxText","CircleSeriesComponent_Factory","CircleSeriesComponent_Template","animation","GridPanelComponent","GridPanelComponent_Factory","GridPanelComponent_Template","ClassEnum","GridPanelSeriesComponent","gridPanels","getGridPanels","className","Odd","positionIndex","step","Even","paddingInner","GridPanelSeriesComponent_Factory","GridPanelSeriesComponent_Template","SvgRadialGradientComponent","endOpacity","stopsInput","stopsDefault","SvgRadialGradientComponent_Factory","SvgRadialGradientComponent_Template","AreaComponent","animationsLoaded","loadAnimation","getGradient","updatePathEl","areaPath","startingPath","node","attr","path","AreaComponent_Factory","AreaComponent_Template","easeOutExpo","b","count","countFrom","countTo","countDecimals","countDuration","callback","startVal","endVal","countDown","decimals","dec","startTime","runCount","timestamp","frameVal","progress","finished","requestAnimationFrame","val","decimalChecker","CountUpDirective","countPrefix","countSuffix","countChange","countFinish","_countDecimals","_countTo","_countFrom","parseFloat","start","cancelAnimationFrame","animationReq","CountUpDirective_Factory","CountUpDirective_Template","root","global","MouseEvent","createMouseEvent","bubbles","cancelable","document","createEvent","initEvent","TooltipArea","anchorOpacity","anchorPos","anchorValues","showPercentage","hover","getValues","xVal","group","groupName","d0","toFixed","v","mouseMove","xPos","pageX","closestIndex","findClosestPointIndex","closestPoint","lastAnchorPos","ev","tooltipAnchor","dispatchEvent","minIndex","maxIndex","minDiff","MAX_VALUE","currentIndex","currentElement","curDiff","tooltipItem","TooltipArea_Factory","TooltipArea_Query","TooltipArea_Template","TooltipArea_Template__svg_rect_mousemove_1_listener","TooltipArea_Template__svg_rect_mouseleave_1_listener","ɵɵtemplateRefExtractor","_r0","ɵɵreference","static","Timeline","onDomainChange","initialized","addBrush","getDims","offsetY","xDomain","getXDomain","getXScale","brush","updateBrush","filterId","filter","values","includes","extent","on","selection","newSelection","newDomain","invert","Timeline_Factory","autoScale","Timeline_Template","AdvancedLegendComponent","legendItems","percentageFormatting","getTotal","reduce","sum","getLegendItems","origialLabel","AdvancedLegendComponent_Factory","AdvancedLegendComponent_Template","COMPONENTS","ChartCommonModule","ChartCommonModule_Factory","calculateViewDimensions","margins","showXAxis","showYAxis","xAxisHeight","yAxisWidth","showXLabel","showYLabel","legendPosition","columns","xOffset","chartHeight","colorSets","selectable","ColorHelper","cs","colorDomain","generateColorScheme","colorScale","Quantile","points","found","mapping","toLowerCase","getLinearGradientStops","colorValueScale","endColor","startColor","currentVal","originalOffset","getUniqueXDomainValues","valueSet","Set","add","from","getScaleType","checkDateType","allDates","every","allNumbers","getXDomainArray","xScaleMin","xScaleMax","mappedValues","sort","a","aDate","getTime","bDate","sortLinear","property","sortByDomain","aVal","bVal","aIdx","bIdx","sortByTime","AreaSeriesComponent","stacked","normalized","updateGradient","currentArea","startingArea","xProperty","y0","d0values","d1values","AreaSeriesComponent_Factory","AreaSeriesComponent_Template","AreaChartComponent","legendTitle","xAxis","yAxis","timeline","roundDomains","timelinePadding","filteredDomain","yDomain","getYDomain","seriesDomain","getSeriesDomain","getYScale","updateTimeline","setColors","getLegendOptions","clipPathId","timelineXDomain","yScaleMin","yScaleMax","nice","date","num","deactivateAll","opts","entries","ɵAreaChartComponent_BaseFactory","AreaChartComponent_Factory","ɵɵgetInheritedFactory","contentQueries","AreaChartComponent_ContentQueries","dirIndex","ɵɵcontentQuery","AreaChartComponent_HostBindings","AreaChartComponent_mouseleave_HostBindingHandler","ɵɵInheritDefinitionFeature","AreaChartComponent_Template","AreaChartComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","AreaChartComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener","AreaChartComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener","AreaChartNormalizedComponent","valueOf","ɵAreaChartNormalizedComponent_BaseFactory","AreaChartNormalizedComponent_Factory","AreaChartNormalizedComponent_ContentQueries","AreaChartNormalizedComponent_HostBindings","AreaChartNormalizedComponent_mouseleave_HostBindingHandler","AreaChartNormalizedComponent_Template","AreaChartNormalizedComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","AreaChartNormalizedComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener","AreaChartNormalizedComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener","AreaChartStackedComponent","ɵAreaChartStackedComponent_BaseFactory","AreaChartStackedComponent_Factory","AreaChartStackedComponent_ContentQueries","AreaChartStackedComponent_HostBindings","AreaChartStackedComponent_mouseleave_HostBindingHandler","AreaChartStackedComponent_Template","AreaChartStackedComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","AreaChartStackedComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener","AreaChartStackedComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener","AreaChartModule","AreaChartModule_Factory","BarComponent","checkToHideBar","getStartingPath","getPath","getStartOpacity","getRadius","edges","BarComponent_Factory","BarComponent_HostBindings","BarComponent_mouseenter_HostBindingHandler","BarComponent_mouseleave_HostBindingHandler","BarComponent_Template","BarComponent_Template__svg_path_click_1_listener","BarChartType","D0Types","BarLabelComponent","horizontalPadding","verticalPadding","getSize","formatedValue","barX","barWidth","barY","barHeight","BarLabelComponent_Factory","BarLabelComponent_Template","SeriesHorizontal","updateTooltipSettings","positive","d0Type","getLabel","bar","offset0","offset1","updateDataLabels","section","totalPositive","totalNegative","active","dataItem","barLabel","SeriesHorizontal_Factory","SeriesHorizontal_Template","BarHorizontalComponent","barPadding","rangeRound","fromLegend","ɵBarHorizontalComponent_BaseFactory","BarHorizontalComponent_Factory","BarHorizontalComponent_ContentQueries","BarHorizontalComponent_Template","BarHorizontalComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","BarHorizontalComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener","BarHorizontalComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener","BarHorizontalComponent_Template__svg_g_select_4_listener","BarHorizontalComponent_Template__svg_g_activate_4_listener","BarHorizontalComponent_Template__svg_g_deactivate_4_listener","BarHorizontalComponent_Template__svg_g_dataLabelWidthChanged_4_listener","BarHorizontal2DComponent","groupPadding","groupDomain","getGroupDomain","innerDomain","getInnerDomain","valueDomain","getValueDomain","getGroupScale","getInnerScale","getValueScale","paddingOuter","groupIndex","flat","ɵBarHorizontal2DComponent_BaseFactory","BarHorizontal2DComponent_Factory","BarHorizontal2DComponent_ContentQueries","BarHorizontal2DComponent_Template","BarHorizontal2DComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener","BarHorizontal2DComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener","BarHorizontal2DComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","BarHorizontalNormalizedComponent","ɵBarHorizontalNormalizedComponent_BaseFactory","BarHorizontalNormalizedComponent_Factory","BarHorizontalNormalizedComponent_ContentQueries","BarHorizontalNormalizedComponent_Template","BarHorizontalNormalizedComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener","BarHorizontalNormalizedComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener","BarHorizontalNormalizedComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","BarHorizontalStackedComponent","smallest","biggest","smallestSum","biggestSum","ɵBarHorizontalStackedComponent_BaseFactory","BarHorizontalStackedComponent_Factory","BarHorizontalStackedComponent_ContentQueries","BarHorizontalStackedComponent_Template","BarHorizontalStackedComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener","BarHorizontalStackedComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener","BarHorizontalStackedComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","SeriesVerticalComponent","SeriesVerticalComponent_Factory","SeriesVerticalComponent_Template","BarVerticalComponent","some","isNaN","ɵBarVerticalComponent_BaseFactory","BarVerticalComponent_Factory","BarVerticalComponent_ContentQueries","BarVerticalComponent_Template","BarVerticalComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","BarVerticalComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener","BarVerticalComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener","BarVerticalComponent_Template__svg_g_activate_4_listener","BarVerticalComponent_Template__svg_g_deactivate_4_listener","BarVerticalComponent_Template__svg_g_select_4_listener","BarVerticalComponent_Template__svg_g_dataLabelHeightChanged_4_listener","BarVertical2DComponent","ɵBarVertical2DComponent_BaseFactory","BarVertical2DComponent_Factory","BarVertical2DComponent_ContentQueries","BarVertical2DComponent_Template","BarVertical2DComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener","BarVertical2DComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener","BarVertical2DComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","BarVerticalNormalizedComponent","ɵBarVerticalNormalizedComponent_BaseFactory","BarVerticalNormalizedComponent_Factory","BarVerticalNormalizedComponent_ContentQueries","BarVerticalNormalizedComponent_Template","BarVerticalNormalizedComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener","BarVerticalNormalizedComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener","BarVerticalNormalizedComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","BarVerticalStackedComponent","ɵBarVerticalStackedComponent_BaseFactory","BarVerticalStackedComponent_Factory","BarVerticalStackedComponent_ContentQueries","BarVerticalStackedComponent_Template","BarVerticalStackedComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener","BarVerticalStackedComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener","BarVerticalStackedComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","BarChartModule","BarChartModule_Factory","cloneDeep","BoxComponent","boxStrokeWidth","updateLineEl","maskLineId","boxPath","oldPath","oldLineCoordinates","getStartingLineCoordinates","nodeBar","selectAll","ease","attrTween","pathTween","lineEl","lineCoordinates","_","lineTween","nodeLineEl","baseVal","precision","path0","path1","cloneNode","setAttribute","n0","getTotalLength","n1","distances","dt","p0","getPointAtLength","p1","p","BoxComponent_Factory","BoxComponent_HostBindings","BoxComponent_mouseenter_HostBindingHandler","BoxComponent_mouseleave_HostBindingHandler","BoxComponent_Template","BoxComponent_Template__svg_path_click_7_listener","BoxSeriesComponent","counts","mappedCounts","serie","whiskers","groupCounts","quartiles","getBoxQuantiles","getLinesCoordinates","box","formattedTooltipLabel","inputData","commonX","offsetX","whiskerLineWidth","whiskerZero","whiskerOne","median","topLine","medianLine","bottomLine","verticalLine","BoxSeriesComponent_Factory","BoxSeriesComponent_Template","BoxSeriesComponent_Template__svg_g_select_0_listener","BoxSeriesComponent_Template__svg_g_activate_0_listener","BoxSeriesComponent_Template__svg_g_deactivate_0_listener","BoxChartComponent","setScales","getUniqueBoxChartXDomainValues","legendOpts","ɵBoxChartComponent_BaseFactory","BoxChartComponent_Factory","BoxChartComponent_ContentQueries","legendOptionsConfig","BoxChartComponent_Template","BoxChartComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","BoxChartComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener","BoxChartComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener","BoxChartComponent_Template__svg_g_dimensionsChanged_2_listener","BoxChartComponent_Template__svg_g_dimensionsChanged_3_listener","BoxChartModule","BoxChartModule_Factory","getDomain","minVal","maxVal","getScale","BubbleSeriesComponent","circles","getCircles","hasRadius","hasTooltipLabel","hasSeriesName","radiusValue","BubbleSeriesComponent_Factory","BubbleSeriesComponent_Template","BubbleChartComponent","maxRadius","minRadius","bubblePadding","rDomain","getRDomain","getRScale","getBubblePadding","yMin","xMin","yMax","xMax","Infinity","ɵBubbleChartComponent_BaseFactory","BubbleChartComponent_Factory","BubbleChartComponent_ContentQueries","BubbleChartComponent_HostBindings","BubbleChartComponent_mouseleave_HostBindingHandler","BubbleChartComponent_Template","BubbleChartComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","BubbleChartComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener","BubbleChartComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener","BubbleChartComponent_Template__svg_rect_mouseenter_7_listener","BubbleChartModule","BubbleChartModule_Factory","HeatMapCellComponent","animateToCurrentForm","HeatMapCellComponent_Factory","HeatMapCellComponent_HostBindings","HeatMapCellComponent_mouseenter_HostBindingHandler","HeatMapCellComponent_mouseleave_HostBindingHandler","HeatMapCellComponent_Template","HeatMapCellComponent_Template__svg_rect_click_2_listener","HeatCellSeriesComponent","cells","getCells","row","HeatCellSeriesComponent_Factory","HeatCellSeriesComponent_Template","HeatMapComponent","innerPadding","rects","getRects","getDimension","N","L","split","f","yVal","ɵHeatMapComponent_BaseFactory","HeatMapComponent_Factory","HeatMapComponent_ContentQueries","HeatMapComponent_Template","HeatMapComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","HeatMapComponent_Template__svg_g_select_5_listener","HeatMapComponent_Template__svg_g_activate_5_listener","HeatMapComponent_Template__svg_g_deactivate_5_listener","HeatMapModule","HeatMapModule_Factory","LineComponent","LineComponent_Factory","LineComponent_Template","strokeDasharray","strokeDashoffset","LineSeriesComponent","updateGradients","sortData","lineGen","getLineGenerator","areaGen","getAreaGenerator","getRangeGenerator","areaGradientStops","LineSeriesComponent_Factory","LineSeriesComponent_Template","LineChartComponent","ɵLineChartComponent_BaseFactory","LineChartComponent_Factory","LineChartComponent_ContentQueries","LineChartComponent_HostBindings","LineChartComponent_mouseleave_HostBindingHandler","LineChartComponent_Template","LineChartComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","LineChartComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener","LineChartComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener","LineChartModule","LineChartModule_Factory","PieLabelComponent","setTransforms","styleTransform","textX","textY","attrTransform","textTransition","isIE","test","startRadius","innerArc","innerPos","centroid","pos","outerPos","midAngle","PieLabelComponent_Factory","PieLabelComponent_Template","PolarSeriesComponent","linearScaleType","getAngle","cData","defaultTooltipText","PolarSeriesComponent_Factory","PolarSeriesComponent_Template","twoPI","PolarChartComponent","showSeriesOnHover","yAxisMinScale","setDims","setTicks","halfWidth","halfHeight","yOffset","xValues","getXValues","dd","startPos","minDistance","o","getYValues","ɵPolarChartComponent_BaseFactory","PolarChartComponent_Factory","PolarChartComponent_ContentQueries","PolarChartComponent_Template","PolarChartComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","PolarChartComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener","PolarChartComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener","PieArcComponent","getPointerEvents","calc","calculateArc","updateAnimation","_current","copyOfD","interpolater","_timeout","onDblClick","preventDefault","stopPropagation","nativeEvent","PieArcComponent_Factory","PieArcComponent_Template","PieArcComponent_Template__svg_path_click_2_listener","PieArcComponent_Template__svg_path_dblclick_2_listener","PieArcComponent_Template__svg_path_mouseenter_2_listener","PieArcComponent_Template__svg_path_mouseleave_2_listener","PieSeriesComponent","pieGenerator","arcData","calculateLabelPositions","outerArc","factor","pieData","labelPositions","myArc","showLabels","PieSeriesComponent_Factory","PieSeriesComponent_Template","AdvancedPieChartComponent","ɵAdvancedPieChartComponent_BaseFactory","AdvancedPieChartComponent_Factory","AdvancedPieChartComponent_ContentQueries","nameFormatting","AdvancedPieChartComponent_Template","AdvancedPieChartComponent_Template__svg_g_select_4_listener","AdvancedPieChartComponent_Template__svg_g_activate_4_listener","AdvancedPieChartComponent_Template__svg_g_deactivate_4_listener","AdvancedPieChartComponent_Template_ngx_charts_advanced_legend_select_6_listener","AdvancedPieChartComponent_Template_ngx_charts_advanced_legend_activate_6_listener","AdvancedPieChartComponent_Template_ngx_charts_advanced_legend_deactivate_6_listener","PieChartComponent","labels","doughnut","arcWidth","hasNoOptionalMarginsSet","translation","ɵPieChartComponent_BaseFactory","PieChartComponent_Factory","PieChartComponent_ContentQueries","PieChartComponent_Template","PieChartComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener","PieChartComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener","PieChartComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","PieChartComponent_Template__svg_g_dblclick_2_listener","PieChartComponent_Template__svg_g_select_2_listener","PieChartComponent_Template__svg_g_activate_2_listener","PieChartComponent_Template__svg_g_deactivate_2_listener","gridSize","minWidth","rows","cols","ceil","gridLayout","designatedTotal","res","cardWidth","cardHeight","extra","PieGridSeriesComponent","layout","arcs","getArcs","other","PieGridSeriesComponent_Factory","PieGridSeriesComponent_Template","PieGridComponent","getSeries","baselineLabelHeight","yPos","ɵPieGridComponent_BaseFactory","PieGridComponent_Factory","PieGridComponent_ContentQueries","PieGridComponent_Template","PieChartModule","PieChartModule_Factory","PolarChartModule","PolarChartModule_Factory","calculateTextWidth","fontFamilyKey","defaultWidth","acc","curr","VERDANA_FONT_WIDTHS_16_PX","A","B","C","D","E","F","G","H","I","J","K","M","O","P","Q","R","S","T","U","V","W","X","Y","Z","k","l","m","n","q","u","z","$","CardComponent","textFontSize","bandHeight","textPadding","labelFontSize","scaleTextSSR","hasValue","card","textWidth","cardData","paddedValue","setPadding","scaleText","startCount","repeat","decs","textEl","availableWidth","availableHeight","resizeScale","CardComponent_Factory","CardComponent_Query","CardComponent_Template","CardComponent_Template__svg_g_click_0_listener","hexToRgb","rgb","invertColor","yiq","depth","shadeRGBColor","CardSeriesComponent","sortedLengths","cards","getCards","emptySlots","yPadding","xPadding","valueColor","cardColor","CardSeriesComponent_Factory","CardSeriesComponent_Template","NumberCardComponent","clickable","observers","ɵNumberCardComponent_BaseFactory","NumberCardComponent_Factory","NumberCardComponent_Template","NumberCardComponent_Template__svg_g_select_2_listener","NumberCardModule","NumberCardModule_Factory","TreeMapCellComponent","cellData","TreeMapCellComponent_Factory","TreeMapCellComponent_Template","TreeMapCellComponent_Template__svg_rect_click_2_listener","TreeMapCellSeriesComponent","children","x0","TreeMapCellSeriesComponent_Factory","TreeMapCellSeriesComponent_Template","TreeMapComponent","rootNode","isRoot","parentId","ɵTreeMapComponent_BaseFactory","TreeMapComponent_Factory","TreeMapComponent_ContentQueries","TreeMapComponent_Template","TreeMapComponent_Template__svg_g_select_2_listener","TreeMapModule","TreeMapModule_Factory","ElementType","LinearGaugeComponent","valueResizeScale","unitsResizeScale","valueTextTransform","valueTranslate","unitsTextTransform","unitsTranslate","Value","Units","hasPreviousValue","previousValue","getDisplayValue","el","valueTextEl","unitsTextEl","oldScale","resizeScaleWidth","resizeScaleHeight","ɵLinearGaugeComponent_BaseFactory","LinearGaugeComponent_Factory","LinearGaugeComponent_Query","LinearGaugeComponent_Template","LinearGaugeComponent_Template_ngx_charts_chart_click_0_listener","ɵɵpureFunction0","GaugeArcComponent","GaugeArcComponent_Factory","GaugeArcComponent_Template","GaugeArcComponent_Template__svg_g_select_1_listener","GaugeArcComponent_Template__svg_g_activate_1_listener","GaugeArcComponent_Template__svg_g_deactivate_1_listener","GaugeAxisComponent","rotate","rotationAngle","bigTickSegment","smallTickSegment","big","small","startDistance","textDist","angleDeg","getTextAnchor","skip","getTickPath","smallAngleDeg","smallAngle","lineGenerator","GaugeAxisComponent_Factory","GaugeAxisComponent_Template","GaugeComponent","showAxis","showText","availableRadius","radiusPerArc","textRadius","dataMin","dataMax","textValue","availableSpace","ɵGaugeComponent_BaseFactory","GaugeComponent_Factory","GaugeComponent_ContentQueries","GaugeComponent_Query","GaugeComponent_Template","GaugeComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","GaugeComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener","GaugeComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener","GaugeModule","GaugeModule_Factory","ngxChartsPolyfills","SVGElement","HTMLDivElement","NgxChartsModule","NgxChartsModule_Factory","fieldType","groupByType","formatter"],"sources":["C:/Users/User/OneDrive/Desktop/ADL/to copy from/OnTargetAndroid/node_modules/@swimlane/ngx-charts/fesm2020/swimlane-ngx-charts.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { PLATFORM_ID, Component, ViewEncapsulation, Inject, Input, ViewChild, HostBinding, HostListener, Injectable, ChangeDetectionStrategy, EventEmitter, Output, Directive, NgModule, ContentChild } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { isPlatformBrowser, isPlatformServer, CommonModule } from '@angular/common';\nimport { __decorate } from 'tslib';\nimport { DomPortalOutlet, ComponentPortal } from '@angular/cdk/portal';\nimport { fromEvent } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { trigger, transition, style, animate } from '@angular/animations';\nimport { select } from 'd3-selection';\nimport { brushX } from 'd3-brush';\nimport { scaleTime, scaleLinear, scalePoint, scaleOrdinal, scaleQuantile, scaleBand } from 'd3-scale';\nimport { area, curveLinear, line, arc, lineRadial, curveCardinalClosed, pie } from 'd3-shape';\nimport { range, min, max, quantile } from 'd3-array';\nimport { interpolate } from 'd3-interpolate';\nimport { easeSinInOut } from 'd3-ease';\nimport rfdc from 'rfdc';\nimport { format } from 'd3-format';\nimport * as d3_color from 'd3-color';\nimport { treemap, stratify } from 'd3-hierarchy';\nimport { timeFormat } from 'd3-time-format';\n\n/**\n * Throttle a function\n *\n */\nfunction throttle(func, wait, options) {\n    options = options || {};\n    let context;\n    let args;\n    let result;\n    let timeout = null;\n    let previous = 0;\n    function later() {\n        previous = options.leading === false ? 0 : +new Date();\n        timeout = null;\n        result = func.apply(context, args);\n    }\n    return function () {\n        const now = +new Date();\n        if (!previous && options.leading === false) {\n            previous = now;\n        }\n        const remaining = wait - (now - previous);\n        context = this;\n        // eslint-disable-next-line prefer-rest-params\n        args = arguments;\n        if (remaining <= 0) {\n            clearTimeout(timeout);\n            timeout = null;\n            previous = now;\n            result = func.apply(context, args);\n        }\n        else if (!timeout && options.trailing !== false) {\n            timeout = setTimeout(later, remaining);\n        }\n        return result;\n    };\n}\n/**\n * Throttle decorator\n *\n *  class MyClass {\n *    throttleable(10)\n *    myFn() { ... }\n *  }\n */\nfunction throttleable(duration, options) {\n    return function innerDecorator(target, key, descriptor) {\n        return {\n            configurable: true,\n            enumerable: descriptor.enumerable,\n            get: function getter() {\n                Object.defineProperty(this, key, {\n                    configurable: true,\n                    enumerable: descriptor.enumerable,\n                    value: throttle(descriptor.value, duration, options)\n                });\n                return this[key];\n            }\n        };\n    };\n}\n\nvar PlacementTypes;\n(function (PlacementTypes) {\n    PlacementTypes[\"Top\"] = \"top\";\n    PlacementTypes[\"Bottom\"] = \"bottom\";\n    PlacementTypes[\"Left\"] = \"left\";\n    PlacementTypes[\"Right\"] = \"right\";\n    PlacementTypes[\"Center\"] = \"center\";\n})(PlacementTypes || (PlacementTypes = {}));\n\nconst caretOffset = 7;\nfunction verticalPosition(elDimensions, popoverDimensions, alignment) {\n    if (alignment === PlacementTypes.Top) {\n        return elDimensions.top - caretOffset;\n    }\n    if (alignment === PlacementTypes.Bottom) {\n        return elDimensions.top + elDimensions.height - popoverDimensions.height + caretOffset;\n    }\n    if (alignment === PlacementTypes.Center) {\n        return elDimensions.top + elDimensions.height / 2 - popoverDimensions.height / 2;\n    }\n    return undefined;\n}\nfunction horizontalPosition(elDimensions, popoverDimensions, alignment) {\n    if (alignment === PlacementTypes.Left) {\n        return elDimensions.left - caretOffset;\n    }\n    if (alignment === PlacementTypes.Right) {\n        return elDimensions.left + elDimensions.width - popoverDimensions.width + caretOffset;\n    }\n    if (alignment === PlacementTypes.Center) {\n        return elDimensions.left + elDimensions.width / 2 - popoverDimensions.width / 2;\n    }\n    return undefined;\n}\n/**\n * Position helper for the popover directive.\n *\n * @export\n */\nclass PositionHelper {\n    /**\n     * Calculate vertical alignment position\n     *\n     * @memberOf PositionHelper\n     */\n    static calculateVerticalAlignment(elDimensions, popoverDimensions, alignment) {\n        let result = verticalPosition(elDimensions, popoverDimensions, alignment);\n        if (result + popoverDimensions.height > window.innerHeight) {\n            result = window.innerHeight - popoverDimensions.height;\n        }\n        return result;\n    }\n    /**\n     * Calculate vertical caret position\n     *\n     * @memberOf PositionHelper\n     */\n    static calculateVerticalCaret(elDimensions, popoverDimensions, caretDimensions, alignment) {\n        let result;\n        if (alignment === PlacementTypes.Top) {\n            result = elDimensions.height / 2 - caretDimensions.height / 2 + caretOffset;\n        }\n        if (alignment === PlacementTypes.Bottom) {\n            result = popoverDimensions.height - elDimensions.height / 2 - caretDimensions.height / 2 - caretOffset;\n        }\n        if (alignment === PlacementTypes.Center) {\n            result = popoverDimensions.height / 2 - caretDimensions.height / 2;\n        }\n        const popoverPosition = verticalPosition(elDimensions, popoverDimensions, alignment);\n        if (popoverPosition + popoverDimensions.height > window.innerHeight) {\n            result += popoverPosition + popoverDimensions.height - window.innerHeight;\n        }\n        return result;\n    }\n    /**\n     * Calculate horz alignment position\n     *\n     * @memberOf PositionHelper\n     */\n    static calculateHorizontalAlignment(elDimensions, popoverDimensions, alignment) {\n        let result = horizontalPosition(elDimensions, popoverDimensions, alignment);\n        if (result + popoverDimensions.width > window.innerWidth) {\n            result = window.innerWidth - popoverDimensions.width;\n        }\n        return result;\n    }\n    /**\n     * Calculate horz caret position\n     *\n     * @memberOf PositionHelper\n     */\n    static calculateHorizontalCaret(elDimensions, popoverDimensions, caretDimensions, alignment) {\n        let result;\n        if (alignment === PlacementTypes.Left) {\n            result = elDimensions.width / 2 - caretDimensions.width / 2 + caretOffset;\n        }\n        if (alignment === PlacementTypes.Right) {\n            result = popoverDimensions.width - elDimensions.width / 2 - caretDimensions.width / 2 - caretOffset;\n        }\n        if (alignment === PlacementTypes.Center) {\n            result = popoverDimensions.width / 2 - caretDimensions.width / 2;\n        }\n        const popoverPosition = horizontalPosition(elDimensions, popoverDimensions, alignment);\n        if (popoverPosition + popoverDimensions.width > window.innerWidth) {\n            result += popoverPosition + popoverDimensions.width - window.innerWidth;\n        }\n        return result;\n    }\n    /**\n     * Checks if the element's position should be flipped\n     *\n     * @memberOf PositionHelper\n     */\n    static shouldFlip(elDimensions, popoverDimensions, placement, spacing) {\n        let flip = false;\n        if (placement === PlacementTypes.Right) {\n            if (elDimensions.left + elDimensions.width + popoverDimensions.width + spacing > window.innerWidth) {\n                flip = true;\n            }\n        }\n        if (placement === PlacementTypes.Left) {\n            if (elDimensions.left - popoverDimensions.width - spacing < 0) {\n                flip = true;\n            }\n        }\n        if (placement === PlacementTypes.Top) {\n            if (elDimensions.top - popoverDimensions.height - spacing < 0) {\n                flip = true;\n            }\n        }\n        if (placement === PlacementTypes.Bottom) {\n            if (elDimensions.top + elDimensions.height + popoverDimensions.height + spacing > window.innerHeight) {\n                flip = true;\n            }\n        }\n        return flip;\n    }\n    /**\n     * Position caret\n     *\n     * @memberOf PositionHelper\n     */\n    static positionCaret(placement, elmDim, hostDim, caretDimensions, alignment) {\n        let top = 0;\n        let left = 0;\n        if (placement === PlacementTypes.Right) {\n            left = -7;\n            top = PositionHelper.calculateVerticalCaret(hostDim, elmDim, caretDimensions, alignment);\n        }\n        else if (placement === PlacementTypes.Left) {\n            left = elmDim.width;\n            top = PositionHelper.calculateVerticalCaret(hostDim, elmDim, caretDimensions, alignment);\n        }\n        else if (placement === PlacementTypes.Top) {\n            top = elmDim.height;\n            left = PositionHelper.calculateHorizontalCaret(hostDim, elmDim, caretDimensions, alignment);\n        }\n        else if (placement === PlacementTypes.Bottom) {\n            top = -7;\n            left = PositionHelper.calculateHorizontalCaret(hostDim, elmDim, caretDimensions, alignment);\n        }\n        return { top, left };\n    }\n    /**\n     * Position content\n     *\n     * @memberOf PositionHelper\n     */\n    static positionContent(placement, elmDim, hostDim, spacing, alignment) {\n        let top = 0;\n        let left = 0;\n        if (placement === PlacementTypes.Right) {\n            left = hostDim.left + hostDim.width + spacing;\n            top = PositionHelper.calculateVerticalAlignment(hostDim, elmDim, alignment);\n        }\n        else if (placement === PlacementTypes.Left) {\n            left = hostDim.left - elmDim.width - spacing;\n            top = PositionHelper.calculateVerticalAlignment(hostDim, elmDim, alignment);\n        }\n        else if (placement === PlacementTypes.Top) {\n            top = hostDim.top - elmDim.height - spacing;\n            left = PositionHelper.calculateHorizontalAlignment(hostDim, elmDim, alignment);\n        }\n        else if (placement === PlacementTypes.Bottom) {\n            top = hostDim.top + hostDim.height + spacing;\n            left = PositionHelper.calculateHorizontalAlignment(hostDim, elmDim, alignment);\n        }\n        return { top, left };\n    }\n    /**\n     * Determine placement based on flip\n     *\n     * @memberOf PositionHelper\n     */\n    static determinePlacement(placement, elmDim, hostDim, spacing) {\n        const shouldFlip = PositionHelper.shouldFlip(hostDim, elmDim, placement, spacing);\n        if (shouldFlip) {\n            if (placement === PlacementTypes.Right) {\n                return PlacementTypes.Left;\n            }\n            else if (placement === PlacementTypes.Left) {\n                return PlacementTypes.Right;\n            }\n            else if (placement === PlacementTypes.Top) {\n                return PlacementTypes.Bottom;\n            }\n            else if (placement === PlacementTypes.Bottom) {\n                return PlacementTypes.Top;\n            }\n        }\n        return placement;\n    }\n}\n\nclass TooltipContentComponent {\n    constructor(element, renderer, platformId) {\n        this.element = element;\n        this.renderer = renderer;\n        this.platformId = platformId;\n    }\n    get cssClasses() {\n        let clz = 'ngx-charts-tooltip-content';\n        clz += ` position-${this.placement}`;\n        clz += ` type-${this.type}`;\n        clz += ` ${this.cssClass}`;\n        return clz;\n    }\n    ngAfterViewInit() {\n        setTimeout(this.position.bind(this));\n    }\n    position() {\n        if (!isPlatformBrowser(this.platformId)) {\n            return;\n        }\n        const nativeElm = this.element.nativeElement;\n        const hostDim = this.host.nativeElement.getBoundingClientRect();\n        // if no dims were found, never show\n        if (!hostDim.height && !hostDim.width)\n            return;\n        const elmDim = nativeElm.getBoundingClientRect();\n        this.checkFlip(hostDim, elmDim);\n        this.positionContent(nativeElm, hostDim, elmDim);\n        if (this.showCaret) {\n            this.positionCaret(hostDim, elmDim);\n        }\n        // animate its entry\n        setTimeout(() => this.renderer.addClass(nativeElm, 'animate'), 1);\n    }\n    positionContent(nativeElm, hostDim, elmDim) {\n        const { top, left } = PositionHelper.positionContent(this.placement, elmDim, hostDim, this.spacing, this.alignment);\n        this.renderer.setStyle(nativeElm, 'top', `${top}px`);\n        this.renderer.setStyle(nativeElm, 'left', `${left}px`);\n    }\n    positionCaret(hostDim, elmDim) {\n        const caretElm = this.caretElm.nativeElement;\n        const caretDimensions = caretElm.getBoundingClientRect();\n        const { top, left } = PositionHelper.positionCaret(this.placement, elmDim, hostDim, caretDimensions, this.alignment);\n        this.renderer.setStyle(caretElm, 'top', `${top}px`);\n        this.renderer.setStyle(caretElm, 'left', `${left}px`);\n    }\n    checkFlip(hostDim, elmDim) {\n        this.placement = PositionHelper.determinePlacement(this.placement, elmDim, hostDim, this.spacing);\n    }\n    onWindowResize() {\n        this.position();\n    }\n}\nTooltipContentComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipContentComponent, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nTooltipContentComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: TooltipContentComponent, selector: \"ngx-tooltip-content\", inputs: { host: \"host\", showCaret: \"showCaret\", type: \"type\", placement: \"placement\", alignment: \"alignment\", spacing: \"spacing\", cssClass: \"cssClass\", title: \"title\", template: \"template\", context: \"context\" }, host: { listeners: { \"window:resize\": \"onWindowResize()\" }, properties: { \"class\": \"this.cssClasses\" } }, viewQueries: [{ propertyName: \"caretElm\", first: true, predicate: [\"caretElm\"], descendants: true }], ngImport: i0, template: `\n    <div>\n      <span #caretElm [hidden]=\"!showCaret\" class=\"tooltip-caret position-{{ this.placement }}\"> </span>\n      <div class=\"tooltip-content\">\n        <span *ngIf=\"!title\">\n          <ng-template [ngTemplateOutlet]=\"template\" [ngTemplateOutletContext]=\"{ model: context }\"> </ng-template>\n        </span>\n        <span *ngIf=\"title\" [innerHTML]=\"title\"> </span>\n      </div>\n    </div>\n  `, isInline: true, styles: [\".ngx-charts-tooltip-content{position:fixed;border-radius:3px;z-index:5000;display:block;font-weight:400;opacity:0;pointer-events:none!important}.ngx-charts-tooltip-content.type-popover{background:#fff;color:#060709;border:1px solid #72809b;box-shadow:0 1px 3px #0003,0 1px 1px #00000024,0 2px 1px -1px #0000001f;font-size:13px;padding:4px}.ngx-charts-tooltip-content.type-popover .tooltip-caret{position:absolute;z-index:5001;width:0;height:0}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-left{border-top:7px solid transparent;border-bottom:7px solid transparent;border-left:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-top{border-left:7px solid transparent;border-right:7px solid transparent;border-top:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-right{border-top:7px solid transparent;border-bottom:7px solid transparent;border-right:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-bottom{border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:7px solid #fff}.ngx-charts-tooltip-content.type-tooltip{color:#fff;background:rgba(0,0,0,.75);font-size:12px;padding:0 10px;text-align:center;pointer-events:auto}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-left{border-top:7px solid transparent;border-bottom:7px solid transparent;border-left:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-top{border-left:7px solid transparent;border-right:7px solid transparent;border-top:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-right{border-top:7px solid transparent;border-bottom:7px solid transparent;border-right:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-bottom{border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content .tooltip-label{display:block;line-height:1em;padding:8px 5px 5px;font-size:1em}.ngx-charts-tooltip-content .tooltip-val{display:block;font-size:1.3em;line-height:1em;padding:0 5px 8px}.ngx-charts-tooltip-content .tooltip-caret{position:absolute;z-index:5001;width:0;height:0}.ngx-charts-tooltip-content.position-right{transform:translate(10px)}.ngx-charts-tooltip-content.position-left{transform:translate(-10px)}.ngx-charts-tooltip-content.position-top{transform:translateY(-10px)}.ngx-charts-tooltip-content.position-bottom{transform:translateY(10px)}.ngx-charts-tooltip-content.animate{opacity:1;transition:opacity .3s,transform .3s;transform:translate(0);pointer-events:auto}.area-tooltip-container{padding:5px 0;pointer-events:none}.tooltip-item{text-align:left;line-height:1.2em;padding:5px 0}.tooltip-item .tooltip-item-color{display:inline-block;height:12px;width:12px;margin-right:5px;color:#5b646b;border-radius:3px}\\n\"], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }], encapsulation: i0.ViewEncapsulation.None });\n__decorate([\n    throttleable(100)\n], TooltipContentComponent.prototype, \"onWindowResize\", null);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipContentComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-tooltip-content', template: `\n    <div>\n      <span #caretElm [hidden]=\"!showCaret\" class=\"tooltip-caret position-{{ this.placement }}\"> </span>\n      <div class=\"tooltip-content\">\n        <span *ngIf=\"!title\">\n          <ng-template [ngTemplateOutlet]=\"template\" [ngTemplateOutletContext]=\"{ model: context }\"> </ng-template>\n        </span>\n        <span *ngIf=\"title\" [innerHTML]=\"title\"> </span>\n      </div>\n    </div>\n  `, encapsulation: ViewEncapsulation.None, styles: [\".ngx-charts-tooltip-content{position:fixed;border-radius:3px;z-index:5000;display:block;font-weight:400;opacity:0;pointer-events:none!important}.ngx-charts-tooltip-content.type-popover{background:#fff;color:#060709;border:1px solid #72809b;box-shadow:0 1px 3px #0003,0 1px 1px #00000024,0 2px 1px -1px #0000001f;font-size:13px;padding:4px}.ngx-charts-tooltip-content.type-popover .tooltip-caret{position:absolute;z-index:5001;width:0;height:0}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-left{border-top:7px solid transparent;border-bottom:7px solid transparent;border-left:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-top{border-left:7px solid transparent;border-right:7px solid transparent;border-top:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-right{border-top:7px solid transparent;border-bottom:7px solid transparent;border-right:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-bottom{border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:7px solid #fff}.ngx-charts-tooltip-content.type-tooltip{color:#fff;background:rgba(0,0,0,.75);font-size:12px;padding:0 10px;text-align:center;pointer-events:auto}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-left{border-top:7px solid transparent;border-bottom:7px solid transparent;border-left:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-top{border-left:7px solid transparent;border-right:7px solid transparent;border-top:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-right{border-top:7px solid transparent;border-bottom:7px solid transparent;border-right:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-bottom{border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content .tooltip-label{display:block;line-height:1em;padding:8px 5px 5px;font-size:1em}.ngx-charts-tooltip-content .tooltip-val{display:block;font-size:1.3em;line-height:1em;padding:0 5px 8px}.ngx-charts-tooltip-content .tooltip-caret{position:absolute;z-index:5001;width:0;height:0}.ngx-charts-tooltip-content.position-right{transform:translate(10px)}.ngx-charts-tooltip-content.position-left{transform:translate(-10px)}.ngx-charts-tooltip-content.position-top{transform:translateY(-10px)}.ngx-charts-tooltip-content.position-bottom{transform:translateY(10px)}.ngx-charts-tooltip-content.animate{opacity:1;transition:opacity .3s,transform .3s;transform:translate(0);pointer-events:auto}.area-tooltip-container{padding:5px 0;pointer-events:none}.tooltip-item{text-align:left;line-height:1.2em;padding:5px 0}.tooltip-item .tooltip-item-color{display:inline-block;height:12px;width:12px;margin-right:5px;color:#5b646b;border-radius:3px}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { host: [{\n                type: Input\n            }], showCaret: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], placement: [{\n                type: Input\n            }], alignment: [{\n                type: Input\n            }], spacing: [{\n                type: Input\n            }], cssClass: [{\n                type: Input\n            }], title: [{\n                type: Input\n            }], template: [{\n                type: Input\n            }], context: [{\n                type: Input\n            }], caretElm: [{\n                type: ViewChild,\n                args: ['caretElm']\n            }], cssClasses: [{\n                type: HostBinding,\n                args: ['class']\n            }], onWindowResize: [{\n                type: HostListener,\n                args: ['window:resize']\n            }] } });\n\nclass InjectionRegisteryService {\n    constructor(injectionService) {\n        this.injectionService = injectionService;\n        this.defaults = {};\n        this.components = new Map();\n    }\n    getByType(type = this.type) {\n        return this.components.get(type);\n    }\n    create(bindings) {\n        return this.createByType(this.type, bindings);\n    }\n    createByType(type, bindings) {\n        bindings = this.assignDefaults(bindings);\n        const component = this.injectComponent(type, bindings);\n        this.register(type, component);\n        return component;\n    }\n    destroy(instance) {\n        const compsByType = this.components.get(instance.componentType);\n        if (compsByType && compsByType.length) {\n            const idx = compsByType.indexOf(instance);\n            if (idx > -1) {\n                const component = compsByType[idx];\n                component.destroy();\n                compsByType.splice(idx, 1);\n            }\n        }\n    }\n    destroyAll() {\n        this.destroyByType(this.type);\n    }\n    destroyByType(type) {\n        const comps = this.components.get(type);\n        if (comps && comps.length) {\n            let i = comps.length - 1;\n            while (i >= 0) {\n                this.destroy(comps[i--]);\n            }\n        }\n    }\n    injectComponent(type, bindings) {\n        return this.injectionService.appendComponent(type, bindings);\n    }\n    assignDefaults(bindings) {\n        const inputs = { ...this.defaults.inputs };\n        const outputs = { ...this.defaults.outputs };\n        if (!bindings.inputs && !bindings.outputs) {\n            bindings = { inputs: bindings };\n        }\n        if (inputs) {\n            bindings.inputs = { ...inputs, ...bindings.inputs };\n        }\n        if (outputs) {\n            bindings.outputs = { ...outputs, ...bindings.outputs };\n        }\n        return bindings;\n    }\n    register(type, component) {\n        if (!this.components.has(type)) {\n            this.components.set(type, []);\n        }\n        const types = this.components.get(type);\n        types.push(component);\n    }\n}\n\nfunction isViewContainerRef(x) {\n    return x.element;\n}\n/**\n * Injection service is a helper to append components\n * dynamically to a known location in the DOM, most\n * noteably for dialogs/tooltips appending to body.\n *\n * @export\n */\nclass InjectionService {\n    constructor(applicationRef, componentFactoryResolver, injector) {\n        this.applicationRef = applicationRef;\n        this.componentFactoryResolver = componentFactoryResolver;\n        this.injector = injector;\n    }\n    /**\n     * Sets a default global root view container. This is useful for\n     * things like ngUpgrade that doesn't have a ApplicationRef root.\n     *\n     * @param container\n     */\n    static setGlobalRootViewContainer(container) {\n        InjectionService.globalRootViewContainer = container;\n    }\n    /**\n     * Gets the root view container to inject the component to.\n     *\n     * @memberOf InjectionService\n     */\n    getRootViewContainer() {\n        if (this._container)\n            return this._container;\n        if (InjectionService.globalRootViewContainer)\n            return InjectionService.globalRootViewContainer;\n        if (this.applicationRef.components.length)\n            return this.applicationRef.components[0];\n        throw new Error('View Container not found! ngUpgrade needs to manually set this via setRootViewContainer or setGlobalRootViewContainer.');\n    }\n    /**\n     * Overrides the default root view container. This is useful for\n     * things like ngUpgrade that doesn't have a ApplicationRef root.\n     *\n     * @param container\n     *\n     * @memberOf InjectionService\n     */\n    setRootViewContainer(container) {\n        this._container = container;\n    }\n    /**\n     * Gets the html element for a component ref.\n     *\n     * @param componentRef\n     *\n     * @memberOf InjectionService\n     */\n    getComponentRootNode(component) {\n        if (isViewContainerRef(component)) {\n            return component.element.nativeElement;\n        }\n        if (component.hostView && component.hostView.rootNodes.length > 0) {\n            return component.hostView.rootNodes[0];\n        }\n        // the top most component root node has no `hostView`\n        return component.location.nativeElement;\n    }\n    /**\n     * Gets the root component container html element.\n     *\n     * @memberOf InjectionService\n     */\n    getRootViewContainerNode(component) {\n        return this.getComponentRootNode(component);\n    }\n    /**\n     * Projects the bindings onto the component\n     *\n     * @param component\n     * @param options\n     *\n     * @memberOf InjectionService\n     */\n    projectComponentBindings(component, bindings) {\n        if (bindings) {\n            if (bindings.inputs !== undefined) {\n                const bindingKeys = Object.getOwnPropertyNames(bindings.inputs);\n                for (const bindingName of bindingKeys) {\n                    component.instance[bindingName] = bindings.inputs[bindingName];\n                }\n            }\n            if (bindings.outputs !== undefined) {\n                const eventKeys = Object.getOwnPropertyNames(bindings.outputs);\n                for (const eventName of eventKeys) {\n                    component.instance[eventName] = bindings.outputs[eventName];\n                }\n            }\n        }\n        return component;\n    }\n    /**\n     * Appends a component to a adjacent location\n     *\n     * @param componentClass\n     * @param [options={}]\n     * @param [location]\n     *\n     * @memberOf InjectionService\n     */\n    appendComponent(componentClass, bindings = {}, location) {\n        if (!location)\n            location = this.getRootViewContainer();\n        const appendLocation = this.getComponentRootNode(location);\n        const portalHost = new DomPortalOutlet(appendLocation, this.componentFactoryResolver, this.applicationRef, this.injector);\n        const portal = new ComponentPortal(componentClass);\n        const componentRef = portalHost.attach(portal);\n        this.projectComponentBindings(componentRef, bindings);\n        return componentRef;\n    }\n}\nInjectionService.globalRootViewContainer = null;\nInjectionService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: InjectionService, deps: [{ token: i0.ApplicationRef }, { token: i0.ComponentFactoryResolver }, { token: i0.Injector }], target: i0.ɵɵFactoryTarget.Injectable });\nInjectionService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: InjectionService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: InjectionService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i0.ApplicationRef }, { type: i0.ComponentFactoryResolver }, { type: i0.Injector }]; } });\n\nclass TooltipService extends InjectionRegisteryService {\n    constructor(injectionService) {\n        super(injectionService);\n        this.type = TooltipContentComponent;\n    }\n}\nTooltipService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipService, deps: [{ token: InjectionService }], target: i0.ɵɵFactoryTarget.Injectable });\nTooltipService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: InjectionService }]; } });\n\nvar LegendPosition;\n(function (LegendPosition) {\n    LegendPosition[\"Right\"] = \"right\";\n    LegendPosition[\"Below\"] = \"below\";\n})(LegendPosition || (LegendPosition = {}));\nvar LegendType;\n(function (LegendType) {\n    LegendType[\"ScaleLegend\"] = \"scaleLegend\";\n    LegendType[\"Legend\"] = \"legend\";\n})(LegendType || (LegendType = {}));\n\nvar ScaleType;\n(function (ScaleType) {\n    ScaleType[\"Time\"] = \"time\";\n    ScaleType[\"Linear\"] = \"linear\";\n    ScaleType[\"Ordinal\"] = \"ordinal\";\n    ScaleType[\"Quantile\"] = \"quantile\";\n})(ScaleType || (ScaleType = {}));\n\nclass ScaleLegendComponent {\n    constructor() {\n        this.horizontal = false;\n    }\n    ngOnChanges(changes) {\n        const gradientValues = this.gradientString(this.colors.range(), this.colors.domain());\n        const direction = this.horizontal ? 'right' : 'bottom';\n        this.gradient = `linear-gradient(to ${direction}, ${gradientValues})`;\n    }\n    /**\n     * Generates the string used in the gradient stylesheet properties\n     * @param colors array of colors\n     * @param splits array of splits on a scale of (0, 1)\n     */\n    gradientString(colors, splits) {\n        // add the 100%\n        splits.push(1);\n        const pairs = [];\n        colors.reverse().forEach((c, i) => {\n            pairs.push(`${c} ${Math.round(splits[i] * 100)}%`);\n        });\n        return pairs.join(', ');\n    }\n}\nScaleLegendComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ScaleLegendComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nScaleLegendComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: ScaleLegendComponent, selector: \"ngx-charts-scale-legend\", inputs: { valueRange: \"valueRange\", colors: \"colors\", height: \"height\", width: \"width\", horizontal: \"horizontal\" }, usesOnChanges: true, ngImport: i0, template: `\n    <div\n      class=\"scale-legend\"\n      [class.horizontal-legend]=\"horizontal\"\n      [style.height.px]=\"horizontal ? undefined : height\"\n      [style.width.px]=\"width\"\n    >\n      <div class=\"scale-legend-label\">\n        <span>{{ valueRange[1].toLocaleString() }}</span>\n      </div>\n      <div class=\"scale-legend-wrap\" [style.background]=\"gradient\"></div>\n      <div class=\"scale-legend-label\">\n        <span>{{ valueRange[0].toLocaleString() }}</span>\n      </div>\n    </div>\n  `, isInline: true, styles: [\".chart-legend{display:inline-block;padding:0;width:auto!important}.chart-legend .scale-legend{text-align:center;display:flex;flex-direction:column}.chart-legend .scale-legend-wrap{display:inline-block;flex:1;width:30px;border-radius:5px;margin:0 auto}.chart-legend .scale-legend-label{font-size:12px}.chart-legend .horizontal-legend.scale-legend{flex-direction:row}.chart-legend .horizontal-legend .scale-legend-wrap{width:auto;height:30px;margin:0 16px}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ScaleLegendComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-scale-legend', template: `\n    <div\n      class=\"scale-legend\"\n      [class.horizontal-legend]=\"horizontal\"\n      [style.height.px]=\"horizontal ? undefined : height\"\n      [style.width.px]=\"width\"\n    >\n      <div class=\"scale-legend-label\">\n        <span>{{ valueRange[1].toLocaleString() }}</span>\n      </div>\n      <div class=\"scale-legend-wrap\" [style.background]=\"gradient\"></div>\n      <div class=\"scale-legend-label\">\n        <span>{{ valueRange[0].toLocaleString() }}</span>\n      </div>\n    </div>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".chart-legend{display:inline-block;padding:0;width:auto!important}.chart-legend .scale-legend{text-align:center;display:flex;flex-direction:column}.chart-legend .scale-legend-wrap{display:inline-block;flex:1;width:30px;border-radius:5px;margin:0 auto}.chart-legend .scale-legend-label{font-size:12px}.chart-legend .horizontal-legend.scale-legend{flex-direction:row}.chart-legend .horizontal-legend .scale-legend-wrap{width:auto;height:30px;margin:0 16px}\\n\"] }]\n        }], propDecorators: { valueRange: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], horizontal: [{\n                type: Input\n            }] } });\n\n/**\n * Formats a label given a date, number or string.\n *\n * @export\n */\nfunction formatLabel(label) {\n    if (label instanceof Date) {\n        label = label.toLocaleDateString();\n    }\n    else {\n        label = label.toLocaleString();\n    }\n    return label;\n}\n/**\n * Escapes a label.\n *\n * @export\n */\nfunction escapeLabel(label) {\n    return label.toLocaleString().replace(/[&'`\"<>]/g, match => {\n        return {\n            '&': '&amp;',\n            // tslint:disable-next-line: quotemark\n            \"'\": '&#x27;',\n            '`': '&#x60;',\n            '\"': '&quot;',\n            '<': '&lt;',\n            '>': '&gt;'\n        }[match];\n    });\n}\n\nclass LegendEntryComponent {\n    constructor() {\n        this.isActive = false;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.toggle = new EventEmitter();\n    }\n    get trimmedLabel() {\n        return this.formattedLabel || '(empty)';\n    }\n    onMouseEnter() {\n        this.activate.emit({ name: this.label });\n    }\n    onMouseLeave() {\n        this.deactivate.emit({ name: this.label });\n    }\n}\nLegendEntryComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LegendEntryComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nLegendEntryComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: LegendEntryComponent, selector: \"ngx-charts-legend-entry\", inputs: { color: \"color\", label: \"label\", formattedLabel: \"formattedLabel\", isActive: \"isActive\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\", toggle: \"toggle\" }, host: { listeners: { \"mouseenter\": \"onMouseEnter()\", \"mouseleave\": \"onMouseLeave()\" } }, ngImport: i0, template: `\n    <span [title]=\"formattedLabel\" tabindex=\"-1\" [class.active]=\"isActive\" (click)=\"select.emit(formattedLabel)\">\n      <span class=\"legend-label-color\" [style.background-color]=\"color\" (click)=\"toggle.emit(formattedLabel)\"> </span>\n      <span class=\"legend-label-text\">\n        {{ trimmedLabel }}\n      </span>\n    </span>\n  `, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LegendEntryComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-charts-legend-entry',\n                    template: `\n    <span [title]=\"formattedLabel\" tabindex=\"-1\" [class.active]=\"isActive\" (click)=\"select.emit(formattedLabel)\">\n      <span class=\"legend-label-color\" [style.background-color]=\"color\" (click)=\"toggle.emit(formattedLabel)\"> </span>\n      <span class=\"legend-label-text\">\n        {{ trimmedLabel }}\n      </span>\n    </span>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { color: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], formattedLabel: [{\n                type: Input\n            }], isActive: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], toggle: [{\n                type: Output\n            }], onMouseEnter: [{\n                type: HostListener,\n                args: ['mouseenter']\n            }], onMouseLeave: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nclass LegendComponent {\n    constructor(cd) {\n        this.cd = cd;\n        this.horizontal = false;\n        this.labelClick = new EventEmitter();\n        this.labelActivate = new EventEmitter();\n        this.labelDeactivate = new EventEmitter();\n        this.legendEntries = [];\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.cd.markForCheck();\n        this.legendEntries = this.getLegendEntries();\n    }\n    getLegendEntries() {\n        const items = [];\n        for (const label of this.data) {\n            const formattedLabel = formatLabel(label);\n            const idx = items.findIndex(i => {\n                return i.label === formattedLabel;\n            });\n            if (idx === -1) {\n                items.push({\n                    label,\n                    formattedLabel,\n                    color: this.colors.getColor(label)\n                });\n            }\n        }\n        return items;\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.label === d.name;\n        });\n        return item !== undefined;\n    }\n    activate(item) {\n        this.labelActivate.emit(item);\n    }\n    deactivate(item) {\n        this.labelDeactivate.emit(item);\n    }\n    trackBy(index, item) {\n        return item.label;\n    }\n}\nLegendComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LegendComponent, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nLegendComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: LegendComponent, selector: \"ngx-charts-legend\", inputs: { data: \"data\", title: \"title\", colors: \"colors\", height: \"height\", width: \"width\", activeEntries: \"activeEntries\", horizontal: \"horizontal\" }, outputs: { labelClick: \"labelClick\", labelActivate: \"labelActivate\", labelDeactivate: \"labelDeactivate\" }, usesOnChanges: true, ngImport: i0, template: `\n    <div [style.width.px]=\"width\">\n      <header class=\"legend-title\" *ngIf=\"title?.length > 0\">\n        <span class=\"legend-title-text\">{{ title }}</span>\n      </header>\n      <div class=\"legend-wrap\">\n        <ul class=\"legend-labels\" [class.horizontal-legend]=\"horizontal\" [style.max-height.px]=\"height - 45\">\n          <li *ngFor=\"let entry of legendEntries; trackBy: trackBy\" class=\"legend-label\">\n            <ngx-charts-legend-entry\n              [label]=\"entry.label\"\n              [formattedLabel]=\"entry.formattedLabel\"\n              [color]=\"entry.color\"\n              [isActive]=\"isActive(entry)\"\n              (select)=\"labelClick.emit($event)\"\n              (activate)=\"activate($event)\"\n              (deactivate)=\"deactivate($event)\"\n            >\n            </ngx-charts-legend-entry>\n          </li>\n        </ul>\n      </div>\n    </div>\n  `, isInline: true, styles: [\".chart-legend{display:inline-block;padding:0;width:auto!important}.chart-legend .legend-title{white-space:nowrap;overflow:hidden;margin-left:10px;margin-bottom:5px;font-size:14px;font-weight:700}.chart-legend ul,.chart-legend li{padding:0;margin:0;list-style:none}.chart-legend .horizontal-legend li{display:inline-block}.chart-legend .legend-wrap{width:calc(100% - 10px)}.chart-legend .legend-labels{line-height:85%;list-style:none;text-align:left;float:left;width:100%;border-radius:3px;overflow-y:auto;overflow-x:hidden;white-space:nowrap;background:rgba(0,0,0,.05)}.chart-legend .legend-label{cursor:pointer;font-size:90%;margin:8px;color:#afb7c8}.chart-legend .legend-label:hover{color:#000;transition:.2s}.chart-legend .legend-label .active .legend-label-text{color:#000}.chart-legend .legend-label-color{display:inline-block;height:15px;width:15px;margin-right:5px;color:#5b646b;border-radius:3px}.chart-legend .legend-label-text{display:inline-block;vertical-align:top;line-height:15px;font-size:12px;width:calc(100% - 20px);text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.chart-legend .legend-title-text{vertical-align:bottom;display:inline-block;line-height:16px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}\\n\"], components: [{ type: LegendEntryComponent, selector: \"ngx-charts-legend-entry\", inputs: [\"color\", \"label\", \"formattedLabel\", \"isActive\"], outputs: [\"select\", \"activate\", \"deactivate\", \"toggle\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LegendComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-legend', template: `\n    <div [style.width.px]=\"width\">\n      <header class=\"legend-title\" *ngIf=\"title?.length > 0\">\n        <span class=\"legend-title-text\">{{ title }}</span>\n      </header>\n      <div class=\"legend-wrap\">\n        <ul class=\"legend-labels\" [class.horizontal-legend]=\"horizontal\" [style.max-height.px]=\"height - 45\">\n          <li *ngFor=\"let entry of legendEntries; trackBy: trackBy\" class=\"legend-label\">\n            <ngx-charts-legend-entry\n              [label]=\"entry.label\"\n              [formattedLabel]=\"entry.formattedLabel\"\n              [color]=\"entry.color\"\n              [isActive]=\"isActive(entry)\"\n              (select)=\"labelClick.emit($event)\"\n              (activate)=\"activate($event)\"\n              (deactivate)=\"deactivate($event)\"\n            >\n            </ngx-charts-legend-entry>\n          </li>\n        </ul>\n      </div>\n    </div>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".chart-legend{display:inline-block;padding:0;width:auto!important}.chart-legend .legend-title{white-space:nowrap;overflow:hidden;margin-left:10px;margin-bottom:5px;font-size:14px;font-weight:700}.chart-legend ul,.chart-legend li{padding:0;margin:0;list-style:none}.chart-legend .horizontal-legend li{display:inline-block}.chart-legend .legend-wrap{width:calc(100% - 10px)}.chart-legend .legend-labels{line-height:85%;list-style:none;text-align:left;float:left;width:100%;border-radius:3px;overflow-y:auto;overflow-x:hidden;white-space:nowrap;background:rgba(0,0,0,.05)}.chart-legend .legend-label{cursor:pointer;font-size:90%;margin:8px;color:#afb7c8}.chart-legend .legend-label:hover{color:#000;transition:.2s}.chart-legend .legend-label .active .legend-label-text{color:#000}.chart-legend .legend-label-color{display:inline-block;height:15px;width:15px;margin-right:5px;color:#5b646b;border-radius:3px}.chart-legend .legend-label-text{display:inline-block;vertical-align:top;line-height:15px;font-size:12px;width:calc(100% - 20px);text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.chart-legend .legend-title-text{vertical-align:bottom;display:inline-block;line-height:16px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; }, propDecorators: { data: [{\n                type: Input\n            }], title: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], horizontal: [{\n                type: Input\n            }], labelClick: [{\n                type: Output\n            }], labelActivate: [{\n                type: Output\n            }], labelDeactivate: [{\n                type: Output\n            }] } });\n\nclass ChartComponent {\n    constructor() {\n        this.showLegend = false;\n        this.animations = true;\n        this.legendLabelClick = new EventEmitter();\n        this.legendLabelActivate = new EventEmitter();\n        this.legendLabelDeactivate = new EventEmitter();\n        this.LegendPosition = LegendPosition;\n        this.LegendType = LegendType;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        let legendColumns = 0;\n        if (this.showLegend) {\n            this.legendType = this.getLegendType();\n            if (!this.legendOptions || this.legendOptions.position === LegendPosition.Right) {\n                if (this.legendType === LegendType.ScaleLegend) {\n                    legendColumns = 1;\n                }\n                else {\n                    legendColumns = 2;\n                }\n            }\n        }\n        const chartColumns = 12 - legendColumns;\n        this.chartWidth = Math.floor((this.view[0] * chartColumns) / 12.0);\n        this.legendWidth =\n            !this.legendOptions || this.legendOptions.position === LegendPosition.Right\n                ? Math.floor((this.view[0] * legendColumns) / 12.0)\n                : this.chartWidth;\n    }\n    getLegendType() {\n        return this.legendOptions.scaleType === ScaleType.Linear ? LegendType.ScaleLegend : LegendType.Legend;\n    }\n}\nChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ChartComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: ChartComponent, selector: \"ngx-charts-chart\", inputs: { view: \"view\", showLegend: \"showLegend\", legendOptions: \"legendOptions\", legendType: \"legendType\", activeEntries: \"activeEntries\", animations: \"animations\" }, outputs: { legendLabelClick: \"legendLabelClick\", legendLabelActivate: \"legendLabelActivate\", legendLabelDeactivate: \"legendLabelDeactivate\" }, providers: [TooltipService], usesOnChanges: true, ngImport: i0, template: `\n    <div class=\"ngx-charts-outer\" [style.width.px]=\"view[0]\" [style.height.px]=\"view[1]\">\n      <svg class=\"ngx-charts\" [attr.width]=\"chartWidth\" [attr.height]=\"view[1]\">\n        <ng-content></ng-content>\n      </svg>\n      <ngx-charts-scale-legend\n        *ngIf=\"showLegend && legendType === LegendType.ScaleLegend\"\n        class=\"chart-legend\"\n        [horizontal]=\"legendOptions && legendOptions.position === LegendPosition.Below\"\n        [valueRange]=\"legendOptions.domain\"\n        [colors]=\"legendOptions.colors\"\n        [height]=\"view[1]\"\n        [width]=\"legendWidth\"\n      >\n      </ngx-charts-scale-legend>\n      <ngx-charts-legend\n        *ngIf=\"showLegend && legendType === LegendType.Legend\"\n        class=\"chart-legend\"\n        [horizontal]=\"legendOptions && legendOptions.position === LegendPosition.Below\"\n        [data]=\"legendOptions.domain\"\n        [title]=\"legendOptions.title\"\n        [colors]=\"legendOptions.colors\"\n        [height]=\"view[1]\"\n        [width]=\"legendWidth\"\n        [activeEntries]=\"activeEntries\"\n        (labelClick)=\"legendLabelClick.emit($event)\"\n        (labelActivate)=\"legendLabelActivate.emit($event)\"\n        (labelDeactivate)=\"legendLabelDeactivate.emit($event)\"\n      >\n      </ngx-charts-legend>\n    </div>\n  `, isInline: true, components: [{ type: ScaleLegendComponent, selector: \"ngx-charts-scale-legend\", inputs: [\"valueRange\", \"colors\", \"height\", \"width\", \"horizontal\"] }, { type: LegendComponent, selector: \"ngx-charts-legend\", inputs: [\"data\", \"title\", \"colors\", \"height\", \"width\", \"activeEntries\", \"horizontal\"], outputs: [\"labelClick\", \"labelActivate\", \"labelDeactivate\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ChartComponent, decorators: [{\n            type: Component,\n            args: [{\n                    providers: [TooltipService],\n                    selector: 'ngx-charts-chart',\n                    template: `\n    <div class=\"ngx-charts-outer\" [style.width.px]=\"view[0]\" [style.height.px]=\"view[1]\">\n      <svg class=\"ngx-charts\" [attr.width]=\"chartWidth\" [attr.height]=\"view[1]\">\n        <ng-content></ng-content>\n      </svg>\n      <ngx-charts-scale-legend\n        *ngIf=\"showLegend && legendType === LegendType.ScaleLegend\"\n        class=\"chart-legend\"\n        [horizontal]=\"legendOptions && legendOptions.position === LegendPosition.Below\"\n        [valueRange]=\"legendOptions.domain\"\n        [colors]=\"legendOptions.colors\"\n        [height]=\"view[1]\"\n        [width]=\"legendWidth\"\n      >\n      </ngx-charts-scale-legend>\n      <ngx-charts-legend\n        *ngIf=\"showLegend && legendType === LegendType.Legend\"\n        class=\"chart-legend\"\n        [horizontal]=\"legendOptions && legendOptions.position === LegendPosition.Below\"\n        [data]=\"legendOptions.domain\"\n        [title]=\"legendOptions.title\"\n        [colors]=\"legendOptions.colors\"\n        [height]=\"view[1]\"\n        [width]=\"legendWidth\"\n        [activeEntries]=\"activeEntries\"\n        (labelClick)=\"legendLabelClick.emit($event)\"\n        (labelActivate)=\"legendLabelActivate.emit($event)\"\n        (labelDeactivate)=\"legendLabelDeactivate.emit($event)\"\n      >\n      </ngx-charts-legend>\n    </div>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { view: [{\n                type: Input\n            }], showLegend: [{\n                type: Input\n            }], legendOptions: [{\n                type: Input\n            }], legendType: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], legendLabelClick: [{\n                type: Output\n            }], legendLabelActivate: [{\n                type: Output\n            }], legendLabelDeactivate: [{\n                type: Output\n            }] } });\n\n/**\n * Visibility Observer\n */\nclass VisibilityObserver {\n    constructor(element, zone) {\n        this.element = element;\n        this.zone = zone;\n        this.visible = new EventEmitter();\n        this.isVisible = false;\n        this.runCheck();\n    }\n    destroy() {\n        clearTimeout(this.timeout);\n    }\n    onVisibilityChange() {\n        // trigger zone recalc for columns\n        this.zone.run(() => {\n            this.isVisible = true;\n            this.visible.emit(true);\n        });\n    }\n    runCheck() {\n        const check = () => {\n            if (!this.element) {\n                return;\n            }\n            // https://davidwalsh.name/offsetheight-visibility\n            const { offsetHeight, offsetWidth } = this.element.nativeElement;\n            if (offsetHeight && offsetWidth) {\n                clearTimeout(this.timeout);\n                this.onVisibilityChange();\n            }\n            else {\n                clearTimeout(this.timeout);\n                this.zone.runOutsideAngular(() => {\n                    this.timeout = setTimeout(() => check(), 100);\n                });\n            }\n        };\n        this.zone.runOutsideAngular(() => {\n            this.timeout = setTimeout(() => check());\n        });\n    }\n}\nVisibilityObserver.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: VisibilityObserver, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nVisibilityObserver.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: VisibilityObserver, selector: \"visibility-observer\", outputs: { visible: \"visible\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: VisibilityObserver, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'visibility-observer'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { visible: [{\n                type: Output\n            }] } });\n\nfunction isDate(value) {\n    return toString.call(value) === '[object Date]';\n}\nfunction isNumber(value) {\n    return typeof value === 'number';\n}\n\nclass BaseChartComponent {\n    constructor(chartElement, zone, cd, platformId) {\n        this.chartElement = chartElement;\n        this.zone = zone;\n        this.cd = cd;\n        this.platformId = platformId;\n        this.scheme = 'cool';\n        this.schemeType = ScaleType.Ordinal;\n        this.animations = true;\n        this.select = new EventEmitter();\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.animations = false;\n        }\n    }\n    ngAfterViewInit() {\n        this.bindWindowResizeEvent();\n        // listen for visibility of the element for hidden by default scenario\n        this.visibilityObserver = new VisibilityObserver(this.chartElement, this.zone);\n        this.visibilityObserver.visible.subscribe(this.update.bind(this));\n    }\n    ngOnDestroy() {\n        this.unbindEvents();\n        if (this.visibilityObserver) {\n            this.visibilityObserver.visible.unsubscribe();\n            this.visibilityObserver.destroy();\n        }\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        if (this.results) {\n            this.results = this.cloneData(this.results);\n        }\n        else {\n            this.results = [];\n        }\n        if (this.view) {\n            this.width = this.view[0];\n            this.height = this.view[1];\n        }\n        else {\n            const dims = this.getContainerDims();\n            if (dims) {\n                this.width = dims.width;\n                this.height = dims.height;\n            }\n        }\n        // default values if width or height are 0 or undefined\n        if (!this.width) {\n            this.width = 600;\n        }\n        if (!this.height) {\n            this.height = 400;\n        }\n        this.width = Math.floor(this.width);\n        this.height = Math.floor(this.height);\n        if (this.cd) {\n            this.cd.markForCheck();\n        }\n    }\n    getContainerDims() {\n        let width;\n        let height;\n        const hostElem = this.chartElement.nativeElement;\n        if (isPlatformBrowser(this.platformId) && hostElem.parentNode !== null) {\n            // Get the container dimensions\n            const dims = hostElem.parentNode.getBoundingClientRect();\n            width = dims.width;\n            height = dims.height;\n        }\n        if (width && height) {\n            return { width, height };\n        }\n        return null;\n    }\n    /**\n     * Converts all date objects that appear as name\n     * into formatted date strings\n     */\n    formatDates() {\n        for (let i = 0; i < this.results.length; i++) {\n            const g = this.results[i];\n            g.label = g.name;\n            if (isDate(g.label)) {\n                g.label = g.label.toLocaleDateString();\n            }\n            if (g.series) {\n                for (let j = 0; j < g.series.length; j++) {\n                    const d = g.series[j];\n                    d.label = d.name;\n                    if (isDate(d.label)) {\n                        d.label = d.label.toLocaleDateString();\n                    }\n                }\n            }\n        }\n    }\n    unbindEvents() {\n        if (this.resizeSubscription) {\n            this.resizeSubscription.unsubscribe();\n        }\n    }\n    bindWindowResizeEvent() {\n        if (!isPlatformBrowser(this.platformId)) {\n            return;\n        }\n        const source = fromEvent(window, 'resize');\n        const subscription = source.pipe(debounceTime(200)).subscribe(e => {\n            this.update();\n            if (this.cd) {\n                this.cd.markForCheck();\n            }\n        });\n        this.resizeSubscription = subscription;\n    }\n    /**\n     * Clones the data into a new object\n     *\n     * @memberOf BaseChart\n     */\n    cloneData(data) {\n        const results = [];\n        for (const item of data) {\n            const copy = {\n                name: item['name']\n            };\n            if (item['value'] !== undefined) {\n                copy['value'] = item['value'];\n            }\n            if (item['series'] !== undefined) {\n                copy['series'] = [];\n                for (const seriesItem of item['series']) {\n                    const seriesItemCopy = Object.assign({}, seriesItem);\n                    copy['series'].push(seriesItemCopy);\n                }\n            }\n            if (item['extra'] !== undefined) {\n                copy['extra'] = JSON.parse(JSON.stringify(item['extra']));\n            }\n            results.push(copy);\n        }\n        return results;\n    }\n}\nBaseChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BaseChartComponent, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nBaseChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BaseChartComponent, selector: \"base-chart\", inputs: { results: \"results\", view: \"view\", scheme: \"scheme\", schemeType: \"schemeType\", customColors: \"customColors\", animations: \"animations\" }, outputs: { select: \"select\" }, usesOnChanges: true, ngImport: i0, template: ` <div></div> `, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BaseChartComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'base-chart',\n                    template: ` <div></div> `\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { results: [{\n                type: Input\n            }], view: [{\n                type: Input\n            }], scheme: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], customColors: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }] } });\n\nvar Orientation;\n(function (Orientation) {\n    Orientation[\"Top\"] = \"top\";\n    Orientation[\"Bottom\"] = \"bottom\";\n    Orientation[\"Left\"] = \"left\";\n    Orientation[\"Right\"] = \"right\";\n})(Orientation || (Orientation = {}));\n\nclass AxisLabelComponent {\n    constructor(element) {\n        this.textHeight = 25;\n        this.margin = 5;\n        this.element = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.strokeWidth = '0.01';\n        this.textAnchor = 'middle';\n        this.transform = '';\n        switch (this.orient) {\n            case Orientation.Top:\n                this.y = this.offset;\n                this.x = this.width / 2;\n                break;\n            case Orientation.Bottom:\n                this.y = this.offset;\n                this.x = this.width / 2;\n                break;\n            case Orientation.Left:\n                this.y = -(this.offset + this.textHeight + this.margin);\n                this.x = -this.height / 2;\n                this.transform = 'rotate(270)';\n                break;\n            case Orientation.Right:\n                this.y = this.offset + this.margin;\n                this.x = -this.height / 2;\n                this.transform = 'rotate(270)';\n                break;\n            default:\n        }\n    }\n}\nAxisLabelComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AxisLabelComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nAxisLabelComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: AxisLabelComponent, selector: \"g[ngx-charts-axis-label]\", inputs: { orient: \"orient\", label: \"label\", offset: \"offset\", width: \"width\", height: \"height\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:text\n      [attr.stroke-width]=\"strokeWidth\"\n      [attr.x]=\"x\"\n      [attr.y]=\"y\"\n      [attr.text-anchor]=\"textAnchor\"\n      [attr.transform]=\"transform\"\n    >\n      {{ label }}\n    </svg:text>\n  `, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AxisLabelComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-axis-label]',\n                    template: `\n    <svg:text\n      [attr.stroke-width]=\"strokeWidth\"\n      [attr.x]=\"x\"\n      [attr.y]=\"y\"\n      [attr.text-anchor]=\"textAnchor\"\n      [attr.transform]=\"transform\"\n    >\n      {{ label }}\n    </svg:text>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { orient: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], offset: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }] } });\n\nfunction trimLabel(s, max = 16) {\n    if (typeof s !== 'string') {\n        if (typeof s === 'number') {\n            return s + '';\n        }\n        else {\n            return '';\n        }\n    }\n    s = s.trim();\n    if (s.length <= max) {\n        return s;\n    }\n    else {\n        return `${s.slice(0, max)}...`;\n    }\n}\n\nfunction reduceTicks(ticks, maxTicks) {\n    if (ticks.length > maxTicks) {\n        const reduced = [];\n        const modulus = Math.floor(ticks.length / maxTicks);\n        for (let i = 0; i < ticks.length; i++) {\n            if (i % modulus === 0) {\n                reduced.push(ticks[i]);\n            }\n        }\n        ticks = reduced;\n    }\n    return ticks;\n}\n\nvar TextAnchor;\n(function (TextAnchor) {\n    TextAnchor[\"Start\"] = \"start\";\n    TextAnchor[\"Middle\"] = \"middle\";\n    TextAnchor[\"End\"] = \"end\";\n})(TextAnchor || (TextAnchor = {}));\n\nclass XAxisTicksComponent {\n    constructor(platformId) {\n        this.platformId = platformId;\n        this.tickArguments = [5];\n        this.tickStroke = '#ccc';\n        this.trimTicks = true;\n        this.maxTickLength = 16;\n        this.showGridLines = false;\n        this.rotateTicks = true;\n        this.dimensionsChanged = new EventEmitter();\n        this.verticalSpacing = 20;\n        this.rotateLabels = false;\n        this.innerTickSize = 6;\n        this.outerTickSize = 6;\n        this.tickPadding = 3;\n        this.textAnchor = TextAnchor.Middle;\n        this.maxTicksLength = 0;\n        this.maxAllowedLength = 16;\n        this.height = 0;\n        this.approxHeight = 10;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    ngAfterViewInit() {\n        setTimeout(() => this.updateDims());\n    }\n    updateDims() {\n        if (!isPlatformBrowser(this.platformId)) {\n            // for SSR, use approximate value instead of measured\n            this.dimensionsChanged.emit({ height: this.approxHeight });\n            return;\n        }\n        const height = parseInt(this.ticksElement.nativeElement.getBoundingClientRect().height, 10);\n        if (height !== this.height) {\n            this.height = height;\n            this.dimensionsChanged.emit({ height: this.height });\n            setTimeout(() => this.updateDims());\n        }\n    }\n    update() {\n        const scale = this.scale;\n        this.ticks = this.getTicks();\n        if (this.tickFormatting) {\n            this.tickFormat = this.tickFormatting;\n        }\n        else if (scale.tickFormat) {\n            // eslint-disable-next-line prefer-spread\n            this.tickFormat = scale.tickFormat.apply(scale, this.tickArguments);\n        }\n        else {\n            this.tickFormat = function (d) {\n                if (d.constructor.name === 'Date') {\n                    return d.toLocaleDateString();\n                }\n                return d.toLocaleString();\n            };\n        }\n        const angle = this.rotateTicks ? this.getRotationAngle(this.ticks) : null;\n        this.adjustedScale = this.scale.bandwidth\n            ? function (d) {\n                return this.scale(d) + this.scale.bandwidth() * 0.5;\n            }\n            : this.scale;\n        this.textTransform = '';\n        if (angle && angle !== 0) {\n            this.textTransform = `rotate(${angle})`;\n            this.textAnchor = TextAnchor.End;\n            this.verticalSpacing = 10;\n        }\n        else {\n            this.textAnchor = TextAnchor.Middle;\n        }\n        setTimeout(() => this.updateDims());\n    }\n    getRotationAngle(ticks) {\n        let angle = 0;\n        this.maxTicksLength = 0;\n        for (let i = 0; i < ticks.length; i++) {\n            const tick = this.tickFormat(ticks[i]).toString();\n            let tickLength = tick.length;\n            if (this.trimTicks) {\n                tickLength = this.tickTrim(tick).length;\n            }\n            if (tickLength > this.maxTicksLength) {\n                this.maxTicksLength = tickLength;\n            }\n        }\n        const len = Math.min(this.maxTicksLength, this.maxAllowedLength);\n        const charWidth = 7; // need to measure this\n        const wordWidth = len * charWidth;\n        let baseWidth = wordWidth;\n        const maxBaseWidth = Math.floor(this.width / ticks.length);\n        // calculate optimal angle\n        while (baseWidth > maxBaseWidth && angle > -90) {\n            angle -= 30;\n            baseWidth = Math.cos(angle * (Math.PI / 180)) * wordWidth;\n        }\n        this.approxHeight = Math.max(Math.abs(Math.sin(angle * (Math.PI / 180)) * wordWidth), 10);\n        return angle;\n    }\n    getTicks() {\n        let ticks;\n        const maxTicks = this.getMaxTicks(20);\n        const maxScaleTicks = this.getMaxTicks(100);\n        if (this.tickValues) {\n            ticks = this.tickValues;\n        }\n        else if (this.scale.ticks) {\n            ticks = this.scale.ticks.apply(this.scale, [maxScaleTicks]);\n        }\n        else {\n            ticks = this.scale.domain();\n            ticks = reduceTicks(ticks, maxTicks);\n        }\n        return ticks;\n    }\n    getMaxTicks(tickWidth) {\n        return Math.floor(this.width / tickWidth);\n    }\n    tickTransform(tick) {\n        return 'translate(' + this.adjustedScale(tick) + ',' + this.verticalSpacing + ')';\n    }\n    gridLineTransform() {\n        return `translate(0,${-this.verticalSpacing - 5})`;\n    }\n    tickTrim(label) {\n        return this.trimTicks ? trimLabel(label, this.maxTickLength) : label;\n    }\n}\nXAxisTicksComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: XAxisTicksComponent, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nXAxisTicksComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: XAxisTicksComponent, selector: \"g[ngx-charts-x-axis-ticks]\", inputs: { scale: \"scale\", orient: \"orient\", tickArguments: \"tickArguments\", tickValues: \"tickValues\", tickStroke: \"tickStroke\", trimTicks: \"trimTicks\", maxTickLength: \"maxTickLength\", tickFormatting: \"tickFormatting\", showGridLines: \"showGridLines\", gridLineHeight: \"gridLineHeight\", width: \"width\", rotateTicks: \"rotateTicks\" }, outputs: { dimensionsChanged: \"dimensionsChanged\" }, viewQueries: [{ propertyName: \"ticksElement\", first: true, predicate: [\"ticksel\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <svg:g #ticksel>\n      <svg:g *ngFor=\"let tick of ticks\" class=\"tick\" [attr.transform]=\"tickTransform(tick)\">\n        <title>{{ tickFormat(tick) }}</title>\n        <svg:text\n          stroke-width=\"0.01\"\n          [attr.text-anchor]=\"textAnchor\"\n          [attr.transform]=\"textTransform\"\n          [style.font-size]=\"'12px'\"\n        >\n          {{ tickTrim(tickFormat(tick)) }}\n        </svg:text>\n      </svg:g>\n    </svg:g>\n\n    <svg:g *ngFor=\"let tick of ticks\" [attr.transform]=\"tickTransform(tick)\">\n      <svg:g *ngIf=\"showGridLines\" [attr.transform]=\"gridLineTransform()\">\n        <svg:line class=\"gridline-path gridline-path-vertical\" [attr.y1]=\"-gridLineHeight\" y2=\"0\" />\n      </svg:g>\n    </svg:g>\n  `, isInline: true, directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: XAxisTicksComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-x-axis-ticks]',\n                    template: `\n    <svg:g #ticksel>\n      <svg:g *ngFor=\"let tick of ticks\" class=\"tick\" [attr.transform]=\"tickTransform(tick)\">\n        <title>{{ tickFormat(tick) }}</title>\n        <svg:text\n          stroke-width=\"0.01\"\n          [attr.text-anchor]=\"textAnchor\"\n          [attr.transform]=\"textTransform\"\n          [style.font-size]=\"'12px'\"\n        >\n          {{ tickTrim(tickFormat(tick)) }}\n        </svg:text>\n      </svg:g>\n    </svg:g>\n\n    <svg:g *ngFor=\"let tick of ticks\" [attr.transform]=\"tickTransform(tick)\">\n      <svg:g *ngIf=\"showGridLines\" [attr.transform]=\"gridLineTransform()\">\n        <svg:line class=\"gridline-path gridline-path-vertical\" [attr.y1]=\"-gridLineHeight\" y2=\"0\" />\n      </svg:g>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { scale: [{\n                type: Input\n            }], orient: [{\n                type: Input\n            }], tickArguments: [{\n                type: Input\n            }], tickValues: [{\n                type: Input\n            }], tickStroke: [{\n                type: Input\n            }], trimTicks: [{\n                type: Input\n            }], maxTickLength: [{\n                type: Input\n            }], tickFormatting: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], gridLineHeight: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], rotateTicks: [{\n                type: Input\n            }], dimensionsChanged: [{\n                type: Output\n            }], ticksElement: [{\n                type: ViewChild,\n                args: ['ticksel']\n            }] } });\n\nclass XAxisComponent {\n    constructor() {\n        this.rotateTicks = true;\n        this.showGridLines = false;\n        this.xOrient = Orientation.Bottom;\n        this.xAxisOffset = 0;\n        this.dimensionsChanged = new EventEmitter();\n        this.xAxisClassName = 'x axis';\n        this.labelOffset = 0;\n        this.fill = 'none';\n        this.stroke = 'stroke';\n        this.tickStroke = '#ccc';\n        this.strokeWidth = 'none';\n        this.padding = 5;\n        this.orientation = Orientation;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.transform = `translate(0,${this.xAxisOffset + this.padding + this.dims.height})`;\n        if (typeof this.xAxisTickCount !== 'undefined') {\n            this.tickArguments = [this.xAxisTickCount];\n        }\n    }\n    emitTicksHeight({ height }) {\n        const newLabelOffset = height + 25 + 5;\n        if (newLabelOffset !== this.labelOffset) {\n            this.labelOffset = newLabelOffset;\n            setTimeout(() => {\n                this.dimensionsChanged.emit({ height });\n            }, 0);\n        }\n    }\n}\nXAxisComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: XAxisComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nXAxisComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: { xScale: \"xScale\", dims: \"dims\", trimTicks: \"trimTicks\", rotateTicks: \"rotateTicks\", maxTickLength: \"maxTickLength\", tickFormatting: \"tickFormatting\", showGridLines: \"showGridLines\", showLabel: \"showLabel\", labelText: \"labelText\", ticks: \"ticks\", xAxisTickCount: \"xAxisTickCount\", xOrient: \"xOrient\", xAxisOffset: \"xAxisOffset\" }, outputs: { dimensionsChanged: \"dimensionsChanged\" }, viewQueries: [{ propertyName: \"ticksComponent\", first: true, predicate: XAxisTicksComponent, descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <svg:g [attr.class]=\"xAxisClassName\" [attr.transform]=\"transform\">\n      <svg:g\n        ngx-charts-x-axis-ticks\n        *ngIf=\"xScale\"\n        [trimTicks]=\"trimTicks\"\n        [rotateTicks]=\"rotateTicks\"\n        [maxTickLength]=\"maxTickLength\"\n        [tickFormatting]=\"tickFormatting\"\n        [tickArguments]=\"tickArguments\"\n        [tickStroke]=\"tickStroke\"\n        [scale]=\"xScale\"\n        [orient]=\"xOrient\"\n        [showGridLines]=\"showGridLines\"\n        [gridLineHeight]=\"dims.height\"\n        [width]=\"dims.width\"\n        [tickValues]=\"ticks\"\n        (dimensionsChanged)=\"emitTicksHeight($event)\"\n      />\n      <svg:g\n        ngx-charts-axis-label\n        *ngIf=\"showLabel\"\n        [label]=\"labelText\"\n        [offset]=\"labelOffset\"\n        [orient]=\"orientation.Bottom\"\n        [height]=\"dims.height\"\n        [width]=\"dims.width\"\n      ></svg:g>\n    </svg:g>\n  `, isInline: true, components: [{ type: XAxisTicksComponent, selector: \"g[ngx-charts-x-axis-ticks]\", inputs: [\"scale\", \"orient\", \"tickArguments\", \"tickValues\", \"tickStroke\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"gridLineHeight\", \"width\", \"rotateTicks\"], outputs: [\"dimensionsChanged\"] }, { type: AxisLabelComponent, selector: \"g[ngx-charts-axis-label]\", inputs: [\"orient\", \"label\", \"offset\", \"width\", \"height\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: XAxisComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-x-axis]',\n                    template: `\n    <svg:g [attr.class]=\"xAxisClassName\" [attr.transform]=\"transform\">\n      <svg:g\n        ngx-charts-x-axis-ticks\n        *ngIf=\"xScale\"\n        [trimTicks]=\"trimTicks\"\n        [rotateTicks]=\"rotateTicks\"\n        [maxTickLength]=\"maxTickLength\"\n        [tickFormatting]=\"tickFormatting\"\n        [tickArguments]=\"tickArguments\"\n        [tickStroke]=\"tickStroke\"\n        [scale]=\"xScale\"\n        [orient]=\"xOrient\"\n        [showGridLines]=\"showGridLines\"\n        [gridLineHeight]=\"dims.height\"\n        [width]=\"dims.width\"\n        [tickValues]=\"ticks\"\n        (dimensionsChanged)=\"emitTicksHeight($event)\"\n      />\n      <svg:g\n        ngx-charts-axis-label\n        *ngIf=\"showLabel\"\n        [label]=\"labelText\"\n        [offset]=\"labelOffset\"\n        [orient]=\"orientation.Bottom\"\n        [height]=\"dims.height\"\n        [width]=\"dims.width\"\n      ></svg:g>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { xScale: [{\n                type: Input\n            }], dims: [{\n                type: Input\n            }], trimTicks: [{\n                type: Input\n            }], rotateTicks: [{\n                type: Input\n            }], maxTickLength: [{\n                type: Input\n            }], tickFormatting: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], showLabel: [{\n                type: Input\n            }], labelText: [{\n                type: Input\n            }], ticks: [{\n                type: Input\n            }], xAxisTickCount: [{\n                type: Input\n            }], xOrient: [{\n                type: Input\n            }], xAxisOffset: [{\n                type: Input\n            }], dimensionsChanged: [{\n                type: Output\n            }], ticksComponent: [{\n                type: ViewChild,\n                args: [XAxisTicksComponent]\n            }] } });\n\n/**\n * Generates a rounded rectanglar path\n *\n * @export\n * @param x, y, w, h, r, tl, tr, bl, br\n */\nfunction roundedRect(x, y, w, h, r, [tl, tr, bl, br]) {\n    let retval = '';\n    w = Math.floor(w);\n    h = Math.floor(h);\n    w = w === 0 ? 1 : w;\n    h = h === 0 ? 1 : h;\n    retval = `M${[x + r, y]}`;\n    retval += `h${w - 2 * r}`;\n    if (tr) {\n        retval += `a${[r, r]} 0 0 1 ${[r, r]}`;\n    }\n    else {\n        retval += `h${r}v${r}`;\n    }\n    retval += `v${h - 2 * r}`;\n    if (br) {\n        retval += `a${[r, r]} 0 0 1 ${[-r, r]}`;\n    }\n    else {\n        retval += `v${r}h${-r}`;\n    }\n    retval += `h${2 * r - w}`;\n    if (bl) {\n        retval += `a${[r, r]} 0 0 1 ${[-r, -r]}`;\n    }\n    else {\n        retval += `h${-r}v${-r}`;\n    }\n    retval += `v${2 * r - h}`;\n    if (tl) {\n        retval += `a${[r, r]} 0 0 1 ${[r, -r]}`;\n    }\n    else {\n        retval += `v${-r}h${r}`;\n    }\n    retval += `z`;\n    return retval;\n}\n\nclass YAxisTicksComponent {\n    constructor(platformId) {\n        this.platformId = platformId;\n        this.tickArguments = [5];\n        this.tickStroke = '#ccc';\n        this.trimTicks = true;\n        this.maxTickLength = 16;\n        this.showGridLines = false;\n        this.showRefLabels = false;\n        this.showRefLines = false;\n        this.dimensionsChanged = new EventEmitter();\n        this.innerTickSize = 6;\n        this.tickPadding = 3;\n        this.verticalSpacing = 20;\n        this.textAnchor = TextAnchor.Middle;\n        this.width = 0;\n        this.outerTickSize = 6;\n        this.rotateLabels = false;\n        this.referenceLineLength = 0;\n        this.Orientation = Orientation;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    ngAfterViewInit() {\n        setTimeout(() => this.updateDims());\n    }\n    updateDims() {\n        if (!isPlatformBrowser(this.platformId)) {\n            // for SSR, use approximate value instead of measured\n            this.width = this.getApproximateAxisWidth();\n            this.dimensionsChanged.emit({ width: this.width });\n            return;\n        }\n        const width = parseInt(this.ticksElement.nativeElement.getBoundingClientRect().width, 10);\n        if (width !== this.width) {\n            this.width = width;\n            this.dimensionsChanged.emit({ width });\n            setTimeout(() => this.updateDims());\n        }\n    }\n    update() {\n        const scale = this.scale;\n        const sign = this.orient === Orientation.Top || this.orient === Orientation.Right ? -1 : 1;\n        this.tickSpacing = Math.max(this.innerTickSize, 0) + this.tickPadding;\n        this.ticks = this.getTicks();\n        if (this.tickFormatting) {\n            this.tickFormat = this.tickFormatting;\n        }\n        else if (scale.tickFormat) {\n            // eslint-disable-next-line prefer-spread\n            this.tickFormat = scale.tickFormat.apply(scale, this.tickArguments);\n        }\n        else {\n            this.tickFormat = function (d) {\n                if (d.constructor.name === 'Date') {\n                    return d.toLocaleDateString();\n                }\n                return d.toLocaleString();\n            };\n        }\n        this.adjustedScale = scale.bandwidth\n            ? function (d) {\n                return scale(d) + scale.bandwidth() * 0.5;\n            }\n            : scale;\n        if (this.showRefLines && this.referenceLines) {\n            this.setReferencelines();\n        }\n        switch (this.orient) {\n            case Orientation.Top:\n                this.transform = function (tick) {\n                    return 'translate(' + this.adjustedScale(tick) + ',0)';\n                };\n                this.textAnchor = TextAnchor.Middle;\n                this.y2 = this.innerTickSize * sign;\n                this.y1 = this.tickSpacing * sign;\n                this.dy = sign < 0 ? '0em' : '.71em';\n                break;\n            case Orientation.Bottom:\n                this.transform = function (tick) {\n                    return 'translate(' + this.adjustedScale(tick) + ',0)';\n                };\n                this.textAnchor = TextAnchor.Middle;\n                this.y2 = this.innerTickSize * sign;\n                this.y1 = this.tickSpacing * sign;\n                this.dy = sign < 0 ? '0em' : '.71em';\n                break;\n            case Orientation.Left:\n                this.transform = function (tick) {\n                    return 'translate(0,' + this.adjustedScale(tick) + ')';\n                };\n                this.textAnchor = TextAnchor.End;\n                this.x2 = this.innerTickSize * -sign;\n                this.x1 = this.tickSpacing * -sign;\n                this.dy = '.32em';\n                break;\n            case Orientation.Right:\n                this.transform = function (tick) {\n                    return 'translate(0,' + this.adjustedScale(tick) + ')';\n                };\n                this.textAnchor = TextAnchor.Start;\n                this.x2 = this.innerTickSize * -sign;\n                this.x1 = this.tickSpacing * -sign;\n                this.dy = '.32em';\n                break;\n            default:\n        }\n        setTimeout(() => this.updateDims());\n    }\n    setReferencelines() {\n        this.refMin = this.adjustedScale(Math.min.apply(null, this.referenceLines.map(item => item.value)));\n        this.refMax = this.adjustedScale(Math.max.apply(null, this.referenceLines.map(item => item.value)));\n        this.referenceLineLength = this.referenceLines.length;\n        this.referenceAreaPath = roundedRect(0, this.refMax, this.gridLineWidth, this.refMin - this.refMax, 0, [\n            false,\n            false,\n            false,\n            false\n        ]);\n    }\n    getTicks() {\n        let ticks;\n        const maxTicks = this.getMaxTicks(20);\n        const maxScaleTicks = this.getMaxTicks(50);\n        if (this.tickValues) {\n            ticks = this.tickValues;\n        }\n        else if (this.scale.ticks) {\n            ticks = this.scale.ticks.apply(this.scale, [maxScaleTicks]);\n        }\n        else {\n            ticks = this.scale.domain();\n            ticks = reduceTicks(ticks, maxTicks);\n        }\n        return ticks;\n    }\n    getMaxTicks(tickHeight) {\n        return Math.floor(this.height / tickHeight);\n    }\n    tickTransform(tick) {\n        return `translate(${this.adjustedScale(tick)},${this.verticalSpacing})`;\n    }\n    gridLineTransform() {\n        return `translate(5,0)`;\n    }\n    tickTrim(label) {\n        return this.trimTicks ? trimLabel(label, this.maxTickLength) : label;\n    }\n    getApproximateAxisWidth() {\n        const maxChars = Math.max(...this.ticks.map(t => this.tickTrim(this.tickFormat(t)).length));\n        const charWidth = 7;\n        return maxChars * charWidth;\n    }\n}\nYAxisTicksComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: YAxisTicksComponent, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nYAxisTicksComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: YAxisTicksComponent, selector: \"g[ngx-charts-y-axis-ticks]\", inputs: { scale: \"scale\", orient: \"orient\", tickArguments: \"tickArguments\", tickValues: \"tickValues\", tickStroke: \"tickStroke\", trimTicks: \"trimTicks\", maxTickLength: \"maxTickLength\", tickFormatting: \"tickFormatting\", showGridLines: \"showGridLines\", gridLineWidth: \"gridLineWidth\", height: \"height\", referenceLines: \"referenceLines\", showRefLabels: \"showRefLabels\", showRefLines: \"showRefLines\" }, outputs: { dimensionsChanged: \"dimensionsChanged\" }, viewQueries: [{ propertyName: \"ticksElement\", first: true, predicate: [\"ticksel\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <svg:g #ticksel>\n      <svg:g *ngFor=\"let tick of ticks\" class=\"tick\" [attr.transform]=\"transform(tick)\">\n        <title>{{ tickFormat(tick) }}</title>\n        <svg:text\n          stroke-width=\"0.01\"\n          [attr.dy]=\"dy\"\n          [attr.x]=\"x1\"\n          [attr.y]=\"y1\"\n          [attr.text-anchor]=\"textAnchor\"\n          [style.font-size]=\"'12px'\"\n        >\n          {{ tickTrim(tickFormat(tick)) }}\n        </svg:text>\n      </svg:g>\n    </svg:g>\n\n    <svg:path\n      *ngIf=\"referenceLineLength > 1 && refMax && refMin && showRefLines\"\n      class=\"reference-area\"\n      [attr.d]=\"referenceAreaPath\"\n      [attr.transform]=\"gridLineTransform()\"\n    />\n    <svg:g *ngFor=\"let tick of ticks\" [attr.transform]=\"transform(tick)\">\n      <svg:g *ngIf=\"showGridLines\" [attr.transform]=\"gridLineTransform()\">\n        <svg:line\n          *ngIf=\"orient === Orientation.Left\"\n          class=\"gridline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"gridLineWidth\"\n        />\n        <svg:line\n          *ngIf=\"orient === Orientation.Right\"\n          class=\"gridline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"-gridLineWidth\"\n        />\n      </svg:g>\n    </svg:g>\n\n    <svg:g *ngFor=\"let refLine of referenceLines\">\n      <svg:g *ngIf=\"showRefLines\" [attr.transform]=\"transform(refLine.value)\">\n        <svg:line\n          class=\"refline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"gridLineWidth\"\n          [attr.transform]=\"gridLineTransform()\"\n        />\n        <svg:g *ngIf=\"showRefLabels\">\n          <title>{{ tickTrim(tickFormat(refLine.value)) }}</title>\n          <svg:text\n            class=\"refline-label\"\n            [attr.dy]=\"dy\"\n            [attr.y]=\"-6\"\n            [attr.x]=\"gridLineWidth\"\n            [attr.text-anchor]=\"textAnchor\"\n          >\n            {{ refLine.name }}\n          </svg:text>\n        </svg:g>\n      </svg:g>\n    </svg:g>\n  `, isInline: true, directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: YAxisTicksComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-y-axis-ticks]',\n                    template: `\n    <svg:g #ticksel>\n      <svg:g *ngFor=\"let tick of ticks\" class=\"tick\" [attr.transform]=\"transform(tick)\">\n        <title>{{ tickFormat(tick) }}</title>\n        <svg:text\n          stroke-width=\"0.01\"\n          [attr.dy]=\"dy\"\n          [attr.x]=\"x1\"\n          [attr.y]=\"y1\"\n          [attr.text-anchor]=\"textAnchor\"\n          [style.font-size]=\"'12px'\"\n        >\n          {{ tickTrim(tickFormat(tick)) }}\n        </svg:text>\n      </svg:g>\n    </svg:g>\n\n    <svg:path\n      *ngIf=\"referenceLineLength > 1 && refMax && refMin && showRefLines\"\n      class=\"reference-area\"\n      [attr.d]=\"referenceAreaPath\"\n      [attr.transform]=\"gridLineTransform()\"\n    />\n    <svg:g *ngFor=\"let tick of ticks\" [attr.transform]=\"transform(tick)\">\n      <svg:g *ngIf=\"showGridLines\" [attr.transform]=\"gridLineTransform()\">\n        <svg:line\n          *ngIf=\"orient === Orientation.Left\"\n          class=\"gridline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"gridLineWidth\"\n        />\n        <svg:line\n          *ngIf=\"orient === Orientation.Right\"\n          class=\"gridline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"-gridLineWidth\"\n        />\n      </svg:g>\n    </svg:g>\n\n    <svg:g *ngFor=\"let refLine of referenceLines\">\n      <svg:g *ngIf=\"showRefLines\" [attr.transform]=\"transform(refLine.value)\">\n        <svg:line\n          class=\"refline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"gridLineWidth\"\n          [attr.transform]=\"gridLineTransform()\"\n        />\n        <svg:g *ngIf=\"showRefLabels\">\n          <title>{{ tickTrim(tickFormat(refLine.value)) }}</title>\n          <svg:text\n            class=\"refline-label\"\n            [attr.dy]=\"dy\"\n            [attr.y]=\"-6\"\n            [attr.x]=\"gridLineWidth\"\n            [attr.text-anchor]=\"textAnchor\"\n          >\n            {{ refLine.name }}\n          </svg:text>\n        </svg:g>\n      </svg:g>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { scale: [{\n                type: Input\n            }], orient: [{\n                type: Input\n            }], tickArguments: [{\n                type: Input\n            }], tickValues: [{\n                type: Input\n            }], tickStroke: [{\n                type: Input\n            }], trimTicks: [{\n                type: Input\n            }], maxTickLength: [{\n                type: Input\n            }], tickFormatting: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], gridLineWidth: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], referenceLines: [{\n                type: Input\n            }], showRefLabels: [{\n                type: Input\n            }], showRefLines: [{\n                type: Input\n            }], dimensionsChanged: [{\n                type: Output\n            }], ticksElement: [{\n                type: ViewChild,\n                args: ['ticksel']\n            }] } });\n\nclass YAxisComponent {\n    constructor() {\n        this.showGridLines = false;\n        this.yOrient = Orientation.Left;\n        this.yAxisOffset = 0;\n        this.dimensionsChanged = new EventEmitter();\n        this.yAxisClassName = 'y axis';\n        this.labelOffset = 15;\n        this.fill = 'none';\n        this.stroke = '#CCC';\n        this.tickStroke = '#CCC';\n        this.strokeWidth = 1;\n        this.padding = 5;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.offset = -(this.yAxisOffset + this.padding);\n        if (this.yOrient === Orientation.Right) {\n            this.labelOffset = 65;\n            this.transform = `translate(${this.offset + this.dims.width} , 0)`;\n        }\n        else {\n            this.transform = `translate(${this.offset} , 0)`;\n        }\n        if (this.yAxisTickCount !== undefined) {\n            this.tickArguments = [this.yAxisTickCount];\n        }\n    }\n    emitTicksWidth({ width }) {\n        if (width !== this.labelOffset && this.yOrient === Orientation.Right) {\n            this.labelOffset = width + this.labelOffset;\n            setTimeout(() => {\n                this.dimensionsChanged.emit({ width });\n            }, 0);\n        }\n        else if (width !== this.labelOffset) {\n            this.labelOffset = width;\n            setTimeout(() => {\n                this.dimensionsChanged.emit({ width });\n            }, 0);\n        }\n    }\n}\nYAxisComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: YAxisComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nYAxisComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: { yScale: \"yScale\", dims: \"dims\", trimTicks: \"trimTicks\", maxTickLength: \"maxTickLength\", tickFormatting: \"tickFormatting\", ticks: \"ticks\", showGridLines: \"showGridLines\", showLabel: \"showLabel\", labelText: \"labelText\", yAxisTickCount: \"yAxisTickCount\", yOrient: \"yOrient\", referenceLines: \"referenceLines\", showRefLines: \"showRefLines\", showRefLabels: \"showRefLabels\", yAxisOffset: \"yAxisOffset\" }, outputs: { dimensionsChanged: \"dimensionsChanged\" }, viewQueries: [{ propertyName: \"ticksComponent\", first: true, predicate: YAxisTicksComponent, descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <svg:g [attr.class]=\"yAxisClassName\" [attr.transform]=\"transform\">\n      <svg:g\n        ngx-charts-y-axis-ticks\n        *ngIf=\"yScale\"\n        [trimTicks]=\"trimTicks\"\n        [maxTickLength]=\"maxTickLength\"\n        [tickFormatting]=\"tickFormatting\"\n        [tickArguments]=\"tickArguments\"\n        [tickValues]=\"ticks\"\n        [tickStroke]=\"tickStroke\"\n        [scale]=\"yScale\"\n        [orient]=\"yOrient\"\n        [showGridLines]=\"showGridLines\"\n        [gridLineWidth]=\"dims.width\"\n        [referenceLines]=\"referenceLines\"\n        [showRefLines]=\"showRefLines\"\n        [showRefLabels]=\"showRefLabels\"\n        [height]=\"dims.height\"\n        (dimensionsChanged)=\"emitTicksWidth($event)\"\n      />\n\n      <svg:g\n        ngx-charts-axis-label\n        *ngIf=\"showLabel\"\n        [label]=\"labelText\"\n        [offset]=\"labelOffset\"\n        [orient]=\"yOrient\"\n        [height]=\"dims.height\"\n        [width]=\"dims.width\"\n      ></svg:g>\n    </svg:g>\n  `, isInline: true, components: [{ type: YAxisTicksComponent, selector: \"g[ngx-charts-y-axis-ticks]\", inputs: [\"scale\", \"orient\", \"tickArguments\", \"tickValues\", \"tickStroke\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"gridLineWidth\", \"height\", \"referenceLines\", \"showRefLabels\", \"showRefLines\"], outputs: [\"dimensionsChanged\"] }, { type: AxisLabelComponent, selector: \"g[ngx-charts-axis-label]\", inputs: [\"orient\", \"label\", \"offset\", \"width\", \"height\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: YAxisComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-y-axis]',\n                    template: `\n    <svg:g [attr.class]=\"yAxisClassName\" [attr.transform]=\"transform\">\n      <svg:g\n        ngx-charts-y-axis-ticks\n        *ngIf=\"yScale\"\n        [trimTicks]=\"trimTicks\"\n        [maxTickLength]=\"maxTickLength\"\n        [tickFormatting]=\"tickFormatting\"\n        [tickArguments]=\"tickArguments\"\n        [tickValues]=\"ticks\"\n        [tickStroke]=\"tickStroke\"\n        [scale]=\"yScale\"\n        [orient]=\"yOrient\"\n        [showGridLines]=\"showGridLines\"\n        [gridLineWidth]=\"dims.width\"\n        [referenceLines]=\"referenceLines\"\n        [showRefLines]=\"showRefLines\"\n        [showRefLabels]=\"showRefLabels\"\n        [height]=\"dims.height\"\n        (dimensionsChanged)=\"emitTicksWidth($event)\"\n      />\n\n      <svg:g\n        ngx-charts-axis-label\n        *ngIf=\"showLabel\"\n        [label]=\"labelText\"\n        [offset]=\"labelOffset\"\n        [orient]=\"yOrient\"\n        [height]=\"dims.height\"\n        [width]=\"dims.width\"\n      ></svg:g>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { yScale: [{\n                type: Input\n            }], dims: [{\n                type: Input\n            }], trimTicks: [{\n                type: Input\n            }], maxTickLength: [{\n                type: Input\n            }], tickFormatting: [{\n                type: Input\n            }], ticks: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], showLabel: [{\n                type: Input\n            }], labelText: [{\n                type: Input\n            }], yAxisTickCount: [{\n                type: Input\n            }], yOrient: [{\n                type: Input\n            }], referenceLines: [{\n                type: Input\n            }], showRefLines: [{\n                type: Input\n            }], showRefLabels: [{\n                type: Input\n            }], yAxisOffset: [{\n                type: Input\n            }], dimensionsChanged: [{\n                type: Output\n            }], ticksComponent: [{\n                type: ViewChild,\n                args: [YAxisTicksComponent]\n            }] } });\n\nclass AxesModule {\n}\nAxesModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AxesModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nAxesModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AxesModule, declarations: [AxisLabelComponent, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent], imports: [CommonModule], exports: [AxisLabelComponent, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent] });\nAxesModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AxesModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AxesModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [AxisLabelComponent, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent],\n                    exports: [AxisLabelComponent, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent]\n                }]\n        }] });\n\nvar StyleTypes;\n(function (StyleTypes) {\n    StyleTypes[\"popover\"] = \"popover\";\n    StyleTypes[\"tooltip\"] = \"tooltip\";\n})(StyleTypes || (StyleTypes = {}));\n\nvar ShowTypes;\n(function (ShowTypes) {\n    ShowTypes[ShowTypes[\"all\"] = 'all'] = \"all\";\n    ShowTypes[ShowTypes[\"focus\"] = 'focus'] = \"focus\";\n    ShowTypes[ShowTypes[\"mouseover\"] = 'mouseover'] = \"mouseover\";\n})(ShowTypes || (ShowTypes = {}));\n\nclass TooltipDirective {\n    constructor(tooltipService, viewContainerRef, renderer) {\n        this.tooltipService = tooltipService;\n        this.viewContainerRef = viewContainerRef;\n        this.renderer = renderer;\n        this.tooltipCssClass = '';\n        this.tooltipAppendToBody = true;\n        this.tooltipSpacing = 10;\n        this.tooltipDisabled = false;\n        this.tooltipShowCaret = true;\n        this.tooltipPlacement = PlacementTypes.Top;\n        this.tooltipAlignment = PlacementTypes.Center;\n        this.tooltipType = StyleTypes.popover;\n        this.tooltipCloseOnClickOutside = true;\n        this.tooltipCloseOnMouseLeave = true;\n        this.tooltipHideTimeout = 300;\n        this.tooltipShowTimeout = 100;\n        this.tooltipShowEvent = ShowTypes.all;\n        this.tooltipImmediateExit = false;\n        this.show = new EventEmitter();\n        this.hide = new EventEmitter();\n    }\n    get listensForFocus() {\n        return this.tooltipShowEvent === ShowTypes.all || this.tooltipShowEvent === ShowTypes.focus;\n    }\n    get listensForHover() {\n        return this.tooltipShowEvent === ShowTypes.all || this.tooltipShowEvent === ShowTypes.mouseover;\n    }\n    ngOnDestroy() {\n        this.hideTooltip(true);\n    }\n    onFocus() {\n        if (this.listensForFocus) {\n            this.showTooltip();\n        }\n    }\n    onBlur() {\n        if (this.listensForFocus) {\n            this.hideTooltip(true);\n        }\n    }\n    onMouseEnter() {\n        if (this.listensForHover) {\n            this.showTooltip();\n        }\n    }\n    onMouseLeave(target) {\n        if (this.listensForHover && this.tooltipCloseOnMouseLeave) {\n            clearTimeout(this.timeout);\n            if (this.component) {\n                const contentDom = this.component.instance.element.nativeElement;\n                const contains = contentDom.contains(target);\n                if (contains)\n                    return;\n            }\n            this.hideTooltip(this.tooltipImmediateExit);\n        }\n    }\n    onMouseClick() {\n        if (this.listensForHover) {\n            this.hideTooltip(true);\n        }\n    }\n    showTooltip(immediate) {\n        if (this.component || this.tooltipDisabled)\n            return;\n        const time = immediate\n            ? 0\n            : this.tooltipShowTimeout + (navigator.userAgent.match(/\\(i[^;]+;( U;)? CPU.+Mac OS X/) ? 400 : 0);\n        clearTimeout(this.timeout);\n        this.timeout = setTimeout(() => {\n            this.tooltipService.destroyAll();\n            const options = this.createBoundOptions();\n            this.component = this.tooltipService.create(options);\n            // add a tiny timeout to avoid event re-triggers\n            setTimeout(() => {\n                if (this.component) {\n                    this.addHideListeners(this.component.instance.element.nativeElement);\n                }\n            }, 10);\n            this.show.emit(true);\n        }, time);\n    }\n    addHideListeners(tooltip) {\n        // on mouse enter, cancel the hide triggered by the leave\n        this.mouseEnterContentEvent = this.renderer.listen(tooltip, 'mouseenter', () => {\n            clearTimeout(this.timeout);\n        });\n        // content mouse leave listener\n        if (this.tooltipCloseOnMouseLeave) {\n            this.mouseLeaveContentEvent = this.renderer.listen(tooltip, 'mouseleave', () => {\n                this.hideTooltip(this.tooltipImmediateExit);\n            });\n        }\n        // content close on click outside\n        if (this.tooltipCloseOnClickOutside) {\n            this.documentClickEvent = this.renderer.listen('window', 'click', event => {\n                const contains = tooltip.contains(event.target);\n                if (!contains)\n                    this.hideTooltip();\n            });\n        }\n    }\n    hideTooltip(immediate = false) {\n        if (!this.component)\n            return;\n        const destroyFn = () => {\n            // remove events\n            if (this.mouseLeaveContentEvent)\n                this.mouseLeaveContentEvent();\n            if (this.mouseEnterContentEvent)\n                this.mouseEnterContentEvent();\n            if (this.documentClickEvent)\n                this.documentClickEvent();\n            // emit events\n            this.hide.emit(true);\n            // destroy component\n            this.tooltipService.destroy(this.component);\n            this.component = undefined;\n        };\n        clearTimeout(this.timeout);\n        if (!immediate) {\n            this.timeout = setTimeout(destroyFn, this.tooltipHideTimeout);\n        }\n        else {\n            destroyFn();\n        }\n    }\n    createBoundOptions() {\n        return {\n            title: this.tooltipTitle,\n            template: this.tooltipTemplate,\n            host: this.viewContainerRef.element,\n            placement: this.tooltipPlacement,\n            alignment: this.tooltipAlignment,\n            type: this.tooltipType,\n            showCaret: this.tooltipShowCaret,\n            cssClass: this.tooltipCssClass,\n            spacing: this.tooltipSpacing,\n            context: this.tooltipContext\n        };\n    }\n}\nTooltipDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipDirective, deps: [{ token: TooltipService }, { token: i0.ViewContainerRef }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Directive });\nTooltipDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: { tooltipCssClass: \"tooltipCssClass\", tooltipTitle: \"tooltipTitle\", tooltipAppendToBody: \"tooltipAppendToBody\", tooltipSpacing: \"tooltipSpacing\", tooltipDisabled: \"tooltipDisabled\", tooltipShowCaret: \"tooltipShowCaret\", tooltipPlacement: \"tooltipPlacement\", tooltipAlignment: \"tooltipAlignment\", tooltipType: \"tooltipType\", tooltipCloseOnClickOutside: \"tooltipCloseOnClickOutside\", tooltipCloseOnMouseLeave: \"tooltipCloseOnMouseLeave\", tooltipHideTimeout: \"tooltipHideTimeout\", tooltipShowTimeout: \"tooltipShowTimeout\", tooltipTemplate: \"tooltipTemplate\", tooltipShowEvent: \"tooltipShowEvent\", tooltipContext: \"tooltipContext\", tooltipImmediateExit: \"tooltipImmediateExit\" }, outputs: { show: \"show\", hide: \"hide\" }, host: { listeners: { \"focusin\": \"onFocus()\", \"blur\": \"onBlur()\", \"mouseenter\": \"onMouseEnter()\", \"mouseleave\": \"onMouseLeave($event.target)\", \"click\": \"onMouseClick()\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: '[ngx-tooltip]' }]\n        }], ctorParameters: function () { return [{ type: TooltipService }, { type: i0.ViewContainerRef }, { type: i0.Renderer2 }]; }, propDecorators: { tooltipCssClass: [{\n                type: Input\n            }], tooltipTitle: [{\n                type: Input\n            }], tooltipAppendToBody: [{\n                type: Input\n            }], tooltipSpacing: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipShowCaret: [{\n                type: Input\n            }], tooltipPlacement: [{\n                type: Input\n            }], tooltipAlignment: [{\n                type: Input\n            }], tooltipType: [{\n                type: Input\n            }], tooltipCloseOnClickOutside: [{\n                type: Input\n            }], tooltipCloseOnMouseLeave: [{\n                type: Input\n            }], tooltipHideTimeout: [{\n                type: Input\n            }], tooltipShowTimeout: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], tooltipShowEvent: [{\n                type: Input\n            }], tooltipContext: [{\n                type: Input\n            }], tooltipImmediateExit: [{\n                type: Input\n            }], show: [{\n                type: Output\n            }], hide: [{\n                type: Output\n            }], onFocus: [{\n                type: HostListener,\n                args: ['focusin']\n            }], onBlur: [{\n                type: HostListener,\n                args: ['blur']\n            }], onMouseEnter: [{\n                type: HostListener,\n                args: ['mouseenter']\n            }], onMouseLeave: [{\n                type: HostListener,\n                args: ['mouseleave', ['$event.target']]\n            }], onMouseClick: [{\n                type: HostListener,\n                args: ['click']\n            }] } });\n\nclass TooltipModule {\n}\nTooltipModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTooltipModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipModule, declarations: [TooltipContentComponent, TooltipDirective], imports: [CommonModule], exports: [TooltipContentComponent, TooltipDirective] });\nTooltipModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipModule, providers: [InjectionService, TooltipService], imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [TooltipContentComponent, TooltipDirective],\n                    providers: [InjectionService, TooltipService],\n                    exports: [TooltipContentComponent, TooltipDirective],\n                    imports: [CommonModule],\n                    entryComponents: [TooltipContentComponent]\n                }]\n        }] });\n\nconst cache = {};\n/**\n * Generates a short id.\n *\n * Description:\n *   A 4-character alphanumeric sequence (364 = 1.6 million)\n *   This should only be used for JavaScript specific models.\n *   http://stackoverflow.com/questions/6248666/how-to-generate-short-uid-like-ax4j9z-in-js\n *\n *   Example: `ebgf`\n */\nfunction id() {\n    let newId = ('0000' + ((Math.random() * Math.pow(36, 4)) << 0).toString(36)).slice(-4);\n    // append a 'a' because neo gets mad\n    newId = `a${newId}`;\n    // ensure not already used\n    if (!cache[newId]) {\n        cache[newId] = true;\n        return newId;\n    }\n    return id();\n}\n\nvar BarOrientation;\n(function (BarOrientation) {\n    BarOrientation[\"Vertical\"] = \"vertical\";\n    BarOrientation[\"Horizontal\"] = \"horizontal\";\n})(BarOrientation || (BarOrientation = {}));\n\nclass SvgLinearGradientComponent {\n    constructor() {\n        this.orientation = BarOrientation.Vertical;\n    }\n    ngOnChanges(changes) {\n        this.x1 = '0%';\n        this.x2 = '0%';\n        this.y1 = '0%';\n        this.y2 = '0%';\n        if (this.orientation === BarOrientation.Horizontal) {\n            this.x2 = '100%';\n        }\n        else if (this.orientation === BarOrientation.Vertical) {\n            this.y1 = '100%';\n        }\n    }\n}\nSvgLinearGradientComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SvgLinearGradientComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nSvgLinearGradientComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: SvgLinearGradientComponent, selector: \"g[ngx-charts-svg-linear-gradient]\", inputs: { orientation: \"orientation\", name: \"name\", stops: \"stops\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:linearGradient [id]=\"name\" [attr.x1]=\"x1\" [attr.y1]=\"y1\" [attr.x2]=\"x2\" [attr.y2]=\"y2\">\n      <svg:stop\n        *ngFor=\"let stop of stops\"\n        [attr.offset]=\"stop.offset + '%'\"\n        [style.stop-color]=\"stop.color\"\n        [style.stop-opacity]=\"stop.opacity\"\n      />\n    </svg:linearGradient>\n  `, isInline: true, directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SvgLinearGradientComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-svg-linear-gradient]',\n                    template: `\n    <svg:linearGradient [id]=\"name\" [attr.x1]=\"x1\" [attr.y1]=\"y1\" [attr.x2]=\"x2\" [attr.y2]=\"y2\">\n      <svg:stop\n        *ngFor=\"let stop of stops\"\n        [attr.offset]=\"stop.offset + '%'\"\n        [style.stop-color]=\"stop.color\"\n        [style.stop-opacity]=\"stop.opacity\"\n      />\n    </svg:linearGradient>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { orientation: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], stops: [{\n                type: Input\n            }] } });\n\nclass CircleComponent {\n    constructor() {\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n    }\n    onClick() {\n        this.select.emit(this.data);\n    }\n    onMouseEnter() {\n        this.activate.emit(this.data);\n    }\n    onMouseLeave() {\n        this.deactivate.emit(this.data);\n    }\n    ngOnChanges(changes) {\n        this.classNames = Array.isArray(this.classNames) ? this.classNames.join(' ') : '';\n        this.classNames += 'circle';\n    }\n}\nCircleComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CircleComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nCircleComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CircleComponent, selector: \"g[ngx-charts-circle]\", inputs: { cx: \"cx\", cy: \"cy\", r: \"r\", fill: \"fill\", stroke: \"stroke\", data: \"data\", classNames: \"classNames\", circleOpacity: \"circleOpacity\", pointerEvents: \"pointerEvents\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, host: { listeners: { \"click\": \"onClick()\", \"mouseenter\": \"onMouseEnter()\", \"mouseleave\": \"onMouseLeave()\" } }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:circle\n      [attr.cx]=\"cx\"\n      [attr.cy]=\"cy\"\n      [attr.r]=\"r\"\n      [attr.fill]=\"fill\"\n      [attr.stroke]=\"stroke\"\n      [attr.opacity]=\"circleOpacity\"\n      [attr.class]=\"classNames\"\n      [attr.pointer-events]=\"pointerEvents\"\n    />\n  `, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CircleComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-circle]',\n                    template: `\n    <svg:circle\n      [attr.cx]=\"cx\"\n      [attr.cy]=\"cy\"\n      [attr.r]=\"r\"\n      [attr.fill]=\"fill\"\n      [attr.stroke]=\"stroke\"\n      [attr.opacity]=\"circleOpacity\"\n      [attr.class]=\"classNames\"\n      [attr.pointer-events]=\"pointerEvents\"\n    />\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { cx: [{\n                type: Input\n            }], cy: [{\n                type: Input\n            }], r: [{\n                type: Input\n            }], fill: [{\n                type: Input\n            }], stroke: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], classNames: [{\n                type: Input\n            }], circleOpacity: [{\n                type: Input\n            }], pointerEvents: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], onClick: [{\n                type: HostListener,\n                args: ['click']\n            }], onMouseEnter: [{\n                type: HostListener,\n                args: ['mouseenter']\n            }], onMouseLeave: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nvar SeriesType;\n(function (SeriesType) {\n    SeriesType[\"Standard\"] = \"standard\";\n    SeriesType[\"Stacked\"] = \"stacked\";\n})(SeriesType || (SeriesType = {}));\nclass CircleSeriesComponent {\n    constructor(platformId) {\n        this.platformId = platformId;\n        this.type = SeriesType.Standard;\n        this.tooltipDisabled = false;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.barVisible = false;\n        this.barOrientation = BarOrientation;\n        this.placementTypes = PlacementTypes;\n        this.styleTypes = StyleTypes;\n        this.isSSR = false;\n    }\n    ngOnInit() {\n        this.gradientId = 'grad' + id().toString();\n        this.gradientFill = `url(#${this.gradientId})`;\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    ngOnChanges() {\n        this.update();\n    }\n    update() {\n        this.circle = this.getActiveCircle();\n    }\n    getActiveCircle() {\n        const indexActiveDataPoint = this.data.series.findIndex(d => {\n            const label = d.name;\n            return label && this.visibleValue && label.toString() === this.visibleValue.toString() && d.value !== undefined;\n        });\n        if (indexActiveDataPoint === -1) {\n            // No valid point is 'active/hovered over' at this moment.\n            return undefined;\n        }\n        return this.mapDataPointToCircle(this.data.series[indexActiveDataPoint], indexActiveDataPoint);\n    }\n    mapDataPointToCircle(d, i) {\n        const seriesName = this.data.name;\n        const value = d.value;\n        const label = d.name;\n        const tooltipLabel = formatLabel(label);\n        let cx;\n        if (this.scaleType === ScaleType.Time) {\n            cx = this.xScale(label);\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            cx = this.xScale(Number(label));\n        }\n        else {\n            cx = this.xScale(label);\n        }\n        const cy = this.yScale(this.type === SeriesType.Standard ? value : d.d1);\n        const radius = 5;\n        const height = this.yScale.range()[0] - cy;\n        const opacity = 1;\n        let color;\n        if (this.colors.scaleType === ScaleType.Linear) {\n            if (this.type === SeriesType.Standard) {\n                color = this.colors.getColor(value);\n            }\n            else {\n                color = this.colors.getColor(d.d1);\n            }\n        }\n        else {\n            color = this.colors.getColor(seriesName);\n        }\n        const data = Object.assign({}, d, {\n            series: seriesName,\n            value,\n            name: label\n        });\n        return {\n            classNames: [`circle-data-${i}`],\n            value,\n            label,\n            data,\n            cx,\n            cy,\n            radius,\n            height,\n            tooltipLabel,\n            color,\n            opacity,\n            seriesName,\n            gradientStops: this.getGradientStops(color),\n            min: d.min,\n            max: d.max\n        };\n    }\n    getTooltipText({ tooltipLabel, value, seriesName, min, max }) {\n        return `\n      <span class=\"tooltip-label\">${escapeLabel(seriesName)} • ${escapeLabel(tooltipLabel)}</span>\n      <span class=\"tooltip-val\">${value.toLocaleString()}${this.getTooltipMinMaxText(min, max)}</span>\n    `;\n    }\n    getTooltipMinMaxText(min, max) {\n        if (min !== undefined || max !== undefined) {\n            let result = ' (';\n            if (min !== undefined) {\n                if (max === undefined) {\n                    result += '≥';\n                }\n                result += min.toLocaleString();\n                if (max !== undefined) {\n                    result += ' - ';\n                }\n            }\n            else if (max !== undefined) {\n                result += '≤';\n            }\n            if (max !== undefined) {\n                result += max.toLocaleString();\n            }\n            result += ')';\n            return result;\n        }\n        else {\n            return '';\n        }\n    }\n    getGradientStops(color) {\n        return [\n            {\n                offset: 0,\n                color,\n                opacity: 0.2\n            },\n            {\n                offset: 100,\n                color,\n                opacity: 1\n            }\n        ];\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.name === d.name;\n        });\n        return item !== undefined;\n    }\n    activateCircle() {\n        this.barVisible = true;\n        this.activate.emit({ name: this.data.name });\n    }\n    deactivateCircle() {\n        this.barVisible = false;\n        this.circle.opacity = 0;\n        this.deactivate.emit({ name: this.data.name });\n    }\n}\nCircleSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CircleSeriesComponent, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nCircleSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CircleSeriesComponent, selector: \"g[ngx-charts-circle-series]\", inputs: { data: \"data\", type: \"type\", xScale: \"xScale\", yScale: \"yScale\", colors: \"colors\", scaleType: \"scaleType\", visibleValue: \"visibleValue\", activeEntries: \"activeEntries\", tooltipDisabled: \"tooltipDisabled\", tooltipTemplate: \"tooltipTemplate\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g *ngIf=\"circle\">\n      <defs>\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          [orientation]=\"barOrientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"circle.gradientStops\"\n        />\n      </defs>\n      <svg:rect\n        *ngIf=\"!isSSR && barVisible && type === 'standard'\"\n        [@animationState]=\"'active'\"\n        [attr.x]=\"circle.cx - circle.radius\"\n        [attr.y]=\"circle.cy\"\n        [attr.width]=\"circle.radius * 2\"\n        [attr.height]=\"circle.height\"\n        [attr.fill]=\"gradientFill\"\n        class=\"tooltip-bar\"\n      />\n      <svg:rect\n        *ngIf=\"isSSR && barVisible && type === 'standard'\"\n        [attr.x]=\"circle.cx - circle.radius\"\n        [attr.y]=\"circle.cy\"\n        [attr.width]=\"circle.radius * 2\"\n        [attr.height]=\"circle.height\"\n        [attr.fill]=\"gradientFill\"\n        class=\"tooltip-bar\"\n      />\n      <svg:g\n        ngx-charts-circle\n        class=\"circle\"\n        [cx]=\"circle.cx\"\n        [cy]=\"circle.cy\"\n        [r]=\"circle.radius\"\n        [fill]=\"circle.color\"\n        [class.active]=\"isActive({ name: circle.seriesName })\"\n        [pointerEvents]=\"circle.value === 0 ? 'none' : 'all'\"\n        [data]=\"circle.value\"\n        [classNames]=\"circle.classNames\"\n        (select)=\"onClick(circle.data)\"\n        (activate)=\"activateCircle()\"\n        (deactivate)=\"deactivateCircle()\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Top\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(circle)\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"circle.data\"\n      />\n    </svg:g>\n  `, isInline: true, components: [{ type: SvgLinearGradientComponent, selector: \"g[ngx-charts-svg-linear-gradient]\", inputs: [\"orientation\", \"name\", \"stops\"] }, { type: CircleComponent, selector: \"g[ngx-charts-circle]\", inputs: [\"cx\", \"cy\", \"r\", \"fill\", \"stroke\", \"data\", \"classNames\", \"circleOpacity\", \"pointerEvents\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }], animations: [\n        trigger('animationState', [\n            transition(':enter', [\n                style({\n                    opacity: 0\n                }),\n                animate(250, style({ opacity: 1 }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CircleSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-circle-series]',\n                    template: `\n    <svg:g *ngIf=\"circle\">\n      <defs>\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          [orientation]=\"barOrientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"circle.gradientStops\"\n        />\n      </defs>\n      <svg:rect\n        *ngIf=\"!isSSR && barVisible && type === 'standard'\"\n        [@animationState]=\"'active'\"\n        [attr.x]=\"circle.cx - circle.radius\"\n        [attr.y]=\"circle.cy\"\n        [attr.width]=\"circle.radius * 2\"\n        [attr.height]=\"circle.height\"\n        [attr.fill]=\"gradientFill\"\n        class=\"tooltip-bar\"\n      />\n      <svg:rect\n        *ngIf=\"isSSR && barVisible && type === 'standard'\"\n        [attr.x]=\"circle.cx - circle.radius\"\n        [attr.y]=\"circle.cy\"\n        [attr.width]=\"circle.radius * 2\"\n        [attr.height]=\"circle.height\"\n        [attr.fill]=\"gradientFill\"\n        class=\"tooltip-bar\"\n      />\n      <svg:g\n        ngx-charts-circle\n        class=\"circle\"\n        [cx]=\"circle.cx\"\n        [cy]=\"circle.cy\"\n        [r]=\"circle.radius\"\n        [fill]=\"circle.color\"\n        [class.active]=\"isActive({ name: circle.seriesName })\"\n        [pointerEvents]=\"circle.value === 0 ? 'none' : 'all'\"\n        [data]=\"circle.value\"\n        [classNames]=\"circle.classNames\"\n        (select)=\"onClick(circle.data)\"\n        (activate)=\"activateCircle()\"\n        (deactivate)=\"deactivateCircle()\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Top\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(circle)\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"circle.data\"\n      />\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    animations: [\n                        trigger('animationState', [\n                            transition(':enter', [\n                                style({\n                                    opacity: 0\n                                }),\n                                animate(250, style({ opacity: 1 }))\n                            ])\n                        ])\n                    ]\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { data: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], scaleType: [{\n                type: Input\n            }], visibleValue: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }] } });\n\nclass GridPanelComponent {\n}\nGridPanelComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GridPanelComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nGridPanelComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: GridPanelComponent, selector: \"g[ngx-charts-grid-panel]\", inputs: { width: \"width\", height: \"height\", x: \"x\", y: \"y\" }, ngImport: i0, template: `\n    <svg:rect [attr.height]=\"height\" [attr.width]=\"width\" [attr.x]=\"x\" [attr.y]=\"y\" stroke=\"none\" class=\"gridpanel\" />\n  `, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GridPanelComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-grid-panel]',\n                    template: `\n    <svg:rect [attr.height]=\"height\" [attr.width]=\"width\" [attr.x]=\"x\" [attr.y]=\"y\" stroke=\"none\" class=\"gridpanel\" />\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { width: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], x: [{\n                type: Input\n            }], y: [{\n                type: Input\n            }] } });\n\nvar ClassEnum;\n(function (ClassEnum) {\n    ClassEnum[\"Odd\"] = \"odd\";\n    ClassEnum[\"Even\"] = \"even\";\n})(ClassEnum || (ClassEnum = {}));\nclass GridPanelSeriesComponent {\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.gridPanels = this.getGridPanels();\n    }\n    getGridPanels() {\n        return this.data.map(d => {\n            let offset;\n            let width;\n            let height;\n            let x;\n            let y;\n            let className = ClassEnum.Odd;\n            if (this.orient === BarOrientation.Vertical) {\n                const position = this.xScale(d.name);\n                const positionIndex = Number.parseInt((position / this.xScale.step()).toString(), 10);\n                if (positionIndex % 2 === 1) {\n                    className = ClassEnum.Even;\n                }\n                offset = this.xScale.bandwidth() * this.xScale.paddingInner();\n                width = this.xScale.bandwidth() + offset;\n                height = this.dims.height;\n                x = this.xScale(d.name) - offset / 2;\n                y = 0;\n            }\n            else if (this.orient === BarOrientation.Horizontal) {\n                const position = this.yScale(d.name);\n                const positionIndex = Number.parseInt((position / this.yScale.step()).toString(), 10);\n                if (positionIndex % 2 === 1) {\n                    className = ClassEnum.Even;\n                }\n                offset = this.yScale.bandwidth() * this.yScale.paddingInner();\n                width = this.dims.width;\n                height = this.yScale.bandwidth() + offset;\n                x = 0;\n                y = this.yScale(d.name) - offset / 2;\n            }\n            return {\n                name: d.name,\n                class: className,\n                height,\n                width,\n                x,\n                y\n            };\n        });\n    }\n}\nGridPanelSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GridPanelSeriesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nGridPanelSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: GridPanelSeriesComponent, selector: \"g[ngx-charts-grid-panel-series]\", inputs: { data: \"data\", dims: \"dims\", xScale: \"xScale\", yScale: \"yScale\", orient: \"orient\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g\n      ngx-charts-grid-panel\n      *ngFor=\"let gridPanel of gridPanels\"\n      [height]=\"gridPanel.height\"\n      [width]=\"gridPanel.width\"\n      [x]=\"gridPanel.x\"\n      [y]=\"gridPanel.y\"\n      [class.grid-panel]=\"true\"\n      [class.odd]=\"gridPanel.class === 'odd'\"\n      [class.even]=\"gridPanel.class === 'even'\"\n    ></svg:g>\n  `, isInline: true, components: [{ type: GridPanelComponent, selector: \"g[ngx-charts-grid-panel]\", inputs: [\"width\", \"height\", \"x\", \"y\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GridPanelSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-grid-panel-series]',\n                    template: `\n    <svg:g\n      ngx-charts-grid-panel\n      *ngFor=\"let gridPanel of gridPanels\"\n      [height]=\"gridPanel.height\"\n      [width]=\"gridPanel.width\"\n      [x]=\"gridPanel.x\"\n      [y]=\"gridPanel.y\"\n      [class.grid-panel]=\"true\"\n      [class.odd]=\"gridPanel.class === 'odd'\"\n      [class.even]=\"gridPanel.class === 'even'\"\n    ></svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { data: [{\n                type: Input\n            }], dims: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], orient: [{\n                type: Input\n            }] } });\n\nclass SvgRadialGradientComponent {\n    constructor() {\n        this.endOpacity = 1;\n        this.cx = 0;\n        this.cy = 0;\n    }\n    get stops() {\n        return this.stopsInput || this.stopsDefault;\n    }\n    set stops(value) {\n        this.stopsInput = value;\n    }\n    ngOnChanges(changes) {\n        this.r = '30%';\n        if ('color' in changes || 'startOpacity' in changes || 'endOpacity' in changes) {\n            this.stopsDefault = [\n                {\n                    offset: 0,\n                    color: this.color,\n                    opacity: this.startOpacity\n                },\n                {\n                    offset: 100,\n                    color: this.color,\n                    opacity: this.endOpacity\n                }\n            ];\n        }\n    }\n}\nSvgRadialGradientComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SvgRadialGradientComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nSvgRadialGradientComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: SvgRadialGradientComponent, selector: \"g[ngx-charts-svg-radial-gradient]\", inputs: { color: \"color\", name: \"name\", startOpacity: \"startOpacity\", endOpacity: \"endOpacity\", cx: \"cx\", cy: \"cy\", stops: \"stops\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:radialGradient [id]=\"name\" [attr.cx]=\"cx\" [attr.cy]=\"cy\" [attr.r]=\"r\" gradientUnits=\"userSpaceOnUse\">\n      <svg:stop\n        *ngFor=\"let stop of stops\"\n        [attr.offset]=\"stop.offset + '%'\"\n        [style.stop-color]=\"stop.color\"\n        [style.stop-opacity]=\"stop.opacity\"\n      />\n    </svg:radialGradient>\n  `, isInline: true, directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SvgRadialGradientComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-svg-radial-gradient]',\n                    template: `\n    <svg:radialGradient [id]=\"name\" [attr.cx]=\"cx\" [attr.cy]=\"cy\" [attr.r]=\"r\" gradientUnits=\"userSpaceOnUse\">\n      <svg:stop\n        *ngFor=\"let stop of stops\"\n        [attr.offset]=\"stop.offset + '%'\"\n        [style.stop-color]=\"stop.color\"\n        [style.stop-opacity]=\"stop.opacity\"\n      />\n    </svg:radialGradient>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { color: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], startOpacity: [{\n                type: Input\n            }], endOpacity: [{\n                type: Input\n            }], cx: [{\n                type: Input\n            }], cy: [{\n                type: Input\n            }], stops: [{\n                type: Input\n            }] } });\n\nclass AreaComponent {\n    constructor(element) {\n        this.opacity = 1;\n        this.startOpacity = 0.5;\n        this.endOpacity = 1;\n        this.gradient = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.animationsLoaded = false;\n        this.hasGradient = false;\n        this.barOrientation = BarOrientation;\n        this.element = element.nativeElement;\n    }\n    ngOnChanges() {\n        this.update();\n        if (!this.animationsLoaded) {\n            this.loadAnimation();\n            this.animationsLoaded = true;\n        }\n    }\n    update() {\n        this.gradientId = 'grad' + id().toString();\n        this.gradientFill = `url(#${this.gradientId})`;\n        if (this.gradient || this.stops) {\n            this.gradientStops = this.getGradient();\n            this.hasGradient = true;\n        }\n        else {\n            this.hasGradient = false;\n        }\n        this.updatePathEl();\n    }\n    loadAnimation() {\n        this.areaPath = this.startingPath;\n        setTimeout(this.updatePathEl.bind(this), 100);\n    }\n    updatePathEl() {\n        const node = select(this.element).select('.area');\n        if (this.animations) {\n            node.transition().duration(750).attr('d', this.path);\n        }\n        else {\n            node.attr('d', this.path);\n        }\n    }\n    getGradient() {\n        if (this.stops) {\n            return this.stops;\n        }\n        return [\n            {\n                offset: 0,\n                color: this.fill,\n                opacity: this.startOpacity\n            },\n            {\n                offset: 100,\n                color: this.fill,\n                opacity: this.endOpacity\n            }\n        ];\n    }\n}\nAreaComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nAreaComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: AreaComponent, selector: \"g[ngx-charts-area]\", inputs: { data: \"data\", path: \"path\", startingPath: \"startingPath\", fill: \"fill\", opacity: \"opacity\", startOpacity: \"startOpacity\", endOpacity: \"endOpacity\", gradient: \"gradient\", stops: \"stops\", animations: \"animations\" }, outputs: { select: \"select\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:defs *ngIf=\"gradient\">\n      <svg:g\n        ngx-charts-svg-linear-gradient\n        [orientation]=\"barOrientation.Vertical\"\n        [name]=\"gradientId\"\n        [stops]=\"gradientStops\"\n      />\n    </svg:defs>\n    <svg:path class=\"area\" [attr.d]=\"areaPath\" [attr.fill]=\"gradient ? gradientFill : fill\" [style.opacity]=\"opacity\" />\n  `, isInline: true, components: [{ type: SvgLinearGradientComponent, selector: \"g[ngx-charts-svg-linear-gradient]\", inputs: [\"orientation\", \"name\", \"stops\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-area]',\n                    template: `\n    <svg:defs *ngIf=\"gradient\">\n      <svg:g\n        ngx-charts-svg-linear-gradient\n        [orientation]=\"barOrientation.Vertical\"\n        [name]=\"gradientId\"\n        [stops]=\"gradientStops\"\n      />\n    </svg:defs>\n    <svg:path class=\"area\" [attr.d]=\"areaPath\" [attr.fill]=\"gradient ? gradientFill : fill\" [style.opacity]=\"opacity\" />\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { data: [{\n                type: Input\n            }], path: [{\n                type: Input\n            }], startingPath: [{\n                type: Input\n            }], fill: [{\n                type: Input\n            }], opacity: [{\n                type: Input\n            }], startOpacity: [{\n                type: Input\n            }], endOpacity: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], stops: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }] } });\n\n// Robert Penner's easeOutExpo\nfunction easeOutExpo(t, b, c, d) {\n    return (c * (-Math.pow(2, (-10 * t) / d) + 1) * 1024) / 1023 + b;\n}\n/**\n * Counts from a number to the end incrementally.\n */\nfunction count(countFrom, countTo, countDecimals, countDuration, callback) {\n    const startVal = Number(countFrom);\n    const endVal = Number(countTo);\n    const countDown = startVal > endVal;\n    const decimals = Math.max(0, countDecimals);\n    const dec = Math.pow(10, decimals);\n    const duration = Number(countDuration) * 1000;\n    let startTime;\n    function runCount(timestamp) {\n        let frameVal;\n        const progress = timestamp - startTime;\n        if (countDown) {\n            frameVal = startVal - easeOutExpo(progress, 0, startVal - endVal, duration);\n        }\n        else {\n            frameVal = easeOutExpo(progress, startVal, endVal - startVal, duration);\n        }\n        if (countDown) {\n            frameVal = frameVal < endVal ? endVal : frameVal;\n        }\n        else {\n            frameVal = frameVal > endVal ? endVal : frameVal;\n        }\n        frameVal = Math.round(frameVal * dec) / dec;\n        const tick = progress < duration;\n        callback({\n            value: frameVal,\n            progress,\n            timestamp,\n            finished: !tick\n        });\n        if (tick) {\n            return requestAnimationFrame(val => runCount(val));\n        }\n    }\n    return requestAnimationFrame(timestamp => {\n        startTime = timestamp;\n        return runCount(timestamp);\n    });\n}\n/**\n * Determine decimals places\n *\n * @export\n */\nfunction decimalChecker(countTo) {\n    const endVal = Number(countTo);\n    if (endVal % 1 !== 0 && Math.abs(endVal) <= 10) {\n        return 2;\n    }\n    return 0;\n}\n\n/**\n * Count up component\n *\n * Loosely inspired by:\n *  - https://github.com/izupet/angular2-counto\n *  - https://inorganik.github.io/countUp.js/\n *\n * @export\n */\nclass CountUpDirective {\n    constructor(cd, element) {\n        this.cd = cd;\n        this.countDuration = 1;\n        this.countPrefix = '';\n        this.countSuffix = '';\n        this.countChange = new EventEmitter();\n        this.countFinish = new EventEmitter();\n        this.value = '';\n        this._countDecimals = 0;\n        this._countTo = 0;\n        this._countFrom = 0;\n        this.nativeElement = element.nativeElement;\n    }\n    set countDecimals(val) {\n        this._countDecimals = val;\n    }\n    get countDecimals() {\n        if (this._countDecimals)\n            return this._countDecimals;\n        return decimalChecker(this.countTo);\n    }\n    set countTo(val) {\n        this._countTo = parseFloat(val);\n        this.start();\n    }\n    get countTo() {\n        return this._countTo;\n    }\n    set countFrom(val) {\n        this._countFrom = parseFloat(val);\n        this.start();\n    }\n    get countFrom() {\n        return this._countFrom;\n    }\n    ngOnDestroy() {\n        cancelAnimationFrame(this.animationReq);\n    }\n    start() {\n        cancelAnimationFrame(this.animationReq);\n        const valueFormatting = this.valueFormatting || (value => `${this.countPrefix}${value.toLocaleString()}${this.countSuffix}`);\n        const callback = ({ value, progress, finished }) => {\n            this.value = valueFormatting(value);\n            this.cd.markForCheck();\n            if (!finished)\n                this.countChange.emit({ value: this.value, progress });\n            if (finished)\n                this.countFinish.emit({ value: this.value, progress });\n        };\n        this.animationReq = count(this.countFrom, this.countTo, this.countDecimals, this.countDuration, callback);\n    }\n}\nCountUpDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CountUpDirective, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nCountUpDirective.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CountUpDirective, selector: \"[ngx-charts-count-up]\", inputs: { countDuration: \"countDuration\", countPrefix: \"countPrefix\", countSuffix: \"countSuffix\", valueFormatting: \"valueFormatting\", countDecimals: \"countDecimals\", countTo: \"countTo\", countFrom: \"countFrom\" }, outputs: { countChange: \"countChange\", countFinish: \"countFinish\" }, ngImport: i0, template: ` {{ value }} `, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CountUpDirective, decorators: [{\n            type: Component,\n            args: [{\n                    selector: '[ngx-charts-count-up]',\n                    template: ` {{ value }} `\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }]; }, propDecorators: { countDuration: [{\n                type: Input\n            }], countPrefix: [{\n                type: Input\n            }], countSuffix: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], countDecimals: [{\n                type: Input\n            }], countTo: [{\n                type: Input\n            }], countFrom: [{\n                type: Input\n            }], countChange: [{\n                type: Output\n            }], countFinish: [{\n                type: Output\n            }] } });\n\n// If we don't check whether 'window' and 'global' variables are defined,\n// code will fail in browser/node with 'variable is undefined' error.\nlet root;\nif (typeof window !== 'undefined') {\n    root = window;\n}\nelse if (typeof global !== 'undefined') {\n    root = global;\n}\n// tslint:disable-next-line:variable-name\nconst MouseEvent = root.MouseEvent;\nfunction createMouseEvent(name, bubbles = false, cancelable = true) {\n    // Calling new of an event does not work correctly on IE. The following is a tested workaround\n    // See https://stackoverflow.com/questions/27176983/dispatchevent-not-working-in-ie11\n    if (typeof MouseEvent === 'function') {\n        // Sane browsers\n        return new MouseEvent(name, { bubbles, cancelable });\n    }\n    else {\n        // IE\n        const event = document.createEvent('MouseEvent');\n        event.initEvent(name, bubbles, cancelable);\n        return event;\n    }\n}\n\nclass TooltipArea {\n    constructor(platformId) {\n        this.platformId = platformId;\n        this.anchorOpacity = 0;\n        this.anchorPos = -1;\n        this.anchorValues = [];\n        this.placementTypes = PlacementTypes;\n        this.styleTypes = StyleTypes;\n        this.showPercentage = false;\n        this.tooltipDisabled = false;\n        this.hover = new EventEmitter();\n    }\n    getValues(xVal) {\n        const results = [];\n        for (const group of this.results) {\n            const item = group.series.find(d => d.name.toString() === xVal.toString());\n            let groupName = group.name;\n            if (groupName instanceof Date) {\n                groupName = groupName.toLocaleDateString();\n            }\n            if (item) {\n                const label = item.name;\n                let val = item.value;\n                if (this.showPercentage) {\n                    val = (item.d1 - item.d0).toFixed(2) + '%';\n                }\n                let color;\n                if (this.colors.scaleType === ScaleType.Linear) {\n                    let v = val;\n                    if (item.d1) {\n                        v = item.d1;\n                    }\n                    color = this.colors.getColor(v);\n                }\n                else {\n                    color = this.colors.getColor(group.name);\n                }\n                const data = Object.assign({}, item, {\n                    value: val,\n                    name: label,\n                    series: groupName,\n                    min: item.min,\n                    max: item.max,\n                    color\n                });\n                results.push(data);\n            }\n        }\n        return results;\n    }\n    mouseMove(event) {\n        if (!isPlatformBrowser(this.platformId)) {\n            return;\n        }\n        const xPos = event.pageX - event.target.getBoundingClientRect().left;\n        const closestIndex = this.findClosestPointIndex(xPos);\n        const closestPoint = this.xSet[closestIndex];\n        this.anchorPos = this.xScale(closestPoint);\n        this.anchorPos = Math.max(0, this.anchorPos);\n        this.anchorPos = Math.min(this.dims.width, this.anchorPos);\n        this.anchorValues = this.getValues(closestPoint);\n        if (this.anchorPos !== this.lastAnchorPos) {\n            const ev = createMouseEvent('mouseleave');\n            this.tooltipAnchor.nativeElement.dispatchEvent(ev);\n            this.anchorOpacity = 0.7;\n            this.hover.emit({\n                value: closestPoint\n            });\n            this.showTooltip();\n            this.lastAnchorPos = this.anchorPos;\n        }\n    }\n    findClosestPointIndex(xPos) {\n        let minIndex = 0;\n        let maxIndex = this.xSet.length - 1;\n        let minDiff = Number.MAX_VALUE;\n        let closestIndex = 0;\n        while (minIndex <= maxIndex) {\n            const currentIndex = ((minIndex + maxIndex) / 2) | 0;\n            const currentElement = this.xScale(this.xSet[currentIndex]);\n            const curDiff = Math.abs(currentElement - xPos);\n            if (curDiff < minDiff) {\n                minDiff = curDiff;\n                closestIndex = currentIndex;\n            }\n            if (currentElement < xPos) {\n                minIndex = currentIndex + 1;\n            }\n            else if (currentElement > xPos) {\n                maxIndex = currentIndex - 1;\n            }\n            else {\n                minDiff = 0;\n                closestIndex = currentIndex;\n                break;\n            }\n        }\n        return closestIndex;\n    }\n    showTooltip() {\n        const event = createMouseEvent('mouseenter');\n        this.tooltipAnchor.nativeElement.dispatchEvent(event);\n    }\n    hideTooltip() {\n        const event = createMouseEvent('mouseleave');\n        this.tooltipAnchor.nativeElement.dispatchEvent(event);\n        this.anchorOpacity = 0;\n        this.lastAnchorPos = -1;\n    }\n    getToolTipText(tooltipItem) {\n        let result = '';\n        if (tooltipItem.series !== undefined) {\n            result += tooltipItem.series;\n        }\n        else {\n            result += '???';\n        }\n        result += ': ';\n        if (tooltipItem.value !== undefined) {\n            result += tooltipItem.value.toLocaleString();\n        }\n        if (tooltipItem.min !== undefined || tooltipItem.max !== undefined) {\n            result += ' (';\n            if (tooltipItem.min !== undefined) {\n                if (tooltipItem.max === undefined) {\n                    result += '≥';\n                }\n                result += tooltipItem.min.toLocaleString();\n                if (tooltipItem.max !== undefined) {\n                    result += ' - ';\n                }\n            }\n            else if (tooltipItem.max !== undefined) {\n                result += '≤';\n            }\n            if (tooltipItem.max !== undefined) {\n                result += tooltipItem.max.toLocaleString();\n            }\n            result += ')';\n        }\n        return result;\n    }\n}\nTooltipArea.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipArea, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nTooltipArea.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: TooltipArea, selector: \"g[ngx-charts-tooltip-area]\", inputs: { dims: \"dims\", xSet: \"xSet\", xScale: \"xScale\", yScale: \"yScale\", results: \"results\", colors: \"colors\", showPercentage: \"showPercentage\", tooltipDisabled: \"tooltipDisabled\", tooltipTemplate: \"tooltipTemplate\" }, outputs: { hover: \"hover\" }, viewQueries: [{ propertyName: \"tooltipAnchor\", first: true, predicate: [\"tooltipAnchor\"], descendants: true }], ngImport: i0, template: `\n    <svg:g>\n      <svg:rect\n        class=\"tooltip-area\"\n        [attr.x]=\"0\"\n        y=\"0\"\n        [attr.width]=\"dims.width\"\n        [attr.height]=\"dims.height\"\n        style=\"opacity: 0; cursor: 'auto';\"\n        (mousemove)=\"mouseMove($event)\"\n        (mouseleave)=\"hideTooltip()\"\n      />\n      <ng-template #defaultTooltipTemplate let-model=\"model\">\n        <xhtml:div class=\"area-tooltip-container\">\n          <xhtml:div *ngFor=\"let tooltipItem of model\" class=\"tooltip-item\">\n            <xhtml:span class=\"tooltip-item-color\" [style.background-color]=\"tooltipItem.color\"></xhtml:span>\n            {{ getToolTipText(tooltipItem) }}\n          </xhtml:div>\n        </xhtml:div>\n      </ng-template>\n      <svg:rect\n        #tooltipAnchor\n        [@animationState]=\"anchorOpacity !== 0 ? 'active' : 'inactive'\"\n        class=\"tooltip-anchor\"\n        [attr.x]=\"anchorPos\"\n        y=\"0\"\n        [attr.width]=\"1\"\n        [attr.height]=\"dims.height\"\n        [style.opacity]=\"anchorOpacity\"\n        [style.pointer-events]=\"'none'\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Right\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipSpacing]=\"15\"\n        [tooltipTemplate]=\"tooltipTemplate ? tooltipTemplate : defaultTooltipTemplate\"\n        [tooltipContext]=\"anchorValues\"\n        [tooltipImmediateExit]=\"true\"\n      />\n    </svg:g>\n  `, isInline: true, directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }], animations: [\n        trigger('animationState', [\n            transition('inactive => active', [\n                style({\n                    opacity: 0\n                }),\n                animate(250, style({ opacity: 0.7 }))\n            ]),\n            transition('active => inactive', [\n                style({\n                    opacity: 0.7\n                }),\n                animate(250, style({ opacity: 0 }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipArea, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-tooltip-area]',\n                    template: `\n    <svg:g>\n      <svg:rect\n        class=\"tooltip-area\"\n        [attr.x]=\"0\"\n        y=\"0\"\n        [attr.width]=\"dims.width\"\n        [attr.height]=\"dims.height\"\n        style=\"opacity: 0; cursor: 'auto';\"\n        (mousemove)=\"mouseMove($event)\"\n        (mouseleave)=\"hideTooltip()\"\n      />\n      <ng-template #defaultTooltipTemplate let-model=\"model\">\n        <xhtml:div class=\"area-tooltip-container\">\n          <xhtml:div *ngFor=\"let tooltipItem of model\" class=\"tooltip-item\">\n            <xhtml:span class=\"tooltip-item-color\" [style.background-color]=\"tooltipItem.color\"></xhtml:span>\n            {{ getToolTipText(tooltipItem) }}\n          </xhtml:div>\n        </xhtml:div>\n      </ng-template>\n      <svg:rect\n        #tooltipAnchor\n        [@animationState]=\"anchorOpacity !== 0 ? 'active' : 'inactive'\"\n        class=\"tooltip-anchor\"\n        [attr.x]=\"anchorPos\"\n        y=\"0\"\n        [attr.width]=\"1\"\n        [attr.height]=\"dims.height\"\n        [style.opacity]=\"anchorOpacity\"\n        [style.pointer-events]=\"'none'\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Right\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipSpacing]=\"15\"\n        [tooltipTemplate]=\"tooltipTemplate ? tooltipTemplate : defaultTooltipTemplate\"\n        [tooltipContext]=\"anchorValues\"\n        [tooltipImmediateExit]=\"true\"\n      />\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    animations: [\n                        trigger('animationState', [\n                            transition('inactive => active', [\n                                style({\n                                    opacity: 0\n                                }),\n                                animate(250, style({ opacity: 0.7 }))\n                            ]),\n                            transition('active => inactive', [\n                                style({\n                                    opacity: 0.7\n                                }),\n                                animate(250, style({ opacity: 0 }))\n                            ])\n                        ])\n                    ]\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { dims: [{\n                type: Input\n            }], xSet: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], results: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], showPercentage: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], hover: [{\n                type: Output\n            }], tooltipAnchor: [{\n                type: ViewChild,\n                args: ['tooltipAnchor', { static: false }]\n            }] } });\n\nclass Timeline {\n    constructor(element, cd) {\n        this.cd = cd;\n        this.height = 50;\n        this.select = new EventEmitter();\n        this.onDomainChange = new EventEmitter();\n        this.initialized = false;\n        this.element = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n        this.update();\n        if (!this.initialized) {\n            this.addBrush();\n            this.initialized = true;\n        }\n    }\n    update() {\n        this.dims = this.getDims();\n        this.height = this.dims.height;\n        const offsetY = this.view[1] - this.height;\n        this.xDomain = this.getXDomain();\n        this.xScale = this.getXScale();\n        if (this.brush) {\n            this.updateBrush();\n        }\n        this.transform = `translate(0 , ${offsetY})`;\n        this.filterId = 'filter' + id().toString();\n        this.filter = `url(#${this.filterId})`;\n        this.cd.markForCheck();\n    }\n    getXDomain() {\n        let values = [];\n        for (const results of this.results) {\n            for (const d of results.series) {\n                if (!values.includes(d.name)) {\n                    values.push(d.name);\n                }\n            }\n        }\n        let domain = [];\n        if (this.scaleType === ScaleType.Time) {\n            const min = Math.min(...values);\n            const max = Math.max(...values);\n            domain = [min, max];\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            values = values.map(v => Number(v));\n            const min = Math.min(...values);\n            const max = Math.max(...values);\n            domain = [min, max];\n        }\n        else {\n            domain = values;\n        }\n        return domain;\n    }\n    getXScale() {\n        let scale;\n        if (this.scaleType === ScaleType.Time) {\n            scale = scaleTime().range([0, this.dims.width]).domain(this.xDomain);\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            scale = scaleLinear().range([0, this.dims.width]).domain(this.xDomain);\n        }\n        else if (this.scaleType === ScaleType.Ordinal) {\n            scale = scalePoint().range([0, this.dims.width]).padding(0.1).domain(this.xDomain);\n        }\n        return scale;\n    }\n    addBrush() {\n        if (this.brush)\n            return;\n        const height = this.height;\n        const width = this.view[0];\n        this.brush = brushX()\n            .extent([\n            [0, 0],\n            [width, height]\n        ])\n            .on('brush end', ({ selection }) => {\n            const newSelection = selection || this.xScale.range();\n            const newDomain = newSelection.map(this.xScale.invert);\n            this.onDomainChange.emit(newDomain);\n            this.cd.markForCheck();\n        });\n        select(this.element).select('.brush').call(this.brush);\n    }\n    updateBrush() {\n        if (!this.brush)\n            return;\n        const height = this.height;\n        const width = this.view[0];\n        this.brush.extent([\n            [0, 0],\n            [width, height]\n        ]);\n        select(this.element).select('.brush').call(this.brush);\n        // clear hardcoded properties so they can be defined by CSS\n        select(this.element)\n            .select('.selection')\n            .attr('fill', undefined)\n            .attr('stroke', undefined)\n            .attr('fill-opacity', undefined);\n        this.cd.markForCheck();\n    }\n    getDims() {\n        const width = this.view[0];\n        const dims = {\n            width,\n            height: this.height\n        };\n        return dims;\n    }\n}\nTimeline.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: Timeline, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nTimeline.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: Timeline, selector: \"g[ngx-charts-timeline]\", inputs: { view: \"view\", results: \"results\", scheme: \"scheme\", customColors: \"customColors\", legend: \"legend\", autoScale: \"autoScale\", scaleType: \"scaleType\", height: \"height\" }, outputs: { select: \"select\", onDomainChange: \"onDomainChange\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g class=\"timeline\" [attr.transform]=\"transform\">\n      <svg:filter [attr.id]=\"filterId\">\n        <svg:feColorMatrix\n          in=\"SourceGraphic\"\n          type=\"matrix\"\n          values=\"0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\"\n        />\n      </svg:filter>\n      <svg:g class=\"embedded-chart\">\n        <ng-content></ng-content>\n      </svg:g>\n      <svg:rect x=\"0\" [attr.width]=\"view[0]\" y=\"0\" [attr.height]=\"height\" class=\"brush-background\" />\n      <svg:g class=\"brush\"></svg:g>\n    </svg:g>\n  `, isInline: true, styles: [\".timeline .brush-background{fill:#0000000d}.timeline .brush .selection{fill:#0000001a;stroke-width:1px;stroke:#888}.timeline .brush .handle{fill-opacity:0}.timeline .embedded-chart{opacity:.6}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: Timeline, decorators: [{\n            type: Component,\n            args: [{ selector: 'g[ngx-charts-timeline]', template: `\n    <svg:g class=\"timeline\" [attr.transform]=\"transform\">\n      <svg:filter [attr.id]=\"filterId\">\n        <svg:feColorMatrix\n          in=\"SourceGraphic\"\n          type=\"matrix\"\n          values=\"0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\"\n        />\n      </svg:filter>\n      <svg:g class=\"embedded-chart\">\n        <ng-content></ng-content>\n      </svg:g>\n      <svg:rect x=\"0\" [attr.width]=\"view[0]\" y=\"0\" [attr.height]=\"height\" class=\"brush-background\" />\n      <svg:g class=\"brush\"></svg:g>\n    </svg:g>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".timeline .brush-background{fill:#0000000d}.timeline .brush .selection{fill:#0000001a;stroke-width:1px;stroke:#888}.timeline .brush .handle{fill-opacity:0}.timeline .embedded-chart{opacity:.6}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { view: [{\n                type: Input\n            }], results: [{\n                type: Input\n            }], scheme: [{\n                type: Input\n            }], customColors: [{\n                type: Input\n            }], legend: [{\n                type: Input\n            }], autoScale: [{\n                type: Input\n            }], scaleType: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], onDomainChange: [{\n                type: Output\n            }] } });\n\nclass AdvancedLegendComponent {\n    constructor() {\n        this.label = 'Total';\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.legendItems = [];\n        this.labelFormatting = label => label;\n        this.percentageFormatting = percentage => percentage;\n        this.defaultValueFormatting = value => value.toLocaleString();\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    getTotal() {\n        return this.data.map(d => Number(d.value)).reduce((sum, d) => sum + d, 0);\n    }\n    update() {\n        this.total = this.getTotal();\n        this.roundedTotal = this.total;\n        this.legendItems = this.getLegendItems();\n    }\n    getLegendItems() {\n        return this.data.map(d => {\n            const label = formatLabel(d.name);\n            const value = d.value;\n            const color = this.colors.getColor(label);\n            const percentage = this.total > 0 ? (value / this.total) * 100 : 0;\n            const formattedLabel = typeof this.labelFormatting === 'function' ? this.labelFormatting(label) : label;\n            return {\n                _value: value,\n                data: d,\n                value,\n                color,\n                label: formattedLabel,\n                displayLabel: trimLabel(formattedLabel, 20),\n                origialLabel: d.name,\n                percentage: this.percentageFormatting ? this.percentageFormatting(percentage) : percentage.toLocaleString()\n            };\n        });\n    }\n    trackBy(index, item) {\n        return item.label;\n    }\n}\nAdvancedLegendComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AdvancedLegendComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nAdvancedLegendComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: AdvancedLegendComponent, selector: \"ngx-charts-advanced-legend\", inputs: { width: \"width\", data: \"data\", colors: \"colors\", label: \"label\", animations: \"animations\", valueFormatting: \"valueFormatting\", labelFormatting: \"labelFormatting\", percentageFormatting: \"percentageFormatting\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, usesOnChanges: true, ngImport: i0, template: `\n    <div class=\"advanced-pie-legend\" [style.width.px]=\"width\">\n      <div\n        *ngIf=\"animations\"\n        class=\"total-value\"\n        ngx-charts-count-up\n        [countTo]=\"roundedTotal\"\n        [valueFormatting]=\"valueFormatting\"\n      ></div>\n      <div class=\"total-value\" *ngIf=\"!animations\">\n        {{ valueFormatting ? valueFormatting(roundedTotal) : defaultValueFormatting(roundedTotal) }}\n      </div>\n      <div class=\"total-label\">\n        {{ label }}\n      </div>\n      <div class=\"legend-items-container\">\n        <div class=\"legend-items\">\n          <div\n            *ngFor=\"let legendItem of legendItems; trackBy: trackBy\"\n            tabindex=\"-1\"\n            class=\"legend-item\"\n            (mouseenter)=\"activate.emit(legendItem.data)\"\n            (mouseleave)=\"deactivate.emit(legendItem.data)\"\n            (click)=\"select.emit(legendItem.data)\"\n          >\n            <div class=\"item-color\" [style.border-left-color]=\"legendItem.color\"></div>\n            <div\n              *ngIf=\"animations\"\n              class=\"item-value\"\n              ngx-charts-count-up\n              [countTo]=\"legendItem._value\"\n              [valueFormatting]=\"valueFormatting\"\n            ></div>\n            <div *ngIf=\"!animations\" class=\"item-value\">\n              {{ valueFormatting ? valueFormatting(legendItem.value) : defaultValueFormatting(legendItem.value) }}\n            </div>\n            <div class=\"item-label\">{{ legendItem.displayLabel }}</div>\n            <div\n              *ngIf=\"animations\"\n              class=\"item-percent\"\n              ngx-charts-count-up\n              [countTo]=\"legendItem.percentage\"\n              [countSuffix]=\"'%'\"\n            ></div>\n            <div *ngIf=\"!animations\" class=\"item-percent\">{{ legendItem.percentage.toLocaleString() }}%</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  `, isInline: true, styles: [\".advanced-pie-legend{float:left;position:relative;top:50%;transform:translateY(-50%)}.advanced-pie-legend .total-value{font-size:36px}.advanced-pie-legend .total-label{font-size:24px;margin-bottom:19px}.advanced-pie-legend .legend-items-container{width:100%}.advanced-pie-legend .legend-items-container .legend-items{white-space:nowrap;overflow:auto}.advanced-pie-legend .legend-items-container .legend-items .legend-item{margin-right:20px;display:inline-block;cursor:pointer}.advanced-pie-legend .legend-items-container .legend-items .legend-item:focus{outline:none}.advanced-pie-legend .legend-items-container .legend-items .legend-item:hover{color:#000;transition:.2s}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-value{font-size:24px;margin-top:-6px;margin-left:11px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-label{font-size:14px;opacity:.7;margin-left:11px;margin-top:-6px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-percent{font-size:24px;opacity:.7;margin-left:11px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-color{border-left:4px solid;width:4px;height:42px;float:left;margin-right:7px}\\n\"], components: [{ type: CountUpDirective, selector: \"[ngx-charts-count-up]\", inputs: [\"countDuration\", \"countPrefix\", \"countSuffix\", \"valueFormatting\", \"countDecimals\", \"countTo\", \"countFrom\"], outputs: [\"countChange\", \"countFinish\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AdvancedLegendComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-advanced-legend', template: `\n    <div class=\"advanced-pie-legend\" [style.width.px]=\"width\">\n      <div\n        *ngIf=\"animations\"\n        class=\"total-value\"\n        ngx-charts-count-up\n        [countTo]=\"roundedTotal\"\n        [valueFormatting]=\"valueFormatting\"\n      ></div>\n      <div class=\"total-value\" *ngIf=\"!animations\">\n        {{ valueFormatting ? valueFormatting(roundedTotal) : defaultValueFormatting(roundedTotal) }}\n      </div>\n      <div class=\"total-label\">\n        {{ label }}\n      </div>\n      <div class=\"legend-items-container\">\n        <div class=\"legend-items\">\n          <div\n            *ngFor=\"let legendItem of legendItems; trackBy: trackBy\"\n            tabindex=\"-1\"\n            class=\"legend-item\"\n            (mouseenter)=\"activate.emit(legendItem.data)\"\n            (mouseleave)=\"deactivate.emit(legendItem.data)\"\n            (click)=\"select.emit(legendItem.data)\"\n          >\n            <div class=\"item-color\" [style.border-left-color]=\"legendItem.color\"></div>\n            <div\n              *ngIf=\"animations\"\n              class=\"item-value\"\n              ngx-charts-count-up\n              [countTo]=\"legendItem._value\"\n              [valueFormatting]=\"valueFormatting\"\n            ></div>\n            <div *ngIf=\"!animations\" class=\"item-value\">\n              {{ valueFormatting ? valueFormatting(legendItem.value) : defaultValueFormatting(legendItem.value) }}\n            </div>\n            <div class=\"item-label\">{{ legendItem.displayLabel }}</div>\n            <div\n              *ngIf=\"animations\"\n              class=\"item-percent\"\n              ngx-charts-count-up\n              [countTo]=\"legendItem.percentage\"\n              [countSuffix]=\"'%'\"\n            ></div>\n            <div *ngIf=\"!animations\" class=\"item-percent\">{{ legendItem.percentage.toLocaleString() }}%</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".advanced-pie-legend{float:left;position:relative;top:50%;transform:translateY(-50%)}.advanced-pie-legend .total-value{font-size:36px}.advanced-pie-legend .total-label{font-size:24px;margin-bottom:19px}.advanced-pie-legend .legend-items-container{width:100%}.advanced-pie-legend .legend-items-container .legend-items{white-space:nowrap;overflow:auto}.advanced-pie-legend .legend-items-container .legend-items .legend-item{margin-right:20px;display:inline-block;cursor:pointer}.advanced-pie-legend .legend-items-container .legend-items .legend-item:focus{outline:none}.advanced-pie-legend .legend-items-container .legend-items .legend-item:hover{color:#000;transition:.2s}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-value{font-size:24px;margin-top:-6px;margin-left:11px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-label{font-size:14px;opacity:.7;margin-left:11px;margin-top:-6px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-percent{font-size:24px;opacity:.7;margin-left:11px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-color{border-left:4px solid;width:4px;height:42px;float:left;margin-right:7px}\\n\"] }]\n        }], propDecorators: { width: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], valueFormatting: [{\n                type: Input\n            }], labelFormatting: [{\n                type: Input\n            }], percentageFormatting: [{\n                type: Input\n            }] } });\n\nconst COMPONENTS = [\n    AreaComponent,\n    BaseChartComponent,\n    CountUpDirective,\n    TooltipArea,\n    ChartComponent,\n    LegendComponent,\n    LegendEntryComponent,\n    ScaleLegendComponent,\n    CircleComponent,\n    CircleSeriesComponent,\n    GridPanelComponent,\n    GridPanelSeriesComponent,\n    SvgLinearGradientComponent,\n    SvgRadialGradientComponent,\n    Timeline,\n    AdvancedLegendComponent\n];\nclass ChartCommonModule {\n}\nChartCommonModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ChartCommonModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nChartCommonModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ChartCommonModule, declarations: [AreaComponent,\n        BaseChartComponent,\n        CountUpDirective,\n        TooltipArea,\n        ChartComponent,\n        LegendComponent,\n        LegendEntryComponent,\n        ScaleLegendComponent,\n        CircleComponent,\n        CircleSeriesComponent,\n        GridPanelComponent,\n        GridPanelSeriesComponent,\n        SvgLinearGradientComponent,\n        SvgRadialGradientComponent,\n        Timeline,\n        AdvancedLegendComponent, VisibilityObserver], imports: [CommonModule, AxesModule, TooltipModule], exports: [CommonModule, AxesModule, TooltipModule, AreaComponent,\n        BaseChartComponent,\n        CountUpDirective,\n        TooltipArea,\n        ChartComponent,\n        LegendComponent,\n        LegendEntryComponent,\n        ScaleLegendComponent,\n        CircleComponent,\n        CircleSeriesComponent,\n        GridPanelComponent,\n        GridPanelSeriesComponent,\n        SvgLinearGradientComponent,\n        SvgRadialGradientComponent,\n        Timeline,\n        AdvancedLegendComponent, VisibilityObserver] });\nChartCommonModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ChartCommonModule, imports: [[CommonModule, AxesModule, TooltipModule], CommonModule, AxesModule, TooltipModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ChartCommonModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, AxesModule, TooltipModule],\n                    declarations: [...COMPONENTS, VisibilityObserver],\n                    exports: [CommonModule, AxesModule, TooltipModule, ...COMPONENTS, VisibilityObserver]\n                }]\n        }] });\n\nfunction calculateViewDimensions({ width, height, margins, showXAxis = false, showYAxis = false, xAxisHeight = 0, yAxisWidth = 0, showXLabel = false, showYLabel = false, showLegend = false, legendType = ScaleType.Ordinal, legendPosition = LegendPosition.Right, columns = 12 }) {\n    let xOffset = margins[3];\n    let chartWidth = width;\n    let chartHeight = height - margins[0] - margins[2];\n    if (showLegend && legendPosition === LegendPosition.Right) {\n        if (legendType === ScaleType.Ordinal) {\n            columns -= 2;\n        }\n        else {\n            columns -= 1;\n        }\n    }\n    chartWidth = (chartWidth * columns) / 12;\n    chartWidth = chartWidth - margins[1] - margins[3];\n    if (showXAxis) {\n        chartHeight -= 5;\n        chartHeight -= xAxisHeight;\n        if (showXLabel) {\n            // text height + spacing between axis label and tick labels\n            const offset = 25 + 5;\n            chartHeight -= offset;\n        }\n    }\n    if (showYAxis) {\n        chartWidth -= 5;\n        chartWidth -= yAxisWidth;\n        xOffset += yAxisWidth;\n        xOffset += 10;\n        if (showYLabel) {\n            // text height + spacing between axis label and tick labels\n            const offset = 25 + 5;\n            chartWidth -= offset;\n            xOffset += offset;\n        }\n    }\n    chartWidth = Math.max(0, chartWidth);\n    chartHeight = Math.max(0, chartHeight);\n    return {\n        width: Math.floor(chartWidth),\n        height: Math.floor(chartHeight),\n        xOffset: Math.floor(xOffset)\n    };\n}\n\nconst colorSets = [\n    {\n        name: 'vivid',\n        selectable: true,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#647c8a',\n            '#3f51b5',\n            '#2196f3',\n            '#00b862',\n            '#afdf0a',\n            '#a7b61a',\n            '#f3e562',\n            '#ff9800',\n            '#ff5722',\n            '#ff4514'\n        ]\n    },\n    {\n        name: 'natural',\n        selectable: true,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#bf9d76',\n            '#e99450',\n            '#d89f59',\n            '#f2dfa7',\n            '#a5d7c6',\n            '#7794b1',\n            '#afafaf',\n            '#707160',\n            '#ba9383',\n            '#d9d5c3'\n        ]\n    },\n    {\n        name: 'cool',\n        selectable: true,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#a8385d',\n            '#7aa3e5',\n            '#a27ea8',\n            '#aae3f5',\n            '#adcded',\n            '#a95963',\n            '#8796c0',\n            '#7ed3ed',\n            '#50abcc',\n            '#ad6886'\n        ]\n    },\n    {\n        name: 'fire',\n        selectable: true,\n        group: ScaleType.Ordinal,\n        domain: ['#ff3d00', '#bf360c', '#ff8f00', '#ff6f00', '#ff5722', '#e65100', '#ffca28', '#ffab00']\n    },\n    {\n        name: 'solar',\n        selectable: true,\n        group: ScaleType.Linear,\n        domain: [\n            '#fff8e1',\n            '#ffecb3',\n            '#ffe082',\n            '#ffd54f',\n            '#ffca28',\n            '#ffc107',\n            '#ffb300',\n            '#ffa000',\n            '#ff8f00',\n            '#ff6f00'\n        ]\n    },\n    {\n        name: 'air',\n        selectable: true,\n        group: ScaleType.Linear,\n        domain: [\n            '#e1f5fe',\n            '#b3e5fc',\n            '#81d4fa',\n            '#4fc3f7',\n            '#29b6f6',\n            '#03a9f4',\n            '#039be5',\n            '#0288d1',\n            '#0277bd',\n            '#01579b'\n        ]\n    },\n    {\n        name: 'aqua',\n        selectable: true,\n        group: ScaleType.Linear,\n        domain: [\n            '#e0f7fa',\n            '#b2ebf2',\n            '#80deea',\n            '#4dd0e1',\n            '#26c6da',\n            '#00bcd4',\n            '#00acc1',\n            '#0097a7',\n            '#00838f',\n            '#006064'\n        ]\n    },\n    {\n        name: 'flame',\n        selectable: false,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#A10A28',\n            '#D3342D',\n            '#EF6D49',\n            '#FAAD67',\n            '#FDDE90',\n            '#DBED91',\n            '#A9D770',\n            '#6CBA67',\n            '#2C9653',\n            '#146738'\n        ]\n    },\n    {\n        name: 'ocean',\n        selectable: false,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#1D68FB',\n            '#33C0FC',\n            '#4AFFFE',\n            '#AFFFFF',\n            '#FFFC63',\n            '#FDBD2D',\n            '#FC8A25',\n            '#FA4F1E',\n            '#FA141B',\n            '#BA38D1'\n        ]\n    },\n    {\n        name: 'forest',\n        selectable: false,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#55C22D',\n            '#C1F33D',\n            '#3CC099',\n            '#AFFFFF',\n            '#8CFC9D',\n            '#76CFFA',\n            '#BA60FB',\n            '#EE6490',\n            '#C42A1C',\n            '#FC9F32'\n        ]\n    },\n    {\n        name: 'horizon',\n        selectable: false,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#2597FB',\n            '#65EBFD',\n            '#99FDD0',\n            '#FCEE4B',\n            '#FEFCFA',\n            '#FDD6E3',\n            '#FCB1A8',\n            '#EF6F7B',\n            '#CB96E8',\n            '#EFDEE0'\n        ]\n    },\n    {\n        name: 'neons',\n        selectable: false,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#FF3333',\n            '#FF33FF',\n            '#CC33FF',\n            '#0000FF',\n            '#33CCFF',\n            '#33FFFF',\n            '#33FF66',\n            '#CCFF33',\n            '#FFCC00',\n            '#FF6600'\n        ]\n    },\n    {\n        name: 'picnic',\n        selectable: false,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#FAC51D',\n            '#66BD6D',\n            '#FAA026',\n            '#29BB9C',\n            '#E96B56',\n            '#55ACD2',\n            '#B7332F',\n            '#2C83C9',\n            '#9166B8',\n            '#92E7E8'\n        ]\n    },\n    {\n        name: 'night',\n        selectable: false,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#2B1B5A',\n            '#501356',\n            '#183356',\n            '#28203F',\n            '#391B3C',\n            '#1E2B3C',\n            '#120634',\n            '#2D0432',\n            '#051932',\n            '#453080',\n            '#75267D',\n            '#2C507D',\n            '#4B3880',\n            '#752F7D',\n            '#35547D'\n        ]\n    },\n    {\n        name: 'nightLights',\n        selectable: false,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#4e31a5',\n            '#9c25a7',\n            '#3065ab',\n            '#57468b',\n            '#904497',\n            '#46648b',\n            '#32118d',\n            '#a00fb3',\n            '#1052a2',\n            '#6e51bd',\n            '#b63cc3',\n            '#6c97cb',\n            '#8671c1',\n            '#b455be',\n            '#7496c3'\n        ]\n    }\n];\n\nclass ColorHelper {\n    constructor(scheme, type, domain, customColors) {\n        if (typeof scheme === 'string') {\n            scheme = colorSets.find(cs => {\n                return cs.name === scheme;\n            });\n        }\n        this.colorDomain = scheme.domain;\n        this.scaleType = type;\n        this.domain = domain;\n        this.customColors = customColors;\n        this.scale = this.generateColorScheme(scheme, type, this.domain);\n    }\n    generateColorScheme(scheme, type, domain) {\n        if (typeof scheme === 'string') {\n            scheme = colorSets.find(cs => {\n                return cs.name === scheme;\n            });\n        }\n        let colorScale;\n        switch (type) {\n            case ScaleType.Quantile:\n                colorScale = scaleQuantile()\n                    .range(scheme.domain)\n                    .domain(domain);\n                break;\n            case ScaleType.Ordinal:\n                colorScale = scaleOrdinal()\n                    .range(scheme.domain)\n                    .domain(domain);\n                break;\n            case ScaleType.Linear:\n                {\n                    const colorDomain = [...scheme.domain];\n                    if (colorDomain.length === 1) {\n                        colorDomain.push(colorDomain[0]);\n                        this.colorDomain = colorDomain;\n                    }\n                    const points = range(0, 1, 1.0 / colorDomain.length);\n                    colorScale = scaleLinear()\n                        .range(colorDomain)\n                        .domain(points);\n                }\n                break;\n            default:\n                break;\n        }\n        return colorScale;\n    }\n    getColor(value) {\n        if (value === undefined || value === null) {\n            throw new Error('Value can not be null');\n        }\n        if (this.scaleType === ScaleType.Linear) {\n            const valueScale = scaleLinear()\n                .domain(this.domain)\n                .range([0, 1]);\n            return this.scale(valueScale(value));\n        }\n        else {\n            if (typeof this.customColors === 'function') {\n                return this.customColors(value);\n            }\n            const formattedValue = value.toString();\n            let found; // todo type customColors\n            if (this.customColors && this.customColors.length > 0) {\n                found = this.customColors.find(mapping => {\n                    return mapping.name.toLowerCase() === formattedValue.toLowerCase();\n                });\n            }\n            if (found) {\n                return found.value;\n            }\n            else {\n                return this.scale(value);\n            }\n        }\n    }\n    getLinearGradientStops(value, start) {\n        if (start === undefined) {\n            start = this.domain[0];\n        }\n        const valueScale = scaleLinear()\n            .domain(this.domain)\n            .range([0, 1]);\n        const colorValueScale = scaleBand().domain(this.colorDomain).range([0, 1]);\n        const endColor = this.getColor(value);\n        // generate the stops\n        const startVal = valueScale(start);\n        const startColor = this.getColor(start);\n        const endVal = valueScale(value);\n        let i = 1;\n        let currentVal = startVal;\n        const stops = [];\n        stops.push({\n            color: startColor,\n            offset: startVal,\n            originalOffset: startVal,\n            opacity: 1\n        });\n        while (currentVal < endVal && i < this.colorDomain.length) {\n            const color = this.colorDomain[i];\n            const offset = colorValueScale(color);\n            if (offset <= startVal) {\n                i++;\n                continue;\n            }\n            if (offset.toFixed(4) >= (endVal - colorValueScale.bandwidth()).toFixed(4)) {\n                break;\n            }\n            stops.push({\n                color,\n                offset,\n                opacity: 1\n            });\n            currentVal = offset;\n            i++;\n        }\n        if (stops[stops.length - 1].offset < 100) {\n            stops.push({\n                color: endColor,\n                offset: endVal,\n                opacity: 1\n            });\n        }\n        if (endVal === startVal) {\n            stops[0].offset = 0;\n            stops[1].offset = 100;\n        }\n        else {\n            // normalize the offsets into percentages\n            if (stops[stops.length - 1].offset !== 100) {\n                for (const s of stops) {\n                    s.offset = ((s.offset - startVal) / (endVal - startVal)) * 100;\n                }\n            }\n        }\n        return stops;\n    }\n}\n\n/**\n * Based on the data, return an array with unique values.\n *\n * @export\n * @returns array\n */\nfunction getUniqueXDomainValues(results) {\n    const valueSet = new Set();\n    for (const result of results) {\n        for (const d of result.series) {\n            valueSet.add(d.name);\n        }\n    }\n    return Array.from(valueSet);\n}\n/**\n * Get the scaleType of enumerable of values.\n * @returns  'time', 'linear' or 'ordinal'\n */\nfunction getScaleType(values, checkDateType = true) {\n    if (checkDateType) {\n        const allDates = values.every(value => value instanceof Date);\n        if (allDates) {\n            return ScaleType.Time;\n        }\n    }\n    const allNumbers = values.every(value => typeof value === 'number');\n    if (allNumbers) {\n        return ScaleType.Linear;\n    }\n    return ScaleType.Ordinal;\n}\nfunction getXDomainArray(values, xScaleMin, xScaleMax) {\n    const scaleType = getScaleType(values);\n    let xSet = [];\n    let domain = [];\n    if (scaleType === ScaleType.Linear) {\n        values = values.map(v => Number(v));\n    }\n    let min;\n    let max;\n    if (scaleType === ScaleType.Time || scaleType === ScaleType.Linear) {\n        const mappedValues = values.map(v => Number(v));\n        min = xScaleMin ? xScaleMin : Math.min(...mappedValues);\n        max = xScaleMax ? xScaleMax : Math.max(...mappedValues);\n    }\n    if (scaleType === ScaleType.Time) {\n        domain = [new Date(min), new Date(max)];\n        xSet = [...values].sort((a, b) => {\n            const aDate = a.getTime();\n            const bDate = b.getTime();\n            if (aDate > bDate)\n                return 1;\n            if (bDate > aDate)\n                return -1;\n            return 0;\n        });\n    }\n    else if (scaleType === ScaleType.Linear) {\n        domain = [min, max];\n        // Use compare function to sort numbers numerically\n        xSet = [...values].sort((a, b) => a - b);\n    }\n    else {\n        domain = values;\n        xSet = values;\n    }\n    return { domain, xSet, scaleType };\n}\n\nfunction sortLinear(data, property, direction = 'asc') {\n    return data.sort((a, b) => {\n        if (direction === 'asc') {\n            return a[property] - b[property];\n        }\n        else {\n            return b[property] - a[property];\n        }\n    });\n}\nfunction sortByDomain(data, property, direction = 'asc', domain) {\n    return data.sort((a, b) => {\n        const aVal = a[property];\n        const bVal = b[property];\n        const aIdx = domain.indexOf(aVal);\n        const bIdx = domain.indexOf(bVal);\n        if (direction === 'asc') {\n            return aIdx - bIdx;\n        }\n        else {\n            return bIdx - aIdx;\n        }\n    });\n}\nfunction sortByTime(data, property, direction = 'asc') {\n    return data.sort((a, b) => {\n        const aDate = a[property].getTime();\n        const bDate = b[property].getTime();\n        if (direction === 'asc') {\n            if (aDate > bDate)\n                return 1;\n            if (bDate > aDate)\n                return -1;\n            return 0;\n        }\n        else {\n            if (aDate > bDate)\n                return -1;\n            if (bDate > aDate)\n                return 1;\n            return 0;\n        }\n    });\n}\n\nclass AreaSeriesComponent {\n    constructor() {\n        this.baseValue = 'auto';\n        this.stacked = false;\n        this.normalized = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.updateGradient();\n        let currentArea;\n        let startingArea;\n        const xProperty = d => {\n            const label = d.name;\n            return this.xScale(label);\n        };\n        if (this.stacked || this.normalized) {\n            currentArea = area()\n                .x(xProperty)\n                .y0((d, i) => this.yScale(d.d0))\n                .y1((d, i) => this.yScale(d.d1));\n            startingArea = area()\n                .x(xProperty)\n                .y0(d => this.yScale.range()[0])\n                .y1(d => this.yScale.range()[0]);\n        }\n        else {\n            currentArea = area()\n                .x(xProperty)\n                .y0(() => (this.baseValue === 'auto' ? this.yScale.range()[0] : this.yScale(this.baseValue)))\n                .y1(d => this.yScale(d.value));\n            startingArea = area()\n                .x(xProperty)\n                .y0(d => (this.baseValue === 'auto' ? this.yScale.range()[0] : this.yScale(this.baseValue)))\n                .y1(d => (this.baseValue === 'auto' ? this.yScale.range()[0] : this.yScale(this.baseValue)));\n        }\n        currentArea.curve(this.curve);\n        startingArea.curve(this.curve);\n        this.opacity = 0.8;\n        let data = this.data.series;\n        if (this.scaleType === ScaleType.Linear) {\n            data = sortLinear(data, 'name');\n        }\n        else if (this.scaleType === ScaleType.Time) {\n            data = sortByTime(data, 'name');\n        }\n        else {\n            data = sortByDomain(data, 'name', 'asc', this.xScale.domain());\n        }\n        this.path = currentArea(data);\n        this.startingPath = startingArea(data);\n    }\n    updateGradient() {\n        if (this.colors.scaleType === ScaleType.Linear) {\n            this.hasGradient = true;\n            if (this.stacked || this.normalized) {\n                const d0values = this.data.series.map(d => d.d0);\n                const d1values = this.data.series.map(d => d.d1);\n                const max = Math.max(...d1values);\n                const min = Math.min(...d0values);\n                this.gradientStops = this.colors.getLinearGradientStops(max, min);\n            }\n            else {\n                const values = this.data.series.map(d => d.value);\n                const max = Math.max(...values);\n                this.gradientStops = this.colors.getLinearGradientStops(max);\n            }\n        }\n        else {\n            this.hasGradient = false;\n            this.gradientStops = undefined;\n        }\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.name === d.name;\n        });\n        return item !== undefined;\n    }\n    isInactive(entry) {\n        if (!this.activeEntries || this.activeEntries.length === 0)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.name === d.name;\n        });\n        return item === undefined;\n    }\n}\nAreaSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaSeriesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nAreaSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: AreaSeriesComponent, selector: \"g[ngx-charts-area-series]\", inputs: { data: \"data\", xScale: \"xScale\", yScale: \"yScale\", baseValue: \"baseValue\", colors: \"colors\", scaleType: \"scaleType\", stacked: \"stacked\", normalized: \"normalized\", gradient: \"gradient\", curve: \"curve\", activeEntries: \"activeEntries\", animations: \"animations\" }, outputs: { select: \"select\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g\n      ngx-charts-area\n      class=\"area-series\"\n      [data]=\"data\"\n      [path]=\"path\"\n      [fill]=\"colors.getColor(data.name)\"\n      [stops]=\"gradientStops\"\n      [startingPath]=\"startingPath\"\n      [opacity]=\"opacity\"\n      [gradient]=\"gradient || hasGradient\"\n      [animations]=\"animations\"\n      [class.active]=\"isActive(data)\"\n      [class.inactive]=\"isInactive(data)\"\n    />\n  `, isInline: true, components: [{ type: AreaComponent, selector: \"g[ngx-charts-area]\", inputs: [\"data\", \"path\", \"startingPath\", \"fill\", \"opacity\", \"startOpacity\", \"endOpacity\", \"gradient\", \"stops\", \"animations\"], outputs: [\"select\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-area-series]',\n                    template: `\n    <svg:g\n      ngx-charts-area\n      class=\"area-series\"\n      [data]=\"data\"\n      [path]=\"path\"\n      [fill]=\"colors.getColor(data.name)\"\n      [stops]=\"gradientStops\"\n      [startingPath]=\"startingPath\"\n      [opacity]=\"opacity\"\n      [gradient]=\"gradient || hasGradient\"\n      [animations]=\"animations\"\n      [class.active]=\"isActive(data)\"\n      [class.inactive]=\"isInactive(data)\"\n    />\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { data: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], baseValue: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], scaleType: [{\n                type: Input\n            }], stacked: [{\n                type: Input\n            }], normalized: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], curve: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }] } });\n\nclass AreaChartComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.xAxis = false;\n        this.yAxis = false;\n        this.baseValue = 'auto';\n        this.autoScale = false;\n        this.timeline = false;\n        this.showGridLines = true;\n        this.curve = curveLinear;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.roundDomains = false;\n        this.tooltipDisabled = false;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.timelineHeight = 50;\n        this.timelinePadding = 10;\n        this.trackBy = (index, item) => {\n            return item.name;\n        };\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        if (this.timeline) {\n            this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\n        }\n        this.xDomain = this.getXDomain();\n        if (this.filteredDomain) {\n            this.xDomain = this.filteredDomain;\n        }\n        this.yDomain = this.getYDomain();\n        this.seriesDomain = this.getSeriesDomain();\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n        this.yScale = this.getYScale(this.yDomain, this.dims.height);\n        this.updateTimeline();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset}, ${this.margin[0]})`;\n        this.clipPathId = 'clip' + id().toString();\n        this.clipPath = `url(#${this.clipPathId})`;\n    }\n    updateTimeline() {\n        if (this.timeline) {\n            this.timelineWidth = this.dims.width;\n            this.timelineXDomain = this.getXDomain();\n            this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n            this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n            this.timelineTransform = `translate(${this.dims.xOffset}, ${-this.margin[2]})`;\n        }\n    }\n    getXDomain() {\n        let values = getUniqueXDomainValues(this.results);\n        this.scaleType = getScaleType(values);\n        let domain = [];\n        if (this.scaleType === ScaleType.Linear) {\n            values = values.map(v => Number(v));\n        }\n        let min;\n        let max;\n        if (this.scaleType === ScaleType.Time || this.scaleType === ScaleType.Linear) {\n            min = this.xScaleMin ? this.xScaleMin : Math.min(...values);\n            max = this.xScaleMax ? this.xScaleMax : Math.max(...values);\n        }\n        if (this.scaleType === ScaleType.Time) {\n            domain = [new Date(min), new Date(max)];\n            this.xSet = [...values].sort((a, b) => {\n                const aDate = a.getTime();\n                const bDate = b.getTime();\n                if (aDate > bDate)\n                    return 1;\n                if (bDate > aDate)\n                    return -1;\n                return 0;\n            });\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            domain = [min, max];\n            // Use compare function to sort numbers numerically\n            this.xSet = [...values].sort((a, b) => a - b);\n        }\n        else {\n            domain = values;\n            this.xSet = values;\n        }\n        return domain;\n    }\n    getYDomain() {\n        const domain = [];\n        for (const results of this.results) {\n            for (const d of results.series) {\n                if (!domain.includes(d.value)) {\n                    domain.push(d.value);\n                }\n            }\n        }\n        const values = [...domain];\n        if (!this.autoScale) {\n            values.push(0);\n        }\n        if (this.baseValue !== 'auto') {\n            values.push(this.baseValue);\n        }\n        const min = this.yScaleMin ? this.yScaleMin : Math.min(...values);\n        const max = this.yScaleMax ? this.yScaleMax : Math.max(...values);\n        return [min, max];\n    }\n    getSeriesDomain() {\n        return this.results.map(d => d.name);\n    }\n    getXScale(domain, width) {\n        let scale;\n        if (this.scaleType === ScaleType.Time) {\n            scale = scaleTime();\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            scale = scaleLinear();\n        }\n        else if (this.scaleType === ScaleType.Ordinal) {\n            scale = scalePoint().padding(0.1);\n        }\n        scale.range([0, width]).domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getYScale(domain, height) {\n        const scale = scaleLinear().range([height, 0]).domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getScaleType(values) {\n        let date = true;\n        let num = true;\n        for (const value of values) {\n            if (isDate(value)) {\n                date = false;\n            }\n            if (isNumber(value)) {\n                num = false;\n            }\n        }\n        if (date) {\n            return ScaleType.Time;\n        }\n        if (num) {\n            return ScaleType.Linear;\n        }\n        return ScaleType.Ordinal;\n    }\n    updateDomain(domain) {\n        this.filteredDomain = domain;\n        this.xDomain = this.filteredDomain;\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    }\n    updateHoveredVertical(item) {\n        this.hoveredVertical = item.value;\n        this.deactivateAll();\n    }\n    hideCircles() {\n        this.hoveredVertical = null;\n        this.deactivateAll();\n    }\n    onClick(data, series) {\n        if (series) {\n            data.series = series.name;\n        }\n        this.select.emit(data);\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.seriesDomain;\n        }\n        else {\n            domain = this.yDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.seriesDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.yDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n    deactivateAll() {\n        this.activeEntries = [...this.activeEntries];\n        for (const entry of this.activeEntries) {\n            this.deactivate.emit({ value: entry, entries: [] });\n        }\n        this.activeEntries = [];\n    }\n}\nAreaChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaChartComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nAreaChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: AreaChartComponent, selector: \"ngx-charts-area-chart\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", baseValue: \"baseValue\", autoScale: \"autoScale\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", timeline: \"timeline\", gradient: \"gradient\", showGridLines: \"showGridLines\", curve: \"curve\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", roundDomains: \"roundDomains\", tooltipDisabled: \"tooltipDisabled\", xScaleMin: \"xScaleMin\", xScaleMax: \"xScaleMax\", yScaleMin: \"yScaleMin\", yScaleMax: \"yScaleMax\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, host: { listeners: { \"mouseleave\": \"hideCircles()\" } }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }, { propertyName: \"seriesTooltipTemplate\", first: true, predicate: [\"seriesTooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-area-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [baseValue]=\"baseValue\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [scaleType]=\"scaleType\"\n              [gradient]=\"gradient\"\n              [curve]=\"curve\"\n              [animations]=\"animations\"\n            />\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results\">\n              <svg:g\n                ngx-charts-circle-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [activeEntries]=\"activeEntries\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event, series)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\"\n        [scaleType]=\"scaleType\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-area-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [baseValue]=\"baseValue\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [gradient]=\"gradient\"\n            [curve]=\"curve\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: AreaSeriesComponent, selector: \"g[ngx-charts-area-series]\", inputs: [\"data\", \"xScale\", \"yScale\", \"baseValue\", \"colors\", \"scaleType\", \"stacked\", \"normalized\", \"gradient\", \"curve\", \"activeEntries\", \"animations\"], outputs: [\"select\"] }, { type: TooltipArea, selector: \"g[ngx-charts-tooltip-area]\", inputs: [\"dims\", \"xSet\", \"xScale\", \"yScale\", \"results\", \"colors\", \"showPercentage\", \"tooltipDisabled\", \"tooltipTemplate\"], outputs: [\"hover\"] }, { type: CircleSeriesComponent, selector: \"g[ngx-charts-circle-series]\", inputs: [\"data\", \"type\", \"xScale\", \"yScale\", \"colors\", \"scaleType\", \"visibleValue\", \"activeEntries\", \"tooltipDisabled\", \"tooltipTemplate\"], outputs: [\"select\", \"activate\", \"deactivate\"] }, { type: Timeline, selector: \"g[ngx-charts-timeline]\", inputs: [\"view\", \"results\", \"scheme\", \"customColors\", \"legend\", \"autoScale\", \"scaleType\", \"height\"], outputs: [\"select\", \"onDomainChange\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaChartComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-area-chart', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-area-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [baseValue]=\"baseValue\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [scaleType]=\"scaleType\"\n              [gradient]=\"gradient\"\n              [curve]=\"curve\"\n              [animations]=\"animations\"\n            />\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results\">\n              <svg:g\n                ngx-charts-circle-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [activeEntries]=\"activeEntries\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event, series)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\"\n        [scaleType]=\"scaleType\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-area-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [baseValue]=\"baseValue\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [gradient]=\"gradient\"\n            [curve]=\"curve\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], baseValue: [{\n                type: Input\n            }], autoScale: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], timeline: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], curve: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], xScaleMin: [{\n                type: Input\n            }], xScaleMax: [{\n                type: Input\n            }], yScaleMin: [{\n                type: Input\n            }], yScaleMax: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }], seriesTooltipTemplate: [{\n                type: ContentChild,\n                args: ['seriesTooltipTemplate']\n            }], hideCircles: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nclass AreaChartNormalizedComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.showXAxisLabel = false;\n        this.showYAxisLabel = false;\n        this.showGridLines = true;\n        this.curve = curveLinear;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.roundDomains = false;\n        this.tooltipDisabled = false;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.yDomain = [0, 100];\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.seriesType = SeriesType;\n        this.timelineHeight = 50;\n        this.timelinePadding = 10;\n        this.trackBy = (index, item) => {\n            return item.name;\n        };\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        if (this.timeline) {\n            this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\n        }\n        this.xDomain = this.getXDomain();\n        if (this.filteredDomain) {\n            this.xDomain = this.filteredDomain;\n        }\n        this.seriesDomain = this.getSeriesDomain();\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n        this.yScale = this.getYScale(this.yDomain, this.dims.height);\n        for (let i = 0; i < this.xSet.length; i++) {\n            const val = this.xSet[i];\n            let d0 = 0;\n            let total = 0;\n            for (const group of this.results) {\n                const d = group.series.find(item => {\n                    let a = item.name;\n                    let b = val;\n                    if (this.scaleType === ScaleType.Time) {\n                        a = a.valueOf();\n                        b = b.valueOf();\n                    }\n                    return a === b;\n                });\n                if (d) {\n                    total += d.value;\n                }\n            }\n            for (const group of this.results) {\n                let d = group.series.find(item => {\n                    let a = item.name;\n                    let b = val;\n                    if (this.scaleType === ScaleType.Time) {\n                        a = a.valueOf();\n                        b = b.valueOf();\n                    }\n                    return a === b;\n                });\n                if (d) {\n                    d.d0 = d0;\n                    d.d1 = d0 + d.value;\n                    d0 += d.value;\n                }\n                else {\n                    d = {\n                        name: val,\n                        value: 0,\n                        d0,\n                        d1: d0\n                    };\n                    group.series.push(d);\n                }\n                if (total > 0) {\n                    d.d0 = (d.d0 * 100) / total;\n                    d.d1 = (d.d1 * 100) / total;\n                }\n                else {\n                    d.d0 = 0;\n                    d.d1 = 0;\n                }\n            }\n        }\n        this.updateTimeline();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n        this.clipPathId = 'clip' + id().toString();\n        this.clipPath = `url(#${this.clipPathId})`;\n    }\n    updateTimeline() {\n        if (this.timeline) {\n            this.timelineWidth = this.dims.width;\n            this.timelineXDomain = this.getXDomain();\n            this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n            this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n            this.timelineTransform = `translate(${this.dims.xOffset}, ${-this.margin[2]})`;\n        }\n    }\n    getXDomain() {\n        let values = getUniqueXDomainValues(this.results);\n        this.scaleType = getScaleType(values);\n        let domain = [];\n        if (this.scaleType === ScaleType.Time) {\n            const min = Math.min(...values);\n            const max = Math.max(...values);\n            domain = [new Date(min), new Date(max)];\n            this.xSet = [...values].sort((a, b) => {\n                const aDate = a.getTime();\n                const bDate = b.getTime();\n                if (aDate > bDate)\n                    return 1;\n                if (bDate > aDate)\n                    return -1;\n                return 0;\n            });\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            values = values.map(v => Number(v));\n            const min = Math.min(...values);\n            const max = Math.max(...values);\n            domain = [min, max];\n            // Use compare function to sort numbers numerically\n            this.xSet = [...values].sort((a, b) => a - b);\n        }\n        else {\n            domain = values;\n            this.xSet = values;\n        }\n        return domain;\n    }\n    getSeriesDomain() {\n        return this.results.map(d => d.name);\n    }\n    getXScale(domain, width) {\n        let scale;\n        if (this.scaleType === ScaleType.Time) {\n            scale = scaleTime();\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            scale = scaleLinear();\n        }\n        else if (this.scaleType === ScaleType.Ordinal) {\n            scale = scalePoint().padding(0.1);\n        }\n        scale.range([0, width]).domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getYScale(domain, height) {\n        const scale = scaleLinear().range([height, 0]).domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    updateDomain(domain) {\n        this.filteredDomain = domain;\n        this.xDomain = this.filteredDomain;\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    }\n    updateHoveredVertical(item) {\n        this.hoveredVertical = item.value;\n        this.deactivateAll();\n    }\n    hideCircles() {\n        this.hoveredVertical = null;\n        this.deactivateAll();\n    }\n    onClick(data, series) {\n        if (series) {\n            data.series = series.name;\n        }\n        this.select.emit(data);\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.seriesDomain;\n        }\n        else {\n            domain = this.yDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.seriesDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.yDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n    deactivateAll() {\n        this.activeEntries = [...this.activeEntries];\n        for (const entry of this.activeEntries) {\n            this.deactivate.emit({ value: entry, entries: [] });\n        }\n        this.activeEntries = [];\n    }\n}\nAreaChartNormalizedComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaChartNormalizedComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nAreaChartNormalizedComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: AreaChartNormalizedComponent, selector: \"ngx-charts-area-chart-normalized\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", timeline: \"timeline\", gradient: \"gradient\", showGridLines: \"showGridLines\", curve: \"curve\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", roundDomains: \"roundDomains\", tooltipDisabled: \"tooltipDisabled\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, host: { listeners: { \"mouseleave\": \"hideCircles()\" } }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }, { propertyName: \"seriesTooltipTemplate\", first: true, predicate: [\"seriesTooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-area-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [scaleType]=\"scaleType\"\n              [activeEntries]=\"activeEntries\"\n              [gradient]=\"gradient\"\n              [normalized]=\"true\"\n              [curve]=\"curve\"\n              [animations]=\"animations\"\n            />\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [showPercentage]=\"true\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results\">\n              <svg:g\n                ngx-charts-circle-series\n                [type]=\"seriesType.Stacked\"\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [activeEntries]=\"activeEntries\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event, series)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\"\n        [scaleType]=\"scaleType\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-area-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [gradient]=\"gradient\"\n            [normalized]=\"true\"\n            [curve]=\"curve\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: AreaSeriesComponent, selector: \"g[ngx-charts-area-series]\", inputs: [\"data\", \"xScale\", \"yScale\", \"baseValue\", \"colors\", \"scaleType\", \"stacked\", \"normalized\", \"gradient\", \"curve\", \"activeEntries\", \"animations\"], outputs: [\"select\"] }, { type: TooltipArea, selector: \"g[ngx-charts-tooltip-area]\", inputs: [\"dims\", \"xSet\", \"xScale\", \"yScale\", \"results\", \"colors\", \"showPercentage\", \"tooltipDisabled\", \"tooltipTemplate\"], outputs: [\"hover\"] }, { type: CircleSeriesComponent, selector: \"g[ngx-charts-circle-series]\", inputs: [\"data\", \"type\", \"xScale\", \"yScale\", \"colors\", \"scaleType\", \"visibleValue\", \"activeEntries\", \"tooltipDisabled\", \"tooltipTemplate\"], outputs: [\"select\", \"activate\", \"deactivate\"] }, { type: Timeline, selector: \"g[ngx-charts-timeline]\", inputs: [\"view\", \"results\", \"scheme\", \"customColors\", \"legend\", \"autoScale\", \"scaleType\", \"height\"], outputs: [\"select\", \"onDomainChange\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaChartNormalizedComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-area-chart-normalized', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-area-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [scaleType]=\"scaleType\"\n              [activeEntries]=\"activeEntries\"\n              [gradient]=\"gradient\"\n              [normalized]=\"true\"\n              [curve]=\"curve\"\n              [animations]=\"animations\"\n            />\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [showPercentage]=\"true\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results\">\n              <svg:g\n                ngx-charts-circle-series\n                [type]=\"seriesType.Stacked\"\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [activeEntries]=\"activeEntries\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event, series)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\"\n        [scaleType]=\"scaleType\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-area-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [gradient]=\"gradient\"\n            [normalized]=\"true\"\n            [curve]=\"curve\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], timeline: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], curve: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }], seriesTooltipTemplate: [{\n                type: ContentChild,\n                args: ['seriesTooltipTemplate']\n            }], hideCircles: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nclass AreaChartStackedComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.xAxis = false;\n        this.yAxis = false;\n        this.timeline = false;\n        this.showGridLines = true;\n        this.curve = curveLinear;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.roundDomains = false;\n        this.tooltipDisabled = false;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.timelineHeight = 50;\n        this.timelinePadding = 10;\n        this.seriesType = SeriesType;\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        if (this.timeline) {\n            this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\n        }\n        this.xDomain = this.getXDomain();\n        if (this.filteredDomain) {\n            this.xDomain = this.filteredDomain;\n        }\n        this.yDomain = this.getYDomain();\n        this.seriesDomain = this.getSeriesDomain();\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n        this.yScale = this.getYScale(this.yDomain, this.dims.height);\n        for (let i = 0; i < this.xSet.length; i++) {\n            const val = this.xSet[i];\n            let d0 = 0;\n            for (const group of this.results) {\n                let d = group.series.find(item => {\n                    let a = item.name;\n                    let b = val;\n                    if (this.scaleType === ScaleType.Time) {\n                        a = a.valueOf();\n                        b = b.valueOf();\n                    }\n                    return a === b;\n                });\n                if (d) {\n                    d.d0 = d0;\n                    d.d1 = d0 + d.value;\n                    d0 += d.value;\n                }\n                else {\n                    d = {\n                        name: val,\n                        value: 0,\n                        d0,\n                        d1: d0\n                    };\n                    group.series.push(d);\n                }\n            }\n        }\n        this.updateTimeline();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n        this.clipPathId = 'clip' + id().toString();\n        this.clipPath = `url(#${this.clipPathId})`;\n    }\n    updateTimeline() {\n        if (this.timeline) {\n            this.timelineWidth = this.dims.width;\n            this.timelineXDomain = this.getXDomain();\n            this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n            this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n            this.timelineTransform = `translate(${this.dims.xOffset}, ${-this.margin[2]})`;\n        }\n    }\n    getXDomain() {\n        let values = getUniqueXDomainValues(this.results);\n        this.scaleType = getScaleType(values);\n        let domain = [];\n        if (this.scaleType === ScaleType.Linear) {\n            values = values.map(v => Number(v));\n        }\n        let min;\n        let max;\n        if (this.scaleType === ScaleType.Time || this.scaleType === ScaleType.Linear) {\n            min = this.xScaleMin ? this.xScaleMin : Math.min(...values);\n            max = this.xScaleMax ? this.xScaleMax : Math.max(...values);\n        }\n        if (this.scaleType === ScaleType.Time) {\n            domain = [new Date(min), new Date(max)];\n            this.xSet = [...values].sort((a, b) => {\n                const aDate = a.getTime();\n                const bDate = b.getTime();\n                if (aDate > bDate)\n                    return 1;\n                if (bDate > aDate)\n                    return -1;\n                return 0;\n            });\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            domain = [min, max];\n            // Use compare function to sort numbers numerically\n            this.xSet = [...values].sort((a, b) => a - b);\n        }\n        else {\n            domain = values;\n            this.xSet = values;\n        }\n        return domain;\n    }\n    getYDomain() {\n        const domain = [];\n        for (let i = 0; i < this.xSet.length; i++) {\n            const val = this.xSet[i];\n            let sum = 0;\n            for (const group of this.results) {\n                const d = group.series.find(item => {\n                    let a = item.name;\n                    let b = val;\n                    if (this.scaleType === ScaleType.Time) {\n                        a = a.valueOf();\n                        b = b.valueOf();\n                    }\n                    return a === b;\n                });\n                if (d) {\n                    sum += d.value;\n                }\n            }\n            domain.push(sum);\n        }\n        const min = this.yScaleMin ? this.yScaleMin : Math.min(0, ...domain);\n        const max = this.yScaleMax ? this.yScaleMax : Math.max(...domain);\n        return [min, max];\n    }\n    getSeriesDomain() {\n        return this.results.map(d => d.name);\n    }\n    getXScale(domain, width) {\n        let scale;\n        if (this.scaleType === ScaleType.Time) {\n            scale = scaleTime();\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            scale = scaleLinear();\n        }\n        else if (this.scaleType === ScaleType.Ordinal) {\n            scale = scalePoint().padding(0.1);\n        }\n        scale.range([0, width]).domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getYScale(domain, height) {\n        const scale = scaleLinear().range([height, 0]).domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    updateDomain(domain) {\n        this.filteredDomain = domain;\n        this.xDomain = this.filteredDomain;\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    }\n    updateHoveredVertical(item) {\n        this.hoveredVertical = item.value;\n        this.deactivateAll();\n    }\n    hideCircles() {\n        this.hoveredVertical = null;\n        this.deactivateAll();\n    }\n    onClick(data, series) {\n        if (series) {\n            data.series = series.name;\n        }\n        this.select.emit(data);\n    }\n    trackBy(index, item) {\n        return `${item.name}`;\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.seriesDomain;\n        }\n        else {\n            domain = this.yDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.seriesDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.yDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n    deactivateAll() {\n        this.activeEntries = [...this.activeEntries];\n        for (const entry of this.activeEntries) {\n            this.deactivate.emit({ value: entry, entries: [] });\n        }\n        this.activeEntries = [];\n    }\n}\nAreaChartStackedComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaChartStackedComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nAreaChartStackedComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: AreaChartStackedComponent, selector: \"ngx-charts-area-chart-stacked\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", timeline: \"timeline\", gradient: \"gradient\", showGridLines: \"showGridLines\", curve: \"curve\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", roundDomains: \"roundDomains\", tooltipDisabled: \"tooltipDisabled\", xScaleMin: \"xScaleMin\", xScaleMax: \"xScaleMax\", yScaleMin: \"yScaleMin\", yScaleMax: \"yScaleMax\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, host: { listeners: { \"mouseleave\": \"hideCircles()\" } }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }, { propertyName: \"seriesTooltipTemplate\", first: true, predicate: [\"seriesTooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-area-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [scaleType]=\"scaleType\"\n              [gradient]=\"gradient\"\n              [activeEntries]=\"activeEntries\"\n              [stacked]=\"true\"\n              [curve]=\"curve\"\n              [animations]=\"animations\"\n            />\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n              <svg:g\n                ngx-charts-circle-series\n                [type]=\"seriesType.Stacked\"\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [activeEntries]=\"activeEntries\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event, series)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\"\n        [scaleType]=\"scaleType\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-area-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [gradient]=\"gradient\"\n            [stacked]=\"true\"\n            [curve]=\"curve\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: AreaSeriesComponent, selector: \"g[ngx-charts-area-series]\", inputs: [\"data\", \"xScale\", \"yScale\", \"baseValue\", \"colors\", \"scaleType\", \"stacked\", \"normalized\", \"gradient\", \"curve\", \"activeEntries\", \"animations\"], outputs: [\"select\"] }, { type: TooltipArea, selector: \"g[ngx-charts-tooltip-area]\", inputs: [\"dims\", \"xSet\", \"xScale\", \"yScale\", \"results\", \"colors\", \"showPercentage\", \"tooltipDisabled\", \"tooltipTemplate\"], outputs: [\"hover\"] }, { type: CircleSeriesComponent, selector: \"g[ngx-charts-circle-series]\", inputs: [\"data\", \"type\", \"xScale\", \"yScale\", \"colors\", \"scaleType\", \"visibleValue\", \"activeEntries\", \"tooltipDisabled\", \"tooltipTemplate\"], outputs: [\"select\", \"activate\", \"deactivate\"] }, { type: Timeline, selector: \"g[ngx-charts-timeline]\", inputs: [\"view\", \"results\", \"scheme\", \"customColors\", \"legend\", \"autoScale\", \"scaleType\", \"height\"], outputs: [\"select\", \"onDomainChange\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaChartStackedComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-area-chart-stacked', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-area-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [scaleType]=\"scaleType\"\n              [gradient]=\"gradient\"\n              [activeEntries]=\"activeEntries\"\n              [stacked]=\"true\"\n              [curve]=\"curve\"\n              [animations]=\"animations\"\n            />\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n              <svg:g\n                ngx-charts-circle-series\n                [type]=\"seriesType.Stacked\"\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [activeEntries]=\"activeEntries\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event, series)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\"\n        [scaleType]=\"scaleType\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-area-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [gradient]=\"gradient\"\n            [stacked]=\"true\"\n            [curve]=\"curve\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], timeline: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], curve: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], xScaleMin: [{\n                type: Input\n            }], xScaleMax: [{\n                type: Input\n            }], yScaleMin: [{\n                type: Input\n            }], yScaleMax: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }], seriesTooltipTemplate: [{\n                type: ContentChild,\n                args: ['seriesTooltipTemplate']\n            }], hideCircles: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nclass AreaChartModule {\n}\nAreaChartModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaChartModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nAreaChartModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaChartModule, declarations: [AreaChartComponent, AreaChartNormalizedComponent, AreaChartStackedComponent, AreaSeriesComponent], imports: [ChartCommonModule], exports: [AreaChartComponent, AreaChartNormalizedComponent, AreaChartStackedComponent, AreaSeriesComponent] });\nAreaChartModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaChartModule, imports: [[ChartCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaChartModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule],\n                    declarations: [AreaChartComponent, AreaChartNormalizedComponent, AreaChartStackedComponent, AreaSeriesComponent],\n                    exports: [AreaChartComponent, AreaChartNormalizedComponent, AreaChartStackedComponent, AreaSeriesComponent]\n                }]\n        }] });\n\nclass BarComponent {\n    constructor(element) {\n        this.roundEdges = true;\n        this.gradient = false;\n        this.offset = 0;\n        this.isActive = false;\n        this.animations = true;\n        this.noBarWhenZero = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.hasGradient = false;\n        this.hideBar = false;\n        this.element = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n        if (changes.roundEdges) {\n            this.loadAnimation();\n        }\n        this.update();\n    }\n    update() {\n        this.gradientId = 'grad' + id().toString();\n        this.gradientFill = `url(#${this.gradientId})`;\n        if (this.gradient || this.stops) {\n            this.gradientStops = this.getGradient();\n            this.hasGradient = true;\n        }\n        else {\n            this.hasGradient = false;\n        }\n        this.updatePathEl();\n        this.checkToHideBar();\n    }\n    loadAnimation() {\n        this.path = this.getStartingPath();\n        setTimeout(this.update.bind(this), 100);\n    }\n    updatePathEl() {\n        const node = select(this.element).select('.bar');\n        const path = this.getPath();\n        if (this.animations) {\n            node.transition().duration(500).attr('d', path);\n        }\n        else {\n            node.attr('d', path);\n        }\n    }\n    getGradient() {\n        if (this.stops) {\n            return this.stops;\n        }\n        return [\n            {\n                offset: 0,\n                color: this.fill,\n                opacity: this.getStartOpacity()\n            },\n            {\n                offset: 100,\n                color: this.fill,\n                opacity: 1\n            }\n        ];\n    }\n    getStartingPath() {\n        if (!this.animations) {\n            return this.getPath();\n        }\n        let radius = this.getRadius();\n        let path;\n        if (this.roundEdges) {\n            if (this.orientation === BarOrientation.Vertical) {\n                radius = Math.min(this.height, radius);\n                path = roundedRect(this.x, this.y + this.height, this.width, 1, 0, this.edges);\n            }\n            else if (this.orientation === BarOrientation.Horizontal) {\n                radius = Math.min(this.width, radius);\n                path = roundedRect(this.x, this.y, 1, this.height, 0, this.edges);\n            }\n        }\n        else {\n            if (this.orientation === BarOrientation.Vertical) {\n                path = roundedRect(this.x, this.y + this.height, this.width, 1, 0, this.edges);\n            }\n            else if (this.orientation === BarOrientation.Horizontal) {\n                path = roundedRect(this.x, this.y, 1, this.height, 0, this.edges);\n            }\n        }\n        return path;\n    }\n    getPath() {\n        let radius = this.getRadius();\n        let path;\n        if (this.roundEdges) {\n            if (this.orientation === BarOrientation.Vertical) {\n                radius = Math.min(this.height, radius);\n                path = roundedRect(this.x, this.y, this.width, this.height, radius, this.edges);\n            }\n            else if (this.orientation === BarOrientation.Horizontal) {\n                radius = Math.min(this.width, radius);\n                path = roundedRect(this.x, this.y, this.width, this.height, radius, this.edges);\n            }\n        }\n        else {\n            path = roundedRect(this.x, this.y, this.width, this.height, radius, this.edges);\n        }\n        return path;\n    }\n    getRadius() {\n        let radius = 0;\n        if (this.roundEdges && this.height > 5 && this.width > 5) {\n            radius = Math.floor(Math.min(5, this.height / 2, this.width / 2));\n        }\n        return radius;\n    }\n    getStartOpacity() {\n        if (this.roundEdges) {\n            return 0.2;\n        }\n        else {\n            return 0.5;\n        }\n    }\n    get edges() {\n        let edges = [false, false, false, false];\n        if (this.roundEdges) {\n            if (this.orientation === BarOrientation.Vertical) {\n                if (this.data.value > 0) {\n                    edges = [true, true, false, false];\n                }\n                else {\n                    edges = [false, false, true, true];\n                }\n            }\n            else if (this.orientation === BarOrientation.Horizontal) {\n                if (this.data.value > 0) {\n                    edges = [false, true, false, true];\n                }\n                else {\n                    edges = [true, false, true, false];\n                }\n            }\n        }\n        return edges;\n    }\n    onMouseEnter() {\n        this.activate.emit(this.data);\n    }\n    onMouseLeave() {\n        this.deactivate.emit(this.data);\n    }\n    checkToHideBar() {\n        this.hideBar =\n            this.noBarWhenZero &&\n                ((this.orientation === BarOrientation.Vertical && this.height === 0) ||\n                    (this.orientation === BarOrientation.Horizontal && this.width === 0));\n    }\n}\nBarComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nBarComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BarComponent, selector: \"g[ngx-charts-bar]\", inputs: { fill: \"fill\", data: \"data\", width: \"width\", height: \"height\", x: \"x\", y: \"y\", orientation: \"orientation\", roundEdges: \"roundEdges\", gradient: \"gradient\", offset: \"offset\", isActive: \"isActive\", stops: \"stops\", animations: \"animations\", ariaLabel: \"ariaLabel\", noBarWhenZero: \"noBarWhenZero\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, host: { listeners: { \"mouseenter\": \"onMouseEnter()\", \"mouseleave\": \"onMouseLeave()\" } }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:defs *ngIf=\"hasGradient\">\n      <svg:g ngx-charts-svg-linear-gradient [orientation]=\"orientation\" [name]=\"gradientId\" [stops]=\"gradientStops\" />\n    </svg:defs>\n    <svg:path\n      class=\"bar\"\n      stroke=\"none\"\n      role=\"img\"\n      tabIndex=\"-1\"\n      [class.active]=\"isActive\"\n      [class.hidden]=\"hideBar\"\n      [attr.d]=\"path\"\n      [attr.aria-label]=\"ariaLabel\"\n      [attr.fill]=\"hasGradient ? gradientFill : fill\"\n      (click)=\"select.emit(data)\"\n    />\n  `, isInline: true, components: [{ type: SvgLinearGradientComponent, selector: \"g[ngx-charts-svg-linear-gradient]\", inputs: [\"orientation\", \"name\", \"stops\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-bar]',\n                    template: `\n    <svg:defs *ngIf=\"hasGradient\">\n      <svg:g ngx-charts-svg-linear-gradient [orientation]=\"orientation\" [name]=\"gradientId\" [stops]=\"gradientStops\" />\n    </svg:defs>\n    <svg:path\n      class=\"bar\"\n      stroke=\"none\"\n      role=\"img\"\n      tabIndex=\"-1\"\n      [class.active]=\"isActive\"\n      [class.hidden]=\"hideBar\"\n      [attr.d]=\"path\"\n      [attr.aria-label]=\"ariaLabel\"\n      [attr.fill]=\"hasGradient ? gradientFill : fill\"\n      (click)=\"select.emit(data)\"\n    />\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { fill: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], x: [{\n                type: Input\n            }], y: [{\n                type: Input\n            }], orientation: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], offset: [{\n                type: Input\n            }], isActive: [{\n                type: Input\n            }], stops: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], onMouseEnter: [{\n                type: HostListener,\n                args: ['mouseenter']\n            }], onMouseLeave: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nvar BarChartType;\n(function (BarChartType) {\n    BarChartType[\"Standard\"] = \"standard\";\n    BarChartType[\"Normalized\"] = \"normalized\";\n    BarChartType[\"Stacked\"] = \"stacked\";\n})(BarChartType || (BarChartType = {}));\n\nvar D0Types;\n(function (D0Types) {\n    D0Types[\"positive\"] = \"positive\";\n    D0Types[\"negative\"] = \"negative\";\n})(D0Types || (D0Types = {}));\n\nclass BarLabelComponent {\n    constructor(element) {\n        this.dimensionsChanged = new EventEmitter();\n        this.horizontalPadding = 2;\n        this.verticalPadding = 5;\n        this.element = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    getSize() {\n        const h = this.element.getBoundingClientRect().height;\n        const w = this.element.getBoundingClientRect().width;\n        return { height: h, width: w, negative: this.value < 0 };\n    }\n    ngAfterViewInit() {\n        this.dimensionsChanged.emit(this.getSize());\n    }\n    update() {\n        if (this.valueFormatting) {\n            this.formatedValue = this.valueFormatting(this.value);\n        }\n        else {\n            this.formatedValue = formatLabel(this.value);\n        }\n        if (this.orientation === 'horizontal') {\n            this.x = this.barX + this.barWidth;\n            // if the value is negative then it's on the left of the x0.\n            // we need to put the data label in front of the bar\n            if (this.value < 0) {\n                this.x = this.x - this.horizontalPadding;\n                this.textAnchor = 'end';\n            }\n            else {\n                this.x = this.x + this.horizontalPadding;\n                this.textAnchor = 'start';\n            }\n            this.y = this.barY + this.barHeight / 2;\n        }\n        else {\n            // orientation must be \"vertical\"\n            this.x = this.barX + this.barWidth / 2;\n            this.y = this.barY + this.barHeight;\n            if (this.value < 0) {\n                this.y = this.y + this.verticalPadding;\n                this.textAnchor = 'end';\n            }\n            else {\n                this.y = this.y - this.verticalPadding;\n                this.textAnchor = 'start';\n            }\n            this.transform = `rotate(-45, ${this.x} , ${this.y})`;\n        }\n    }\n}\nBarLabelComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarLabelComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nBarLabelComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BarLabelComponent, selector: \"g[ngx-charts-bar-label]\", inputs: { value: \"value\", valueFormatting: \"valueFormatting\", barX: \"barX\", barY: \"barY\", barWidth: \"barWidth\", barHeight: \"barHeight\", orientation: \"orientation\" }, outputs: { dimensionsChanged: \"dimensionsChanged\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:text\n      class=\"textDataLabel\"\n      alignment-baseline=\"middle\"\n      [attr.text-anchor]=\"textAnchor\"\n      [attr.transform]=\"transform\"\n      [attr.x]=\"x\"\n      [attr.y]=\"y\"\n    >\n      {{ formatedValue }}\n    </svg:text>\n  `, isInline: true, styles: [\".textDataLabel{font-size:11px}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarLabelComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'g[ngx-charts-bar-label]', template: `\n    <svg:text\n      class=\"textDataLabel\"\n      alignment-baseline=\"middle\"\n      [attr.text-anchor]=\"textAnchor\"\n      [attr.transform]=\"transform\"\n      [attr.x]=\"x\"\n      [attr.y]=\"y\"\n    >\n      {{ formatedValue }}\n    </svg:text>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".textDataLabel{font-size:11px}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { value: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], barX: [{\n                type: Input\n            }], barY: [{\n                type: Input\n            }], barWidth: [{\n                type: Input\n            }], barHeight: [{\n                type: Input\n            }], orientation: [{\n                type: Input\n            }], dimensionsChanged: [{\n                type: Output\n            }] } });\n\nclass SeriesHorizontal {\n    constructor() {\n        this.type = BarChartType.Standard;\n        this.tooltipDisabled = false;\n        this.animations = true;\n        this.showDataLabel = false;\n        this.noBarWhenZero = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.dataLabelWidthChanged = new EventEmitter();\n        this.barsForDataLabels = [];\n        this.barOrientation = BarOrientation;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.updateTooltipSettings();\n        const d0 = {\n            [D0Types.positive]: 0,\n            [D0Types.negative]: 0\n        };\n        let d0Type;\n        d0Type = D0Types.positive;\n        let total;\n        if (this.type === BarChartType.Normalized) {\n            total = this.series.map(d => d.value).reduce((sum, d) => sum + d, 0);\n        }\n        const xScaleMin = Math.max(this.xScale.domain()[0], 0);\n        this.bars = this.series.map(d => {\n            let value = d.value;\n            const label = this.getLabel(d);\n            const formattedLabel = formatLabel(label);\n            const roundEdges = this.roundEdges;\n            d0Type = value > 0 ? D0Types.positive : D0Types.negative;\n            const bar = {\n                value,\n                label,\n                roundEdges,\n                data: d,\n                formattedLabel\n            };\n            bar.height = this.yScale.bandwidth();\n            if (this.type === BarChartType.Standard) {\n                bar.width = Math.abs(this.xScale(value) - this.xScale(xScaleMin));\n                if (value < 0) {\n                    bar.x = this.xScale(value);\n                }\n                else {\n                    bar.x = this.xScale(xScaleMin);\n                }\n                bar.y = this.yScale(label);\n            }\n            else if (this.type === BarChartType.Stacked) {\n                const offset0 = d0[d0Type];\n                const offset1 = offset0 + value;\n                d0[d0Type] += value;\n                bar.width = this.xScale(offset1) - this.xScale(offset0);\n                bar.x = this.xScale(offset0);\n                bar.y = 0;\n                bar.offset0 = offset0;\n                bar.offset1 = offset1;\n            }\n            else if (this.type === BarChartType.Normalized) {\n                let offset0 = d0[d0Type];\n                let offset1 = offset0 + value;\n                d0[d0Type] += value;\n                if (total > 0) {\n                    offset0 = (offset0 * 100) / total;\n                    offset1 = (offset1 * 100) / total;\n                }\n                else {\n                    offset0 = 0;\n                    offset1 = 0;\n                }\n                bar.width = this.xScale(offset1) - this.xScale(offset0);\n                bar.x = this.xScale(offset0);\n                bar.y = 0;\n                bar.offset0 = offset0;\n                bar.offset1 = offset1;\n                value = (offset1 - offset0).toFixed(2) + '%';\n            }\n            if (this.colors.scaleType === ScaleType.Ordinal) {\n                bar.color = this.colors.getColor(label);\n            }\n            else {\n                if (this.type === BarChartType.Standard) {\n                    bar.color = this.colors.getColor(value);\n                    bar.gradientStops = this.colors.getLinearGradientStops(value);\n                }\n                else {\n                    bar.color = this.colors.getColor(bar.offset1);\n                    bar.gradientStops = this.colors.getLinearGradientStops(bar.offset1, bar.offset0);\n                }\n            }\n            let tooltipLabel = formattedLabel;\n            bar.ariaLabel = formattedLabel + ' ' + value.toLocaleString();\n            if (this.seriesName !== null && this.seriesName !== undefined) {\n                tooltipLabel = `${this.seriesName} • ${formattedLabel}`;\n                bar.data.series = this.seriesName;\n                bar.ariaLabel = this.seriesName + ' ' + bar.ariaLabel;\n            }\n            bar.tooltipText = this.tooltipDisabled\n                ? undefined\n                : `\n        <span class=\"tooltip-label\">${escapeLabel(tooltipLabel)}</span>\n        <span class=\"tooltip-val\">${this.dataLabelFormatting ? this.dataLabelFormatting(value) : value.toLocaleString()}</span>\n      `;\n            return bar;\n        });\n        this.updateDataLabels();\n    }\n    updateDataLabels() {\n        if (this.type === BarChartType.Stacked) {\n            this.barsForDataLabels = [];\n            const section = {};\n            section.series = this.seriesName;\n            const totalPositive = this.series.map(d => d.value).reduce((sum, d) => (d > 0 ? sum + d : sum), 0);\n            const totalNegative = this.series.map(d => d.value).reduce((sum, d) => (d < 0 ? sum + d : sum), 0);\n            section.total = totalPositive + totalNegative;\n            section.x = 0;\n            section.y = 0;\n            // if total is positive then we show it on the right, otherwise on the left\n            if (section.total > 0) {\n                section.width = this.xScale(totalPositive);\n            }\n            else {\n                section.width = this.xScale(totalNegative);\n            }\n            section.height = this.yScale.bandwidth();\n            this.barsForDataLabels.push(section);\n        }\n        else {\n            this.barsForDataLabels = this.series.map(d => {\n                const section = {};\n                section.series = this.seriesName ?? d.label;\n                section.total = d.value;\n                section.x = this.xScale(0);\n                section.y = this.yScale(d.label);\n                section.width = this.xScale(section.total) - this.xScale(0);\n                section.height = this.yScale.bandwidth();\n                return section;\n            });\n        }\n    }\n    updateTooltipSettings() {\n        this.tooltipPlacement = this.tooltipDisabled ? undefined : PlacementTypes.Top;\n        this.tooltipType = this.tooltipDisabled ? undefined : StyleTypes.tooltip;\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find(active => {\n            return entry.name === active.name && entry.value === active.value;\n        });\n        return item !== undefined;\n    }\n    getLabel(dataItem) {\n        if (dataItem.label) {\n            return dataItem.label;\n        }\n        return dataItem.name;\n    }\n    trackBy(index, bar) {\n        return bar.label;\n    }\n    trackDataLabelBy(index, barLabel) {\n        return index + '#' + barLabel.series + '#' + barLabel.total;\n    }\n    click(data) {\n        this.select.emit(data);\n    }\n}\nSeriesHorizontal.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SeriesHorizontal, deps: [], target: i0.ɵɵFactoryTarget.Component });\nSeriesHorizontal.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: SeriesHorizontal, selector: \"g[ngx-charts-series-horizontal]\", inputs: { dims: \"dims\", type: \"type\", series: \"series\", xScale: \"xScale\", yScale: \"yScale\", colors: \"colors\", tooltipDisabled: \"tooltipDisabled\", gradient: \"gradient\", activeEntries: \"activeEntries\", seriesName: \"seriesName\", tooltipTemplate: \"tooltipTemplate\", roundEdges: \"roundEdges\", animations: \"animations\", showDataLabel: \"showDataLabel\", dataLabelFormatting: \"dataLabelFormatting\", noBarWhenZero: \"noBarWhenZero\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\", dataLabelWidthChanged: \"dataLabelWidthChanged\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g\n      ngx-charts-bar\n      *ngFor=\"let bar of bars; trackBy: trackBy\"\n      [@animationState]=\"'active'\"\n      [width]=\"bar.width\"\n      [height]=\"bar.height\"\n      [x]=\"bar.x\"\n      [y]=\"bar.y\"\n      [fill]=\"bar.color\"\n      [stops]=\"bar.gradientStops\"\n      [data]=\"bar.data\"\n      [orientation]=\"barOrientation.Horizontal\"\n      [roundEdges]=\"bar.roundEdges\"\n      (select)=\"click($event)\"\n      [gradient]=\"gradient\"\n      [isActive]=\"isActive(bar.data)\"\n      [ariaLabel]=\"bar.ariaLabel\"\n      [animations]=\"animations\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"tooltipPlacement\"\n      [tooltipType]=\"tooltipType\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : bar.tooltipText\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"bar.data\"\n      [noBarWhenZero]=\"noBarWhenZero\"\n    ></svg:g>\n    <svg:g *ngIf=\"showDataLabel\">\n      <svg:g\n        ngx-charts-bar-label\n        *ngFor=\"let b of barsForDataLabels; let i = index; trackBy: trackDataLabelBy\"\n        [barX]=\"b.x\"\n        [barY]=\"b.y\"\n        [barWidth]=\"b.width\"\n        [barHeight]=\"b.height\"\n        [value]=\"b.total\"\n        [valueFormatting]=\"dataLabelFormatting\"\n        [orientation]=\"barOrientation.Horizontal\"\n        (dimensionsChanged)=\"dataLabelWidthChanged.emit({ size: $event, index: i })\"\n      />\n    </svg:g>\n  `, isInline: true, components: [{ type: BarComponent, selector: \"g[ngx-charts-bar]\", inputs: [\"fill\", \"data\", \"width\", \"height\", \"x\", \"y\", \"orientation\", \"roundEdges\", \"gradient\", \"offset\", \"isActive\", \"stops\", \"animations\", \"ariaLabel\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\"] }, { type: BarLabelComponent, selector: \"g[ngx-charts-bar-label]\", inputs: [\"value\", \"valueFormatting\", \"barX\", \"barY\", \"barWidth\", \"barHeight\", \"orientation\"], outputs: [\"dimensionsChanged\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1\n                }),\n                animate(500, style({ opacity: 0 }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SeriesHorizontal, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-series-horizontal]',\n                    template: `\n    <svg:g\n      ngx-charts-bar\n      *ngFor=\"let bar of bars; trackBy: trackBy\"\n      [@animationState]=\"'active'\"\n      [width]=\"bar.width\"\n      [height]=\"bar.height\"\n      [x]=\"bar.x\"\n      [y]=\"bar.y\"\n      [fill]=\"bar.color\"\n      [stops]=\"bar.gradientStops\"\n      [data]=\"bar.data\"\n      [orientation]=\"barOrientation.Horizontal\"\n      [roundEdges]=\"bar.roundEdges\"\n      (select)=\"click($event)\"\n      [gradient]=\"gradient\"\n      [isActive]=\"isActive(bar.data)\"\n      [ariaLabel]=\"bar.ariaLabel\"\n      [animations]=\"animations\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"tooltipPlacement\"\n      [tooltipType]=\"tooltipType\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : bar.tooltipText\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"bar.data\"\n      [noBarWhenZero]=\"noBarWhenZero\"\n    ></svg:g>\n    <svg:g *ngIf=\"showDataLabel\">\n      <svg:g\n        ngx-charts-bar-label\n        *ngFor=\"let b of barsForDataLabels; let i = index; trackBy: trackDataLabelBy\"\n        [barX]=\"b.x\"\n        [barY]=\"b.y\"\n        [barWidth]=\"b.width\"\n        [barHeight]=\"b.height\"\n        [value]=\"b.total\"\n        [valueFormatting]=\"dataLabelFormatting\"\n        [orientation]=\"barOrientation.Horizontal\"\n        (dimensionsChanged)=\"dataLabelWidthChanged.emit({ size: $event, index: i })\"\n      />\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1\n                                }),\n                                animate(500, style({ opacity: 0 }))\n                            ])\n                        ])\n                    ]\n                }]\n        }], propDecorators: { dims: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], series: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], seriesName: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], showDataLabel: [{\n                type: Input\n            }], dataLabelFormatting: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], dataLabelWidthChanged: [{\n                type: Output\n            }] } });\n\nclass BarHorizontalComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.tooltipDisabled = false;\n        this.showGridLines = true;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.barPadding = 8;\n        this.roundDomains = false;\n        this.roundEdges = true;\n        this.showDataLabel = false;\n        this.noBarWhenZero = true;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.dataLabelMaxWidth = { negative: 0, positive: 0 };\n    }\n    update() {\n        super.update();\n        if (!this.showDataLabel) {\n            this.dataLabelMaxWidth = { negative: 0, positive: 0 };\n        }\n        this.margin = [10, 20 + this.dataLabelMaxWidth.positive, 10, 20 + this.dataLabelMaxWidth.negative];\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        this.formatDates();\n        this.xScale = this.getXScale();\n        this.yScale = this.getYScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    }\n    getXScale() {\n        this.xDomain = this.getXDomain();\n        const scale = scaleLinear().range([0, this.dims.width]).domain(this.xDomain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getYScale() {\n        this.yDomain = this.getYDomain();\n        const spacing = this.yDomain.length / (this.dims.height / this.barPadding + 1);\n        return scaleBand().rangeRound([0, this.dims.height]).paddingInner(spacing).domain(this.yDomain);\n    }\n    getXDomain() {\n        const values = this.results.map(d => d.value);\n        const min = this.xScaleMin ? Math.min(this.xScaleMin, ...values) : Math.min(0, ...values);\n        const max = this.xScaleMax ? Math.max(this.xScaleMax, ...values) : Math.max(0, ...values);\n        return [min, max];\n    }\n    getYDomain() {\n        return this.results.map(d => d.label);\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.yDomain;\n        }\n        else {\n            domain = this.xDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === 'ordinal') {\n            opts.domain = this.yDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.xDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onDataLabelMaxWidthChanged(event) {\n        if (event.size.negative) {\n            this.dataLabelMaxWidth.negative = Math.max(this.dataLabelMaxWidth.negative, event.size.width);\n        }\n        else {\n            this.dataLabelMaxWidth.positive = Math.max(this.dataLabelMaxWidth.positive, event.size.width);\n        }\n        if (event.index === this.results.length - 1) {\n            setTimeout(() => this.update());\n        }\n    }\n    onActivate(item, fromLegend = false) {\n        item = this.results.find(d => {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item, fromLegend = false) {\n        item = this.results.find(d => {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nBarHorizontalComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarHorizontalComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBarHorizontalComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BarHorizontalComponent, selector: \"ngx-charts-bar-horizontal\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", tooltipDisabled: \"tooltipDisabled\", gradient: \"gradient\", showGridLines: \"showGridLines\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", barPadding: \"barPadding\", roundDomains: \"roundDomains\", roundEdges: \"roundEdges\", xScaleMax: \"xScaleMax\", xScaleMin: \"xScaleMin\", showDataLabel: \"showDataLabel\", dataLabelFormatting: \"dataLabelFormatting\", noBarWhenZero: \"noBarWhenZero\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, true)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [yAxisOffset]=\"dataLabelMaxWidth.negative\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-series-horizontal\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [series]=\"results\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [activeEntries]=\"activeEntries\"\n          [roundEdges]=\"roundEdges\"\n          [animations]=\"animations\"\n          [showDataLabel]=\"showDataLabel\"\n          [dataLabelFormatting]=\"dataLabelFormatting\"\n          [noBarWhenZero]=\"noBarWhenZero\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event)\"\n          (deactivate)=\"onDeactivate($event)\"\n          (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event)\"\n        ></svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: SeriesHorizontal, selector: \"g[ngx-charts-series-horizontal]\", inputs: [\"dims\", \"type\", \"series\", \"xScale\", \"yScale\", \"colors\", \"tooltipDisabled\", \"gradient\", \"activeEntries\", \"seriesName\", \"tooltipTemplate\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dataLabelWidthChanged\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarHorizontalComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-bar-horizontal', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, true)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [yAxisOffset]=\"dataLabelMaxWidth.negative\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-series-horizontal\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [series]=\"results\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [activeEntries]=\"activeEntries\"\n          [roundEdges]=\"roundEdges\"\n          [animations]=\"animations\"\n          [showDataLabel]=\"showDataLabel\"\n          [dataLabelFormatting]=\"dataLabelFormatting\"\n          [noBarWhenZero]=\"noBarWhenZero\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event)\"\n          (deactivate)=\"onDeactivate($event)\"\n          (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event)\"\n        ></svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], barPadding: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], xScaleMax: [{\n                type: Input\n            }], xScaleMin: [{\n                type: Input\n            }], showDataLabel: [{\n                type: Input\n            }], dataLabelFormatting: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass BarHorizontal2DComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.tooltipDisabled = false;\n        this.showGridLines = true;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.groupPadding = 16;\n        this.barPadding = 8;\n        this.roundDomains = false;\n        this.roundEdges = true;\n        this.showDataLabel = false;\n        this.noBarWhenZero = true;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.dataLabelMaxWidth = { negative: 0, positive: 0 };\n        this.isSSR = false;\n        this.barOrientation = BarOrientation;\n        this.trackBy = (index, item) => {\n            return item.name;\n        };\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    update() {\n        super.update();\n        if (!this.showDataLabel) {\n            this.dataLabelMaxWidth = { negative: 0, positive: 0 };\n        }\n        this.margin = [10, 20 + this.dataLabelMaxWidth.positive, 10, 20 + this.dataLabelMaxWidth.negative];\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        this.formatDates();\n        this.groupDomain = this.getGroupDomain();\n        this.innerDomain = this.getInnerDomain();\n        this.valueDomain = this.getValueDomain();\n        this.groupScale = this.getGroupScale();\n        this.innerScale = this.getInnerScale();\n        this.valueScale = this.getValueScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    }\n    getGroupScale() {\n        const spacing = this.groupDomain.length / (this.dims.height / this.groupPadding + 1);\n        return scaleBand()\n            .rangeRound([0, this.dims.height])\n            .paddingInner(spacing)\n            .paddingOuter(spacing / 2)\n            .domain(this.groupDomain);\n    }\n    getInnerScale() {\n        const height = this.groupScale.bandwidth();\n        const spacing = this.innerDomain.length / (height / this.barPadding + 1);\n        return scaleBand().rangeRound([0, height]).paddingInner(spacing).domain(this.innerDomain);\n    }\n    getValueScale() {\n        const scale = scaleLinear().range([0, this.dims.width]).domain(this.valueDomain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getGroupDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            if (!domain.includes(group.label)) {\n                domain.push(group.label);\n            }\n        }\n        return domain;\n    }\n    getInnerDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.label)) {\n                    domain.push(d.label);\n                }\n            }\n        }\n        return domain;\n    }\n    getValueDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.value)) {\n                    domain.push(d.value);\n                }\n            }\n        }\n        const min = Math.min(0, ...domain);\n        const max = this.xScaleMax ? Math.max(this.xScaleMax, ...domain) : Math.max(0, ...domain);\n        return [min, max];\n    }\n    groupTransform(group) {\n        return `translate(0, ${this.groupScale(group.label)})`;\n    }\n    onClick(data, group) {\n        if (group) {\n            data.series = group.name;\n        }\n        this.select.emit(data);\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.innerDomain;\n        }\n        else {\n            domain = this.valueDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.innerDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.valueDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onDataLabelMaxWidthChanged(event, groupIndex) {\n        if (event.size.negative) {\n            this.dataLabelMaxWidth.negative = Math.max(this.dataLabelMaxWidth.negative, event.size.width);\n        }\n        else {\n            this.dataLabelMaxWidth.positive = Math.max(this.dataLabelMaxWidth.positive, event.size.width);\n        }\n        if (groupIndex === this.results.length - 1) {\n            setTimeout(() => this.update());\n        }\n    }\n    onActivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        const items = this.results\n            .map(g => g.series)\n            .flat()\n            .filter(i => {\n            if (fromLegend) {\n                return i.label === item.name;\n            }\n            else {\n                return i.name === item.name && i.series === item.series;\n            }\n        });\n        this.activeEntries = [...items];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        this.activeEntries = this.activeEntries.filter(i => {\n            if (fromLegend) {\n                return i.label !== item.name;\n            }\n            else {\n                return !(i.name === item.name && i.series === item.series);\n            }\n        });\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nBarHorizontal2DComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarHorizontal2DComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBarHorizontal2DComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BarHorizontal2DComponent, selector: \"ngx-charts-bar-horizontal-2d\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", tooltipDisabled: \"tooltipDisabled\", gradient: \"gradient\", showGridLines: \"showGridLines\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", groupPadding: \"groupPadding\", barPadding: \"barPadding\", roundDomains: \"roundDomains\", roundEdges: \"roundEdges\", xScaleMax: \"xScaleMax\", showDataLabel: \"showDataLabel\", dataLabelFormatting: \"dataLabelFormatting\", noBarWhenZero: \"noBarWhenZero\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-grid-panel-series\n          [xScale]=\"valueScale\"\n          [yScale]=\"groupScale\"\n          [data]=\"results\"\n          [dims]=\"dims\"\n          [orient]=\"barOrientation.Horizontal\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"valueScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"groupScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [yAxisOffset]=\"dataLabelMaxWidth.negative\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [xScale]=\"valueScale\"\n              [activeEntries]=\"activeEntries\"\n              [yScale]=\"innerScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [roundEdges]=\"roundEdges\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [xScale]=\"valueScale\"\n              [activeEntries]=\"activeEntries\"\n              [yScale]=\"innerScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [roundEdges]=\"roundEdges\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: GridPanelSeriesComponent, selector: \"g[ngx-charts-grid-panel-series]\", inputs: [\"data\", \"dims\", \"xScale\", \"yScale\", \"orient\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: SeriesHorizontal, selector: \"g[ngx-charts-series-horizontal]\", inputs: [\"dims\", \"type\", \"series\", \"xScale\", \"yScale\", \"colors\", \"tooltipDisabled\", \"gradient\", \"activeEntries\", \"seriesName\", \"tooltipTemplate\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dataLabelWidthChanged\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1,\n                    transform: '*'\n                }),\n                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarHorizontal2DComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-bar-horizontal-2d', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-grid-panel-series\n          [xScale]=\"valueScale\"\n          [yScale]=\"groupScale\"\n          [data]=\"results\"\n          [dims]=\"dims\"\n          [orient]=\"barOrientation.Horizontal\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"valueScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"groupScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [yAxisOffset]=\"dataLabelMaxWidth.negative\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [xScale]=\"valueScale\"\n              [activeEntries]=\"activeEntries\"\n              [yScale]=\"innerScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [roundEdges]=\"roundEdges\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [xScale]=\"valueScale\"\n              [activeEntries]=\"activeEntries\"\n              [yScale]=\"innerScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [roundEdges]=\"roundEdges\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1,\n                                    transform: '*'\n                                }),\n                                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n                            ])\n                        ])\n                    ], styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], groupPadding: [{\n                type: Input\n            }], barPadding: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], xScaleMax: [{\n                type: Input\n            }], showDataLabel: [{\n                type: Input\n            }], dataLabelFormatting: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass BarHorizontalNormalizedComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.tooltipDisabled = false;\n        this.showGridLines = true;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.barPadding = 8;\n        this.roundDomains = false;\n        this.noBarWhenZero = true;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.valueDomain = [0, 100];\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.barChartType = BarChartType;\n        this.isSSR = false;\n        this.trackBy = (index, item) => {\n            return item.name;\n        };\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        this.formatDates();\n        this.groupDomain = this.getGroupDomain();\n        this.innerDomain = this.getInnerDomain();\n        this.xScale = this.getXScale();\n        this.yScale = this.getYScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    }\n    getGroupDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            if (!domain.includes(group.label)) {\n                domain.push(group.label);\n            }\n        }\n        return domain;\n    }\n    getInnerDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.label)) {\n                    domain.push(d.label);\n                }\n            }\n        }\n        return domain;\n    }\n    getYScale() {\n        const spacing = this.groupDomain.length / (this.dims.height / this.barPadding + 1);\n        return scaleBand().rangeRound([0, this.dims.height]).paddingInner(spacing).domain(this.groupDomain);\n    }\n    getXScale() {\n        const scale = scaleLinear().range([0, this.dims.width]).domain(this.valueDomain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    groupTransform(group) {\n        return `translate(0, ${this.yScale(group.name)})`;\n    }\n    onClick(data, group) {\n        if (group) {\n            data.series = group.name;\n        }\n        this.select.emit(data);\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.innerDomain;\n        }\n        else {\n            domain = this.valueDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.innerDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.valueDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        const items = this.results\n            .map(g => g.series)\n            .flat()\n            .filter(i => {\n            if (fromLegend) {\n                return i.label === item.name;\n            }\n            else {\n                return i.name === item.name && i.series === item.series;\n            }\n        });\n        this.activeEntries = [...items];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        this.activeEntries = this.activeEntries.filter(i => {\n            if (fromLegend) {\n                return i.label !== item.name;\n            }\n            else {\n                return !(i.name === item.name && i.series === item.series);\n            }\n        });\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nBarHorizontalNormalizedComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarHorizontalNormalizedComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBarHorizontalNormalizedComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BarHorizontalNormalizedComponent, selector: \"ngx-charts-bar-horizontal-normalized\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", tooltipDisabled: \"tooltipDisabled\", gradient: \"gradient\", showGridLines: \"showGridLines\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", barPadding: \"barPadding\", roundDomains: \"roundDomains\", noBarWhenZero: \"noBarWhenZero\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g *ngFor=\"let group of results; trackBy: trackBy\" [attr.transform]=\"groupTransform(group)\">\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: SeriesHorizontal, selector: \"g[ngx-charts-series-horizontal]\", inputs: [\"dims\", \"type\", \"series\", \"xScale\", \"yScale\", \"colors\", \"tooltipDisabled\", \"gradient\", \"activeEntries\", \"seriesName\", \"tooltipTemplate\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dataLabelWidthChanged\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1,\n                    transform: '*'\n                }),\n                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarHorizontalNormalizedComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-bar-horizontal-normalized', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g *ngFor=\"let group of results; trackBy: trackBy\" [attr.transform]=\"groupTransform(group)\">\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1,\n                                    transform: '*'\n                                }),\n                                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n                            ])\n                        ])\n                    ], styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], barPadding: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass BarHorizontalStackedComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.tooltipDisabled = false;\n        this.showGridLines = true;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.barPadding = 8;\n        this.roundDomains = false;\n        this.showDataLabel = false;\n        this.noBarWhenZero = true;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.dataLabelMaxWidth = { negative: 0, positive: 0 };\n        this.barChartType = BarChartType;\n        this.isSSR = false;\n        this.trackBy = (index, item) => {\n            return item.name;\n        };\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    update() {\n        super.update();\n        if (!this.showDataLabel) {\n            this.dataLabelMaxWidth = { negative: 0, positive: 0 };\n        }\n        this.margin = [10, 20 + this.dataLabelMaxWidth.positive, 10, 20 + this.dataLabelMaxWidth.negative];\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        this.formatDates();\n        this.groupDomain = this.getGroupDomain();\n        this.innerDomain = this.getInnerDomain();\n        this.valueDomain = this.getValueDomain();\n        this.xScale = this.getXScale();\n        this.yScale = this.getYScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    }\n    getGroupDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            if (!domain.includes(group.label)) {\n                domain.push(group.label);\n            }\n        }\n        return domain;\n    }\n    getInnerDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.label)) {\n                    domain.push(d.label);\n                }\n            }\n        }\n        return domain;\n    }\n    getValueDomain() {\n        const domain = [];\n        let smallest = 0;\n        let biggest = 0;\n        for (const group of this.results) {\n            let smallestSum = 0;\n            let biggestSum = 0;\n            for (const d of group.series) {\n                if (d.value < 0) {\n                    smallestSum += d.value;\n                }\n                else {\n                    biggestSum += d.value;\n                }\n                smallest = d.value < smallest ? d.value : smallest;\n                biggest = d.value > biggest ? d.value : biggest;\n            }\n            domain.push(smallestSum);\n            domain.push(biggestSum);\n        }\n        domain.push(smallest);\n        domain.push(biggest);\n        const min = Math.min(0, ...domain);\n        const max = this.xScaleMax ? Math.max(this.xScaleMax, ...domain) : Math.max(...domain);\n        return [min, max];\n    }\n    getYScale() {\n        const spacing = this.groupDomain.length / (this.dims.height / this.barPadding + 1);\n        return scaleBand().rangeRound([0, this.dims.height]).paddingInner(spacing).domain(this.groupDomain);\n    }\n    getXScale() {\n        const scale = scaleLinear().range([0, this.dims.width]).domain(this.valueDomain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    groupTransform(group) {\n        return `translate(0, ${this.yScale(group.name)})`;\n    }\n    onClick(data, group) {\n        if (group) {\n            data.series = group.name;\n        }\n        this.select.emit(data);\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.innerDomain;\n        }\n        else {\n            domain = this.valueDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.innerDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.valueDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onDataLabelMaxWidthChanged(event, groupIndex) {\n        if (event.size.negative) {\n            this.dataLabelMaxWidth.negative = Math.max(this.dataLabelMaxWidth.negative, event.size.width);\n        }\n        else {\n            this.dataLabelMaxWidth.positive = Math.max(this.dataLabelMaxWidth.positive, event.size.width);\n        }\n        if (groupIndex === this.results.length - 1) {\n            setTimeout(() => this.update());\n        }\n    }\n    onActivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        const items = this.results\n            .map(g => g.series)\n            .flat()\n            .filter(i => {\n            if (fromLegend) {\n                return i.label === item.name;\n            }\n            else {\n                return i.name === item.name && i.series === item.series;\n            }\n        });\n        this.activeEntries = [...items];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        this.activeEntries = this.activeEntries.filter(i => {\n            if (fromLegend) {\n                return i.label !== item.name;\n            }\n            else {\n                return !(i.name === item.name && i.series === item.series);\n            }\n        });\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nBarHorizontalStackedComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarHorizontalStackedComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBarHorizontalStackedComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BarHorizontalStackedComponent, selector: \"ngx-charts-bar-horizontal-stacked\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", tooltipDisabled: \"tooltipDisabled\", gradient: \"gradient\", showGridLines: \"showGridLines\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", barPadding: \"barPadding\", roundDomains: \"roundDomains\", xScaleMax: \"xScaleMax\", showDataLabel: \"showDataLabel\", dataLabelFormatting: \"dataLabelFormatting\", noBarWhenZero: \"noBarWhenZero\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [yAxisOffset]=\"dataLabelMaxWidth.negative\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Stacked\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [activeEntries]=\"activeEntries\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Stacked\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [activeEntries]=\"activeEntries\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: SeriesHorizontal, selector: \"g[ngx-charts-series-horizontal]\", inputs: [\"dims\", \"type\", \"series\", \"xScale\", \"yScale\", \"colors\", \"tooltipDisabled\", \"gradient\", \"activeEntries\", \"seriesName\", \"tooltipTemplate\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dataLabelWidthChanged\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1,\n                    transform: '*'\n                }),\n                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarHorizontalStackedComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-bar-horizontal-stacked', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [yAxisOffset]=\"dataLabelMaxWidth.negative\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Stacked\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [activeEntries]=\"activeEntries\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Stacked\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [activeEntries]=\"activeEntries\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1,\n                                    transform: '*'\n                                }),\n                                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n                            ])\n                        ])\n                    ], styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], barPadding: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], xScaleMax: [{\n                type: Input\n            }], showDataLabel: [{\n                type: Input\n            }], dataLabelFormatting: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass SeriesVerticalComponent {\n    constructor(platformId) {\n        this.platformId = platformId;\n        this.type = BarChartType.Standard;\n        this.tooltipDisabled = false;\n        this.animations = true;\n        this.showDataLabel = false;\n        this.noBarWhenZero = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.dataLabelHeightChanged = new EventEmitter();\n        this.barsForDataLabels = [];\n        this.barOrientation = BarOrientation;\n        this.isSSR = false;\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.updateTooltipSettings();\n        let width;\n        if (this.series.length) {\n            width = this.xScale.bandwidth();\n        }\n        width = Math.round(width);\n        const yScaleMin = Math.max(this.yScale.domain()[0], 0);\n        const d0 = {\n            [D0Types.positive]: 0,\n            [D0Types.negative]: 0\n        };\n        let d0Type = D0Types.positive;\n        let total;\n        if (this.type === BarChartType.Normalized) {\n            total = this.series.map(d => d.value).reduce((sum, d) => sum + d, 0);\n        }\n        this.bars = this.series.map((d, index) => {\n            let value = d.value;\n            const label = this.getLabel(d);\n            const formattedLabel = formatLabel(label);\n            const roundEdges = this.roundEdges;\n            d0Type = value > 0 ? D0Types.positive : D0Types.negative;\n            const bar = {\n                value,\n                label,\n                roundEdges,\n                data: d,\n                width,\n                formattedLabel,\n                height: 0,\n                x: 0,\n                y: 0\n            };\n            if (this.type === BarChartType.Standard) {\n                bar.height = Math.abs(this.yScale(value) - this.yScale(yScaleMin));\n                bar.x = this.xScale(label);\n                if (value < 0) {\n                    bar.y = this.yScale(0);\n                }\n                else {\n                    bar.y = this.yScale(value);\n                }\n            }\n            else if (this.type === BarChartType.Stacked) {\n                const offset0 = d0[d0Type];\n                const offset1 = offset0 + value;\n                d0[d0Type] += value;\n                bar.height = this.yScale(offset0) - this.yScale(offset1);\n                bar.x = 0;\n                bar.y = this.yScale(offset1);\n                bar.offset0 = offset0;\n                bar.offset1 = offset1;\n            }\n            else if (this.type === BarChartType.Normalized) {\n                let offset0 = d0[d0Type];\n                let offset1 = offset0 + value;\n                d0[d0Type] += value;\n                if (total > 0) {\n                    offset0 = (offset0 * 100) / total;\n                    offset1 = (offset1 * 100) / total;\n                }\n                else {\n                    offset0 = 0;\n                    offset1 = 0;\n                }\n                bar.height = this.yScale(offset0) - this.yScale(offset1);\n                bar.x = 0;\n                bar.y = this.yScale(offset1);\n                bar.offset0 = offset0;\n                bar.offset1 = offset1;\n                value = (offset1 - offset0).toFixed(2) + '%';\n            }\n            if (this.colors.scaleType === ScaleType.Ordinal) {\n                bar.color = this.colors.getColor(label);\n            }\n            else {\n                if (this.type === BarChartType.Standard) {\n                    bar.color = this.colors.getColor(value);\n                    bar.gradientStops = this.colors.getLinearGradientStops(value);\n                }\n                else {\n                    bar.color = this.colors.getColor(bar.offset1);\n                    bar.gradientStops = this.colors.getLinearGradientStops(bar.offset1, bar.offset0);\n                }\n            }\n            let tooltipLabel = formattedLabel;\n            bar.ariaLabel = formattedLabel + ' ' + value.toLocaleString();\n            if (this.seriesName !== null && this.seriesName !== undefined) {\n                tooltipLabel = `${this.seriesName} • ${formattedLabel}`;\n                bar.data.series = this.seriesName;\n                bar.ariaLabel = this.seriesName + ' ' + bar.ariaLabel;\n            }\n            bar.tooltipText = this.tooltipDisabled\n                ? undefined\n                : `\n        <span class=\"tooltip-label\">${escapeLabel(tooltipLabel)}</span>\n        <span class=\"tooltip-val\">${this.dataLabelFormatting ? this.dataLabelFormatting(value) : value.toLocaleString()}</span>\n      `;\n            return bar;\n        });\n        this.updateDataLabels();\n    }\n    updateDataLabels() {\n        if (this.type === BarChartType.Stacked) {\n            this.barsForDataLabels = [];\n            const section = {};\n            section.series = this.seriesName;\n            const totalPositive = this.series.map(d => d.value).reduce((sum, d) => (d > 0 ? sum + d : sum), 0);\n            const totalNegative = this.series.map(d => d.value).reduce((sum, d) => (d < 0 ? sum + d : sum), 0);\n            section.total = totalPositive + totalNegative;\n            section.x = 0;\n            section.y = 0;\n            if (section.total > 0) {\n                section.height = this.yScale(totalPositive);\n            }\n            else {\n                section.height = this.yScale(totalNegative);\n            }\n            section.width = this.xScale.bandwidth();\n            this.barsForDataLabels.push(section);\n        }\n        else {\n            this.barsForDataLabels = this.series.map(d => {\n                const section = {};\n                section.series = this.seriesName ?? d.label;\n                section.total = d.value;\n                section.x = this.xScale(d.label);\n                section.y = this.yScale(0);\n                section.height = this.yScale(section.total) - this.yScale(0);\n                section.width = this.xScale.bandwidth();\n                return section;\n            });\n        }\n    }\n    updateTooltipSettings() {\n        this.tooltipPlacement = this.tooltipDisabled ? undefined : PlacementTypes.Top;\n        this.tooltipType = this.tooltipDisabled ? undefined : StyleTypes.tooltip;\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find(active => {\n            return entry.name === active.name && entry.value === active.value;\n        });\n        return item !== undefined;\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    getLabel(dataItem) {\n        if (dataItem.label) {\n            return dataItem.label;\n        }\n        return dataItem.name;\n    }\n    trackBy(index, bar) {\n        return bar.label;\n    }\n    trackDataLabelBy(index, barLabel) {\n        return index + '#' + barLabel.series + '#' + barLabel.total;\n    }\n}\nSeriesVerticalComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SeriesVerticalComponent, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nSeriesVerticalComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: SeriesVerticalComponent, selector: \"g[ngx-charts-series-vertical]\", inputs: { dims: \"dims\", type: \"type\", series: \"series\", xScale: \"xScale\", yScale: \"yScale\", colors: \"colors\", gradient: \"gradient\", activeEntries: \"activeEntries\", seriesName: \"seriesName\", tooltipDisabled: \"tooltipDisabled\", tooltipTemplate: \"tooltipTemplate\", roundEdges: \"roundEdges\", animations: \"animations\", showDataLabel: \"showDataLabel\", dataLabelFormatting: \"dataLabelFormatting\", noBarWhenZero: \"noBarWhenZero\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\", dataLabelHeightChanged: \"dataLabelHeightChanged\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g *ngIf=\"!isSSR\">\n      <svg:g\n        ngx-charts-bar\n        *ngFor=\"let bar of bars; trackBy: trackBy\"\n        [@animationState]=\"'active'\"\n        [@.disabled]=\"!animations\"\n        [width]=\"bar.width\"\n        [height]=\"bar.height\"\n        [x]=\"bar.x\"\n        [y]=\"bar.y\"\n        [fill]=\"bar.color\"\n        [stops]=\"bar.gradientStops\"\n        [data]=\"bar.data\"\n        [orientation]=\"barOrientation.Vertical\"\n        [roundEdges]=\"bar.roundEdges\"\n        [gradient]=\"gradient\"\n        [ariaLabel]=\"bar.ariaLabel\"\n        [isActive]=\"isActive(bar.data)\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"tooltipPlacement\"\n        [tooltipType]=\"tooltipType\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : bar.tooltipText\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"bar.data\"\n        [noBarWhenZero]=\"noBarWhenZero\"\n        [animations]=\"animations\"\n      ></svg:g>\n    </svg:g>\n    <svg:g *ngIf=\"isSSR\">\n      <svg:g\n        ngx-charts-bar\n        *ngFor=\"let bar of bars; trackBy: trackBy\"\n        [width]=\"bar.width\"\n        [height]=\"bar.height\"\n        [x]=\"bar.x\"\n        [y]=\"bar.y\"\n        [fill]=\"bar.color\"\n        [stops]=\"bar.gradientStops\"\n        [data]=\"bar.data\"\n        [orientation]=\"barOrientation.Vertical\"\n        [roundEdges]=\"bar.roundEdges\"\n        [gradient]=\"gradient\"\n        [ariaLabel]=\"bar.ariaLabel\"\n        [isActive]=\"isActive(bar.data)\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"tooltipPlacement\"\n        [tooltipType]=\"tooltipType\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : bar.tooltipText\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"bar.data\"\n        [noBarWhenZero]=\"noBarWhenZero\"\n        [animations]=\"animations\"\n      ></svg:g>\n    </svg:g>\n    <svg:g *ngIf=\"showDataLabel\">\n      <svg:g\n        ngx-charts-bar-label\n        *ngFor=\"let b of barsForDataLabels; let i = index; trackBy: trackDataLabelBy\"\n        [barX]=\"b.x\"\n        [barY]=\"b.y\"\n        [barWidth]=\"b.width\"\n        [barHeight]=\"b.height\"\n        [value]=\"b.total\"\n        [valueFormatting]=\"dataLabelFormatting\"\n        [orientation]=\"barOrientation.Vertical\"\n        (dimensionsChanged)=\"dataLabelHeightChanged.emit({ size: $event, index: i })\"\n      />\n    </svg:g>\n  `, isInline: true, components: [{ type: BarComponent, selector: \"g[ngx-charts-bar]\", inputs: [\"fill\", \"data\", \"width\", \"height\", \"x\", \"y\", \"orientation\", \"roundEdges\", \"gradient\", \"offset\", \"isActive\", \"stops\", \"animations\", \"ariaLabel\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\"] }, { type: BarLabelComponent, selector: \"g[ngx-charts-bar-label]\", inputs: [\"value\", \"valueFormatting\", \"barX\", \"barY\", \"barWidth\", \"barHeight\", \"orientation\"], outputs: [\"dimensionsChanged\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1\n                }),\n                animate(500, style({ opacity: 0 }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SeriesVerticalComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-series-vertical]',\n                    template: `\n    <svg:g *ngIf=\"!isSSR\">\n      <svg:g\n        ngx-charts-bar\n        *ngFor=\"let bar of bars; trackBy: trackBy\"\n        [@animationState]=\"'active'\"\n        [@.disabled]=\"!animations\"\n        [width]=\"bar.width\"\n        [height]=\"bar.height\"\n        [x]=\"bar.x\"\n        [y]=\"bar.y\"\n        [fill]=\"bar.color\"\n        [stops]=\"bar.gradientStops\"\n        [data]=\"bar.data\"\n        [orientation]=\"barOrientation.Vertical\"\n        [roundEdges]=\"bar.roundEdges\"\n        [gradient]=\"gradient\"\n        [ariaLabel]=\"bar.ariaLabel\"\n        [isActive]=\"isActive(bar.data)\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"tooltipPlacement\"\n        [tooltipType]=\"tooltipType\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : bar.tooltipText\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"bar.data\"\n        [noBarWhenZero]=\"noBarWhenZero\"\n        [animations]=\"animations\"\n      ></svg:g>\n    </svg:g>\n    <svg:g *ngIf=\"isSSR\">\n      <svg:g\n        ngx-charts-bar\n        *ngFor=\"let bar of bars; trackBy: trackBy\"\n        [width]=\"bar.width\"\n        [height]=\"bar.height\"\n        [x]=\"bar.x\"\n        [y]=\"bar.y\"\n        [fill]=\"bar.color\"\n        [stops]=\"bar.gradientStops\"\n        [data]=\"bar.data\"\n        [orientation]=\"barOrientation.Vertical\"\n        [roundEdges]=\"bar.roundEdges\"\n        [gradient]=\"gradient\"\n        [ariaLabel]=\"bar.ariaLabel\"\n        [isActive]=\"isActive(bar.data)\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"tooltipPlacement\"\n        [tooltipType]=\"tooltipType\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : bar.tooltipText\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"bar.data\"\n        [noBarWhenZero]=\"noBarWhenZero\"\n        [animations]=\"animations\"\n      ></svg:g>\n    </svg:g>\n    <svg:g *ngIf=\"showDataLabel\">\n      <svg:g\n        ngx-charts-bar-label\n        *ngFor=\"let b of barsForDataLabels; let i = index; trackBy: trackDataLabelBy\"\n        [barX]=\"b.x\"\n        [barY]=\"b.y\"\n        [barWidth]=\"b.width\"\n        [barHeight]=\"b.height\"\n        [value]=\"b.total\"\n        [valueFormatting]=\"dataLabelFormatting\"\n        [orientation]=\"barOrientation.Vertical\"\n        (dimensionsChanged)=\"dataLabelHeightChanged.emit({ size: $event, index: i })\"\n      />\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1\n                                }),\n                                animate(500, style({ opacity: 0 }))\n                            ])\n                        ])\n                    ]\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { dims: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], series: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], seriesName: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], showDataLabel: [{\n                type: Input\n            }], dataLabelFormatting: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], dataLabelHeightChanged: [{\n                type: Output\n            }] } });\n\nclass BarVerticalComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.tooltipDisabled = false;\n        this.showGridLines = true;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.barPadding = 8;\n        this.roundDomains = false;\n        this.roundEdges = true;\n        this.showDataLabel = false;\n        this.noBarWhenZero = true;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.dataLabelMaxHeight = { negative: 0, positive: 0 };\n    }\n    update() {\n        super.update();\n        if (!this.showDataLabel) {\n            this.dataLabelMaxHeight = { negative: 0, positive: 0 };\n        }\n        this.margin = [10 + this.dataLabelMaxHeight.positive, 20, 10 + this.dataLabelMaxHeight.negative, 20];\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        this.formatDates();\n        if (this.showDataLabel) {\n            this.dims.height -= this.dataLabelMaxHeight.negative;\n        }\n        this.xScale = this.getXScale();\n        this.yScale = this.getYScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0] + this.dataLabelMaxHeight.negative})`;\n    }\n    getXScale() {\n        this.xDomain = this.getXDomain();\n        const spacing = this.xDomain.length / (this.dims.width / this.barPadding + 1);\n        return scaleBand().range([0, this.dims.width]).paddingInner(spacing).domain(this.xDomain);\n    }\n    getYScale() {\n        this.yDomain = this.getYDomain();\n        const scale = scaleLinear().range([this.dims.height, 0]).domain(this.yDomain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getXDomain() {\n        return this.results.map(d => d.label);\n    }\n    getYDomain() {\n        const values = this.results.map(d => d.value);\n        let min = this.yScaleMin ? Math.min(this.yScaleMin, ...values) : Math.min(0, ...values);\n        if (this.yAxisTicks && !this.yAxisTicks.some(isNaN)) {\n            min = Math.min(min, ...this.yAxisTicks);\n        }\n        let max = this.yScaleMax ? Math.max(this.yScaleMax, ...values) : Math.max(0, ...values);\n        if (this.yAxisTicks && !this.yAxisTicks.some(isNaN)) {\n            max = Math.max(max, ...this.yAxisTicks);\n        }\n        return [min, max];\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.xDomain;\n        }\n        else {\n            domain = this.yDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.xDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.yDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onDataLabelMaxHeightChanged(event) {\n        if (event.size.negative) {\n            this.dataLabelMaxHeight.negative = Math.max(this.dataLabelMaxHeight.negative, event.size.height);\n        }\n        else {\n            this.dataLabelMaxHeight.positive = Math.max(this.dataLabelMaxHeight.positive, event.size.height);\n        }\n        if (event.index === this.results.length - 1) {\n            setTimeout(() => this.update());\n        }\n    }\n    onActivate(item, fromLegend = false) {\n        item = this.results.find(d => {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item, fromLegend = false) {\n        item = this.results.find(d => {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nBarVerticalComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarVerticalComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBarVerticalComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BarVerticalComponent, selector: \"ngx-charts-bar-vertical\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", tooltipDisabled: \"tooltipDisabled\", gradient: \"gradient\", showGridLines: \"showGridLines\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", barPadding: \"barPadding\", roundDomains: \"roundDomains\", roundEdges: \"roundEdges\", yScaleMax: \"yScaleMax\", yScaleMin: \"yScaleMin\", showDataLabel: \"showDataLabel\", dataLabelFormatting: \"dataLabelFormatting\", noBarWhenZero: \"noBarWhenZero\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, true)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-series-vertical\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [series]=\"results\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [showDataLabel]=\"showDataLabel\"\n          [dataLabelFormatting]=\"dataLabelFormatting\"\n          [activeEntries]=\"activeEntries\"\n          [roundEdges]=\"roundEdges\"\n          [animations]=\"animations\"\n          [noBarWhenZero]=\"noBarWhenZero\"\n          (activate)=\"onActivate($event)\"\n          (deactivate)=\"onDeactivate($event)\"\n          (select)=\"onClick($event)\"\n          (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event)\"\n        ></svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: SeriesVerticalComponent, selector: \"g[ngx-charts-series-vertical]\", inputs: [\"dims\", \"type\", \"series\", \"xScale\", \"yScale\", \"colors\", \"gradient\", \"activeEntries\", \"seriesName\", \"tooltipDisabled\", \"tooltipTemplate\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dataLabelHeightChanged\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarVerticalComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-bar-vertical', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, true)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-series-vertical\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [series]=\"results\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [showDataLabel]=\"showDataLabel\"\n          [dataLabelFormatting]=\"dataLabelFormatting\"\n          [activeEntries]=\"activeEntries\"\n          [roundEdges]=\"roundEdges\"\n          [animations]=\"animations\"\n          [noBarWhenZero]=\"noBarWhenZero\"\n          (activate)=\"onActivate($event)\"\n          (deactivate)=\"onDeactivate($event)\"\n          (select)=\"onClick($event)\"\n          (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event)\"\n        ></svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], barPadding: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], yScaleMax: [{\n                type: Input\n            }], yScaleMin: [{\n                type: Input\n            }], showDataLabel: [{\n                type: Input\n            }], dataLabelFormatting: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass BarVertical2DComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.tooltipDisabled = false;\n        this.scaleType = ScaleType.Ordinal;\n        this.showGridLines = true;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.groupPadding = 16;\n        this.barPadding = 8;\n        this.roundDomains = false;\n        this.roundEdges = true;\n        this.showDataLabel = false;\n        this.noBarWhenZero = true;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.dataLabelMaxHeight = { negative: 0, positive: 0 };\n        this.isSSR = false;\n        this.barOrientation = BarOrientation;\n        this.trackBy = (index, item) => {\n            return item.name;\n        };\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    update() {\n        super.update();\n        if (!this.showDataLabel) {\n            this.dataLabelMaxHeight = { negative: 0, positive: 0 };\n        }\n        this.margin = [10 + this.dataLabelMaxHeight.positive, 20, 10 + this.dataLabelMaxHeight.negative, 20];\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        if (this.showDataLabel) {\n            this.dims.height -= this.dataLabelMaxHeight.negative;\n        }\n        this.formatDates();\n        this.groupDomain = this.getGroupDomain();\n        this.innerDomain = this.getInnerDomain();\n        this.valueDomain = this.getValueDomain();\n        this.groupScale = this.getGroupScale();\n        this.innerScale = this.getInnerScale();\n        this.valueScale = this.getValueScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0] + this.dataLabelMaxHeight.negative})`;\n    }\n    onDataLabelMaxHeightChanged(event, groupIndex) {\n        if (event.size.negative) {\n            this.dataLabelMaxHeight.negative = Math.max(this.dataLabelMaxHeight.negative, event.size.height);\n        }\n        else {\n            this.dataLabelMaxHeight.positive = Math.max(this.dataLabelMaxHeight.positive, event.size.height);\n        }\n        if (groupIndex === this.results.length - 1) {\n            setTimeout(() => this.update());\n        }\n    }\n    getGroupScale() {\n        const spacing = this.groupDomain.length / (this.dims.height / this.groupPadding + 1);\n        return scaleBand()\n            .rangeRound([0, this.dims.width])\n            .paddingInner(spacing)\n            .paddingOuter(spacing / 2)\n            .domain(this.groupDomain);\n    }\n    getInnerScale() {\n        const width = this.groupScale.bandwidth();\n        const spacing = this.innerDomain.length / (width / this.barPadding + 1);\n        return scaleBand().rangeRound([0, width]).paddingInner(spacing).domain(this.innerDomain);\n    }\n    getValueScale() {\n        const scale = scaleLinear().range([this.dims.height, 0]).domain(this.valueDomain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getGroupDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            if (!domain.includes(group.label)) {\n                domain.push(group.label);\n            }\n        }\n        return domain;\n    }\n    getInnerDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.label)) {\n                    domain.push(d.label);\n                }\n            }\n        }\n        return domain;\n    }\n    getValueDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.value)) {\n                    domain.push(d.value);\n                }\n            }\n        }\n        const min = Math.min(0, ...domain);\n        const max = this.yScaleMax ? Math.max(this.yScaleMax, ...domain) : Math.max(0, ...domain);\n        return [min, max];\n    }\n    groupTransform(group) {\n        return `translate(${this.groupScale(group.label)}, 0)`;\n    }\n    onClick(data, group) {\n        if (group) {\n            data.series = group.name;\n        }\n        this.select.emit(data);\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.innerDomain;\n        }\n        else {\n            domain = this.valueDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.innerDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.valueDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        const items = this.results\n            .map(g => g.series)\n            .flat()\n            .filter(i => {\n            if (fromLegend) {\n                return i.label === item.name;\n            }\n            else {\n                return i.name === item.name && i.series === item.series;\n            }\n        });\n        this.activeEntries = [...items];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        this.activeEntries = this.activeEntries.filter(i => {\n            if (fromLegend) {\n                return i.label !== item.name;\n            }\n            else {\n                return !(i.name === item.name && i.series === item.series);\n            }\n        });\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nBarVertical2DComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarVertical2DComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBarVertical2DComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BarVertical2DComponent, selector: \"ngx-charts-bar-vertical-2d\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", tooltipDisabled: \"tooltipDisabled\", scaleType: \"scaleType\", gradient: \"gradient\", showGridLines: \"showGridLines\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", groupPadding: \"groupPadding\", barPadding: \"barPadding\", roundDomains: \"roundDomains\", roundEdges: \"roundEdges\", yScaleMax: \"yScaleMax\", showDataLabel: \"showDataLabel\", dataLabelFormatting: \"dataLabelFormatting\", noBarWhenZero: \"noBarWhenZero\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-grid-panel-series\n          [xScale]=\"groupScale\"\n          [yScale]=\"valueScale\"\n          [data]=\"results\"\n          [dims]=\"dims\"\n          [orient]=\"barOrientation.Vertical\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"groupScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"valueScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            ngx-charts-series-vertical\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n            [activeEntries]=\"activeEntries\"\n            [xScale]=\"innerScale\"\n            [yScale]=\"valueScale\"\n            [colors]=\"colors\"\n            [series]=\"group.series\"\n            [dims]=\"dims\"\n            [gradient]=\"gradient\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [showDataLabel]=\"showDataLabel\"\n            [dataLabelFormatting]=\"dataLabelFormatting\"\n            [seriesName]=\"group.name\"\n            [roundEdges]=\"roundEdges\"\n            [animations]=\"animations\"\n            [noBarWhenZero]=\"noBarWhenZero\"\n            (select)=\"onClick($event, group)\"\n            (activate)=\"onActivate($event, group)\"\n            (deactivate)=\"onDeactivate($event, group)\"\n            (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n          />\n        </svg:g>\n      </svg:g>\n      <svg:g *ngIf=\"isSSR\">\n        <svg:g\n          ngx-charts-series-vertical\n          *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n          [attr.transform]=\"groupTransform(group)\"\n          [activeEntries]=\"activeEntries\"\n          [xScale]=\"innerScale\"\n          [yScale]=\"valueScale\"\n          [colors]=\"colors\"\n          [series]=\"group.series\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [showDataLabel]=\"showDataLabel\"\n          [dataLabelFormatting]=\"dataLabelFormatting\"\n          [seriesName]=\"group.name\"\n          [roundEdges]=\"roundEdges\"\n          [animations]=\"animations\"\n          [noBarWhenZero]=\"noBarWhenZero\"\n          (select)=\"onClick($event, group)\"\n          (activate)=\"onActivate($event, group)\"\n          (deactivate)=\"onDeactivate($event, group)\"\n          (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: GridPanelSeriesComponent, selector: \"g[ngx-charts-grid-panel-series]\", inputs: [\"data\", \"dims\", \"xScale\", \"yScale\", \"orient\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: SeriesVerticalComponent, selector: \"g[ngx-charts-series-vertical]\", inputs: [\"dims\", \"type\", \"series\", \"xScale\", \"yScale\", \"colors\", \"gradient\", \"activeEntries\", \"seriesName\", \"tooltipDisabled\", \"tooltipTemplate\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dataLabelHeightChanged\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1,\n                    transform: '*'\n                }),\n                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarVertical2DComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-bar-vertical-2d', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-grid-panel-series\n          [xScale]=\"groupScale\"\n          [yScale]=\"valueScale\"\n          [data]=\"results\"\n          [dims]=\"dims\"\n          [orient]=\"barOrientation.Vertical\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"groupScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"valueScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            ngx-charts-series-vertical\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n            [activeEntries]=\"activeEntries\"\n            [xScale]=\"innerScale\"\n            [yScale]=\"valueScale\"\n            [colors]=\"colors\"\n            [series]=\"group.series\"\n            [dims]=\"dims\"\n            [gradient]=\"gradient\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [showDataLabel]=\"showDataLabel\"\n            [dataLabelFormatting]=\"dataLabelFormatting\"\n            [seriesName]=\"group.name\"\n            [roundEdges]=\"roundEdges\"\n            [animations]=\"animations\"\n            [noBarWhenZero]=\"noBarWhenZero\"\n            (select)=\"onClick($event, group)\"\n            (activate)=\"onActivate($event, group)\"\n            (deactivate)=\"onDeactivate($event, group)\"\n            (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n          />\n        </svg:g>\n      </svg:g>\n      <svg:g *ngIf=\"isSSR\">\n        <svg:g\n          ngx-charts-series-vertical\n          *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n          [attr.transform]=\"groupTransform(group)\"\n          [activeEntries]=\"activeEntries\"\n          [xScale]=\"innerScale\"\n          [yScale]=\"valueScale\"\n          [colors]=\"colors\"\n          [series]=\"group.series\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [showDataLabel]=\"showDataLabel\"\n          [dataLabelFormatting]=\"dataLabelFormatting\"\n          [seriesName]=\"group.name\"\n          [roundEdges]=\"roundEdges\"\n          [animations]=\"animations\"\n          [noBarWhenZero]=\"noBarWhenZero\"\n          (select)=\"onClick($event, group)\"\n          (activate)=\"onActivate($event, group)\"\n          (deactivate)=\"onDeactivate($event, group)\"\n          (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1,\n                                    transform: '*'\n                                }),\n                                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n                            ])\n                        ])\n                    ], styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], scaleType: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], groupPadding: [{\n                type: Input\n            }], barPadding: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], yScaleMax: [{\n                type: Input\n            }], showDataLabel: [{\n                type: Input\n            }], dataLabelFormatting: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass BarVerticalNormalizedComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.tooltipDisabled = false;\n        this.showGridLines = true;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.barPadding = 8;\n        this.roundDomains = false;\n        this.noBarWhenZero = true;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.valueDomain = [0, 100];\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.isSSR = false;\n        this.barChartType = BarChartType;\n        this.trackBy = (index, item) => {\n            return item.name;\n        };\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        this.formatDates();\n        this.groupDomain = this.getGroupDomain();\n        this.innerDomain = this.getInnerDomain();\n        this.xScale = this.getXScale();\n        this.yScale = this.getYScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    }\n    getGroupDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            if (!domain.includes(group.label)) {\n                domain.push(group.label);\n            }\n        }\n        return domain;\n    }\n    getInnerDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.label)) {\n                    domain.push(d.label);\n                }\n            }\n        }\n        return domain;\n    }\n    getXScale() {\n        const spacing = this.groupDomain.length / (this.dims.width / this.barPadding + 1);\n        return scaleBand().rangeRound([0, this.dims.width]).paddingInner(spacing).domain(this.groupDomain);\n    }\n    getYScale() {\n        const scale = scaleLinear().range([this.dims.height, 0]).domain(this.valueDomain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    groupTransform(group) {\n        return `translate(${this.xScale(group.name)}, 0)`;\n    }\n    onClick(data, group) {\n        if (group) {\n            data.series = group.name;\n        }\n        this.select.emit(data);\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.innerDomain;\n        }\n        else {\n            domain = this.valueDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.innerDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.valueDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        const items = this.results\n            .map(g => g.series)\n            .flat()\n            .filter(i => {\n            if (fromLegend) {\n                return i.label === item.name;\n            }\n            else {\n                return i.name === item.name && i.series === item.series;\n            }\n        });\n        this.activeEntries = [...items];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        this.activeEntries = this.activeEntries.filter(i => {\n            if (fromLegend) {\n                return i.label !== item.name;\n            }\n            else {\n                return !(i.name === item.name && i.series === item.series);\n            }\n        });\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nBarVerticalNormalizedComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarVerticalNormalizedComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBarVerticalNormalizedComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BarVerticalNormalizedComponent, selector: \"ngx-charts-bar-vertical-normalized\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", tooltipDisabled: \"tooltipDisabled\", gradient: \"gradient\", showGridLines: \"showGridLines\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", barPadding: \"barPadding\", roundDomains: \"roundDomains\", noBarWhenZero: \"noBarWhenZero\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-vertical\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g *ngFor=\"let group of results; trackBy: trackBy\" [attr.transform]=\"groupTransform(group)\">\n            <svg:g\n              ngx-charts-series-vertical\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: SeriesVerticalComponent, selector: \"g[ngx-charts-series-vertical]\", inputs: [\"dims\", \"type\", \"series\", \"xScale\", \"yScale\", \"colors\", \"gradient\", \"activeEntries\", \"seriesName\", \"tooltipDisabled\", \"tooltipTemplate\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dataLabelHeightChanged\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1,\n                    transform: '*'\n                }),\n                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarVerticalNormalizedComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-bar-vertical-normalized', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-vertical\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g *ngFor=\"let group of results; trackBy: trackBy\" [attr.transform]=\"groupTransform(group)\">\n            <svg:g\n              ngx-charts-series-vertical\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1,\n                                    transform: '*'\n                                }),\n                                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n                            ])\n                        ])\n                    ], styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], barPadding: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass BarVerticalStackedComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.tooltipDisabled = false;\n        this.showGridLines = true;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.barPadding = 8;\n        this.roundDomains = false;\n        this.showDataLabel = false;\n        this.noBarWhenZero = true;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.dataLabelMaxHeight = { negative: 0, positive: 0 };\n        this.isSSR = false;\n        this.barChartType = BarChartType;\n        this.trackBy = (index, item) => {\n            return item.name;\n        };\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    update() {\n        super.update();\n        if (!this.showDataLabel) {\n            this.dataLabelMaxHeight = { negative: 0, positive: 0 };\n        }\n        this.margin = [10 + this.dataLabelMaxHeight.positive, 20, 10 + this.dataLabelMaxHeight.negative, 20];\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        if (this.showDataLabel) {\n            this.dims.height -= this.dataLabelMaxHeight.negative;\n        }\n        this.formatDates();\n        this.groupDomain = this.getGroupDomain();\n        this.innerDomain = this.getInnerDomain();\n        this.valueDomain = this.getValueDomain();\n        this.xScale = this.getXScale();\n        this.yScale = this.getYScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0] + this.dataLabelMaxHeight.negative})`;\n    }\n    getGroupDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            if (!domain.includes(group.label)) {\n                domain.push(group.label);\n            }\n        }\n        return domain;\n    }\n    getInnerDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.label)) {\n                    domain.push(d.label);\n                }\n            }\n        }\n        return domain;\n    }\n    getValueDomain() {\n        const domain = [];\n        let smallest = 0;\n        let biggest = 0;\n        for (const group of this.results) {\n            let smallestSum = 0;\n            let biggestSum = 0;\n            for (const d of group.series) {\n                if (d.value < 0) {\n                    smallestSum += d.value;\n                }\n                else {\n                    biggestSum += d.value;\n                }\n                smallest = d.value < smallest ? d.value : smallest;\n                biggest = d.value > biggest ? d.value : biggest;\n            }\n            domain.push(smallestSum);\n            domain.push(biggestSum);\n        }\n        domain.push(smallest);\n        domain.push(biggest);\n        const min = Math.min(0, ...domain);\n        const max = this.yScaleMax ? Math.max(this.yScaleMax, ...domain) : Math.max(...domain);\n        return [min, max];\n    }\n    getXScale() {\n        const spacing = this.groupDomain.length / (this.dims.width / this.barPadding + 1);\n        return scaleBand().rangeRound([0, this.dims.width]).paddingInner(spacing).domain(this.groupDomain);\n    }\n    getYScale() {\n        const scale = scaleLinear().range([this.dims.height, 0]).domain(this.valueDomain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    onDataLabelMaxHeightChanged(event, groupIndex) {\n        if (event.size.negative) {\n            this.dataLabelMaxHeight.negative = Math.max(this.dataLabelMaxHeight.negative, event.size.height);\n        }\n        else {\n            this.dataLabelMaxHeight.positive = Math.max(this.dataLabelMaxHeight.positive, event.size.height);\n        }\n        if (groupIndex === this.results.length - 1) {\n            setTimeout(() => this.update());\n        }\n    }\n    groupTransform(group) {\n        return `translate(${this.xScale(group.name) || 0}, 0)`;\n    }\n    onClick(data, group) {\n        if (group) {\n            data.series = group.name;\n        }\n        this.select.emit(data);\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.innerDomain;\n        }\n        else {\n            domain = this.valueDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.innerDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.valueDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        const items = this.results\n            .map(g => g.series)\n            .flat()\n            .filter(i => {\n            if (fromLegend) {\n                return i.label === item.name;\n            }\n            else {\n                return i.name === item.name && i.series === item.series;\n            }\n        });\n        this.activeEntries = [...items];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        this.activeEntries = this.activeEntries.filter(i => {\n            if (fromLegend) {\n                return i.label !== item.name;\n            }\n            else {\n                return !(i.name === item.name && i.series === item.series);\n            }\n        });\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nBarVerticalStackedComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarVerticalStackedComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBarVerticalStackedComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BarVerticalStackedComponent, selector: \"ngx-charts-bar-vertical-stacked\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", tooltipDisabled: \"tooltipDisabled\", gradient: \"gradient\", showGridLines: \"showGridLines\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", barPadding: \"barPadding\", roundDomains: \"roundDomains\", yScaleMax: \"yScaleMax\", showDataLabel: \"showDataLabel\", dataLabelFormatting: \"dataLabelFormatting\", noBarWhenZero: \"noBarWhenZero\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-vertical\n              [type]=\"barChartType.Stacked\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g *ngIf=\"isSSR\">\n        <svg:g\n          *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n          [attr.transform]=\"groupTransform(group)\"\n        >\n          <svg:g\n            ngx-charts-series-vertical\n            [type]=\"barChartType.Stacked\"\n            [xScale]=\"xScale\"\n            [yScale]=\"yScale\"\n            [activeEntries]=\"activeEntries\"\n            [colors]=\"colors\"\n            [series]=\"group.series\"\n            [dims]=\"dims\"\n            [gradient]=\"gradient\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [showDataLabel]=\"showDataLabel\"\n            [dataLabelFormatting]=\"dataLabelFormatting\"\n            [seriesName]=\"group.name\"\n            [animations]=\"animations\"\n            [noBarWhenZero]=\"noBarWhenZero\"\n            (select)=\"onClick($event, group)\"\n            (activate)=\"onActivate($event, group)\"\n            (deactivate)=\"onDeactivate($event, group)\"\n            (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: SeriesVerticalComponent, selector: \"g[ngx-charts-series-vertical]\", inputs: [\"dims\", \"type\", \"series\", \"xScale\", \"yScale\", \"colors\", \"gradient\", \"activeEntries\", \"seriesName\", \"tooltipDisabled\", \"tooltipTemplate\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dataLabelHeightChanged\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1,\n                    transform: '*'\n                }),\n                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarVerticalStackedComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-bar-vertical-stacked', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-vertical\n              [type]=\"barChartType.Stacked\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g *ngIf=\"isSSR\">\n        <svg:g\n          *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n          [attr.transform]=\"groupTransform(group)\"\n        >\n          <svg:g\n            ngx-charts-series-vertical\n            [type]=\"barChartType.Stacked\"\n            [xScale]=\"xScale\"\n            [yScale]=\"yScale\"\n            [activeEntries]=\"activeEntries\"\n            [colors]=\"colors\"\n            [series]=\"group.series\"\n            [dims]=\"dims\"\n            [gradient]=\"gradient\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [showDataLabel]=\"showDataLabel\"\n            [dataLabelFormatting]=\"dataLabelFormatting\"\n            [seriesName]=\"group.name\"\n            [animations]=\"animations\"\n            [noBarWhenZero]=\"noBarWhenZero\"\n            (select)=\"onClick($event, group)\"\n            (activate)=\"onActivate($event, group)\"\n            (deactivate)=\"onDeactivate($event, group)\"\n            (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1,\n                                    transform: '*'\n                                }),\n                                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n                            ])\n                        ])\n                    ], styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], barPadding: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], yScaleMax: [{\n                type: Input\n            }], showDataLabel: [{\n                type: Input\n            }], dataLabelFormatting: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass BarChartModule {\n}\nBarChartModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarChartModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nBarChartModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarChartModule, declarations: [BarComponent,\n        BarHorizontalComponent,\n        BarHorizontal2DComponent,\n        BarHorizontalNormalizedComponent,\n        BarHorizontalStackedComponent,\n        BarVerticalComponent,\n        BarVertical2DComponent,\n        BarVerticalNormalizedComponent,\n        BarVerticalStackedComponent,\n        BarLabelComponent,\n        SeriesHorizontal,\n        SeriesVerticalComponent], imports: [ChartCommonModule], exports: [BarComponent,\n        BarHorizontalComponent,\n        BarHorizontal2DComponent,\n        BarHorizontalNormalizedComponent,\n        BarHorizontalStackedComponent,\n        BarVerticalComponent,\n        BarVertical2DComponent,\n        BarVerticalNormalizedComponent,\n        BarVerticalStackedComponent,\n        BarLabelComponent,\n        SeriesHorizontal,\n        SeriesVerticalComponent] });\nBarChartModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarChartModule, imports: [[ChartCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarChartModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule],\n                    declarations: [\n                        BarComponent,\n                        BarHorizontalComponent,\n                        BarHorizontal2DComponent,\n                        BarHorizontalNormalizedComponent,\n                        BarHorizontalStackedComponent,\n                        BarVerticalComponent,\n                        BarVertical2DComponent,\n                        BarVerticalNormalizedComponent,\n                        BarVerticalStackedComponent,\n                        BarLabelComponent,\n                        SeriesHorizontal,\n                        SeriesVerticalComponent\n                    ],\n                    exports: [\n                        BarComponent,\n                        BarHorizontalComponent,\n                        BarHorizontal2DComponent,\n                        BarHorizontalNormalizedComponent,\n                        BarHorizontalStackedComponent,\n                        BarVerticalComponent,\n                        BarVertical2DComponent,\n                        BarVerticalNormalizedComponent,\n                        BarVerticalStackedComponent,\n                        BarLabelComponent,\n                        SeriesHorizontal,\n                        SeriesVerticalComponent\n                    ]\n                }]\n        }] });\n\nconst cloneDeep = rfdc();\nclass BoxComponent {\n    constructor(element, cd) {\n        this.cd = cd;\n        this.roundEdges = true;\n        this.gradient = false;\n        this.offset = 0;\n        this.isActive = false;\n        this.animations = true;\n        this.noBarWhenZero = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.BarOrientation = BarOrientation;\n        this.initialized = false;\n        this.hasGradient = false;\n        this.hideBar = false;\n        this.nativeElm = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n        if (!this.initialized) {\n            this.loadAnimation();\n            this.initialized = true;\n        }\n        else {\n            this.update();\n        }\n    }\n    update() {\n        this.boxStrokeWidth = Math.max(this.strokeWidth, 1);\n        this.whiskerStrokeWidth = Math.max(this.strokeWidth / 2, 1);\n        this.medianLineWidth = 1.5 * this.strokeWidth;\n        this.gradientId = 'grad' + id().toString();\n        this.gradientFill = `url(#${this.gradientId})`;\n        if (this.gradient) {\n            this.gradientStops = this.getGradient();\n            this.hasGradient = true;\n        }\n        else {\n            this.hasGradient = false;\n        }\n        this.updateLineEl();\n        this.updatePathEl();\n        this.checkToHideBar();\n        this.maskLineId = 'mask' + id().toString();\n        this.maskLine = `url(#${this.maskLineId})`;\n        if (this.cd) {\n            this.cd.markForCheck();\n        }\n    }\n    loadAnimation() {\n        this.boxPath = this.oldPath = this.getStartingPath();\n        this.oldLineCoordinates = this.getStartingLineCoordinates();\n        setTimeout(this.update.bind(this), 100);\n    }\n    updatePathEl() {\n        const nodeBar = select(this.nativeElm).selectAll('.bar');\n        const path = this.getPath();\n        if (this.animations) {\n            nodeBar\n                .attr('d', this.oldPath)\n                .transition()\n                .ease(easeSinInOut)\n                .duration(500)\n                .attrTween('d', this.pathTween(path, 4));\n        }\n        else {\n            nodeBar.attr('d', path);\n        }\n        this.oldPath = path;\n    }\n    updateLineEl() {\n        const lineEl = select(this.nativeElm).selectAll('.bar-line');\n        const lineCoordinates = this.lineCoordinates;\n        const oldLineCoordinates = this.oldLineCoordinates;\n        if (this.animations) {\n            lineEl\n                .attr('x1', (_, index) => oldLineCoordinates[index].v1.x)\n                .attr('y1', (_, index) => oldLineCoordinates[index].v1.y)\n                .attr('x2', (_, index) => oldLineCoordinates[index].v2.x)\n                .attr('y2', (_, index) => oldLineCoordinates[index].v2.y)\n                .transition()\n                .ease(easeSinInOut)\n                .duration(500)\n                .attr('x1', (_, index) => lineCoordinates[index].v1.x)\n                .attr('y1', (_, index) => lineCoordinates[index].v1.y)\n                .attr('x2', (_, index) => lineCoordinates[index].v2.x)\n                .attr('y2', (_, index) => lineCoordinates[index].v2.y);\n        }\n        else {\n            lineEl\n                .attr('x1', (_, index) => lineCoordinates[index].v1.x)\n                .attr('y1', (_, index) => lineCoordinates[index].v1.y)\n                .attr('x2', (_, index) => lineCoordinates[index].v2.x)\n                .attr('y2', (_, index) => lineCoordinates[index].v2.y);\n        }\n        this.oldLineCoordinates = [...lineCoordinates];\n    }\n    /**\n     * See [D3 Selections](https://www.d3indepth.com/selections/)\n     * @param d The joined data.\n     * @param index The index of the element within the selection\n     * @param node The node element (Line).\n     */\n    lineTween(attr, d, index, node) {\n        const nodeLineEl = node[index];\n        return nodeLineEl[attr].baseVal.value;\n    }\n    // TODO: Refactor into another .ts file if https://github.com/swimlane/ngx-charts/pull/1179 gets merged.\n    pathTween(d1, precision) {\n        return function () {\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const path0 = this;\n            const path1 = this.cloneNode();\n            path1.setAttribute('d', d1);\n            const n0 = path0?.getTotalLength();\n            const n1 = path1?.getTotalLength();\n            // Uniform sampling of distance based on specified precision.\n            const distances = [0];\n            let i = 0;\n            const dt = precision / Math.max(n0, n1);\n            while (i < 1) {\n                distances.push(i);\n                i += dt;\n            }\n            distances.push(1);\n            // Compute point-interpolators at each distance.\n            const points = distances.map((t) => {\n                const p0 = path0.getPointAtLength(t * n0);\n                const p1 = path1.getPointAtLength(t * n1);\n                return interpolate([p0.x, p0.y], [p1.x, p1.y]);\n            });\n            // 't': T is the fraction of time (between 0 and 1) since the transition began.\n            return (t) => {\n                return t < 1 ? 'M' + points.map((p) => p(t)).join('L') : d1;\n            };\n        };\n    }\n    getStartingPath() {\n        if (!this.animations) {\n            return this.getPath();\n        }\n        const radius = this.roundEdges ? 1 : 0;\n        const { x, y } = this.lineCoordinates[2].v1;\n        return roundedRect(x - this.width, y - 1, this.width, 2, radius, this.edges);\n    }\n    getPath() {\n        const radius = this.getRadius();\n        let path = '';\n        path = roundedRect(this.x, this.y, this.width, this.height, Math.min(this.height, radius), this.edges);\n        return path;\n    }\n    getStartingLineCoordinates() {\n        if (!this.animations) {\n            return [...this.lineCoordinates];\n        }\n        const lineCoordinates = cloneDeep(this.lineCoordinates);\n        lineCoordinates[1].v1.y = lineCoordinates[1].v2.y = lineCoordinates[3].v1.y = lineCoordinates[3].v2.y = lineCoordinates[0].v1.y = lineCoordinates[0].v2.y =\n            lineCoordinates[2].v1.y;\n        return lineCoordinates;\n    }\n    getRadius() {\n        let radius = 0;\n        if (this.roundEdges && this.height > 5 && this.width > 5) {\n            radius = Math.floor(Math.min(5, this.height / 2, this.width / 2));\n        }\n        return radius;\n    }\n    getGradient() {\n        return [\n            {\n                offset: 0,\n                color: this.fill,\n                opacity: this.getStartOpacity()\n            },\n            {\n                offset: 100,\n                color: this.fill,\n                opacity: 1\n            }\n        ];\n    }\n    getStartOpacity() {\n        if (this.roundEdges) {\n            return 0.2;\n        }\n        else {\n            return 0.5;\n        }\n    }\n    get edges() {\n        let edges = [false, false, false, false];\n        if (this.roundEdges) {\n            edges = [true, true, true, true];\n        }\n        return edges;\n    }\n    onMouseEnter() {\n        this.activate.emit(this.data);\n    }\n    onMouseLeave() {\n        this.deactivate.emit(this.data);\n    }\n    checkToHideBar() {\n        this.hideBar = this.noBarWhenZero && this.height === 0;\n    }\n}\nBoxComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BoxComponent, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nBoxComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BoxComponent, selector: \"g[ngx-charts-box]\", inputs: { strokeColor: \"strokeColor\", strokeWidth: \"strokeWidth\", fill: \"fill\", data: \"data\", width: \"width\", height: \"height\", x: \"x\", y: \"y\", lineCoordinates: \"lineCoordinates\", roundEdges: \"roundEdges\", gradient: \"gradient\", gradientStops: \"gradientStops\", offset: \"offset\", isActive: \"isActive\", animations: \"animations\", ariaLabel: \"ariaLabel\", noBarWhenZero: \"noBarWhenZero\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, host: { listeners: { \"mouseenter\": \"onMouseEnter()\", \"mouseleave\": \"onMouseLeave()\" } }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:defs>\n      <svg:g\n        *ngIf=\"hasGradient\"\n        ngx-charts-svg-linear-gradient\n        [orientation]=\"BarOrientation.Vertical\"\n        [name]=\"gradientId\"\n        [stops]=\"gradientStops\"\n      />\n      <svg:mask [attr.id]=\"maskLineId\">\n        <svg:g>\n          <rect height=\"100%\" width=\"100%\" fill=\"white\" fill-opacity=\"1\" />\n          <path class=\"bar\" [attr.d]=\"boxPath\" fill=\"black\" fill-opacity=\"1\" />\n        </svg:g>\n      </svg:mask>\n    </svg:defs>\n    <svg:g>\n      <svg:path\n        class=\"bar\"\n        role=\"img\"\n        tabIndex=\"-1\"\n        [class.active]=\"isActive\"\n        [class.hidden]=\"hideBar\"\n        [attr.d]=\"boxPath\"\n        [attr.stroke]=\"strokeColor\"\n        [attr.stroke-width]=\"boxStrokeWidth\"\n        [attr.aria-label]=\"ariaLabel\"\n        [attr.fill]=\"hasGradient ? gradientFill : fill\"\n        (click)=\"select.emit(data)\"\n      />\n      <svg:line\n        *ngFor=\"let line of lineCoordinates; let i = index\"\n        class=\"bar-line\"\n        [class.hidden]=\"hideBar\"\n        [attr.x1]=\"line.v1.x\"\n        [attr.y1]=\"line.v1.y\"\n        [attr.x2]=\"line.v2.x\"\n        [attr.y2]=\"line.v2.y\"\n        [attr.stroke]=\"strokeColor\"\n        [attr.stroke-width]=\"i === 2 ? medianLineWidth : whiskerStrokeWidth\"\n        [attr.mask]=\"i ? undefined : maskLine\"\n        fill=\"none\"\n      />\n    </svg:g>\n  `, isInline: true, components: [{ type: SvgLinearGradientComponent, selector: \"g[ngx-charts-svg-linear-gradient]\", inputs: [\"orientation\", \"name\", \"stops\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BoxComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-box]',\n                    template: `\n    <svg:defs>\n      <svg:g\n        *ngIf=\"hasGradient\"\n        ngx-charts-svg-linear-gradient\n        [orientation]=\"BarOrientation.Vertical\"\n        [name]=\"gradientId\"\n        [stops]=\"gradientStops\"\n      />\n      <svg:mask [attr.id]=\"maskLineId\">\n        <svg:g>\n          <rect height=\"100%\" width=\"100%\" fill=\"white\" fill-opacity=\"1\" />\n          <path class=\"bar\" [attr.d]=\"boxPath\" fill=\"black\" fill-opacity=\"1\" />\n        </svg:g>\n      </svg:mask>\n    </svg:defs>\n    <svg:g>\n      <svg:path\n        class=\"bar\"\n        role=\"img\"\n        tabIndex=\"-1\"\n        [class.active]=\"isActive\"\n        [class.hidden]=\"hideBar\"\n        [attr.d]=\"boxPath\"\n        [attr.stroke]=\"strokeColor\"\n        [attr.stroke-width]=\"boxStrokeWidth\"\n        [attr.aria-label]=\"ariaLabel\"\n        [attr.fill]=\"hasGradient ? gradientFill : fill\"\n        (click)=\"select.emit(data)\"\n      />\n      <svg:line\n        *ngFor=\"let line of lineCoordinates; let i = index\"\n        class=\"bar-line\"\n        [class.hidden]=\"hideBar\"\n        [attr.x1]=\"line.v1.x\"\n        [attr.y1]=\"line.v1.y\"\n        [attr.x2]=\"line.v2.x\"\n        [attr.y2]=\"line.v2.y\"\n        [attr.stroke]=\"strokeColor\"\n        [attr.stroke-width]=\"i === 2 ? medianLineWidth : whiskerStrokeWidth\"\n        [attr.mask]=\"i ? undefined : maskLine\"\n        fill=\"none\"\n      />\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { strokeColor: [{\n                type: Input\n            }], strokeWidth: [{\n                type: Input\n            }], fill: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], x: [{\n                type: Input\n            }], y: [{\n                type: Input\n            }], lineCoordinates: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], gradientStops: [{\n                type: Input\n            }], offset: [{\n                type: Input\n            }], isActive: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], onMouseEnter: [{\n                type: HostListener,\n                args: ['mouseenter']\n            }], onMouseLeave: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nclass BoxSeriesComponent {\n    constructor() {\n        this.animations = true;\n        this.tooltipDisabled = false;\n        this.gradient = false;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    update() {\n        this.updateTooltipSettings();\n        const width = this.series && this.series.series.length ? Math.round(this.xScale.bandwidth()) : null;\n        const seriesName = this.series.name;\n        // Calculate Quantile and Whiskers for each box serie.\n        this.counts = this.series.series;\n        const mappedCounts = this.counts.map(serie => Number(serie.value));\n        this.whiskers = [min(mappedCounts), max(mappedCounts)];\n        // We get the group count and must sort it in order to retrieve quantiles.\n        const groupCounts = this.counts.map(item => item.value).sort((a, b) => Number(a) - Number(b));\n        this.quartiles = this.getBoxQuantiles(groupCounts);\n        this.lineCoordinates = this.getLinesCoordinates(seriesName.toString(), this.whiskers, this.quartiles, width);\n        const value = this.quartiles[1];\n        const formattedLabel = formatLabel(seriesName);\n        const box = {\n            value,\n            data: this.counts,\n            label: seriesName,\n            formattedLabel,\n            width,\n            height: 0,\n            x: 0,\n            y: 0,\n            roundEdges: this.roundEdges,\n            quartiles: this.quartiles,\n            lineCoordinates: this.lineCoordinates\n        };\n        box.height = Math.abs(this.yScale(this.quartiles[0]) - this.yScale(this.quartiles[2]));\n        box.x = this.xScale(seriesName.toString());\n        box.y = this.yScale(this.quartiles[2]);\n        box.ariaLabel = formattedLabel + ' - Median: ' + value.toLocaleString();\n        if (this.colors.scaleType === ScaleType.Ordinal) {\n            box.color = this.colors.getColor(seriesName);\n        }\n        else {\n            box.color = this.colors.getColor(this.quartiles[1]);\n            box.gradientStops = this.colors.getLinearGradientStops(this.quartiles[0], this.quartiles[2]);\n        }\n        const tooltipLabel = formattedLabel;\n        const formattedTooltipLabel = `\n    <span class=\"tooltip-label\">${escapeLabel(tooltipLabel)}</span>\n    <span class=\"tooltip-val\">\n      • Q1: ${this.quartiles[0]} • Q2: ${this.quartiles[1]} • Q3: ${this.quartiles[2]}<br>\n      • Min: ${this.whiskers[0]} • Max: ${this.whiskers[1]}\n    </span>`;\n        box.tooltipText = this.tooltipDisabled ? undefined : formattedTooltipLabel;\n        this.tooltipTitle = this.tooltipDisabled ? undefined : box.tooltipText;\n        this.box = box;\n    }\n    getBoxQuantiles(inputData) {\n        return [quantile(inputData, 0.25), quantile(inputData, 0.5), quantile(inputData, 0.75)];\n    }\n    getLinesCoordinates(seriesName, whiskers, quartiles, barWidth) {\n        // The X value is not being centered, so had to sum half the width to align it.\n        const commonX = this.xScale(seriesName);\n        const offsetX = commonX + barWidth / 2;\n        const medianLineWidth = Math.max(barWidth + 4 * this.strokeWidth, 1);\n        const whiskerLineWidth = Math.max(barWidth / 3, 1);\n        const whiskerZero = this.yScale(whiskers[0]);\n        const whiskerOne = this.yScale(whiskers[1]);\n        const median = this.yScale(quartiles[1]);\n        const topLine = {\n            v1: { x: offsetX + whiskerLineWidth / 2, y: whiskerZero },\n            v2: { x: offsetX - whiskerLineWidth / 2, y: whiskerZero }\n        };\n        const medianLine = {\n            v1: { x: offsetX + medianLineWidth / 2, y: median },\n            v2: { x: offsetX - medianLineWidth / 2, y: median }\n        };\n        const bottomLine = {\n            v1: { x: offsetX + whiskerLineWidth / 2, y: whiskerOne },\n            v2: { x: offsetX - whiskerLineWidth / 2, y: whiskerOne }\n        };\n        const verticalLine = {\n            v1: { x: offsetX, y: whiskerZero },\n            v2: { x: offsetX, y: whiskerOne }\n        };\n        return [verticalLine, topLine, medianLine, bottomLine];\n    }\n    updateTooltipSettings() {\n        if (this.tooltipDisabled) {\n            this.tooltipPlacement = undefined;\n            this.tooltipType = undefined;\n        }\n        else {\n            if (!this.tooltipPlacement) {\n                this.tooltipPlacement = PlacementTypes.Top;\n            }\n            if (!this.tooltipType) {\n                this.tooltipType = StyleTypes.tooltip;\n            }\n        }\n    }\n}\nBoxSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BoxSeriesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nBoxSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BoxSeriesComponent, selector: \"g[ngx-charts-box-series]\", inputs: { dims: \"dims\", series: \"series\", xScale: \"xScale\", yScale: \"yScale\", colors: \"colors\", animations: \"animations\", strokeColor: \"strokeColor\", strokeWidth: \"strokeWidth\", tooltipDisabled: \"tooltipDisabled\", tooltipTemplate: \"tooltipTemplate\", tooltipPlacement: \"tooltipPlacement\", tooltipType: \"tooltipType\", roundEdges: \"roundEdges\", gradient: \"gradient\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g\n      ngx-charts-box\n      [@animationState]=\"'active'\"\n      [@.disabled]=\"!animations\"\n      [width]=\"box.width\"\n      [height]=\"box.height\"\n      [x]=\"box.x\"\n      [y]=\"box.y\"\n      [roundEdges]=\"box.roundEdges\"\n      [fill]=\"box.color\"\n      [gradientStops]=\"box.gradientStops\"\n      [strokeColor]=\"strokeColor\"\n      [strokeWidth]=\"strokeWidth\"\n      [data]=\"box.data\"\n      [lineCoordinates]=\"box.lineCoordinates\"\n      [gradient]=\"gradient\"\n      [ariaLabel]=\"box.ariaLabel\"\n      (select)=\"onClick($event)\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"tooltipPlacement\"\n      [tooltipType]=\"tooltipType\"\n      [tooltipTitle]=\"tooltipTitle\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"box.data\"\n      [animations]=\"animations\"\n    ></svg:g>\n  `, isInline: true, components: [{ type: BoxComponent, selector: \"g[ngx-charts-box]\", inputs: [\"strokeColor\", \"strokeWidth\", \"fill\", \"data\", \"width\", \"height\", \"x\", \"y\", \"lineCoordinates\", \"roundEdges\", \"gradient\", \"gradientStops\", \"offset\", \"isActive\", \"animations\", \"ariaLabel\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], directives: [{ type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1\n                }),\n                animate(500, style({ opacity: 0 }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BoxSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-box-series]',\n                    template: `\n    <svg:g\n      ngx-charts-box\n      [@animationState]=\"'active'\"\n      [@.disabled]=\"!animations\"\n      [width]=\"box.width\"\n      [height]=\"box.height\"\n      [x]=\"box.x\"\n      [y]=\"box.y\"\n      [roundEdges]=\"box.roundEdges\"\n      [fill]=\"box.color\"\n      [gradientStops]=\"box.gradientStops\"\n      [strokeColor]=\"strokeColor\"\n      [strokeWidth]=\"strokeWidth\"\n      [data]=\"box.data\"\n      [lineCoordinates]=\"box.lineCoordinates\"\n      [gradient]=\"gradient\"\n      [ariaLabel]=\"box.ariaLabel\"\n      (select)=\"onClick($event)\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"tooltipPlacement\"\n      [tooltipType]=\"tooltipType\"\n      [tooltipTitle]=\"tooltipTitle\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"box.data\"\n      [animations]=\"animations\"\n    ></svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1\n                                }),\n                                animate(500, style({ opacity: 0 }))\n                            ])\n                        ])\n                    ]\n                }]\n        }], propDecorators: { dims: [{\n                type: Input\n            }], series: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], strokeColor: [{\n                type: Input\n            }], strokeWidth: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], tooltipPlacement: [{\n                type: Input\n            }], tooltipType: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }] } });\n\nclass BoxChartComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        /** Show or hide the legend. */\n        this.legend = false;\n        this.legendPosition = LegendPosition.Right;\n        this.legendTitle = 'Legend';\n        this.showGridLines = true;\n        this.xAxis = true;\n        this.yAxis = true;\n        this.showXAxisLabel = true;\n        this.showYAxisLabel = true;\n        this.roundDomains = false;\n        this.roundEdges = true;\n        this.strokeColor = '#FFFFFF';\n        this.strokeWidth = 2;\n        this.tooltipDisabled = false;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        /** Chart Margins (For each side, counterclock wise). */\n        this.margin = [10, 20, 10, 20];\n        /** Chart X axis dimension. */\n        this.xAxisHeight = 0;\n        /** Chart Y axis dimension. */\n        this.yAxisWidth = 0;\n    }\n    trackBy(index, item) {\n        return item.name;\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendPosition: this.legendPosition\n        });\n        this.xDomain = this.getXDomain();\n        this.yDomain = this.getYDomain();\n        this.seriesDomain = this.getSeriesDomain();\n        this.setScales();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    }\n    setColors() {\n        let domain = [];\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.seriesDomain;\n        }\n        else {\n            domain = this.yDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    setScales() {\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n        this.yScale = this.getYScale(this.yDomain, this.dims.height);\n    }\n    getXScale(domain, width) {\n        const scale = scaleBand()\n            .domain(domain.map(d => d.toString()))\n            .rangeRound([0, width])\n            .padding(0.5);\n        return scale;\n    }\n    getYScale(domain, height) {\n        const scale = scaleLinear().domain(domain).range([height, 0]);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getUniqueBoxChartXDomainValues(results) {\n        const valueSet = new Set();\n        for (const result of results) {\n            valueSet.add(result.name);\n        }\n        return Array.from(valueSet);\n    }\n    getXDomain() {\n        let domain = [];\n        const values = this.getUniqueBoxChartXDomainValues(this.results);\n        let min;\n        let max;\n        if (typeof values[0] === 'string') {\n            domain = values.map(val => val.toString());\n        }\n        else if (typeof values[0] === 'number') {\n            const mappedValues = values.map(v => Number(v));\n            min = Math.min(...mappedValues);\n            max = Math.max(...mappedValues);\n            domain = [min, max];\n        }\n        else {\n            const mappedValues = values.map(v => Number(new Date(v)));\n            min = Math.min(...mappedValues);\n            max = Math.max(...mappedValues);\n            domain = [new Date(min), new Date(max)];\n        }\n        return domain;\n    }\n    getYDomain() {\n        const domain = [];\n        for (const results of this.results) {\n            for (const d of results.series) {\n                if (domain.indexOf(d.value) < 0) {\n                    domain.push(d.value);\n                }\n            }\n        }\n        const values = [...domain];\n        const mappedValues = values.map(v => Number(v));\n        const min = Math.min(...mappedValues);\n        const max = Math.max(...mappedValues);\n        return [min, max];\n    }\n    getSeriesDomain() {\n        return this.results.map(d => `${d.name}`);\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    onActivate(data) {\n        this.activate.emit(data);\n    }\n    onDeactivate(data) {\n        this.deactivate.emit(data);\n    }\n    getLegendOptions() {\n        const legendOpts = {\n            scaleType: this.schemeType,\n            colors: this.colors,\n            domain: [],\n            position: this.legendPosition,\n            title: this.legendTitle\n        };\n        if (this.schemeType === ScaleType.Ordinal) {\n            legendOpts.domain = this.xDomain;\n            legendOpts.colors = this.colors;\n        }\n        else {\n            legendOpts.domain = this.yDomain;\n            legendOpts.colors = this.colors.scale;\n        }\n        return legendOpts;\n    }\n}\nBoxChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BoxChartComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBoxChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BoxChartComponent, selector: \"ngx-charts-box-chart\", inputs: { legend: \"legend\", legendPosition: \"legendPosition\", legendTitle: \"legendTitle\", legendOptionsConfig: \"legendOptionsConfig\", showGridLines: \"showGridLines\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", roundDomains: \"roundDomains\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", roundEdges: \"roundEdges\", strokeColor: \"strokeColor\", strokeWidth: \"strokeWidth\", tooltipDisabled: \"tooltipDisabled\", gradient: \"gradient\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"box-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          [showGridLines]=\"showGridLines\"\n          [dims]=\"dims\"\n          [xScale]=\"xScale\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        />\n        <svg:g\n          ngx-charts-y-axis\n          [showGridLines]=\"showGridLines\"\n          [dims]=\"dims\"\n          [yScale]=\"yScale\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        />\n      </svg:g>\n      <svg:g [attr.transform]=\"transform\">\n        <svg:g *ngFor=\"let result of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-box-series\n            [xScale]=\"xScale\"\n            [yScale]=\"yScale\"\n            [colors]=\"colors\"\n            [roundEdges]=\"roundEdges\"\n            [strokeColor]=\"strokeColor\"\n            [strokeWidth]=\"strokeWidth\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [series]=\"result\"\n            [dims]=\"dims\"\n            [animations]=\"animations\"\n            [gradient]=\"gradient\"\n            (activate)=\"onActivate($event)\"\n            (deactivate)=\"onDeactivate($event)\"\n            (select)=\"onClick($event)\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: BoxSeriesComponent, selector: \"g[ngx-charts-box-series]\", inputs: [\"dims\", \"series\", \"xScale\", \"yScale\", \"colors\", \"animations\", \"strokeColor\", \"strokeWidth\", \"tooltipDisabled\", \"tooltipTemplate\", \"tooltipPlacement\", \"tooltipType\", \"roundEdges\", \"gradient\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BoxChartComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-box-chart', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"box-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          [showGridLines]=\"showGridLines\"\n          [dims]=\"dims\"\n          [xScale]=\"xScale\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        />\n        <svg:g\n          ngx-charts-y-axis\n          [showGridLines]=\"showGridLines\"\n          [dims]=\"dims\"\n          [yScale]=\"yScale\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        />\n      </svg:g>\n      <svg:g [attr.transform]=\"transform\">\n        <svg:g *ngFor=\"let result of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-box-series\n            [xScale]=\"xScale\"\n            [yScale]=\"yScale\"\n            [colors]=\"colors\"\n            [roundEdges]=\"roundEdges\"\n            [strokeColor]=\"strokeColor\"\n            [strokeWidth]=\"strokeWidth\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [series]=\"result\"\n            [dims]=\"dims\"\n            [animations]=\"animations\"\n            [gradient]=\"gradient\"\n            (activate)=\"onActivate($event)\"\n            (deactivate)=\"onDeactivate($event)\"\n            (select)=\"onClick($event)\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendOptionsConfig: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], strokeColor: [{\n                type: Input\n            }], strokeWidth: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate', { static: false }]\n            }] } });\n\nclass BoxChartModule {\n}\nBoxChartModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BoxChartModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nBoxChartModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BoxChartModule, declarations: [BoxChartComponent, BoxSeriesComponent, BoxComponent], imports: [ChartCommonModule], exports: [BoxChartComponent, BoxSeriesComponent, BoxComponent] });\nBoxChartModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BoxChartModule, imports: [[ChartCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BoxChartModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule],\n                    declarations: [BoxChartComponent, BoxSeriesComponent, BoxComponent],\n                    exports: [BoxChartComponent, BoxSeriesComponent, BoxComponent]\n                }]\n        }] });\n\nfunction getDomain(values, scaleType, autoScale, minVal, maxVal) {\n    let domain = [];\n    if (scaleType === ScaleType.Linear) {\n        values = values.map(v => Number(v));\n        if (!autoScale) {\n            values.push(0);\n        }\n    }\n    if (scaleType === ScaleType.Time || scaleType === ScaleType.Linear) {\n        const min = minVal || minVal === 0 ? minVal : Math.min(...values);\n        const max = maxVal ? maxVal : Math.max(...values);\n        domain = [min, max];\n    }\n    else {\n        domain = values;\n    }\n    return domain;\n}\nfunction getScale(domain, range, scaleType, roundDomains) {\n    switch (scaleType) {\n        case ScaleType.Time:\n            return scaleTime().range(range).domain(domain);\n        case ScaleType.Linear: {\n            const scale = scaleLinear().range(range).domain(domain);\n            if (roundDomains) {\n                return scale.nice();\n            }\n            return scale;\n        }\n        case ScaleType.Ordinal:\n            return scalePoint()\n                .range([range[0], range[1]])\n                .domain(domain.map(r => r.toString()));\n        default:\n            return undefined;\n    }\n}\n\nclass BubbleSeriesComponent {\n    constructor(platformId) {\n        this.platformId = platformId;\n        this.tooltipDisabled = false;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.placementTypes = PlacementTypes;\n        this.styleTypes = StyleTypes;\n        this.isSSR = false;\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.circles = this.getCircles();\n    }\n    getCircles() {\n        const seriesName = this.data.name;\n        return this.data.series\n            .map((d, i) => {\n            if (typeof d.y !== 'undefined' && typeof d.x !== 'undefined') {\n                const y = d.y;\n                const x = d.x;\n                const r = d.r;\n                const radius = this.rScale(r || 1);\n                const tooltipLabel = formatLabel(d.name);\n                const cx = this.xScaleType === ScaleType.Linear ? this.xScale(Number(x)) : this.xScale(x);\n                const cy = this.yScaleType === ScaleType.Linear ? this.yScale(Number(y)) : this.yScale(y);\n                const color = this.colors.scaleType === ScaleType.Linear ? this.colors.getColor(r) : this.colors.getColor(seriesName);\n                const isActive = !this.activeEntries.length ? true : this.isActive({ name: seriesName });\n                const opacity = isActive ? 1 : 0.3;\n                const data = Object.assign({}, d, {\n                    series: seriesName,\n                    name: d.name,\n                    value: d.y,\n                    x: d.x,\n                    radius: d.r\n                });\n                return {\n                    data,\n                    x,\n                    y,\n                    r,\n                    classNames: [`circle-data-${i}`],\n                    value: y,\n                    label: x,\n                    cx,\n                    cy,\n                    radius,\n                    tooltipLabel,\n                    color,\n                    opacity,\n                    seriesName,\n                    isActive,\n                    transform: `translate(${cx},${cy})`\n                };\n            }\n        })\n            .filter(circle => circle !== undefined);\n    }\n    getTooltipText(circle) {\n        const hasRadius = typeof circle.r !== 'undefined';\n        const hasTooltipLabel = circle.tooltipLabel && circle.tooltipLabel.length;\n        const hasSeriesName = circle.seriesName && circle.seriesName.length;\n        const radiusValue = hasRadius ? formatLabel(circle.r) : '';\n        const xAxisLabel = this.xAxisLabel && this.xAxisLabel !== '' ? `${this.xAxisLabel}:` : '';\n        const yAxisLabel = this.yAxisLabel && this.yAxisLabel !== '' ? `${this.yAxisLabel}:` : '';\n        const x = formatLabel(circle.x);\n        const y = formatLabel(circle.y);\n        const name = hasSeriesName && hasTooltipLabel\n            ? `${circle.seriesName} • ${circle.tooltipLabel}`\n            : circle.seriesName + circle.tooltipLabel;\n        const tooltipTitle = hasSeriesName || hasTooltipLabel ? `<span class=\"tooltip-label\">${escapeLabel(name)}</span>` : '';\n        return `\n      ${tooltipTitle}\n      <span class=\"tooltip-label\">\n        <label>${escapeLabel(xAxisLabel)}</label> ${escapeLabel(x)}<br />\n        <label>${escapeLabel(yAxisLabel)}</label> ${escapeLabel(y)}\n      </span>\n      <span class=\"tooltip-val\">\n        ${escapeLabel(radiusValue)}\n      </span>\n    `;\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.name === d.name;\n        });\n        return item !== undefined;\n    }\n    isVisible(circle) {\n        if (this.activeEntries.length > 0) {\n            return this.isActive({ name: circle.seriesName });\n        }\n        return circle.opacity !== 0;\n    }\n    activateCircle(circle) {\n        circle.barVisible = true;\n        this.activate.emit({ name: this.data.name });\n    }\n    deactivateCircle(circle) {\n        circle.barVisible = false;\n        this.deactivate.emit({ name: this.data.name });\n    }\n    trackBy(index, circle) {\n        return `${circle.data.series} ${circle.data.name}`;\n    }\n}\nBubbleSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BubbleSeriesComponent, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nBubbleSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BubbleSeriesComponent, selector: \"g[ngx-charts-bubble-series]\", inputs: { data: \"data\", xScale: \"xScale\", yScale: \"yScale\", rScale: \"rScale\", xScaleType: \"xScaleType\", yScaleType: \"yScaleType\", colors: \"colors\", visibleValue: \"visibleValue\", activeEntries: \"activeEntries\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", tooltipDisabled: \"tooltipDisabled\", tooltipTemplate: \"tooltipTemplate\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g *ngFor=\"let circle of circles; trackBy: trackBy\">\n      <svg:g [attr.transform]=\"circle.transform\">\n        <svg:g\n          *ngIf=\"!isSSR\"\n          ngx-charts-circle\n          [@animationState]=\"'active'\"\n          class=\"circle\"\n          [cx]=\"0\"\n          [cy]=\"0\"\n          [r]=\"circle.radius\"\n          [fill]=\"circle.color\"\n          [style.opacity]=\"circle.opacity\"\n          [class.active]=\"circle.isActive\"\n          [pointerEvents]=\"'all'\"\n          [data]=\"circle.value\"\n          [classNames]=\"circle.classNames\"\n          (select)=\"onClick(circle.data)\"\n          (activate)=\"activateCircle(circle)\"\n          (deactivate)=\"deactivateCircle(circle)\"\n          ngx-tooltip\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipPlacement]=\"placementTypes.Top\"\n          [tooltipType]=\"styleTypes.tooltip\"\n          [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(circle)\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipContext]=\"circle.data\"\n        />\n        <svg:g\n          *ngIf=\"isSSR\"\n          ngx-charts-circle\n          class=\"circle\"\n          [cx]=\"0\"\n          [cy]=\"0\"\n          [r]=\"circle.radius\"\n          [fill]=\"circle.color\"\n          [style.opacity]=\"circle.opacity\"\n          [class.active]=\"circle.isActive\"\n          [pointerEvents]=\"'all'\"\n          [data]=\"circle.value\"\n          [classNames]=\"circle.classNames\"\n          (select)=\"onClick(circle.data)\"\n          (activate)=\"activateCircle(circle)\"\n          (deactivate)=\"deactivateCircle(circle)\"\n          ngx-tooltip\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipPlacement]=\"placementTypes.Top\"\n          [tooltipType]=\"styleTypes.tooltip\"\n          [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(circle)\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipContext]=\"circle.data\"\n        />\n      </svg:g>\n    </svg:g>\n  `, isInline: true, components: [{ type: CircleComponent, selector: \"g[ngx-charts-circle]\", inputs: [\"cx\", \"cy\", \"r\", \"fill\", \"stroke\", \"data\", \"classNames\", \"circleOpacity\", \"pointerEvents\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }], animations: [\n        trigger('animationState', [\n            transition(':enter', [\n                style({\n                    opacity: 0,\n                    transform: 'scale(0)'\n                }),\n                animate(250, style({ opacity: 1, transform: 'scale(1)' }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BubbleSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-bubble-series]',\n                    template: `\n    <svg:g *ngFor=\"let circle of circles; trackBy: trackBy\">\n      <svg:g [attr.transform]=\"circle.transform\">\n        <svg:g\n          *ngIf=\"!isSSR\"\n          ngx-charts-circle\n          [@animationState]=\"'active'\"\n          class=\"circle\"\n          [cx]=\"0\"\n          [cy]=\"0\"\n          [r]=\"circle.radius\"\n          [fill]=\"circle.color\"\n          [style.opacity]=\"circle.opacity\"\n          [class.active]=\"circle.isActive\"\n          [pointerEvents]=\"'all'\"\n          [data]=\"circle.value\"\n          [classNames]=\"circle.classNames\"\n          (select)=\"onClick(circle.data)\"\n          (activate)=\"activateCircle(circle)\"\n          (deactivate)=\"deactivateCircle(circle)\"\n          ngx-tooltip\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipPlacement]=\"placementTypes.Top\"\n          [tooltipType]=\"styleTypes.tooltip\"\n          [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(circle)\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipContext]=\"circle.data\"\n        />\n        <svg:g\n          *ngIf=\"isSSR\"\n          ngx-charts-circle\n          class=\"circle\"\n          [cx]=\"0\"\n          [cy]=\"0\"\n          [r]=\"circle.radius\"\n          [fill]=\"circle.color\"\n          [style.opacity]=\"circle.opacity\"\n          [class.active]=\"circle.isActive\"\n          [pointerEvents]=\"'all'\"\n          [data]=\"circle.value\"\n          [classNames]=\"circle.classNames\"\n          (select)=\"onClick(circle.data)\"\n          (activate)=\"activateCircle(circle)\"\n          (deactivate)=\"deactivateCircle(circle)\"\n          ngx-tooltip\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipPlacement]=\"placementTypes.Top\"\n          [tooltipType]=\"styleTypes.tooltip\"\n          [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(circle)\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipContext]=\"circle.data\"\n        />\n      </svg:g>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    animations: [\n                        trigger('animationState', [\n                            transition(':enter', [\n                                style({\n                                    opacity: 0,\n                                    transform: 'scale(0)'\n                                }),\n                                animate(250, style({ opacity: 1, transform: 'scale(1)' }))\n                            ])\n                        ])\n                    ]\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { data: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], rScale: [{\n                type: Input\n            }], xScaleType: [{\n                type: Input\n            }], yScaleType: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], visibleValue: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }] } });\n\nclass BubbleChartComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.showGridLines = true;\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.xAxis = true;\n        this.yAxis = true;\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.roundDomains = false;\n        this.maxRadius = 10;\n        this.minRadius = 3;\n        this.schemeType = ScaleType.Ordinal;\n        this.tooltipDisabled = false;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.scaleType = ScaleType.Linear;\n        this.margin = [10, 20, 10, 20];\n        this.bubblePadding = [0, 0, 0, 0];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.activeEntries = [];\n        this.isSSR = false;\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        this.seriesDomain = this.results.map(d => d.name);\n        this.rDomain = this.getRDomain();\n        this.xDomain = this.getXDomain();\n        this.yDomain = this.getYDomain();\n        this.transform = `translate(${this.dims.xOffset},${this.margin[0]})`;\n        const colorDomain = this.schemeType === ScaleType.Ordinal ? this.seriesDomain : this.rDomain;\n        this.colors = new ColorHelper(this.scheme, this.schemeType, colorDomain, this.customColors);\n        this.data = this.results;\n        this.minRadius = Math.max(this.minRadius, 1);\n        this.maxRadius = Math.max(this.maxRadius, 1);\n        this.rScale = this.getRScale(this.rDomain, [this.minRadius, this.maxRadius]);\n        this.bubblePadding = [0, 0, 0, 0];\n        this.setScales();\n        this.bubblePadding = this.getBubblePadding();\n        this.setScales();\n        this.legendOptions = this.getLegendOptions();\n        this.clipPathId = 'clip' + id().toString();\n        this.clipPath = `url(#${this.clipPathId})`;\n    }\n    hideCircles() {\n        this.deactivateAll();\n    }\n    onClick(data, series) {\n        if (series) {\n            data.series = series.name;\n        }\n        this.select.emit(data);\n    }\n    getBubblePadding() {\n        let yMin = 0;\n        let xMin = 0;\n        let yMax = this.dims.height;\n        let xMax = this.dims.width;\n        for (const s of this.data) {\n            for (const d of s.series) {\n                const r = this.rScale(d.r);\n                const cx = this.xScaleType === ScaleType.Linear ? this.xScale(Number(d.x)) : this.xScale(d.x);\n                const cy = this.yScaleType === ScaleType.Linear ? this.yScale(Number(d.y)) : this.yScale(d.y);\n                xMin = Math.max(r - cx, xMin);\n                yMin = Math.max(r - cy, yMin);\n                yMax = Math.max(cy + r, yMax);\n                xMax = Math.max(cx + r, xMax);\n            }\n        }\n        xMax = Math.max(xMax - this.dims.width, 0);\n        yMax = Math.max(yMax - this.dims.height, 0);\n        return [yMin, xMax, yMax, xMin];\n    }\n    setScales() {\n        let width = this.dims.width;\n        if (this.xScaleMin === undefined && this.xScaleMax === undefined) {\n            width = width - this.bubblePadding[1];\n        }\n        let height = this.dims.height;\n        if (this.yScaleMin === undefined && this.yScaleMax === undefined) {\n            height = height - this.bubblePadding[2];\n        }\n        this.xScale = this.getXScale(this.xDomain, width);\n        this.yScale = this.getYScale(this.yDomain, height);\n    }\n    getYScale(domain, height) {\n        return getScale(domain, [height, this.bubblePadding[0]], this.yScaleType, this.roundDomains);\n    }\n    getXScale(domain, width) {\n        return getScale(domain, [this.bubblePadding[3], width], this.xScaleType, this.roundDomains);\n    }\n    getRScale(domain, range) {\n        const scale = scaleLinear().range(range).domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            position: this.legendPosition,\n            title: undefined\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.seriesDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.rDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    getXDomain() {\n        const values = [];\n        for (const results of this.results) {\n            for (const d of results.series) {\n                if (!values.includes(d.x)) {\n                    values.push(d.x);\n                }\n            }\n        }\n        this.xScaleType = getScaleType(values);\n        return getDomain(values, this.xScaleType, this.autoScale, this.xScaleMin, this.xScaleMax);\n    }\n    getYDomain() {\n        const values = [];\n        for (const results of this.results) {\n            for (const d of results.series) {\n                if (!values.includes(d.y)) {\n                    values.push(d.y);\n                }\n            }\n        }\n        this.yScaleType = getScaleType(values);\n        return getDomain(values, this.yScaleType, this.autoScale, this.yScaleMin, this.yScaleMax);\n    }\n    getRDomain() {\n        let min = Infinity;\n        let max = -Infinity;\n        for (const results of this.results) {\n            for (const d of results.series) {\n                const value = Number(d.r) || 1;\n                min = Math.min(min, value);\n                max = Math.max(max, value);\n            }\n        }\n        return [min, max];\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n    deactivateAll() {\n        this.activeEntries = [...this.activeEntries];\n        for (const entry of this.activeEntries) {\n            this.deactivate.emit({ value: entry, entries: [] });\n        }\n        this.activeEntries = [];\n    }\n    trackBy(index, item) {\n        return `${item.name}`;\n    }\n}\nBubbleChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BubbleChartComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBubbleChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BubbleChartComponent, selector: \"ngx-charts-bubble-chart\", inputs: { showGridLines: \"showGridLines\", legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", roundDomains: \"roundDomains\", maxRadius: \"maxRadius\", minRadius: \"minRadius\", autoScale: \"autoScale\", schemeType: \"schemeType\", tooltipDisabled: \"tooltipDisabled\", xScaleMin: \"xScaleMin\", xScaleMax: \"xScaleMax\", yScaleMin: \"yScaleMin\", yScaleMax: \"yScaleMax\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, host: { listeners: { \"mouseleave\": \"hideCircles()\" } }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [activeEntries]=\"activeEntries\"\n      [legendOptions]=\"legendOptions\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"bubble-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [showGridLines]=\"showGridLines\"\n          [dims]=\"dims\"\n          [xScale]=\"xScale\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        />\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [showGridLines]=\"showGridLines\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        />\n        <svg:rect\n          class=\"bubble-chart-area\"\n          x=\"0\"\n          y=\"0\"\n          [attr.width]=\"dims.width\"\n          [attr.height]=\"dims.height\"\n          style=\"fill: rgb(255, 0, 0); opacity: 0; cursor: 'auto';\"\n          (mouseenter)=\"deactivateAll()\"\n        />\n        <svg:g *ngIf=\"!isSSR\" [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of data; trackBy: trackBy\" [@animationState]=\"'active'\">\n            <svg:g\n              ngx-charts-bubble-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [rScale]=\"rScale\"\n              [xScaleType]=\"xScaleType\"\n              [yScaleType]=\"yScaleType\"\n              [xAxisLabel]=\"xAxisLabel\"\n              [yAxisLabel]=\"yAxisLabel\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event, series)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\" [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of data; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-bubble-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [rScale]=\"rScale\"\n              [xScaleType]=\"xScaleType\"\n              [yScaleType]=\"yScaleType\"\n              [xAxisLabel]=\"xAxisLabel\"\n              [yAxisLabel]=\"yAxisLabel\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event, series)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: BubbleSeriesComponent, selector: \"g[ngx-charts-bubble-series]\", inputs: [\"data\", \"xScale\", \"yScale\", \"rScale\", \"xScaleType\", \"yScaleType\", \"colors\", \"visibleValue\", \"activeEntries\", \"xAxisLabel\", \"yAxisLabel\", \"tooltipDisabled\", \"tooltipTemplate\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1\n                }),\n                animate(500, style({\n                    opacity: 0\n                }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BubbleChartComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-bubble-chart', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [activeEntries]=\"activeEntries\"\n      [legendOptions]=\"legendOptions\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"bubble-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [showGridLines]=\"showGridLines\"\n          [dims]=\"dims\"\n          [xScale]=\"xScale\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        />\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [showGridLines]=\"showGridLines\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        />\n        <svg:rect\n          class=\"bubble-chart-area\"\n          x=\"0\"\n          y=\"0\"\n          [attr.width]=\"dims.width\"\n          [attr.height]=\"dims.height\"\n          style=\"fill: rgb(255, 0, 0); opacity: 0; cursor: 'auto';\"\n          (mouseenter)=\"deactivateAll()\"\n        />\n        <svg:g *ngIf=\"!isSSR\" [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of data; trackBy: trackBy\" [@animationState]=\"'active'\">\n            <svg:g\n              ngx-charts-bubble-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [rScale]=\"rScale\"\n              [xScaleType]=\"xScaleType\"\n              [yScaleType]=\"yScaleType\"\n              [xAxisLabel]=\"xAxisLabel\"\n              [yAxisLabel]=\"yAxisLabel\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event, series)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\" [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of data; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-bubble-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [rScale]=\"rScale\"\n              [xScaleType]=\"xScaleType\"\n              [yScaleType]=\"yScaleType\"\n              [xAxisLabel]=\"xAxisLabel\"\n              [yAxisLabel]=\"yAxisLabel\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event, series)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1\n                                }),\n                                animate(500, style({\n                                    opacity: 0\n                                }))\n                            ])\n                        ])\n                    ], styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { showGridLines: [{\n                type: Input\n            }], legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], maxRadius: [{\n                type: Input\n            }], minRadius: [{\n                type: Input\n            }], autoScale: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], xScaleMin: [{\n                type: Input\n            }], xScaleMax: [{\n                type: Input\n            }], yScaleMin: [{\n                type: Input\n            }], yScaleMax: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }], hideCircles: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nclass BubbleChartModule {\n}\nBubbleChartModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BubbleChartModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nBubbleChartModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BubbleChartModule, declarations: [BubbleChartComponent, BubbleSeriesComponent], imports: [ChartCommonModule], exports: [BubbleChartComponent, BubbleSeriesComponent] });\nBubbleChartModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BubbleChartModule, imports: [[ChartCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BubbleChartModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule],\n                    declarations: [BubbleChartComponent, BubbleSeriesComponent],\n                    exports: [BubbleChartComponent, BubbleSeriesComponent]\n                }]\n        }] });\n\nclass HeatMapCellComponent {\n    constructor(element) {\n        this.gradient = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.barOrientation = BarOrientation;\n        this.element = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n        this.transform = `translate(${this.x} , ${this.y})`;\n        this.startOpacity = 0.3;\n        this.gradientId = 'grad' + id().toString();\n        this.gradientUrl = `url(#${this.gradientId})`;\n        this.gradientStops = this.getGradientStops();\n        if (this.animations) {\n            this.loadAnimation();\n        }\n    }\n    getGradientStops() {\n        return [\n            {\n                offset: 0,\n                color: this.fill,\n                opacity: this.startOpacity\n            },\n            {\n                offset: 100,\n                color: this.fill,\n                opacity: 1\n            }\n        ];\n    }\n    loadAnimation() {\n        const node = select(this.element).select('.cell');\n        node.attr('opacity', 0);\n        this.animateToCurrentForm();\n    }\n    animateToCurrentForm() {\n        const node = select(this.element).select('.cell');\n        node.transition().duration(750).attr('opacity', 1);\n    }\n    onClick() {\n        this.select.emit(this.data);\n    }\n    onMouseEnter() {\n        this.activate.emit(this.data);\n    }\n    onMouseLeave() {\n        this.deactivate.emit(this.data);\n    }\n}\nHeatMapCellComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeatMapCellComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nHeatMapCellComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: HeatMapCellComponent, selector: \"g[ngx-charts-heat-map-cell]\", inputs: { fill: \"fill\", x: \"x\", y: \"y\", width: \"width\", height: \"height\", data: \"data\", gradient: \"gradient\", animations: \"animations\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, host: { listeners: { \"mouseenter\": \"onMouseEnter()\", \"mouseleave\": \"onMouseLeave()\" } }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g [attr.transform]=\"transform\" class=\"cell\">\n      <defs *ngIf=\"gradient\">\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          [orientation]=\"barOrientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:rect\n        [attr.fill]=\"gradient ? gradientUrl : fill\"\n        rx=\"3\"\n        [attr.width]=\"width\"\n        [attr.height]=\"height\"\n        class=\"cell\"\n        (click)=\"onClick()\"\n      />\n    </svg:g>\n  `, isInline: true, components: [{ type: SvgLinearGradientComponent, selector: \"g[ngx-charts-svg-linear-gradient]\", inputs: [\"orientation\", \"name\", \"stops\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeatMapCellComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-heat-map-cell]',\n                    template: `\n    <svg:g [attr.transform]=\"transform\" class=\"cell\">\n      <defs *ngIf=\"gradient\">\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          [orientation]=\"barOrientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:rect\n        [attr.fill]=\"gradient ? gradientUrl : fill\"\n        rx=\"3\"\n        [attr.width]=\"width\"\n        [attr.height]=\"height\"\n        class=\"cell\"\n        (click)=\"onClick()\"\n      />\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { fill: [{\n                type: Input\n            }], x: [{\n                type: Input\n            }], y: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], onMouseEnter: [{\n                type: HostListener,\n                args: ['mouseenter']\n            }], onMouseLeave: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nclass HeatCellSeriesComponent {\n    constructor() {\n        this.tooltipDisabled = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.placementTypes = PlacementTypes;\n        this.styleTypes = StyleTypes;\n    }\n    ngOnInit() {\n        if (!this.tooltipText) {\n            this.tooltipText = this.getTooltipText;\n        }\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.cells = this.getCells();\n    }\n    getCells() {\n        const cells = [];\n        this.data.map(row => {\n            row.series.map(cell => {\n                const value = cell.value;\n                cell.series = row.name;\n                cells.push({\n                    row,\n                    cell,\n                    x: this.xScale(row.name),\n                    y: this.yScale(cell.name),\n                    width: this.xScale.bandwidth(),\n                    height: this.yScale.bandwidth(),\n                    fill: this.colors.getColor(value),\n                    data: value,\n                    label: formatLabel(cell.name),\n                    series: row.name\n                });\n            });\n        });\n        return cells;\n    }\n    getTooltipText({ label, data, series }) {\n        return `\n      <span class=\"tooltip-label\">${escapeLabel(series)} • ${escapeLabel(label)}</span>\n      <span class=\"tooltip-val\">${data.toLocaleString()}</span>\n    `;\n    }\n    trackBy(index, item) {\n        return item.label;\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n}\nHeatCellSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeatCellSeriesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nHeatCellSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: HeatCellSeriesComponent, selector: \"g[ngx-charts-heat-map-cell-series]\", inputs: { data: \"data\", colors: \"colors\", xScale: \"xScale\", yScale: \"yScale\", gradient: \"gradient\", tooltipDisabled: \"tooltipDisabled\", tooltipText: \"tooltipText\", tooltipTemplate: \"tooltipTemplate\", animations: \"animations\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g\n      ngx-charts-heat-map-cell\n      *ngFor=\"let c of cells; trackBy: trackBy\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [fill]=\"c.fill\"\n      [data]=\"c.data\"\n      (select)=\"onClick(c.cell)\"\n      (activate)=\"activate.emit(c.cell)\"\n      (deactivate)=\"deactivate.emit(c.cell)\"\n      [gradient]=\"gradient\"\n      [animations]=\"animations\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"placementTypes.Top\"\n      [tooltipType]=\"styleTypes.tooltip\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(c)\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"{ series: c.series, name: c.label, value: c.data }\"\n    ></svg:g>\n  `, isInline: true, components: [{ type: HeatMapCellComponent, selector: \"g[ngx-charts-heat-map-cell]\", inputs: [\"fill\", \"x\", \"y\", \"width\", \"height\", \"data\", \"gradient\", \"animations\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeatCellSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-heat-map-cell-series]',\n                    template: `\n    <svg:g\n      ngx-charts-heat-map-cell\n      *ngFor=\"let c of cells; trackBy: trackBy\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [fill]=\"c.fill\"\n      [data]=\"c.data\"\n      (select)=\"onClick(c.cell)\"\n      (activate)=\"activate.emit(c.cell)\"\n      (deactivate)=\"deactivate.emit(c.cell)\"\n      [gradient]=\"gradient\"\n      [animations]=\"animations\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"placementTypes.Top\"\n      [tooltipType]=\"styleTypes.tooltip\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(c)\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"{ series: c.series, name: c.label, value: c.data }\"\n    ></svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { data: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipText: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }] } });\n\nclass HeatMapComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.innerPadding = 8;\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.tooltipDisabled = false;\n        this.activeEntries = [];\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.scaleType = ScaleType.Linear;\n    }\n    update() {\n        super.update();\n        this.formatDates();\n        this.xDomain = this.getXDomain();\n        this.yDomain = this.getYDomain();\n        this.valueDomain = this.getValueDomain();\n        this.scaleType = getScaleType(this.valueDomain, false);\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.scaleType,\n            legendPosition: this.legendPosition\n        });\n        if (this.scaleType === ScaleType.Linear) {\n            let min = this.min;\n            let max = this.max;\n            if (!this.min) {\n                min = Math.min(0, ...this.valueDomain);\n            }\n            if (!this.max) {\n                max = Math.max(...this.valueDomain);\n            }\n            this.valueDomain = [min, max];\n        }\n        this.xScale = this.getXScale();\n        this.yScale = this.getYScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n        this.rects = this.getRects();\n    }\n    getXDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            if (!domain.includes(group.name)) {\n                domain.push(group.name);\n            }\n        }\n        return domain;\n    }\n    getYDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.name)) {\n                    domain.push(d.name);\n                }\n            }\n        }\n        return domain;\n    }\n    getValueDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.value)) {\n                    domain.push(d.value);\n                }\n            }\n        }\n        return domain;\n    }\n    /**\n     * Converts the input to gap paddingInner in fraction\n     * Supports the following inputs:\n     *    Numbers: 8\n     *    Strings: \"8\", \"8px\", \"8%\"\n     *    Arrays: [8,2], \"8,2\", \"[8,2]\"\n     *    Mixed: [8,\"2%\"], [\"8px\",\"2%\"], \"8,2%\", \"[8,2%]\"\n     *\n     * @memberOf HeatMapComponent\n     */\n    getDimension(value, index = 0, N, L) {\n        if (typeof value === 'string') {\n            value = value\n                .replace('[', '')\n                .replace(']', '')\n                .replace('px', '')\n                // tslint:disable-next-line: quotemark\n                .replace(\"'\", '');\n            if (value.includes(',')) {\n                value = value.split(',');\n            }\n        }\n        if (Array.isArray(value) && typeof index === 'number') {\n            return this.getDimension(value[index], null, N, L);\n        }\n        if (typeof value === 'string' && value.includes('%')) {\n            return +value.replace('%', '') / 100;\n        }\n        return N / (L / +value + 1);\n    }\n    getXScale() {\n        const f = this.getDimension(this.innerPadding, 0, this.xDomain.length, this.dims.width);\n        return scaleBand().rangeRound([0, this.dims.width]).domain(this.xDomain).paddingInner(f);\n    }\n    getYScale() {\n        const f = this.getDimension(this.innerPadding, 1, this.yDomain.length, this.dims.height);\n        return scaleBand().rangeRound([this.dims.height, 0]).domain(this.yDomain).paddingInner(f);\n    }\n    getRects() {\n        const rects = [];\n        this.xDomain.map(xVal => {\n            this.yDomain.map(yVal => {\n                rects.push({\n                    x: this.xScale(xVal),\n                    y: this.yScale(yVal),\n                    rx: 3,\n                    width: this.xScale.bandwidth(),\n                    height: this.yScale.bandwidth(),\n                    fill: 'rgba(200,200,200,0.03)'\n                });\n            });\n        });\n        return rects;\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    setColors() {\n        this.colors = new ColorHelper(this.scheme, this.scaleType, this.valueDomain);\n    }\n    getLegendOptions() {\n        return {\n            scaleType: this.scaleType,\n            domain: this.valueDomain,\n            colors: this.scaleType === ScaleType.Ordinal ? this.colors : this.colors.scale,\n            title: this.scaleType === ScaleType.Ordinal ? this.legendTitle : undefined,\n            position: this.legendPosition\n        };\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        const items = this.results\n            .map(g => g.series)\n            .flat()\n            .filter(i => {\n            if (fromLegend) {\n                return i.label === item.name;\n            }\n            else {\n                return i.name === item.name && i.series === item.series;\n            }\n        });\n        this.activeEntries = [...items];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        this.activeEntries = this.activeEntries.filter(i => {\n            if (fromLegend) {\n                return i.label !== item.name;\n            }\n            else {\n                return !(i.name === item.name && i.series === item.series);\n            }\n        });\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nHeatMapComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeatMapComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nHeatMapComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: HeatMapComponent, selector: \"ngx-charts-heat-map\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", gradient: \"gradient\", innerPadding: \"innerPadding\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", tooltipDisabled: \"tooltipDisabled\", tooltipText: \"tooltipText\", min: \"min\", max: \"max\", activeEntries: \"activeEntries\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [animations]=\"animations\"\n      [legendOptions]=\"legendOptions\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"heat-map chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:rect\n          *ngFor=\"let rect of rects\"\n          [attr.x]=\"rect.x\"\n          [attr.y]=\"rect.y\"\n          [attr.rx]=\"rect.rx\"\n          [attr.width]=\"rect.width\"\n          [attr.height]=\"rect.height\"\n          [attr.fill]=\"rect.fill\"\n        />\n        <svg:g\n          ngx-charts-heat-map-cell-series\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [data]=\"results\"\n          [gradient]=\"gradient\"\n          [animations]=\"animations\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipText]=\"tooltipText\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event, undefined)\"\n          (deactivate)=\"onDeactivate($event, undefined)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: HeatCellSeriesComponent, selector: \"g[ngx-charts-heat-map-cell-series]\", inputs: [\"data\", \"colors\", \"xScale\", \"yScale\", \"gradient\", \"tooltipDisabled\", \"tooltipText\", \"tooltipTemplate\", \"animations\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeatMapComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-heat-map', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [animations]=\"animations\"\n      [legendOptions]=\"legendOptions\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"heat-map chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:rect\n          *ngFor=\"let rect of rects\"\n          [attr.x]=\"rect.x\"\n          [attr.y]=\"rect.y\"\n          [attr.rx]=\"rect.rx\"\n          [attr.width]=\"rect.width\"\n          [attr.height]=\"rect.height\"\n          [attr.fill]=\"rect.fill\"\n        />\n        <svg:g\n          ngx-charts-heat-map-cell-series\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [data]=\"results\"\n          [gradient]=\"gradient\"\n          [animations]=\"animations\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipText]=\"tooltipText\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event, undefined)\"\n          (deactivate)=\"onDeactivate($event, undefined)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], innerPadding: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipText: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass HeatMapModule {\n}\nHeatMapModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeatMapModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nHeatMapModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeatMapModule, declarations: [HeatMapCellComponent, HeatCellSeriesComponent, HeatMapComponent], imports: [ChartCommonModule], exports: [HeatMapCellComponent, HeatCellSeriesComponent, HeatMapComponent] });\nHeatMapModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeatMapModule, imports: [[ChartCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeatMapModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule],\n                    declarations: [HeatMapCellComponent, HeatCellSeriesComponent, HeatMapComponent],\n                    exports: [HeatMapCellComponent, HeatCellSeriesComponent, HeatMapComponent]\n                }]\n        }] });\n\nclass LineComponent {\n    constructor(element, platformId) {\n        this.element = element;\n        this.platformId = platformId;\n        this.fill = 'none';\n        this.animations = true;\n        // @Output() select = new EventEmitter();\n        this.initialized = false;\n        this.isSSR = false;\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    ngOnChanges(changes) {\n        if (!this.initialized) {\n            this.initialized = true;\n            this.initialPath = this.path;\n        }\n        else {\n            this.updatePathEl();\n        }\n    }\n    updatePathEl() {\n        const node = select(this.element.nativeElement).select('.line');\n        if (this.animations) {\n            node.transition().duration(750).attr('d', this.path);\n        }\n        else {\n            node.attr('d', this.path);\n        }\n    }\n}\nLineComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LineComponent, deps: [{ token: i0.ElementRef }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nLineComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: LineComponent, selector: \"g[ngx-charts-line]\", inputs: { path: \"path\", stroke: \"stroke\", data: \"data\", fill: \"fill\", animations: \"animations\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g *ngIf=\"!isSSR\">\n      <svg:path\n        [@animationState]=\"'active'\"\n        class=\"line\"\n        [attr.d]=\"initialPath\"\n        [attr.fill]=\"fill\"\n        [attr.stroke]=\"stroke\"\n        stroke-width=\"1.5px\"\n      />\n    </svg:g>\n    <svg:g *ngIf=\"isSSR\">\n      <svg:path class=\"line\" [attr.d]=\"initialPath\" [attr.fill]=\"fill\" [attr.stroke]=\"stroke\" stroke-width=\"1.5px\" />\n    </svg:g>\n  `, isInline: true, directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], animations: [\n        trigger('animationState', [\n            transition(':enter', [\n                style({\n                    strokeDasharray: 2000,\n                    strokeDashoffset: 2000\n                }),\n                animate(1000, style({\n                    strokeDashoffset: 0\n                }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LineComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-line]',\n                    template: `\n    <svg:g *ngIf=\"!isSSR\">\n      <svg:path\n        [@animationState]=\"'active'\"\n        class=\"line\"\n        [attr.d]=\"initialPath\"\n        [attr.fill]=\"fill\"\n        [attr.stroke]=\"stroke\"\n        stroke-width=\"1.5px\"\n      />\n    </svg:g>\n    <svg:g *ngIf=\"isSSR\">\n      <svg:path class=\"line\" [attr.d]=\"initialPath\" [attr.fill]=\"fill\" [attr.stroke]=\"stroke\" stroke-width=\"1.5px\" />\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    animations: [\n                        trigger('animationState', [\n                            transition(':enter', [\n                                style({\n                                    strokeDasharray: 2000,\n                                    strokeDashoffset: 2000\n                                }),\n                                animate(1000, style({\n                                    strokeDashoffset: 0\n                                }))\n                            ])\n                        ])\n                    ]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { path: [{\n                type: Input\n            }], stroke: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], fill: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }] } });\n\nclass LineSeriesComponent {\n    constructor() {\n        this.animations = true;\n        this.barOrientation = BarOrientation;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.updateGradients();\n        const data = this.sortData(this.data.series);\n        const lineGen = this.getLineGenerator();\n        this.path = lineGen(data) || '';\n        const areaGen = this.getAreaGenerator();\n        this.areaPath = areaGen(data) || '';\n        if (this.hasRange) {\n            const range = this.getRangeGenerator();\n            this.outerPath = range(data) || '';\n        }\n        if (this.hasGradient) {\n            this.stroke = this.gradientUrl;\n            const values = this.data.series.map(d => d.value);\n            const max = Math.max(...values);\n            const min = Math.min(...values);\n            if (max === min) {\n                this.stroke = this.colors.getColor(max);\n            }\n        }\n        else {\n            this.stroke = this.colors.getColor(this.data.name);\n        }\n    }\n    getLineGenerator() {\n        return line()\n            .x(d => {\n            const label = d.name;\n            let value;\n            if (this.scaleType === ScaleType.Time) {\n                value = this.xScale(label);\n            }\n            else if (this.scaleType === ScaleType.Linear) {\n                value = this.xScale(Number(label));\n            }\n            else {\n                value = this.xScale(label);\n            }\n            return value;\n        })\n            .y(d => this.yScale(d.value))\n            .curve(this.curve);\n    }\n    getRangeGenerator() {\n        return area()\n            .x(d => {\n            const label = d.name;\n            let value;\n            if (this.scaleType === ScaleType.Time) {\n                value = this.xScale(label);\n            }\n            else if (this.scaleType === ScaleType.Linear) {\n                value = this.xScale(Number(label));\n            }\n            else {\n                value = this.xScale(label);\n            }\n            return value;\n        })\n            .y0(d => this.yScale(typeof d.min === 'number' ? d.min : d.value))\n            .y1(d => this.yScale(typeof d.max === 'number' ? d.max : d.value))\n            .curve(this.curve);\n    }\n    getAreaGenerator() {\n        const xProperty = d => {\n            const label = d.name;\n            return this.xScale(label);\n        };\n        return area()\n            .x(xProperty)\n            .y0(() => this.yScale.range()[0])\n            .y1(d => this.yScale(d.value))\n            .curve(this.curve);\n    }\n    sortData(data) {\n        if (this.scaleType === ScaleType.Linear) {\n            data = sortLinear(data, 'name');\n        }\n        else if (this.scaleType === ScaleType.Time) {\n            data = sortByTime(data, 'name');\n        }\n        else {\n            data = sortByDomain(data, 'name', 'asc', this.xScale.domain());\n        }\n        return data;\n    }\n    updateGradients() {\n        if (this.colors.scaleType === ScaleType.Linear) {\n            this.hasGradient = true;\n            this.gradientId = 'grad' + id().toString();\n            this.gradientUrl = `url(#${this.gradientId})`;\n            const values = this.data.series.map(d => d.value);\n            const max = Math.max(...values);\n            const min = Math.min(...values);\n            this.gradientStops = this.colors.getLinearGradientStops(max, min);\n            this.areaGradientStops = this.colors.getLinearGradientStops(max);\n        }\n        else {\n            this.hasGradient = false;\n            this.gradientStops = undefined;\n            this.areaGradientStops = undefined;\n        }\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.name === d.name;\n        });\n        return item !== undefined;\n    }\n    isInactive(entry) {\n        if (!this.activeEntries || this.activeEntries.length === 0)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.name === d.name;\n        });\n        return item === undefined;\n    }\n}\nLineSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LineSeriesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nLineSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: LineSeriesComponent, selector: \"g[ngx-charts-line-series]\", inputs: { data: \"data\", xScale: \"xScale\", yScale: \"yScale\", colors: \"colors\", scaleType: \"scaleType\", curve: \"curve\", activeEntries: \"activeEntries\", rangeFillOpacity: \"rangeFillOpacity\", hasRange: \"hasRange\", animations: \"animations\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g>\n      <defs>\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          *ngIf=\"hasGradient\"\n          [orientation]=\"barOrientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:g\n        ngx-charts-area\n        class=\"line-highlight\"\n        [data]=\"data\"\n        [path]=\"areaPath\"\n        [fill]=\"hasGradient ? gradientUrl : colors.getColor(data.name)\"\n        [opacity]=\"0.25\"\n        [startOpacity]=\"0\"\n        [gradient]=\"true\"\n        [stops]=\"areaGradientStops\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n        [animations]=\"animations\"\n      />\n      <svg:g\n        ngx-charts-line\n        class=\"line-series\"\n        [data]=\"data\"\n        [path]=\"path\"\n        [stroke]=\"stroke\"\n        [animations]=\"animations\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n      />\n      <svg:g\n        ngx-charts-area\n        *ngIf=\"hasRange\"\n        class=\"line-series-range\"\n        [data]=\"data\"\n        [path]=\"outerPath\"\n        [fill]=\"hasGradient ? gradientUrl : colors.getColor(data.name)\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n        [opacity]=\"rangeFillOpacity\"\n        [animations]=\"animations\"\n      />\n    </svg:g>\n  `, isInline: true, components: [{ type: SvgLinearGradientComponent, selector: \"g[ngx-charts-svg-linear-gradient]\", inputs: [\"orientation\", \"name\", \"stops\"] }, { type: AreaComponent, selector: \"g[ngx-charts-area]\", inputs: [\"data\", \"path\", \"startingPath\", \"fill\", \"opacity\", \"startOpacity\", \"endOpacity\", \"gradient\", \"stops\", \"animations\"], outputs: [\"select\"] }, { type: LineComponent, selector: \"g[ngx-charts-line]\", inputs: [\"path\", \"stroke\", \"data\", \"fill\", \"animations\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LineSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-line-series]',\n                    template: `\n    <svg:g>\n      <defs>\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          *ngIf=\"hasGradient\"\n          [orientation]=\"barOrientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:g\n        ngx-charts-area\n        class=\"line-highlight\"\n        [data]=\"data\"\n        [path]=\"areaPath\"\n        [fill]=\"hasGradient ? gradientUrl : colors.getColor(data.name)\"\n        [opacity]=\"0.25\"\n        [startOpacity]=\"0\"\n        [gradient]=\"true\"\n        [stops]=\"areaGradientStops\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n        [animations]=\"animations\"\n      />\n      <svg:g\n        ngx-charts-line\n        class=\"line-series\"\n        [data]=\"data\"\n        [path]=\"path\"\n        [stroke]=\"stroke\"\n        [animations]=\"animations\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n      />\n      <svg:g\n        ngx-charts-area\n        *ngIf=\"hasRange\"\n        class=\"line-series-range\"\n        [data]=\"data\"\n        [path]=\"outerPath\"\n        [fill]=\"hasGradient ? gradientUrl : colors.getColor(data.name)\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n        [opacity]=\"rangeFillOpacity\"\n        [animations]=\"animations\"\n      />\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { data: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], scaleType: [{\n                type: Input\n            }], curve: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], rangeFillOpacity: [{\n                type: Input\n            }], hasRange: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }] } });\n\nclass LineChartComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.showGridLines = true;\n        this.curve = curveLinear;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.roundDomains = false;\n        this.tooltipDisabled = false;\n        this.showRefLines = false;\n        this.showRefLabels = true;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.timelineHeight = 50;\n        this.timelinePadding = 10;\n        this.isSSR = false;\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        if (this.timeline) {\n            this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\n        }\n        this.xDomain = this.getXDomain();\n        if (this.filteredDomain) {\n            this.xDomain = this.filteredDomain;\n        }\n        this.yDomain = this.getYDomain();\n        this.seriesDomain = this.getSeriesDomain();\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n        this.yScale = this.getYScale(this.yDomain, this.dims.height);\n        this.updateTimeline();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n        this.clipPathId = 'clip' + id().toString();\n        this.clipPath = `url(#${this.clipPathId})`;\n    }\n    updateTimeline() {\n        if (this.timeline) {\n            this.timelineWidth = this.dims.width;\n            this.timelineXDomain = this.getXDomain();\n            this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n            this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n            this.timelineTransform = `translate(${this.dims.xOffset}, ${-this.margin[2]})`;\n        }\n    }\n    getXDomain() {\n        let values = getUniqueXDomainValues(this.results);\n        this.scaleType = getScaleType(values);\n        let domain = [];\n        if (this.scaleType === ScaleType.Linear) {\n            values = values.map(v => Number(v));\n        }\n        let min;\n        let max;\n        if (this.scaleType === ScaleType.Time || this.scaleType === ScaleType.Linear) {\n            min = this.xScaleMin ? this.xScaleMin : Math.min(...values);\n            max = this.xScaleMax ? this.xScaleMax : Math.max(...values);\n        }\n        if (this.scaleType === ScaleType.Time) {\n            domain = [new Date(min), new Date(max)];\n            this.xSet = [...values].sort((a, b) => {\n                const aDate = a.getTime();\n                const bDate = b.getTime();\n                if (aDate > bDate)\n                    return 1;\n                if (bDate > aDate)\n                    return -1;\n                return 0;\n            });\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            domain = [min, max];\n            // Use compare function to sort numbers numerically\n            this.xSet = [...values].sort((a, b) => a - b);\n        }\n        else {\n            domain = values;\n            this.xSet = values;\n        }\n        return domain;\n    }\n    getYDomain() {\n        const domain = [];\n        for (const results of this.results) {\n            for (const d of results.series) {\n                if (domain.indexOf(d.value) < 0) {\n                    domain.push(d.value);\n                }\n                if (d.min !== undefined) {\n                    this.hasRange = true;\n                    if (domain.indexOf(d.min) < 0) {\n                        domain.push(d.min);\n                    }\n                }\n                if (d.max !== undefined) {\n                    this.hasRange = true;\n                    if (domain.indexOf(d.max) < 0) {\n                        domain.push(d.max);\n                    }\n                }\n            }\n        }\n        const values = [...domain];\n        if (!this.autoScale) {\n            values.push(0);\n        }\n        const min = this.yScaleMin ? this.yScaleMin : Math.min(...values);\n        const max = this.yScaleMax ? this.yScaleMax : Math.max(...values);\n        return [min, max];\n    }\n    getSeriesDomain() {\n        return this.results.map(d => d.name);\n    }\n    getXScale(domain, width) {\n        let scale;\n        if (this.scaleType === ScaleType.Time) {\n            scale = scaleTime().range([0, width]).domain(domain);\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            scale = scaleLinear().range([0, width]).domain(domain);\n            if (this.roundDomains) {\n                scale = scale.nice();\n            }\n        }\n        else if (this.scaleType === ScaleType.Ordinal) {\n            scale = scalePoint().range([0, width]).padding(0.1).domain(domain);\n        }\n        return scale;\n    }\n    getYScale(domain, height) {\n        const scale = scaleLinear().range([height, 0]).domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    updateDomain(domain) {\n        this.filteredDomain = domain;\n        this.xDomain = this.filteredDomain;\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    }\n    updateHoveredVertical(item) {\n        this.hoveredVertical = item.value;\n        this.deactivateAll();\n    }\n    hideCircles() {\n        this.hoveredVertical = null;\n        this.deactivateAll();\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    trackBy(index, item) {\n        return `${item.name}`;\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.seriesDomain;\n        }\n        else {\n            domain = this.yDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.seriesDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.yDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(item) {\n        this.deactivateAll();\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n    deactivateAll() {\n        this.activeEntries = [...this.activeEntries];\n        for (const entry of this.activeEntries) {\n            this.deactivate.emit({ value: entry, entries: [] });\n        }\n        this.activeEntries = [];\n    }\n}\nLineChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LineChartComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nLineChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: LineChartComponent, selector: \"ngx-charts-line-chart\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", autoScale: \"autoScale\", timeline: \"timeline\", gradient: \"gradient\", showGridLines: \"showGridLines\", curve: \"curve\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", rangeFillOpacity: \"rangeFillOpacity\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", roundDomains: \"roundDomains\", tooltipDisabled: \"tooltipDisabled\", showRefLines: \"showRefLines\", referenceLines: \"referenceLines\", showRefLabels: \"showRefLabels\", xScaleMin: \"xScaleMin\", xScaleMax: \"xScaleMax\", yScaleMin: \"yScaleMin\", yScaleMax: \"yScaleMax\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, host: { listeners: { \"mouseleave\": \"hideCircles()\" } }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }, { propertyName: \"seriesTooltipTemplate\", first: true, predicate: [\"seriesTooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"line-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [referenceLines]=\"referenceLines\"\n          [showRefLines]=\"showRefLines\"\n          [showRefLabels]=\"showRefLabels\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngIf=\"!isSSR\">\n            <svg:g *ngFor=\"let series of results; trackBy: trackBy\" [@animationState]=\"'active'\">\n              <svg:g\n                ngx-charts-line-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [data]=\"series\"\n                [activeEntries]=\"activeEntries\"\n                [scaleType]=\"scaleType\"\n                [curve]=\"curve\"\n                [rangeFillOpacity]=\"rangeFillOpacity\"\n                [hasRange]=\"hasRange\"\n                [animations]=\"animations\"\n              />\n            </svg:g>\n          </svg:g>\n          <svg:g *ngIf=\"isSSR\">\n            <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n              <svg:g\n                ngx-charts-line-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [data]=\"series\"\n                [activeEntries]=\"activeEntries\"\n                [scaleType]=\"scaleType\"\n                [curve]=\"curve\"\n                [rangeFillOpacity]=\"rangeFillOpacity\"\n                [hasRange]=\"hasRange\"\n                [animations]=\"animations\"\n              />\n            </svg:g>\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results\">\n              <svg:g\n                ngx-charts-circle-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [activeEntries]=\"activeEntries\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [scaleType]=\"scaleType\"\n        [legend]=\"legend\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-line-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [curve]=\"curve\"\n            [hasRange]=\"hasRange\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: LineSeriesComponent, selector: \"g[ngx-charts-line-series]\", inputs: [\"data\", \"xScale\", \"yScale\", \"colors\", \"scaleType\", \"curve\", \"activeEntries\", \"rangeFillOpacity\", \"hasRange\", \"animations\"] }, { type: TooltipArea, selector: \"g[ngx-charts-tooltip-area]\", inputs: [\"dims\", \"xSet\", \"xScale\", \"yScale\", \"results\", \"colors\", \"showPercentage\", \"tooltipDisabled\", \"tooltipTemplate\"], outputs: [\"hover\"] }, { type: CircleSeriesComponent, selector: \"g[ngx-charts-circle-series]\", inputs: [\"data\", \"type\", \"xScale\", \"yScale\", \"colors\", \"scaleType\", \"visibleValue\", \"activeEntries\", \"tooltipDisabled\", \"tooltipTemplate\"], outputs: [\"select\", \"activate\", \"deactivate\"] }, { type: Timeline, selector: \"g[ngx-charts-timeline]\", inputs: [\"view\", \"results\", \"scheme\", \"customColors\", \"legend\", \"autoScale\", \"scaleType\", \"height\"], outputs: [\"select\", \"onDomainChange\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1\n                }),\n                animate(500, style({\n                    opacity: 0\n                }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LineChartComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-line-chart', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"line-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [referenceLines]=\"referenceLines\"\n          [showRefLines]=\"showRefLines\"\n          [showRefLabels]=\"showRefLabels\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngIf=\"!isSSR\">\n            <svg:g *ngFor=\"let series of results; trackBy: trackBy\" [@animationState]=\"'active'\">\n              <svg:g\n                ngx-charts-line-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [data]=\"series\"\n                [activeEntries]=\"activeEntries\"\n                [scaleType]=\"scaleType\"\n                [curve]=\"curve\"\n                [rangeFillOpacity]=\"rangeFillOpacity\"\n                [hasRange]=\"hasRange\"\n                [animations]=\"animations\"\n              />\n            </svg:g>\n          </svg:g>\n          <svg:g *ngIf=\"isSSR\">\n            <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n              <svg:g\n                ngx-charts-line-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [data]=\"series\"\n                [activeEntries]=\"activeEntries\"\n                [scaleType]=\"scaleType\"\n                [curve]=\"curve\"\n                [rangeFillOpacity]=\"rangeFillOpacity\"\n                [hasRange]=\"hasRange\"\n                [animations]=\"animations\"\n              />\n            </svg:g>\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results\">\n              <svg:g\n                ngx-charts-circle-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [activeEntries]=\"activeEntries\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [scaleType]=\"scaleType\"\n        [legend]=\"legend\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-line-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [curve]=\"curve\"\n            [hasRange]=\"hasRange\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1\n                                }),\n                                animate(500, style({\n                                    opacity: 0\n                                }))\n                            ])\n                        ])\n                    ], styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], autoScale: [{\n                type: Input\n            }], timeline: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], curve: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], rangeFillOpacity: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], showRefLines: [{\n                type: Input\n            }], referenceLines: [{\n                type: Input\n            }], showRefLabels: [{\n                type: Input\n            }], xScaleMin: [{\n                type: Input\n            }], xScaleMax: [{\n                type: Input\n            }], yScaleMin: [{\n                type: Input\n            }], yScaleMax: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }], seriesTooltipTemplate: [{\n                type: ContentChild,\n                args: ['seriesTooltipTemplate']\n            }], hideCircles: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nclass LineChartModule {\n}\nLineChartModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LineChartModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nLineChartModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LineChartModule, declarations: [LineComponent, LineChartComponent, LineSeriesComponent], imports: [ChartCommonModule], exports: [LineComponent, LineChartComponent, LineSeriesComponent] });\nLineChartModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LineChartModule, imports: [[ChartCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LineChartModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule],\n                    declarations: [LineComponent, LineChartComponent, LineSeriesComponent],\n                    exports: [LineComponent, LineChartComponent, LineSeriesComponent]\n                }]\n        }] });\n\nclass PieLabelComponent {\n    constructor(platformId) {\n        this.platformId = platformId;\n        this.animations = true;\n        this.labelTrim = true;\n        this.labelTrimSize = 10;\n        this.trimLabel = trimLabel;\n    }\n    ngOnChanges(changes) {\n        this.setTransforms();\n        this.update();\n    }\n    setTransforms() {\n        if (isPlatformServer(this.platformId)) {\n            this.styleTransform = `translate3d(${this.textX}px,${this.textY}px, 0)`;\n            this.attrTransform = `translate(${this.textX},${this.textY})`;\n            this.textTransition = !this.animations ? null : 'transform 0.75s';\n        }\n        else {\n            const isIE = /(edge|msie|trident)/i.test(navigator.userAgent);\n            this.styleTransform = isIE ? null : `translate3d(${this.textX}px,${this.textY}px, 0)`;\n            this.attrTransform = !isIE ? null : `translate(${this.textX},${this.textY})`;\n            this.textTransition = isIE || !this.animations ? null : 'transform 0.75s';\n        }\n    }\n    update() {\n        let startRadius = this.radius;\n        if (this.explodeSlices) {\n            startRadius = (this.radius * this.value) / this.max;\n        }\n        const innerArc = arc().innerRadius(startRadius).outerRadius(startRadius);\n        // Calculate innerPos then scale outer position to match label position\n        const innerPos = innerArc.centroid(this.data);\n        let scale = this.data.pos[1] / innerPos[1];\n        if (this.data.pos[1] === 0 || innerPos[1] === 0) {\n            scale = 1;\n        }\n        const outerPos = [scale * innerPos[0], scale * innerPos[1]];\n        this.line = `M${innerPos}L${outerPos}L${this.data.pos}`;\n    }\n    get textX() {\n        return this.data.pos[0];\n    }\n    get textY() {\n        return this.data.pos[1];\n    }\n    textAnchor() {\n        return this.midAngle(this.data) < Math.PI ? TextAnchor.Start : TextAnchor.End;\n    }\n    midAngle(d) {\n        return d.startAngle + (d.endAngle - d.startAngle) / 2;\n    }\n}\nPieLabelComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieLabelComponent, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nPieLabelComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: PieLabelComponent, selector: \"g[ngx-charts-pie-label]\", inputs: { data: \"data\", radius: \"radius\", label: \"label\", color: \"color\", max: \"max\", value: \"value\", explodeSlices: \"explodeSlices\", animations: \"animations\", labelTrim: \"labelTrim\", labelTrimSize: \"labelTrimSize\" }, usesOnChanges: true, ngImport: i0, template: `\n    <title>{{ label }}</title>\n    <svg:g [attr.transform]=\"attrTransform\" [style.transform]=\"styleTransform\" [style.transition]=\"textTransition\">\n      <svg:text\n        class=\"pie-label\"\n        [class.animation]=\"animations\"\n        dy=\".35em\"\n        [style.textAnchor]=\"textAnchor()\"\n        [style.shapeRendering]=\"'crispEdges'\"\n      >\n        {{ labelTrim ? trimLabel(label, labelTrimSize) : label }}\n      </svg:text>\n    </svg:g>\n    <svg:path\n      [attr.d]=\"line\"\n      [attr.stroke]=\"color\"\n      fill=\"none\"\n      class=\"pie-label-line line\"\n      [class.animation]=\"animations\"\n    ></svg:path>\n  `, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieLabelComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-pie-label]',\n                    template: `\n    <title>{{ label }}</title>\n    <svg:g [attr.transform]=\"attrTransform\" [style.transform]=\"styleTransform\" [style.transition]=\"textTransition\">\n      <svg:text\n        class=\"pie-label\"\n        [class.animation]=\"animations\"\n        dy=\".35em\"\n        [style.textAnchor]=\"textAnchor()\"\n        [style.shapeRendering]=\"'crispEdges'\"\n      >\n        {{ labelTrim ? trimLabel(label, labelTrimSize) : label }}\n      </svg:text>\n    </svg:g>\n    <svg:path\n      [attr.d]=\"line\"\n      [attr.stroke]=\"color\"\n      fill=\"none\"\n      class=\"pie-label-line line\"\n      [class.animation]=\"animations\"\n    ></svg:path>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { data: [{\n                type: Input\n            }], radius: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], explodeSlices: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], labelTrim: [{\n                type: Input\n            }], labelTrimSize: [{\n                type: Input\n            }] } });\n\nclass PolarSeriesComponent {\n    constructor() {\n        this.tooltipDisabled = false;\n        this.gradient = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.circleRadius = 3;\n        this.barOrientation = BarOrientation;\n        this.placementTypes = PlacementTypes;\n        this.styleTypes = StyleTypes;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.updateGradients();\n        const line = this.getLineGenerator();\n        const data = this.sortData(this.data.series);\n        const seriesName = this.data.name;\n        const linearScaleType = this.colors.scaleType === ScaleType.Linear;\n        const min = this.yScale.domain()[0];\n        this.seriesColor = this.colors.getColor(linearScaleType ? min : seriesName);\n        this.path = line(data) || '';\n        this.circles = data.map(d => {\n            const a = this.getAngle(d);\n            const r = this.getRadius(d);\n            const value = d.value;\n            const color = this.colors.getColor(linearScaleType ? Math.abs(value) : seriesName);\n            const cData = Object.assign({}, d, {\n                series: seriesName,\n                value,\n                name: d.name\n            });\n            return {\n                data: cData,\n                cx: r * Math.sin(a),\n                cy: -r * Math.cos(a),\n                value,\n                color,\n                label: d.name\n            };\n        });\n        this.active = this.isActive(this.data);\n        this.inactive = this.isInactive(this.data);\n        this.tooltipText = this.tooltipText || (c => this.defaultTooltipText(c));\n    }\n    getAngle(d) {\n        const label = d.name;\n        if (this.scaleType === ScaleType.Time) {\n            return this.xScale(label);\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            return this.xScale(Number(label));\n        }\n        return this.xScale(label);\n    }\n    getRadius(d) {\n        return this.yScale(d.value);\n    }\n    getLineGenerator() {\n        return lineRadial()\n            .angle(d => this.getAngle(d))\n            .radius(d => this.getRadius(d))\n            .curve(this.curve);\n    }\n    sortData(data) {\n        if (this.scaleType === ScaleType.Linear) {\n            return sortLinear(data, 'name');\n        }\n        else if (this.scaleType === ScaleType.Time) {\n            return sortByTime(data, 'name');\n        }\n        return sortByDomain(data, 'name', 'asc', this.xScale.domain());\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.name === d.name;\n        });\n        return item !== undefined;\n    }\n    isInactive(entry) {\n        if (!this.activeEntries || this.activeEntries.length === 0)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.name === d.name;\n        });\n        return item === undefined;\n    }\n    defaultTooltipText({ label, value }) {\n        return `\n      <span class=\"tooltip-label\">${escapeLabel(this.data.name)} • ${escapeLabel(label)}</span>\n      <span class=\"tooltip-val\">${value.toLocaleString()}</span>\n    `;\n    }\n    updateGradients() {\n        this.hasGradient = this.gradient || this.colors.scaleType === ScaleType.Linear;\n        if (!this.hasGradient) {\n            return;\n        }\n        this.gradientId = 'grad' + id().toString();\n        this.gradientUrl = `url(#${this.gradientId})`;\n        if (this.colors.scaleType === ScaleType.Linear) {\n            const values = this.data.series.map(d => d.value);\n            const max = Math.max(...values);\n            const min = Math.min(...values);\n            this.gradientStops = this.colors.getLinearGradientStops(max, min);\n        }\n        else {\n            this.gradientStops = undefined;\n        }\n    }\n}\nPolarSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PolarSeriesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nPolarSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: PolarSeriesComponent, selector: \"g[ngx-charts-polar-series]\", inputs: { name: \"name\", data: \"data\", xScale: \"xScale\", yScale: \"yScale\", colors: \"colors\", scaleType: \"scaleType\", curve: \"curve\", activeEntries: \"activeEntries\", rangeFillOpacity: \"rangeFillOpacity\", tooltipDisabled: \"tooltipDisabled\", tooltipText: \"tooltipText\", gradient: \"gradient\", tooltipTemplate: \"tooltipTemplate\", animations: \"animations\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g class=\"polar-charts-series\">\n      <defs>\n        <svg:g\n          ngx-charts-svg-radial-gradient\n          *ngIf=\"hasGradient\"\n          [color]=\"seriesColor\"\n          [name]=\"gradientId\"\n          [startOpacity]=\"0.25\"\n          [endOpacity]=\"1\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:g\n        ngx-charts-line\n        class=\"polar-series-path\"\n        [path]=\"path\"\n        [stroke]=\"hasGradient ? gradientUrl : seriesColor\"\n        [class.active]=\"active\"\n        [class.inactive]=\"inactive\"\n        [attr.fill-opacity]=\"rangeFillOpacity\"\n        [fill]=\"hasGradient ? gradientUrl : seriesColor\"\n        [animations]=\"animations\"\n      />\n      <svg:g\n        ngx-charts-circle\n        *ngFor=\"let circle of circles\"\n        class=\"circle\"\n        [cx]=\"circle.cx\"\n        [cy]=\"circle.cy\"\n        [r]=\"circleRadius\"\n        [fill]=\"circle.color\"\n        [style.opacity]=\"inactive ? 0.2 : 1\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Top\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(circle)\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"circle.data\"\n        (select)=\"select.emit(circle.data)\"\n        (activate)=\"activate.emit({ name: circle.data.series })\"\n        (deactivate)=\"deactivate.emit({ name: circle.data.series })\"\n      ></svg:g>\n    </svg:g>\n  `, isInline: true, components: [{ type: SvgRadialGradientComponent, selector: \"g[ngx-charts-svg-radial-gradient]\", inputs: [\"color\", \"name\", \"startOpacity\", \"endOpacity\", \"cx\", \"cy\", \"stops\"] }, { type: LineComponent, selector: \"g[ngx-charts-line]\", inputs: [\"path\", \"stroke\", \"data\", \"fill\", \"animations\"] }, { type: CircleComponent, selector: \"g[ngx-charts-circle]\", inputs: [\"cx\", \"cy\", \"r\", \"fill\", \"stroke\", \"data\", \"classNames\", \"circleOpacity\", \"pointerEvents\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PolarSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-polar-series]',\n                    template: `\n    <svg:g class=\"polar-charts-series\">\n      <defs>\n        <svg:g\n          ngx-charts-svg-radial-gradient\n          *ngIf=\"hasGradient\"\n          [color]=\"seriesColor\"\n          [name]=\"gradientId\"\n          [startOpacity]=\"0.25\"\n          [endOpacity]=\"1\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:g\n        ngx-charts-line\n        class=\"polar-series-path\"\n        [path]=\"path\"\n        [stroke]=\"hasGradient ? gradientUrl : seriesColor\"\n        [class.active]=\"active\"\n        [class.inactive]=\"inactive\"\n        [attr.fill-opacity]=\"rangeFillOpacity\"\n        [fill]=\"hasGradient ? gradientUrl : seriesColor\"\n        [animations]=\"animations\"\n      />\n      <svg:g\n        ngx-charts-circle\n        *ngFor=\"let circle of circles\"\n        class=\"circle\"\n        [cx]=\"circle.cx\"\n        [cy]=\"circle.cy\"\n        [r]=\"circleRadius\"\n        [fill]=\"circle.color\"\n        [style.opacity]=\"inactive ? 0.2 : 1\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Top\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(circle)\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"circle.data\"\n        (select)=\"select.emit(circle.data)\"\n        (activate)=\"activate.emit({ name: circle.data.series })\"\n        (deactivate)=\"deactivate.emit({ name: circle.data.series })\"\n      ></svg:g>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { name: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], scaleType: [{\n                type: Input\n            }], curve: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], rangeFillOpacity: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipText: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }] } });\n\nconst twoPI = 2 * Math.PI;\nclass PolarChartComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.showGridLines = true;\n        this.curve = curveCardinalClosed;\n        this.activeEntries = [];\n        this.rangeFillOpacity = 0.15;\n        this.trimYAxisTicks = true;\n        this.maxYAxisTickLength = 16;\n        this.roundDomains = false;\n        this.tooltipDisabled = false;\n        this.showSeriesOnHover = true;\n        this.gradient = false;\n        this.yAxisMinScale = 0;\n        this.labelTrim = true;\n        this.labelTrimSize = 10;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        // series: any; // ???\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.orientation = Orientation;\n        this.isSSR = false;\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    update() {\n        super.update();\n        this.setDims();\n        this.setScales();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.setTicks();\n    }\n    setDims() {\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        const halfWidth = Math.floor(this.dims.width / 2);\n        const halfHeight = Math.floor(this.dims.height / 2);\n        const outerRadius = (this.outerRadius = Math.min(halfHeight / 1.5, halfWidth / 1.5));\n        const yOffset = Math.max(0, halfHeight - outerRadius);\n        this.yAxisDims = {\n            ...this.dims,\n            width: halfWidth\n        };\n        this.transform = `translate(${this.dims.xOffset}, ${this.margin[0]})`;\n        this.transformYAxis = `translate(0, ${yOffset})`;\n        this.labelOffset = this.dims.height + 40;\n        this.transformPlot = `translate(${halfWidth}, ${halfHeight})`;\n    }\n    setScales() {\n        const xValues = this.getXValues();\n        this.scaleType = getScaleType(xValues);\n        this.xDomain = this.filteredDomain || this.getXDomain(xValues);\n        this.yDomain = this.getYDomain();\n        this.seriesDomain = this.getSeriesDomain();\n        this.xScale = this.getXScale(this.xDomain, twoPI);\n        this.yScale = this.getYScale(this.yDomain, this.outerRadius);\n        this.yAxisScale = this.getYScale(this.yDomain.reverse(), this.outerRadius);\n    }\n    setTicks() {\n        let tickFormat;\n        if (this.xAxisTickFormatting) {\n            tickFormat = this.xAxisTickFormatting;\n        }\n        else if (this.xScale.tickFormat) {\n            tickFormat = this.xScale.tickFormat.apply(this.xScale, [5]);\n        }\n        else {\n            tickFormat = d => {\n                if (isDate(d)) {\n                    return d.toLocaleDateString();\n                }\n                return d.toLocaleString();\n            };\n        }\n        const outerRadius = this.outerRadius;\n        const s = 1.1;\n        this.thetaTicks = this.xDomain.map(d => {\n            const startAngle = this.xScale(d);\n            const dd = s * outerRadius * (startAngle > Math.PI ? -1 : 1);\n            const label = tickFormat(d);\n            const startPos = [outerRadius * Math.sin(startAngle), -outerRadius * Math.cos(startAngle)];\n            const pos = [dd, s * startPos[1]];\n            return {\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle: startAngle,\n                value: outerRadius,\n                label,\n                startPos,\n                pos\n            };\n        });\n        const minDistance = 10;\n        /* from pie chart, abstract out -*/\n        for (let i = 0; i < this.thetaTicks.length - 1; i++) {\n            const a = this.thetaTicks[i];\n            for (let j = i + 1; j < this.thetaTicks.length; j++) {\n                const b = this.thetaTicks[j];\n                // if they're on the same side\n                if (b.pos[0] * a.pos[0] > 0) {\n                    // if they're overlapping\n                    const o = minDistance - Math.abs(b.pos[1] - a.pos[1]);\n                    if (o > 0) {\n                        // push the second up or down\n                        b.pos[1] += Math.sign(b.pos[0]) * o;\n                    }\n                }\n            }\n        }\n        this.radiusTicks = this.yAxisScale.ticks(Math.floor(this.dims.height / 50)).map(d => this.yScale(d));\n    }\n    getXValues() {\n        const values = [];\n        for (const results of this.results) {\n            for (const d of results.series) {\n                if (!values.includes(d.name)) {\n                    values.push(d.name);\n                }\n            }\n        }\n        return values;\n    }\n    getXDomain(values = this.getXValues()) {\n        if (this.scaleType === ScaleType.Time) {\n            const min = Math.min(...values);\n            const max = Math.max(...values);\n            return [min, max];\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            values = values.map(v => Number(v));\n            const min = Math.min(...values);\n            const max = Math.max(...values);\n            return [min, max];\n        }\n        return values;\n    }\n    getYValues() {\n        const domain = [];\n        for (const results of this.results) {\n            for (const d of results.series) {\n                if (domain.indexOf(d.value) < 0) {\n                    domain.push(d.value);\n                }\n                if (d.min !== undefined) {\n                    if (domain.indexOf(d.min) < 0) {\n                        domain.push(d.min);\n                    }\n                }\n                if (d.max !== undefined) {\n                    if (domain.indexOf(d.max) < 0) {\n                        domain.push(d.max);\n                    }\n                }\n            }\n        }\n        return domain;\n    }\n    getYDomain(domain = this.getYValues()) {\n        let min = Math.min(...domain);\n        const max = Math.max(this.yAxisMinScale, ...domain);\n        min = Math.max(0, min);\n        if (!this.autoScale) {\n            min = Math.min(0, min);\n        }\n        return [min, max];\n    }\n    getSeriesDomain() {\n        return this.results.map(d => d.name);\n    }\n    getXScale(domain, width) {\n        switch (this.scaleType) {\n            case ScaleType.Time:\n                return scaleTime().range([0, width]).domain(domain);\n            case ScaleType.Linear: {\n                const scale = scaleLinear().range([0, width]).domain(domain);\n                return this.roundDomains ? scale.nice() : scale;\n            }\n            default:\n                return scalePoint()\n                    .range([0, width - twoPI / domain.length])\n                    .padding(0)\n                    .domain(domain);\n        }\n    }\n    getYScale(domain, height) {\n        const scale = scaleLinear().range([0, height]).domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    onClick(data, series) {\n        if (series) {\n            data.series = series.name;\n        }\n        this.select.emit(data);\n    }\n    setColors() {\n        const domain = this.schemeType === ScaleType.Ordinal ? this.seriesDomain : this.yDomain.reverse();\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        if (this.schemeType === ScaleType.Ordinal) {\n            return {\n                scaleType: this.schemeType,\n                colors: this.colors,\n                domain: this.seriesDomain,\n                title: this.legendTitle,\n                position: this.legendPosition\n            };\n        }\n        return {\n            scaleType: this.schemeType,\n            colors: this.colors.scale,\n            domain: this.yDomain,\n            title: undefined,\n            position: this.legendPosition\n        };\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = this.showSeriesOnHover ? [item, ...this.activeEntries] : this.activeEntries;\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n    deactivateAll() {\n        this.activeEntries = [...this.activeEntries];\n        for (const entry of this.activeEntries) {\n            this.deactivate.emit({ value: entry, entries: [] });\n        }\n        this.activeEntries = [];\n    }\n    trackBy(index, item) {\n        return `${item.name}`;\n    }\n}\nPolarChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PolarChartComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nPolarChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: PolarChartComponent, selector: \"ngx-charts-polar-chart\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", autoScale: \"autoScale\", showGridLines: \"showGridLines\", curve: \"curve\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", rangeFillOpacity: \"rangeFillOpacity\", trimYAxisTicks: \"trimYAxisTicks\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", roundDomains: \"roundDomains\", tooltipDisabled: \"tooltipDisabled\", showSeriesOnHover: \"showSeriesOnHover\", gradient: \"gradient\", yAxisMinScale: \"yAxisMinScale\", labelTrim: \"labelTrim\", labelTrimSize: \"labelTrimSize\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:g class=\"polar-chart chart\" [attr.transform]=\"transform\">\n        <svg:g [attr.transform]=\"transformPlot\">\n          <svg:circle class=\"polar-chart-background\" cx=\"0\" cy=\"0\" [attr.r]=\"this.outerRadius\" />\n          <svg:g *ngIf=\"showGridLines\">\n            <svg:circle\n              *ngFor=\"let r of radiusTicks\"\n              class=\"gridline-path radial-gridline-path\"\n              cx=\"0\"\n              cy=\"0\"\n              [attr.r]=\"r\"\n            />\n          </svg:g>\n          <svg:g *ngIf=\"xAxis\">\n            <svg:g\n              ngx-charts-pie-label\n              *ngFor=\"let tick of thetaTicks\"\n              [data]=\"tick\"\n              [radius]=\"outerRadius\"\n              [label]=\"tick.label\"\n              [max]=\"outerRadius\"\n              [value]=\"showGridLines ? 1 : outerRadius\"\n              [explodeSlices]=\"true\"\n              [animations]=\"animations\"\n              [labelTrim]=\"labelTrim\"\n              [labelTrimSize]=\"labelTrimSize\"\n            ></svg:g>\n          </svg:g>\n        </svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          [attr.transform]=\"transformYAxis\"\n          *ngIf=\"yAxis\"\n          [yScale]=\"yAxisScale\"\n          [dims]=\"yAxisDims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-axis-label\n          *ngIf=\"xAxis && showXAxisLabel\"\n          [label]=\"xAxisLabel\"\n          [offset]=\"labelOffset\"\n          [orient]=\"orientation.Bottom\"\n          [height]=\"dims.height\"\n          [width]=\"dims.width\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\" [attr.transform]=\"transformPlot\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\" [@animationState]=\"'active'\">\n            <svg:g\n              ngx-charts-polar-series\n              [gradient]=\"gradient\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [scaleType]=\"scaleType\"\n              [curve]=\"curve\"\n              [rangeFillOpacity]=\"rangeFillOpacity\"\n              [animations]=\"animations\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\" [attr.transform]=\"transformPlot\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-polar-series\n              [gradient]=\"gradient\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [scaleType]=\"scaleType\"\n              [curve]=\"curve\"\n              [rangeFillOpacity]=\"rangeFillOpacity\"\n              [animations]=\"animations\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".pie-label{font-size:11px}.pie-label.animation{-webkit-animation:.75s ease-in fadeIn;animation:.75s ease-in fadeIn}@-webkit-keyframes fadeIn{0%{opacity:0}to{opacity:1}}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}.pie-label-line{stroke-dasharray:100%}.pie-label-line.animation{-webkit-animation:3s linear drawOut;animation:3s linear drawOut;transition:d .75s}@-webkit-keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}@keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}\\n\", \".polar-chart .polar-chart-background{fill:none}.polar-chart .radial-gridline-path{stroke-dasharray:10 10;fill:none}.polar-chart .pie-label-line{stroke:#2f3646}.polar-charts-series .polar-series-area,.polar-series-path{pointer-events:none}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: PieLabelComponent, selector: \"g[ngx-charts-pie-label]\", inputs: [\"data\", \"radius\", \"label\", \"color\", \"max\", \"value\", \"explodeSlices\", \"animations\", \"labelTrim\", \"labelTrimSize\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\"], outputs: [\"dimensionsChanged\"] }, { type: AxisLabelComponent, selector: \"g[ngx-charts-axis-label]\", inputs: [\"orient\", \"label\", \"offset\", \"width\", \"height\"] }, { type: PolarSeriesComponent, selector: \"g[ngx-charts-polar-series]\", inputs: [\"name\", \"data\", \"xScale\", \"yScale\", \"colors\", \"scaleType\", \"curve\", \"activeEntries\", \"rangeFillOpacity\", \"tooltipDisabled\", \"tooltipText\", \"gradient\", \"tooltipTemplate\", \"animations\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1\n                }),\n                animate(500, style({\n                    opacity: 0\n                }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PolarChartComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-polar-chart', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:g class=\"polar-chart chart\" [attr.transform]=\"transform\">\n        <svg:g [attr.transform]=\"transformPlot\">\n          <svg:circle class=\"polar-chart-background\" cx=\"0\" cy=\"0\" [attr.r]=\"this.outerRadius\" />\n          <svg:g *ngIf=\"showGridLines\">\n            <svg:circle\n              *ngFor=\"let r of radiusTicks\"\n              class=\"gridline-path radial-gridline-path\"\n              cx=\"0\"\n              cy=\"0\"\n              [attr.r]=\"r\"\n            />\n          </svg:g>\n          <svg:g *ngIf=\"xAxis\">\n            <svg:g\n              ngx-charts-pie-label\n              *ngFor=\"let tick of thetaTicks\"\n              [data]=\"tick\"\n              [radius]=\"outerRadius\"\n              [label]=\"tick.label\"\n              [max]=\"outerRadius\"\n              [value]=\"showGridLines ? 1 : outerRadius\"\n              [explodeSlices]=\"true\"\n              [animations]=\"animations\"\n              [labelTrim]=\"labelTrim\"\n              [labelTrimSize]=\"labelTrimSize\"\n            ></svg:g>\n          </svg:g>\n        </svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          [attr.transform]=\"transformYAxis\"\n          *ngIf=\"yAxis\"\n          [yScale]=\"yAxisScale\"\n          [dims]=\"yAxisDims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-axis-label\n          *ngIf=\"xAxis && showXAxisLabel\"\n          [label]=\"xAxisLabel\"\n          [offset]=\"labelOffset\"\n          [orient]=\"orientation.Bottom\"\n          [height]=\"dims.height\"\n          [width]=\"dims.width\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\" [attr.transform]=\"transformPlot\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\" [@animationState]=\"'active'\">\n            <svg:g\n              ngx-charts-polar-series\n              [gradient]=\"gradient\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [scaleType]=\"scaleType\"\n              [curve]=\"curve\"\n              [rangeFillOpacity]=\"rangeFillOpacity\"\n              [animations]=\"animations\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\" [attr.transform]=\"transformPlot\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-polar-series\n              [gradient]=\"gradient\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [scaleType]=\"scaleType\"\n              [curve]=\"curve\"\n              [rangeFillOpacity]=\"rangeFillOpacity\"\n              [animations]=\"animations\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1\n                                }),\n                                animate(500, style({\n                                    opacity: 0\n                                }))\n                            ])\n                        ])\n                    ], styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".pie-label{font-size:11px}.pie-label.animation{-webkit-animation:.75s ease-in fadeIn;animation:.75s ease-in fadeIn}@-webkit-keyframes fadeIn{0%{opacity:0}to{opacity:1}}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}.pie-label-line{stroke-dasharray:100%}.pie-label-line.animation{-webkit-animation:3s linear drawOut;animation:3s linear drawOut;transition:d .75s}@-webkit-keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}@keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}\\n\", \".polar-chart .polar-chart-background{fill:none}.polar-chart .radial-gridline-path{stroke-dasharray:10 10;fill:none}.polar-chart .pie-label-line{stroke:#2f3646}.polar-charts-series .polar-series-area,.polar-series-path{pointer-events:none}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], autoScale: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], curve: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], rangeFillOpacity: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], showSeriesOnHover: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], yAxisMinScale: [{\n                type: Input\n            }], labelTrim: [{\n                type: Input\n            }], labelTrimSize: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass PieArcComponent {\n    constructor(element) {\n        this.startAngle = 0;\n        this.endAngle = Math.PI * 2;\n        this.cornerRadius = 0;\n        this.explodeSlices = false;\n        this.gradient = false;\n        this.animate = true;\n        this.pointerEvents = true;\n        this.isActive = false;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.dblclick = new EventEmitter();\n        this.barOrientation = BarOrientation;\n        this.initialized = false;\n        this.element = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    getGradient() {\n        return this.gradient ? this.gradientFill : this.fill;\n    }\n    getPointerEvents() {\n        return this.pointerEvents ? 'auto' : 'none';\n    }\n    update() {\n        const calc = this.calculateArc();\n        this.startOpacity = 0.5;\n        this.radialGradientId = 'linearGrad' + id().toString();\n        this.gradientFill = `url(#${this.radialGradientId})`;\n        if (this.animate) {\n            if (this.initialized) {\n                this.updateAnimation();\n            }\n            else {\n                this.loadAnimation();\n                this.initialized = true;\n            }\n        }\n        else {\n            this.path = calc.startAngle(this.startAngle).endAngle(this.endAngle)();\n        }\n    }\n    calculateArc() {\n        let outerRadius = this.outerRadius;\n        if (this.explodeSlices && this.innerRadius === 0) {\n            outerRadius = (this.outerRadius * this.value) / this.max;\n        }\n        return arc().innerRadius(this.innerRadius).outerRadius(outerRadius).cornerRadius(this.cornerRadius);\n    }\n    loadAnimation() {\n        const node = select(this.element)\n            .selectAll('.arc')\n            .data([{ startAngle: this.startAngle, endAngle: this.endAngle }]);\n        const calc = this.calculateArc();\n        node\n            .transition()\n            .attrTween('d', function (d) {\n            this._current = this._current || d;\n            const copyOfD = Object.assign({}, d);\n            copyOfD.endAngle = copyOfD.startAngle;\n            const interpolater = interpolate(copyOfD, copyOfD);\n            this._current = interpolater(0);\n            return function (t) {\n                return calc(interpolater(t));\n            };\n        })\n            .transition()\n            .duration(750)\n            .attrTween('d', function (d) {\n            this._current = this._current || d;\n            const interpolater = interpolate(this._current, d);\n            this._current = interpolater(0);\n            return function (t) {\n                return calc(interpolater(t));\n            };\n        });\n    }\n    updateAnimation() {\n        const node = select(this.element)\n            .selectAll('.arc')\n            .data([{ startAngle: this.startAngle, endAngle: this.endAngle }]);\n        const calc = this.calculateArc();\n        node\n            .transition()\n            .duration(750)\n            .attrTween('d', function (d) {\n            this._current = this._current || d;\n            const interpolater = interpolate(this._current, d);\n            this._current = interpolater(0);\n            return function (t) {\n                return calc(interpolater(t));\n            };\n        });\n    }\n    onClick() {\n        clearTimeout(this._timeout);\n        this._timeout = setTimeout(() => this.select.emit(this.data), 200);\n    }\n    onDblClick(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        clearTimeout(this._timeout);\n        this.dblclick.emit({\n            data: this.data,\n            nativeEvent: event\n        });\n    }\n}\nPieArcComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieArcComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nPieArcComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: PieArcComponent, selector: \"g[ngx-charts-pie-arc]\", inputs: { fill: \"fill\", startAngle: \"startAngle\", endAngle: \"endAngle\", innerRadius: \"innerRadius\", outerRadius: \"outerRadius\", cornerRadius: \"cornerRadius\", value: \"value\", max: \"max\", data: \"data\", explodeSlices: \"explodeSlices\", gradient: \"gradient\", animate: \"animate\", pointerEvents: \"pointerEvents\", isActive: \"isActive\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\", dblclick: \"dblclick\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g class=\"arc-group\">\n      <svg:defs *ngIf=\"gradient\">\n        <svg:g ngx-charts-svg-radial-gradient [color]=\"fill\" [name]=\"radialGradientId\" [startOpacity]=\"startOpacity\" />\n      </svg:defs>\n      <svg:path\n        [attr.d]=\"path\"\n        class=\"arc\"\n        [class.active]=\"isActive\"\n        [attr.fill]=\"getGradient()\"\n        (click)=\"onClick()\"\n        (dblclick)=\"onDblClick($event)\"\n        (mouseenter)=\"activate.emit(data)\"\n        (mouseleave)=\"deactivate.emit(data)\"\n        [style.pointer-events]=\"getPointerEvents()\"\n      />\n    </svg:g>\n  `, isInline: true, components: [{ type: SvgRadialGradientComponent, selector: \"g[ngx-charts-svg-radial-gradient]\", inputs: [\"color\", \"name\", \"startOpacity\", \"endOpacity\", \"cx\", \"cy\", \"stops\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieArcComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-pie-arc]',\n                    template: `\n    <svg:g class=\"arc-group\">\n      <svg:defs *ngIf=\"gradient\">\n        <svg:g ngx-charts-svg-radial-gradient [color]=\"fill\" [name]=\"radialGradientId\" [startOpacity]=\"startOpacity\" />\n      </svg:defs>\n      <svg:path\n        [attr.d]=\"path\"\n        class=\"arc\"\n        [class.active]=\"isActive\"\n        [attr.fill]=\"getGradient()\"\n        (click)=\"onClick()\"\n        (dblclick)=\"onDblClick($event)\"\n        (mouseenter)=\"activate.emit(data)\"\n        (mouseleave)=\"deactivate.emit(data)\"\n        [style.pointer-events]=\"getPointerEvents()\"\n      />\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { fill: [{\n                type: Input\n            }], startAngle: [{\n                type: Input\n            }], endAngle: [{\n                type: Input\n            }], innerRadius: [{\n                type: Input\n            }], outerRadius: [{\n                type: Input\n            }], cornerRadius: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], explodeSlices: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], animate: [{\n                type: Input\n            }], pointerEvents: [{\n                type: Input\n            }], isActive: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], dblclick: [{\n                type: Output\n            }] } });\n\nclass PieSeriesComponent {\n    constructor() {\n        this.series = [];\n        this.innerRadius = 60;\n        this.outerRadius = 80;\n        this.trimLabels = true;\n        this.maxLabelLength = 10;\n        this.tooltipDisabled = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.dblclick = new EventEmitter();\n        this.placementTypes = PlacementTypes;\n        this.styleTypes = StyleTypes;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        const pieGenerator = pie()\n            .value(d => d.value)\n            .sort(null);\n        const arcData = pieGenerator(this.series);\n        this.max = max(arcData, d => {\n            return d.value;\n        });\n        this.data = this.calculateLabelPositions(arcData);\n        this.tooltipText = this.tooltipText || this.defaultTooltipText;\n    }\n    midAngle(d) {\n        return d.startAngle + (d.endAngle - d.startAngle) / 2;\n    }\n    outerArc() {\n        const factor = 1.5;\n        return arc()\n            .innerRadius(this.outerRadius * factor)\n            .outerRadius(this.outerRadius * factor);\n    }\n    calculateLabelPositions(pieData) {\n        const factor = 1.5;\n        const minDistance = 10;\n        const labelPositions = pieData;\n        labelPositions.forEach(d => {\n            d.pos = this.outerArc().centroid(d);\n            d.pos[0] = factor * this.outerRadius * (this.midAngle(d) < Math.PI ? 1 : -1);\n        });\n        for (let i = 0; i < labelPositions.length - 1; i++) {\n            const a = labelPositions[i];\n            if (!this.labelVisible(a)) {\n                continue;\n            }\n            for (let j = i + 1; j < labelPositions.length; j++) {\n                const b = labelPositions[j];\n                if (!this.labelVisible(b)) {\n                    continue;\n                }\n                // if they're on the same side\n                if (b.pos[0] * a.pos[0] > 0) {\n                    // if they're overlapping\n                    const o = minDistance - Math.abs(b.pos[1] - a.pos[1]);\n                    if (o > 0) {\n                        // push the second up or down\n                        b.pos[1] += Math.sign(b.pos[0]) * o;\n                    }\n                }\n            }\n        }\n        return labelPositions;\n    }\n    labelVisible(myArc) {\n        return this.showLabels && myArc.endAngle - myArc.startAngle > Math.PI / 30;\n    }\n    getTooltipTitle(a) {\n        return this.tooltipTemplate ? undefined : this.tooltipText(a);\n    }\n    labelText(myArc) {\n        if (this.labelFormatting) {\n            return this.labelFormatting(myArc.data.name);\n        }\n        return this.label(myArc);\n    }\n    label(myArc) {\n        return formatLabel(myArc.data.name);\n    }\n    defaultTooltipText(myArc) {\n        const label = this.label(myArc);\n        const val = formatLabel(myArc.data.value);\n        return `\n      <span class=\"tooltip-label\">${escapeLabel(label)}</span>\n      <span class=\"tooltip-val\">${val}</span>\n    `;\n    }\n    color(myArc) {\n        return this.colors.getColor(this.label(myArc));\n    }\n    trackBy(index, item) {\n        return item.data.name;\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.name === d.name && entry.series === d.series;\n        });\n        return item !== undefined;\n    }\n}\nPieSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieSeriesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nPieSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: PieSeriesComponent, selector: \"g[ngx-charts-pie-series]\", inputs: { colors: \"colors\", series: \"series\", dims: \"dims\", innerRadius: \"innerRadius\", outerRadius: \"outerRadius\", explodeSlices: \"explodeSlices\", showLabels: \"showLabels\", gradient: \"gradient\", activeEntries: \"activeEntries\", labelFormatting: \"labelFormatting\", trimLabels: \"trimLabels\", maxLabelLength: \"maxLabelLength\", tooltipText: \"tooltipText\", tooltipDisabled: \"tooltipDisabled\", tooltipTemplate: \"tooltipTemplate\", animations: \"animations\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\", dblclick: \"dblclick\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g *ngFor=\"let arc of data; trackBy: trackBy\">\n      <svg:g\n        ngx-charts-pie-label\n        *ngIf=\"labelVisible(arc)\"\n        [data]=\"arc\"\n        [radius]=\"outerRadius\"\n        [color]=\"color(arc)\"\n        [label]=\"labelText(arc)\"\n        [labelTrim]=\"trimLabels\"\n        [labelTrimSize]=\"maxLabelLength\"\n        [max]=\"max\"\n        [value]=\"arc.value\"\n        [explodeSlices]=\"explodeSlices\"\n        [animations]=\"animations\"\n      ></svg:g>\n      <svg:g\n        ngx-charts-pie-arc\n        [startAngle]=\"arc.startAngle\"\n        [endAngle]=\"arc.endAngle\"\n        [innerRadius]=\"innerRadius\"\n        [outerRadius]=\"outerRadius\"\n        [fill]=\"color(arc)\"\n        [value]=\"arc.data.value\"\n        [gradient]=\"gradient\"\n        [data]=\"arc.data\"\n        [max]=\"max\"\n        [explodeSlices]=\"explodeSlices\"\n        [isActive]=\"isActive(arc.data)\"\n        [animate]=\"animations\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n        (dblclick)=\"dblclick.emit($event)\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Top\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipTitle]=\"getTooltipTitle(arc)\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"arc.data\"\n      ></svg:g>\n    </svg:g>\n  `, isInline: true, components: [{ type: PieLabelComponent, selector: \"g[ngx-charts-pie-label]\", inputs: [\"data\", \"radius\", \"label\", \"color\", \"max\", \"value\", \"explodeSlices\", \"animations\", \"labelTrim\", \"labelTrimSize\"] }, { type: PieArcComponent, selector: \"g[ngx-charts-pie-arc]\", inputs: [\"fill\", \"startAngle\", \"endAngle\", \"innerRadius\", \"outerRadius\", \"cornerRadius\", \"value\", \"max\", \"data\", \"explodeSlices\", \"gradient\", \"animate\", \"pointerEvents\", \"isActive\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dblclick\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-pie-series]',\n                    template: `\n    <svg:g *ngFor=\"let arc of data; trackBy: trackBy\">\n      <svg:g\n        ngx-charts-pie-label\n        *ngIf=\"labelVisible(arc)\"\n        [data]=\"arc\"\n        [radius]=\"outerRadius\"\n        [color]=\"color(arc)\"\n        [label]=\"labelText(arc)\"\n        [labelTrim]=\"trimLabels\"\n        [labelTrimSize]=\"maxLabelLength\"\n        [max]=\"max\"\n        [value]=\"arc.value\"\n        [explodeSlices]=\"explodeSlices\"\n        [animations]=\"animations\"\n      ></svg:g>\n      <svg:g\n        ngx-charts-pie-arc\n        [startAngle]=\"arc.startAngle\"\n        [endAngle]=\"arc.endAngle\"\n        [innerRadius]=\"innerRadius\"\n        [outerRadius]=\"outerRadius\"\n        [fill]=\"color(arc)\"\n        [value]=\"arc.data.value\"\n        [gradient]=\"gradient\"\n        [data]=\"arc.data\"\n        [max]=\"max\"\n        [explodeSlices]=\"explodeSlices\"\n        [isActive]=\"isActive(arc.data)\"\n        [animate]=\"animations\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n        (dblclick)=\"dblclick.emit($event)\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Top\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipTitle]=\"getTooltipTitle(arc)\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"arc.data\"\n      ></svg:g>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { colors: [{\n                type: Input\n            }], series: [{\n                type: Input\n            }], dims: [{\n                type: Input\n            }], innerRadius: [{\n                type: Input\n            }], outerRadius: [{\n                type: Input\n            }], explodeSlices: [{\n                type: Input\n            }], showLabels: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], labelFormatting: [{\n                type: Input\n            }], trimLabels: [{\n                type: Input\n            }], maxLabelLength: [{\n                type: Input\n            }], tooltipText: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], dblclick: [{\n                type: Output\n            }] } });\n\nclass AdvancedPieChartComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.activeEntries = [];\n        this.tooltipDisabled = false;\n        this.label = 'Total';\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [20, 20, 20, 20];\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: (this.width * 4) / 12.0,\n            height: this.height,\n            margins: this.margin\n        });\n        this.formatDates();\n        this.domain = this.getDomain();\n        this.setColors();\n        const xOffset = this.dims.width / 2;\n        const yOffset = this.margin[0] + this.dims.height / 2;\n        this.legendWidth = this.width - this.dims.width - this.margin[1];\n        this.outerRadius = Math.min(this.dims.width, this.dims.height) / 2.5;\n        this.innerRadius = this.outerRadius * 0.75;\n        this.transform = `translate(${xOffset} , ${yOffset})`;\n    }\n    getDomain() {\n        return this.results.map(d => d.label);\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    setColors() {\n        this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n    }\n    onActivate(item, fromLegend = false) {\n        item = this.results.find(d => {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item, fromLegend = false) {\n        item = this.results.find(d => {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nAdvancedPieChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AdvancedPieChartComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nAdvancedPieChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: AdvancedPieChartComponent, selector: \"ngx-charts-advanced-pie-chart\", inputs: { gradient: \"gradient\", activeEntries: \"activeEntries\", tooltipDisabled: \"tooltipDisabled\", tooltipText: \"tooltipText\", label: \"label\", valueFormatting: \"valueFormatting\", nameFormatting: \"nameFormatting\", percentageFormatting: \"percentageFormatting\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <div [style.width.px]=\"width\" [style.height.px]=\"height\">\n      <div class=\"advanced-pie chart\" [style.width.px]=\"dims.width\" [style.height.px]=\"dims.height\">\n        <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n          <svg:g [attr.transform]=\"transform\" class=\"pie chart\">\n            <svg:g\n              ngx-charts-pie-series\n              [colors]=\"colors\"\n              [series]=\"results\"\n              [innerRadius]=\"innerRadius\"\n              [activeEntries]=\"activeEntries\"\n              [outerRadius]=\"outerRadius\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [tooltipText]=\"tooltipText\"\n              (select)=\"onClick($event)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n              [animations]=\"animations\"\n            ></svg:g>\n          </svg:g>\n        </ngx-charts-chart>\n      </div>\n      <div class=\"advanced-pie-legend-wrapper\" [style.width.px]=\"width - dims.width\" [style.height.px]=\"height\">\n        <ngx-charts-advanced-legend\n          [data]=\"results\"\n          [colors]=\"colors\"\n          [width]=\"width - dims.width - margin[1]\"\n          [label]=\"label\"\n          [animations]=\"animations\"\n          [valueFormatting]=\"valueFormatting\"\n          [labelFormatting]=\"nameFormatting\"\n          [percentageFormatting]=\"percentageFormatting\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event, true)\"\n          (deactivate)=\"onDeactivate($event, true)\"\n        >\n        </ngx-charts-advanced-legend>\n      </div>\n    </div>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".advanced-pie{display:inline-block;float:left}.advanced-pie-legend-wrapper{display:inline-block}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: PieSeriesComponent, selector: \"g[ngx-charts-pie-series]\", inputs: [\"colors\", \"series\", \"dims\", \"innerRadius\", \"outerRadius\", \"explodeSlices\", \"showLabels\", \"gradient\", \"activeEntries\", \"labelFormatting\", \"trimLabels\", \"maxLabelLength\", \"tooltipText\", \"tooltipDisabled\", \"tooltipTemplate\", \"animations\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dblclick\"] }, { type: AdvancedLegendComponent, selector: \"ngx-charts-advanced-legend\", inputs: [\"width\", \"data\", \"colors\", \"label\", \"animations\", \"valueFormatting\", \"labelFormatting\", \"percentageFormatting\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AdvancedPieChartComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-advanced-pie-chart', template: `\n    <div [style.width.px]=\"width\" [style.height.px]=\"height\">\n      <div class=\"advanced-pie chart\" [style.width.px]=\"dims.width\" [style.height.px]=\"dims.height\">\n        <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n          <svg:g [attr.transform]=\"transform\" class=\"pie chart\">\n            <svg:g\n              ngx-charts-pie-series\n              [colors]=\"colors\"\n              [series]=\"results\"\n              [innerRadius]=\"innerRadius\"\n              [activeEntries]=\"activeEntries\"\n              [outerRadius]=\"outerRadius\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [tooltipText]=\"tooltipText\"\n              (select)=\"onClick($event)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n              [animations]=\"animations\"\n            ></svg:g>\n          </svg:g>\n        </ngx-charts-chart>\n      </div>\n      <div class=\"advanced-pie-legend-wrapper\" [style.width.px]=\"width - dims.width\" [style.height.px]=\"height\">\n        <ngx-charts-advanced-legend\n          [data]=\"results\"\n          [colors]=\"colors\"\n          [width]=\"width - dims.width - margin[1]\"\n          [label]=\"label\"\n          [animations]=\"animations\"\n          [valueFormatting]=\"valueFormatting\"\n          [labelFormatting]=\"nameFormatting\"\n          [percentageFormatting]=\"percentageFormatting\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event, true)\"\n          (deactivate)=\"onDeactivate($event, true)\"\n        >\n        </ngx-charts-advanced-legend>\n      </div>\n    </div>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".advanced-pie{display:inline-block;float:left}.advanced-pie-legend-wrapper{display:inline-block}\\n\"] }]\n        }], propDecorators: { gradient: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipText: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }], valueFormatting: [{\n                type: Input\n            }], nameFormatting: [{\n                type: Input\n            }], percentageFormatting: [{\n                type: Input\n            }] } });\n\nclass PieChartComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.labels = false;\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.explodeSlices = false;\n        this.doughnut = false;\n        this.arcWidth = 0.25;\n        this.activeEntries = [];\n        this.tooltipDisabled = false;\n        this.trimLabels = true;\n        this.maxLabelLength = 10;\n        this.dblclick = new EventEmitter();\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n    }\n    update() {\n        super.update();\n        if (this.labels && this.hasNoOptionalMarginsSet()) {\n            this.margins = [30, 80, 30, 80];\n        }\n        else if (!this.labels && this.hasNoOptionalMarginsSet()) {\n            // default value for margins\n            this.margins = [20, 20, 20, 20];\n        }\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margins,\n            showLegend: this.legend,\n            legendPosition: this.legendPosition\n        });\n        this.formatDates();\n        const xOffset = this.margins[3] + this.dims.width / 2;\n        const yOffset = this.margins[0] + this.dims.height / 2;\n        this.translation = `translate(${xOffset}, ${yOffset})`;\n        this.outerRadius = Math.min(this.dims.width, this.dims.height);\n        if (this.labels) {\n            // make room for labels\n            this.outerRadius /= 3;\n        }\n        else {\n            this.outerRadius /= 2;\n        }\n        this.innerRadius = 0;\n        if (this.doughnut) {\n            this.innerRadius = this.outerRadius * (1 - this.arcWidth);\n        }\n        this.domain = this.getDomain();\n        // sort data according to domain\n        this.data = this.results.sort((a, b) => {\n            return this.domain.indexOf(a.name) - this.domain.indexOf(b.name);\n        });\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n    }\n    getDomain() {\n        return this.results.map(d => d.label);\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    setColors() {\n        this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n    }\n    getLegendOptions() {\n        return {\n            scaleType: ScaleType.Ordinal,\n            domain: this.domain,\n            colors: this.colors,\n            title: this.legendTitle,\n            position: this.legendPosition\n        };\n    }\n    onActivate(item, fromLegend = false) {\n        item = this.results.find(d => {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item, fromLegend = false) {\n        item = this.results.find(d => {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n    hasNoOptionalMarginsSet() {\n        return !this.margins || this.margins.length <= 0;\n    }\n}\nPieChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieChartComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nPieChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: PieChartComponent, selector: \"ngx-charts-pie-chart\", inputs: { labels: \"labels\", legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", explodeSlices: \"explodeSlices\", doughnut: \"doughnut\", arcWidth: \"arcWidth\", gradient: \"gradient\", activeEntries: \"activeEntries\", tooltipDisabled: \"tooltipDisabled\", labelFormatting: \"labelFormatting\", trimLabels: \"trimLabels\", maxLabelLength: \"maxLabelLength\", tooltipText: \"tooltipText\", margins: \"margins\" }, outputs: { dblclick: \"dblclick\", select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"translation\" class=\"pie-chart chart\">\n        <svg:g\n          ngx-charts-pie-series\n          [colors]=\"colors\"\n          [series]=\"data\"\n          [showLabels]=\"labels\"\n          [labelFormatting]=\"labelFormatting\"\n          [trimLabels]=\"trimLabels\"\n          [maxLabelLength]=\"maxLabelLength\"\n          [activeEntries]=\"activeEntries\"\n          [innerRadius]=\"innerRadius\"\n          [outerRadius]=\"outerRadius\"\n          [explodeSlices]=\"explodeSlices\"\n          [gradient]=\"gradient\"\n          [animations]=\"animations\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipText]=\"tooltipText\"\n          (dblclick)=\"dblclick.emit($event)\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event)\"\n          (deactivate)=\"onDeactivate($event)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".pie-label{font-size:11px}.pie-label.animation{-webkit-animation:.75s ease-in fadeIn;animation:.75s ease-in fadeIn}@-webkit-keyframes fadeIn{0%{opacity:0}to{opacity:1}}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}.pie-label-line{stroke-dasharray:100%}.pie-label-line.animation{-webkit-animation:3s linear drawOut;animation:3s linear drawOut;transition:d .75s}@-webkit-keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}@keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: PieSeriesComponent, selector: \"g[ngx-charts-pie-series]\", inputs: [\"colors\", \"series\", \"dims\", \"innerRadius\", \"outerRadius\", \"explodeSlices\", \"showLabels\", \"gradient\", \"activeEntries\", \"labelFormatting\", \"trimLabels\", \"maxLabelLength\", \"tooltipText\", \"tooltipDisabled\", \"tooltipTemplate\", \"animations\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dblclick\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieChartComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-pie-chart', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"translation\" class=\"pie-chart chart\">\n        <svg:g\n          ngx-charts-pie-series\n          [colors]=\"colors\"\n          [series]=\"data\"\n          [showLabels]=\"labels\"\n          [labelFormatting]=\"labelFormatting\"\n          [trimLabels]=\"trimLabels\"\n          [maxLabelLength]=\"maxLabelLength\"\n          [activeEntries]=\"activeEntries\"\n          [innerRadius]=\"innerRadius\"\n          [outerRadius]=\"outerRadius\"\n          [explodeSlices]=\"explodeSlices\"\n          [gradient]=\"gradient\"\n          [animations]=\"animations\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipText]=\"tooltipText\"\n          (dblclick)=\"dblclick.emit($event)\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event)\"\n          (deactivate)=\"onDeactivate($event)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".pie-label{font-size:11px}.pie-label.animation{-webkit-animation:.75s ease-in fadeIn;animation:.75s ease-in fadeIn}@-webkit-keyframes fadeIn{0%{opacity:0}to{opacity:1}}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}.pie-label-line{stroke-dasharray:100%}.pie-label-line.animation{-webkit-animation:3s linear drawOut;animation:3s linear drawOut;transition:d .75s}@-webkit-keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}@keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}\\n\"] }]\n        }], propDecorators: { labels: [{\n                type: Input\n            }], legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], explodeSlices: [{\n                type: Input\n            }], doughnut: [{\n                type: Input\n            }], arcWidth: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], labelFormatting: [{\n                type: Input\n            }], trimLabels: [{\n                type: Input\n            }], maxLabelLength: [{\n                type: Input\n            }], tooltipText: [{\n                type: Input\n            }], dblclick: [{\n                type: Output\n            }], margins: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nfunction gridSize(dims, len, minWidth) {\n    let rows = 1;\n    let cols = len;\n    const width = dims.width;\n    if (width > minWidth) {\n        while (width / cols < minWidth) {\n            rows += 1;\n            cols = Math.ceil(len / rows);\n        }\n    }\n    return [cols, rows];\n}\nfunction gridLayout(dims, data, minWidth, designatedTotal) {\n    const xScale = scaleBand();\n    const yScale = scaleBand();\n    const width = dims.width;\n    const height = dims.height;\n    const [columns, rows] = gridSize(dims, data.length, minWidth);\n    const xDomain = [];\n    const yDomain = [];\n    for (let i = 0; i < rows; i++) {\n        yDomain.push(i);\n    }\n    for (let i = 0; i < columns; i++) {\n        xDomain.push(i);\n    }\n    xScale.domain(xDomain);\n    yScale.domain(yDomain);\n    xScale.rangeRound([0, width], 0.1);\n    yScale.rangeRound([0, height], 0.1);\n    const res = [];\n    const total = designatedTotal ? designatedTotal : getTotal(data);\n    const cardWidth = xScale.bandwidth();\n    const cardHeight = yScale.bandwidth();\n    for (let i = 0; i < data.length; i++) {\n        res[i] = {};\n        res[i].data = {\n            name: data[i] ? data[i].name : '',\n            value: data[i] ? data[i].value : undefined,\n            extra: data[i] ? data[i].extra : undefined,\n            label: data[i] ? data[i].label : ''\n        };\n        res[i].x = xScale(i % columns);\n        res[i].y = yScale(Math.floor(i / columns));\n        res[i].width = cardWidth;\n        res[i].height = cardHeight;\n        res[i].data.percent = total > 0 ? res[i].data.value / total : 0;\n        res[i].data.total = total;\n    }\n    return res;\n}\nfunction getTotal(results) {\n    return results.map(d => (d ? d.value : 0)).reduce((sum, val) => sum + val, 0);\n}\n\nclass PieGridSeriesComponent {\n    constructor(element) {\n        this.innerRadius = 70;\n        this.outerRadius = 80;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.element = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.layout = pie()\n            .value(d => d.data.value)\n            .sort(null);\n        this.arcs = this.getArcs();\n    }\n    getArcs() {\n        return this.layout(this.data).map((arc, index) => {\n            const label = arc.data.data.name;\n            const other = arc.data.data.other;\n            if (index === 0) {\n                arc.startAngle = 0;\n            }\n            const color = this.colors(label);\n            return {\n                data: arc.data.data,\n                class: 'arc ' + 'arc' + index,\n                fill: color,\n                startAngle: other ? 0 : arc.startAngle,\n                endAngle: arc.endAngle,\n                animate: this.animations && !other,\n                pointerEvents: !other\n            };\n        });\n    }\n    onClick(data) {\n        this.select.emit(this.data[0].data);\n    }\n    trackBy(index, item) {\n        return item.data.name;\n    }\n    label(arc) {\n        return arc.data.name;\n    }\n    color(arc) {\n        return this.colors(this.label(arc));\n    }\n}\nPieGridSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieGridSeriesComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nPieGridSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: PieGridSeriesComponent, selector: \"g[ngx-charts-pie-grid-series]\", inputs: { colors: \"colors\", data: \"data\", innerRadius: \"innerRadius\", outerRadius: \"outerRadius\", animations: \"animations\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g class=\"pie-grid-arcs\">\n      <svg:g\n        ngx-charts-pie-arc\n        *ngFor=\"let arc of arcs; trackBy: trackBy\"\n        [attr.class]=\"arc.class\"\n        [startAngle]=\"arc.startAngle\"\n        [endAngle]=\"arc.endAngle\"\n        [innerRadius]=\"innerRadius\"\n        [outerRadius]=\"outerRadius\"\n        [fill]=\"color(arc)\"\n        [value]=\"arc.data.value\"\n        [data]=\"arc.data\"\n        [gradient]=\"false\"\n        [pointerEvents]=\"arc.pointerEvents\"\n        [animate]=\"arc.animate\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n      ></svg:g>\n    </svg:g>\n  `, isInline: true, components: [{ type: PieArcComponent, selector: \"g[ngx-charts-pie-arc]\", inputs: [\"fill\", \"startAngle\", \"endAngle\", \"innerRadius\", \"outerRadius\", \"cornerRadius\", \"value\", \"max\", \"data\", \"explodeSlices\", \"gradient\", \"animate\", \"pointerEvents\", \"isActive\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dblclick\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieGridSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-pie-grid-series]',\n                    template: `\n    <svg:g class=\"pie-grid-arcs\">\n      <svg:g\n        ngx-charts-pie-arc\n        *ngFor=\"let arc of arcs; trackBy: trackBy\"\n        [attr.class]=\"arc.class\"\n        [startAngle]=\"arc.startAngle\"\n        [endAngle]=\"arc.endAngle\"\n        [innerRadius]=\"innerRadius\"\n        [outerRadius]=\"outerRadius\"\n        [fill]=\"color(arc)\"\n        [value]=\"arc.data.value\"\n        [data]=\"arc.data\"\n        [gradient]=\"false\"\n        [pointerEvents]=\"arc.pointerEvents\"\n        [animate]=\"arc.animate\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n      ></svg:g>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { colors: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], innerRadius: [{\n                type: Input\n            }], outerRadius: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }] } });\n\nclass PieGridComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.tooltipDisabled = false;\n        this.label = 'Total';\n        this.minWidth = 150;\n        this.activeEntries = [];\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [20, 20, 20, 20];\n        this.placementTypes = PlacementTypes;\n        this.styleTypes = StyleTypes;\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin\n        });\n        this.formatDates();\n        this.domain = this.getDomain();\n        this.data = gridLayout(this.dims, this.results, this.minWidth, this.designatedTotal);\n        this.transform = `translate(${this.margin[3]} , ${this.margin[0]})`;\n        this.series = this.getSeries();\n        this.setColors();\n        this.tooltipText = this.tooltipText || this.defaultTooltipText;\n    }\n    defaultTooltipText({ data }) {\n        const label = trimLabel(formatLabel(data.name));\n        const val = data.value.toLocaleString();\n        return `\n      <span class=\"tooltip-label\">${label}</span>\n      <span class=\"tooltip-val\">${val}</span>\n    `;\n    }\n    getDomain() {\n        return this.results.map(d => d.label);\n    }\n    getSeries() {\n        const total = this.designatedTotal ? this.designatedTotal : this.getTotal();\n        return this.data.map(d => {\n            const baselineLabelHeight = 20;\n            const padding = 10;\n            const name = d.data.name;\n            const label = formatLabel(name);\n            const value = d.data.value;\n            const radius = min([d.width - padding, d.height - baselineLabelHeight]) / 2 - 5;\n            const innerRadius = radius * 0.9;\n            let count = 0;\n            const colors = () => {\n                count += 1;\n                if (count === 1) {\n                    return 'rgba(100,100,100,0.3)';\n                }\n                else {\n                    return this.colorScale.getColor(label);\n                }\n            };\n            const xPos = d.x + (d.width - padding) / 2;\n            const yPos = d.y + (d.height - baselineLabelHeight) / 2;\n            return {\n                transform: `translate(${xPos}, ${yPos})`,\n                colors,\n                innerRadius,\n                outerRadius: radius,\n                name,\n                label: trimLabel(label),\n                total: value,\n                value,\n                percent: format('.1%')(d.data.percent),\n                data: [\n                    d,\n                    {\n                        data: {\n                            other: true,\n                            value: total - value,\n                            name: d.data.name\n                        }\n                    }\n                ]\n            };\n        });\n    }\n    getTotal() {\n        return this.results.map(d => d.value).reduce((sum, d) => sum + d, 0);\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    setColors() {\n        this.colorScale = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n    }\n    onActivate(item, fromLegend = false) {\n        item = this.results.find(d => {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item, fromLegend = false) {\n        item = this.results.find(d => {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nPieGridComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieGridComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nPieGridComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: PieGridComponent, selector: \"ngx-charts-pie-grid\", inputs: { designatedTotal: \"designatedTotal\", tooltipDisabled: \"tooltipDisabled\", tooltipText: \"tooltipText\", label: \"label\", minWidth: \"minWidth\", activeEntries: \"activeEntries\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"pie-grid chart\">\n        <svg:g *ngFor=\"let series of series\" class=\"pie-grid-item\" [attr.transform]=\"series.transform\">\n          <svg:g\n            ngx-charts-pie-grid-series\n            [colors]=\"series.colors\"\n            [data]=\"series.data\"\n            [innerRadius]=\"series.innerRadius\"\n            [outerRadius]=\"series.outerRadius\"\n            [animations]=\"animations\"\n            (select)=\"onClick($event)\"\n            ngx-tooltip\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipPlacement]=\"placementTypes.Top\"\n            [tooltipType]=\"styleTypes.tooltip\"\n            [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText({ data: series })\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [tooltipContext]=\"series.data[0].data\"\n            (activate)=\"onActivate($event)\"\n            (deactivate)=\"onDeactivate($event)\"\n          />\n          <svg:text\n            *ngIf=\"animations\"\n            class=\"label percent-label\"\n            dy=\"-0.5em\"\n            x=\"0\"\n            y=\"5\"\n            ngx-charts-count-up\n            [countTo]=\"series.percent\"\n            [countSuffix]=\"'%'\"\n            text-anchor=\"middle\"\n          ></svg:text>\n          <svg:text *ngIf=\"!animations\" class=\"label percent-label\" dy=\"-0.5em\" x=\"0\" y=\"5\" text-anchor=\"middle\">\n            {{ series.percent.toLocaleString() }}\n          </svg:text>\n          <svg:text class=\"label\" dy=\"0.5em\" x=\"0\" y=\"5\" text-anchor=\"middle\">\n            {{ series.label }}\n          </svg:text>\n          <svg:text\n            *ngIf=\"animations\"\n            class=\"label\"\n            dy=\"1.23em\"\n            x=\"0\"\n            [attr.y]=\"series.outerRadius\"\n            text-anchor=\"middle\"\n            ngx-charts-count-up\n            [countTo]=\"series.total\"\n            [countPrefix]=\"label + ': '\"\n          ></svg:text>\n          <svg:text\n            *ngIf=\"!animations\"\n            class=\"label\"\n            dy=\"1.23em\"\n            x=\"0\"\n            [attr.y]=\"series.outerRadius\"\n            text-anchor=\"middle\"\n          >\n            {{ label }}: {{ series.total.toLocaleString() }}\n          </svg:text>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".pie-grid .arc1{opacity:.4}.pie-grid .percent-label{font-size:16px;font-weight:400}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: PieGridSeriesComponent, selector: \"g[ngx-charts-pie-grid-series]\", inputs: [\"colors\", \"data\", \"innerRadius\", \"outerRadius\", \"animations\"], outputs: [\"select\", \"activate\", \"deactivate\"] }, { type: CountUpDirective, selector: \"[ngx-charts-count-up]\", inputs: [\"countDuration\", \"countPrefix\", \"countSuffix\", \"valueFormatting\", \"countDecimals\", \"countTo\", \"countFrom\"], outputs: [\"countChange\", \"countFinish\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieGridComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-pie-grid', template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"pie-grid chart\">\n        <svg:g *ngFor=\"let series of series\" class=\"pie-grid-item\" [attr.transform]=\"series.transform\">\n          <svg:g\n            ngx-charts-pie-grid-series\n            [colors]=\"series.colors\"\n            [data]=\"series.data\"\n            [innerRadius]=\"series.innerRadius\"\n            [outerRadius]=\"series.outerRadius\"\n            [animations]=\"animations\"\n            (select)=\"onClick($event)\"\n            ngx-tooltip\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipPlacement]=\"placementTypes.Top\"\n            [tooltipType]=\"styleTypes.tooltip\"\n            [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText({ data: series })\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [tooltipContext]=\"series.data[0].data\"\n            (activate)=\"onActivate($event)\"\n            (deactivate)=\"onDeactivate($event)\"\n          />\n          <svg:text\n            *ngIf=\"animations\"\n            class=\"label percent-label\"\n            dy=\"-0.5em\"\n            x=\"0\"\n            y=\"5\"\n            ngx-charts-count-up\n            [countTo]=\"series.percent\"\n            [countSuffix]=\"'%'\"\n            text-anchor=\"middle\"\n          ></svg:text>\n          <svg:text *ngIf=\"!animations\" class=\"label percent-label\" dy=\"-0.5em\" x=\"0\" y=\"5\" text-anchor=\"middle\">\n            {{ series.percent.toLocaleString() }}\n          </svg:text>\n          <svg:text class=\"label\" dy=\"0.5em\" x=\"0\" y=\"5\" text-anchor=\"middle\">\n            {{ series.label }}\n          </svg:text>\n          <svg:text\n            *ngIf=\"animations\"\n            class=\"label\"\n            dy=\"1.23em\"\n            x=\"0\"\n            [attr.y]=\"series.outerRadius\"\n            text-anchor=\"middle\"\n            ngx-charts-count-up\n            [countTo]=\"series.total\"\n            [countPrefix]=\"label + ': '\"\n          ></svg:text>\n          <svg:text\n            *ngIf=\"!animations\"\n            class=\"label\"\n            dy=\"1.23em\"\n            x=\"0\"\n            [attr.y]=\"series.outerRadius\"\n            text-anchor=\"middle\"\n          >\n            {{ label }}: {{ series.total.toLocaleString() }}\n          </svg:text>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".pie-grid .arc1{opacity:.4}.pie-grid .percent-label{font-size:16px;font-weight:400}\\n\"] }]\n        }], propDecorators: { designatedTotal: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipText: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], minWidth: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass PieChartModule {\n}\nPieChartModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieChartModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nPieChartModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieChartModule, declarations: [AdvancedPieChartComponent,\n        PieLabelComponent,\n        PieArcComponent,\n        PieChartComponent,\n        PieGridComponent,\n        PieGridSeriesComponent,\n        PieSeriesComponent], imports: [ChartCommonModule], exports: [AdvancedPieChartComponent,\n        PieLabelComponent,\n        PieArcComponent,\n        PieChartComponent,\n        PieGridComponent,\n        PieGridSeriesComponent,\n        PieSeriesComponent] });\nPieChartModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieChartModule, imports: [[ChartCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieChartModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule],\n                    declarations: [\n                        AdvancedPieChartComponent,\n                        PieLabelComponent,\n                        PieArcComponent,\n                        PieChartComponent,\n                        PieGridComponent,\n                        PieGridSeriesComponent,\n                        PieSeriesComponent\n                    ],\n                    exports: [\n                        AdvancedPieChartComponent,\n                        PieLabelComponent,\n                        PieArcComponent,\n                        PieChartComponent,\n                        PieGridComponent,\n                        PieGridSeriesComponent,\n                        PieSeriesComponent\n                    ]\n                }]\n        }] });\n\nclass PolarChartModule {\n}\nPolarChartModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PolarChartModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nPolarChartModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PolarChartModule, declarations: [PolarChartComponent, PolarSeriesComponent], imports: [ChartCommonModule, PieChartModule, LineChartModule], exports: [PolarChartComponent, PolarSeriesComponent] });\nPolarChartModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PolarChartModule, imports: [[ChartCommonModule, PieChartModule, LineChartModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PolarChartModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule, PieChartModule, LineChartModule],\n                    declarations: [PolarChartComponent, PolarSeriesComponent],\n                    exports: [PolarChartComponent, PolarSeriesComponent]\n                }]\n        }] });\n\nfunction calculateTextWidth(fontFamilyKey, text, defaultWidth = 8) {\n    return text.split('').reduce((acc, curr) => {\n        const width = fontFamilyKey[curr] || defaultWidth;\n        return acc + width;\n    }, 0);\n}\n\nconst VERDANA_FONT_WIDTHS_16_PX = {\n    '0': 10,\n    '1': 10,\n    '2': 10,\n    '3': 10,\n    '4': 10,\n    '5': 10,\n    '6': 10,\n    '7': 10,\n    '8': 10,\n    '9': 10,\n    A: 11,\n    B: 11,\n    C: 11,\n    D: 12,\n    E: 10,\n    F: 9,\n    G: 12,\n    H: 12,\n    I: 7,\n    J: 7,\n    K: 11,\n    L: 9,\n    M: 13,\n    N: 12,\n    O: 13,\n    P: 10,\n    Q: 13,\n    R: 11,\n    S: 11,\n    T: 10,\n    U: 12,\n    V: 11,\n    W: 16,\n    X: 11,\n    Y: 10,\n    Z: 11,\n    a: 10,\n    b: 10,\n    c: 8,\n    d: 10,\n    e: 10,\n    f: 6,\n    g: 10,\n    h: 10,\n    i: 4,\n    j: 6,\n    k: 9,\n    l: 4,\n    m: 16,\n    n: 10,\n    o: 10,\n    p: 10,\n    q: 10,\n    r: 7,\n    s: 8,\n    t: 6,\n    u: 10,\n    v: 9,\n    w: 13,\n    x: 9,\n    y: 9,\n    z: 8,\n    '!': 6,\n    '@': 16,\n    '#': 13,\n    $: 10,\n    '%': 17,\n    '^': 13,\n    '&': 12,\n    '*': 10,\n    '(': 7,\n    ')': 7,\n    _: 10,\n    '-': 7,\n    '+': 13,\n    '=': 13,\n    ',': 6,\n    '.': 6,\n    '/': 7,\n    \"'\": 4,\n    ':': 7,\n    '|': 7,\n    '?': 9,\n    ';': 7,\n    '<': 13,\n    '>': 13\n};\n\nclass CardComponent {\n    constructor(element, cd, zone, platformId) {\n        this.cd = cd;\n        this.zone = zone;\n        this.platformId = platformId;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.value = '';\n        this.textFontSize = 12;\n        this.textTransform = '';\n        this.initialized = false;\n        this.bandHeight = 10;\n        this.textPadding = [10, 20, 5, 20];\n        this.labelFontSize = 15;\n        this.element = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.scaleTextSSR();\n        }\n    }\n    ngOnDestroy() {\n        if (isPlatformBrowser(this.platformId)) {\n            cancelAnimationFrame(this.animationReq);\n        }\n    }\n    update() {\n        this.zone.run(() => {\n            const hasValue = this.data && typeof this.data.value !== 'undefined';\n            const valueFormatting = this.valueFormatting || (card => card.value.toLocaleString());\n            const labelFormatting = this.labelFormatting || (card => escapeLabel(trimLabel(card.label, 55)));\n            this.transform = `translate(${this.x} , ${this.y})`;\n            this.textWidth = Math.max(0, this.width) - this.textPadding[1] - this.textPadding[3];\n            this.cardWidth = Math.max(0, this.width);\n            this.cardHeight = Math.max(0, this.height);\n            this.label = this.label ? this.label : this.data.name;\n            const cardData = {\n                label: this.label,\n                data: this.data,\n                value: this.data.value\n            };\n            this.formattedLabel = labelFormatting(cardData);\n            this.transformBand = `translate(0 , ${this.cardHeight - this.bandHeight})`;\n            const value = hasValue ? valueFormatting(cardData) : '';\n            this.value = this.paddedValue(value);\n            this.setPadding();\n            this.bandPath = roundedRect(0, 0, this.cardWidth, this.bandHeight, 3, [false, false, true, true]);\n            setTimeout(() => {\n                if (isPlatformBrowser(this.platformId)) {\n                    this.scaleText();\n                }\n                this.value = value;\n                if (hasValue && !this.initialized) {\n                    setTimeout(() => this.startCount(), 20);\n                }\n            }, 8);\n        });\n    }\n    paddedValue(value) {\n        if (this.medianSize && this.medianSize > value.length) {\n            value += '\\u2007'.repeat(this.medianSize - value.length);\n        }\n        return value;\n    }\n    startCount() {\n        if (!this.initialized && this.animations) {\n            cancelAnimationFrame(this.animationReq);\n            const val = this.data.value;\n            const decs = decimalChecker(val);\n            const valueFormatting = this.valueFormatting || (card => card.value.toLocaleString());\n            const callback = ({ value, finished }) => {\n                this.zone.run(() => {\n                    value = finished ? val : value;\n                    this.value = valueFormatting({ label: this.label, data: this.data, value });\n                    if (!finished) {\n                        this.value = this.paddedValue(this.value);\n                    }\n                    this.cd.markForCheck();\n                });\n            };\n            this.animationReq = count(0, val, decs, 1, callback);\n            this.initialized = true;\n        }\n    }\n    scaleText() {\n        this.zone.run(() => {\n            const { width, height } = this.textEl.nativeElement.getBoundingClientRect();\n            if (width === 0 || height === 0) {\n                return;\n            }\n            const textPadding = (this.textPadding[1] = this.textPadding[3] = this.cardWidth / 8);\n            const availableWidth = this.cardWidth - 2 * textPadding;\n            const availableHeight = this.cardHeight / 3;\n            const resizeScale = Math.min(availableWidth / width, availableHeight / height);\n            this.textFontSize = Math.floor(this.textFontSize * resizeScale);\n            this.labelFontSize = Math.min(this.textFontSize, 15);\n            this.setPadding();\n            this.cd.markForCheck();\n        });\n    }\n    scaleTextSSR() {\n        const width = calculateTextWidth(VERDANA_FONT_WIDTHS_16_PX, this.value, 10);\n        const height = 18;\n        const textPadding = (this.textPadding[1] = this.textPadding[3] = this.cardWidth / 8);\n        const availableWidth = this.cardWidth - 2 * textPadding;\n        const availableHeight = this.cardHeight / 3;\n        const resizeScale = Math.min(availableWidth / width, availableHeight / height);\n        this.textFontSize = Math.floor(this.textFontSize * resizeScale);\n        this.labelFontSize = Math.min(this.textFontSize, 15);\n        this.setPadding();\n    }\n    setPadding() {\n        this.textPadding[1] = this.textPadding[3] = this.cardWidth / 8;\n        const padding = this.cardHeight / 2;\n        this.textPadding[0] = padding - this.textFontSize - this.labelFontSize / 2;\n        this.textPadding[2] = padding - this.labelFontSize;\n    }\n    onClick() {\n        this.select.emit(this.data);\n    }\n}\nCardComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CardComponent, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i0.NgZone }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nCardComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CardComponent, selector: \"g[ngx-charts-card]\", inputs: { color: \"color\", bandColor: \"bandColor\", textColor: \"textColor\", x: \"x\", y: \"y\", width: \"width\", height: \"height\", label: \"label\", data: \"data\", medianSize: \"medianSize\", valueFormatting: \"valueFormatting\", labelFormatting: \"labelFormatting\", animations: \"animations\" }, outputs: { select: \"select\" }, viewQueries: [{ propertyName: \"textEl\", first: true, predicate: [\"textEl\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <svg:g [attr.transform]=\"transform\" class=\"cell\" (click)=\"onClick()\">\n      <svg:rect class=\"card\" [style.fill]=\"color\" [attr.width]=\"cardWidth\" [attr.height]=\"cardHeight\" rx=\"3\" ry=\"3\" />\n      <svg:path\n        *ngIf=\"bandColor && bandColor !== color\"\n        class=\"card-band\"\n        [attr.fill]=\"bandColor\"\n        [attr.transform]=\"transformBand\"\n        stroke=\"none\"\n        [attr.d]=\"bandPath\"\n      />\n      <title>{{ label }}</title>\n      <svg:foreignObject\n        class=\"trimmed-label\"\n        x=\"5\"\n        [attr.x]=\"textPadding[3]\"\n        [attr.y]=\"cardHeight - textPadding[2]\"\n        [attr.width]=\"textWidth\"\n        [attr.height]=\"labelFontSize + textPadding[2]\"\n        alignment-baseline=\"hanging\"\n      >\n        <xhtml:p\n          [style.color]=\"textColor\"\n          [style.fontSize.px]=\"labelFontSize\"\n          [style.lineHeight.px]=\"labelFontSize\"\n          [innerHTML]=\"formattedLabel\"\n        >\n        </xhtml:p>\n      </svg:foreignObject>\n      <svg:text\n        #textEl\n        class=\"value-text\"\n        [attr.x]=\"textPadding[3]\"\n        [attr.y]=\"textPadding[0]\"\n        [style.fill]=\"textColor\"\n        text-anchor=\"start\"\n        alignment-baseline=\"hanging\"\n        [style.font-size.pt]=\"textFontSize\"\n      >\n        {{ value }}\n      </svg:text>\n    </svg:g>\n  `, isInline: true, directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CardComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-card]',\n                    template: `\n    <svg:g [attr.transform]=\"transform\" class=\"cell\" (click)=\"onClick()\">\n      <svg:rect class=\"card\" [style.fill]=\"color\" [attr.width]=\"cardWidth\" [attr.height]=\"cardHeight\" rx=\"3\" ry=\"3\" />\n      <svg:path\n        *ngIf=\"bandColor && bandColor !== color\"\n        class=\"card-band\"\n        [attr.fill]=\"bandColor\"\n        [attr.transform]=\"transformBand\"\n        stroke=\"none\"\n        [attr.d]=\"bandPath\"\n      />\n      <title>{{ label }}</title>\n      <svg:foreignObject\n        class=\"trimmed-label\"\n        x=\"5\"\n        [attr.x]=\"textPadding[3]\"\n        [attr.y]=\"cardHeight - textPadding[2]\"\n        [attr.width]=\"textWidth\"\n        [attr.height]=\"labelFontSize + textPadding[2]\"\n        alignment-baseline=\"hanging\"\n      >\n        <xhtml:p\n          [style.color]=\"textColor\"\n          [style.fontSize.px]=\"labelFontSize\"\n          [style.lineHeight.px]=\"labelFontSize\"\n          [innerHTML]=\"formattedLabel\"\n        >\n        </xhtml:p>\n      </svg:foreignObject>\n      <svg:text\n        #textEl\n        class=\"value-text\"\n        [attr.x]=\"textPadding[3]\"\n        [attr.y]=\"textPadding[0]\"\n        [style.fill]=\"textColor\"\n        text-anchor=\"start\"\n        alignment-baseline=\"hanging\"\n        [style.font-size.pt]=\"textFontSize\"\n      >\n        {{ value }}\n      </svg:text>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { color: [{\n                type: Input\n            }], bandColor: [{\n                type: Input\n            }], textColor: [{\n                type: Input\n            }], x: [{\n                type: Input\n            }], y: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], medianSize: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], labelFormatting: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], textEl: [{\n                type: ViewChild,\n                args: ['textEl', { static: false }]\n            }] } });\n\n/**\n * Converts a hex to RGB\n *\n * @export\n */\nfunction hexToRgb(value) {\n    // deprecated, use d3.color()\n    return d3_color.rgb(value);\n}\n/**\n * Accepts a color (string) and returns a inverted hex color (string)\n * http://stackoverflow.com/questions/9600295/automatically-change-text-color-to-assure-readability\n *\n * @export\n */\nfunction invertColor(value) {\n    const color = d3_color.rgb(value);\n    const { r, g, b, opacity } = color;\n    if (opacity === 0) {\n        return color.toString();\n    }\n    const yiq = (r * 299 + g * 587 + b * 114) / 1000;\n    const depth = yiq >= 128 ? -0.8 : 0.8;\n    return shadeRGBColor(color, depth);\n}\n/**\n * Given a rgb, it will darken/lighten\n * http://stackoverflow.com/questions/5560248/programmatically-lighten-or-darken-a-hex-color-or-rgb-and-blend-colors\n *\n * @export\n * @param \\{ r, g, b }\n */\nfunction shadeRGBColor({ r, g, b }, percent) {\n    const t = percent < 0 ? 0 : 255;\n    const p = percent < 0 ? percent * -1 : percent;\n    r = Math.round((t - r) * p) + r;\n    g = Math.round((t - g) * p) + g;\n    b = Math.round((t - b) * p) + b;\n    return `rgb(${r}, ${g}, ${b})`;\n}\n\nclass CardSeriesComponent {\n    constructor() {\n        this.innerPadding = 15;\n        this.emptyColor = 'rgba(0, 0, 0, 0)';\n        this.animations = true;\n        this.select = new EventEmitter();\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        if (this.data.length > 2) {\n            const valueFormatting = this.valueFormatting || (card => card.value.toLocaleString());\n            const sortedLengths = this.data\n                .map(d => {\n                const hasValue = d && d.data && typeof d.data.value !== 'undefined' && d.data.value !== null;\n                return hasValue\n                    ? valueFormatting({\n                        data: d.data,\n                        label: d ? d.data.name : '',\n                        value: d && d.data ? d.data.value : ''\n                    }).length\n                    : 0;\n            })\n                .sort((a, b) => b - a);\n            const idx = Math.ceil(this.data.length / 2);\n            this.medianSize = sortedLengths[idx];\n        }\n        const cards = this.getCards();\n        this.cards = cards.filter(d => d.data.value !== null);\n        this.emptySlots = cards.filter(d => d.data.value === null);\n    }\n    getCards() {\n        const yPadding = typeof this.innerPadding === 'number' ? this.innerPadding : this.innerPadding[0] + this.innerPadding[2];\n        const xPadding = typeof this.innerPadding === 'number' ? this.innerPadding : this.innerPadding[1] + this.innerPadding[3];\n        return this.data.map((d, index) => {\n            let label = d.data.name;\n            if (label && label.constructor.name === 'Date') {\n                label = label.toLocaleDateString();\n            }\n            else {\n                label = label ? label.toLocaleString() : label;\n            }\n            const value = d.data.value;\n            const valueColor = label ? this.colors.getColor(label) : this.emptyColor;\n            const color = this.cardColor || valueColor || '#000';\n            return {\n                x: d.x,\n                y: d.y,\n                width: d.width - xPadding,\n                height: d.height - yPadding,\n                color,\n                bandColor: this.bandColor || valueColor,\n                textColor: this.textColor || invertColor(color),\n                label,\n                data: d.data,\n                tooltipText: `${label}: ${value}`\n            };\n        });\n    }\n    trackBy(index, card) {\n        return card.label;\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n}\nCardSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CardSeriesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nCardSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CardSeriesComponent, selector: \"g[ngx-charts-card-series]\", inputs: { data: \"data\", dims: \"dims\", colors: \"colors\", innerPadding: \"innerPadding\", cardColor: \"cardColor\", bandColor: \"bandColor\", emptyColor: \"emptyColor\", textColor: \"textColor\", valueFormatting: \"valueFormatting\", labelFormatting: \"labelFormatting\", animations: \"animations\" }, outputs: { select: \"select\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:rect\n      *ngFor=\"let c of emptySlots; trackBy: trackBy\"\n      class=\"card-empty\"\n      [attr.x]=\"c.x\"\n      [attr.y]=\"c.y\"\n      [style.fill]=\"emptyColor\"\n      [attr.width]=\"c.width\"\n      [attr.height]=\"c.height\"\n      rx=\"3\"\n      ry=\"3\"\n    />\n    <svg:g\n      ngx-charts-card\n      *ngFor=\"let c of cards; trackBy: trackBy\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [color]=\"c.color\"\n      [bandColor]=\"c.bandColor\"\n      [textColor]=\"c.textColor\"\n      [data]=\"c.data\"\n      [label]=\"c.label\"\n      [medianSize]=\"medianSize\"\n      [valueFormatting]=\"valueFormatting\"\n      [labelFormatting]=\"labelFormatting\"\n      [animations]=\"animations\"\n      (select)=\"onClick($event)\"\n    />\n  `, isInline: true, components: [{ type: CardComponent, selector: \"g[ngx-charts-card]\", inputs: [\"color\", \"bandColor\", \"textColor\", \"x\", \"y\", \"width\", \"height\", \"label\", \"data\", \"medianSize\", \"valueFormatting\", \"labelFormatting\", \"animations\"], outputs: [\"select\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CardSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-card-series]',\n                    template: `\n    <svg:rect\n      *ngFor=\"let c of emptySlots; trackBy: trackBy\"\n      class=\"card-empty\"\n      [attr.x]=\"c.x\"\n      [attr.y]=\"c.y\"\n      [style.fill]=\"emptyColor\"\n      [attr.width]=\"c.width\"\n      [attr.height]=\"c.height\"\n      rx=\"3\"\n      ry=\"3\"\n    />\n    <svg:g\n      ngx-charts-card\n      *ngFor=\"let c of cards; trackBy: trackBy\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [color]=\"c.color\"\n      [bandColor]=\"c.bandColor\"\n      [textColor]=\"c.textColor\"\n      [data]=\"c.data\"\n      [label]=\"c.label\"\n      [medianSize]=\"medianSize\"\n      [valueFormatting]=\"valueFormatting\"\n      [labelFormatting]=\"labelFormatting\"\n      [animations]=\"animations\"\n      (select)=\"onClick($event)\"\n    />\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { data: [{\n                type: Input\n            }], dims: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], innerPadding: [{\n                type: Input\n            }], cardColor: [{\n                type: Input\n            }], bandColor: [{\n                type: Input\n            }], emptyColor: [{\n                type: Input\n            }], textColor: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], labelFormatting: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }] } });\n\nclass NumberCardComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.emptyColor = 'rgba(0, 0, 0, 0)';\n        this.innerPadding = 15;\n        this.margin = [10, 10, 10, 10];\n    }\n    get clickable() {\n        return !!this.select.observers.length;\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin\n        });\n        this.formatDates();\n        this.domain = this.getDomain();\n        this.setColors();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n        const size = gridSize(this.dims, this.results.length, 150);\n        const N = size[0] * size[1];\n        const data = this.results.slice();\n        while (data.length < N) {\n            data.push({ value: null });\n        }\n        this.data = gridLayout(this.dims, data, 150, this.designatedTotal);\n    }\n    getDomain() {\n        return this.results.map(d => d.label);\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    setColors() {\n        this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n    }\n}\nNumberCardComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NumberCardComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nNumberCardComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: NumberCardComponent, selector: \"ngx-charts-number-card\", inputs: { cardColor: \"cardColor\", bandColor: \"bandColor\", emptyColor: \"emptyColor\", innerPadding: \"innerPadding\", textColor: \"textColor\", valueFormatting: \"valueFormatting\", labelFormatting: \"labelFormatting\", designatedTotal: \"designatedTotal\" }, usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"number-card chart\" [class.clickable]=\"clickable\">\n        <svg:g\n          ngx-charts-card-series\n          [colors]=\"colors\"\n          [cardColor]=\"cardColor\"\n          [bandColor]=\"bandColor\"\n          [textColor]=\"textColor\"\n          [emptyColor]=\"emptyColor\"\n          [data]=\"data\"\n          [dims]=\"dims\"\n          [innerPadding]=\"innerPadding\"\n          [valueFormatting]=\"valueFormatting\"\n          [labelFormatting]=\"labelFormatting\"\n          [animations]=\"animations\"\n          (select)=\"onClick($event)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \"ngx-charts-number-card .cell .trimmed-label{font-size:12px;pointer-events:none;overflow:hidden;text-align:left;line-height:1em}ngx-charts-number-card .cell .trimmed-label p{overflow:hidden;white-space:nowrap;text-overflow:ellipsis;width:100%;padding:0;margin:0}ngx-charts-number-card .cell .value-text{pointer-events:none}ngx-charts-number-card .number-card.clickable .cell .card,ngx-charts-number-card .number-card.clickable .cell .card-band{cursor:pointer}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: CardSeriesComponent, selector: \"g[ngx-charts-card-series]\", inputs: [\"data\", \"dims\", \"colors\", \"innerPadding\", \"cardColor\", \"bandColor\", \"emptyColor\", \"textColor\", \"valueFormatting\", \"labelFormatting\", \"animations\"], outputs: [\"select\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NumberCardComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-number-card', template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"number-card chart\" [class.clickable]=\"clickable\">\n        <svg:g\n          ngx-charts-card-series\n          [colors]=\"colors\"\n          [cardColor]=\"cardColor\"\n          [bandColor]=\"bandColor\"\n          [textColor]=\"textColor\"\n          [emptyColor]=\"emptyColor\"\n          [data]=\"data\"\n          [dims]=\"dims\"\n          [innerPadding]=\"innerPadding\"\n          [valueFormatting]=\"valueFormatting\"\n          [labelFormatting]=\"labelFormatting\"\n          [animations]=\"animations\"\n          (select)=\"onClick($event)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \"ngx-charts-number-card .cell .trimmed-label{font-size:12px;pointer-events:none;overflow:hidden;text-align:left;line-height:1em}ngx-charts-number-card .cell .trimmed-label p{overflow:hidden;white-space:nowrap;text-overflow:ellipsis;width:100%;padding:0;margin:0}ngx-charts-number-card .cell .value-text{pointer-events:none}ngx-charts-number-card .number-card.clickable .cell .card,ngx-charts-number-card .number-card.clickable .cell .card-band{cursor:pointer}\\n\"] }]\n        }], propDecorators: { cardColor: [{\n                type: Input\n            }], bandColor: [{\n                type: Input\n            }], emptyColor: [{\n                type: Input\n            }], innerPadding: [{\n                type: Input\n            }], textColor: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], labelFormatting: [{\n                type: Input\n            }], designatedTotal: [{\n                type: Input\n            }] } });\n\nclass NumberCardModule {\n}\nNumberCardModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NumberCardModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNumberCardModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NumberCardModule, declarations: [CardComponent, CardSeriesComponent, NumberCardComponent], imports: [ChartCommonModule], exports: [CardComponent, CardSeriesComponent, NumberCardComponent] });\nNumberCardModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NumberCardModule, imports: [[ChartCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NumberCardModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule],\n                    declarations: [CardComponent, CardSeriesComponent, NumberCardComponent],\n                    exports: [CardComponent, CardSeriesComponent, NumberCardComponent]\n                }]\n        }] });\n\nclass TreeMapCellComponent {\n    constructor(element) {\n        this.gradient = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.initialized = false;\n        this.orientation = BarOrientation;\n        this.element = element.nativeElement;\n    }\n    ngOnChanges() {\n        this.update();\n        this.valueFormatting = this.valueFormatting || (value => value.toLocaleString());\n        const labelFormatting = this.labelFormatting || (cell => escapeLabel(trimLabel(cell.label, 55)));\n        const cellData = {\n            data: this.data,\n            label: this.label,\n            value: this.value\n        };\n        this.formattedValue = this.valueFormatting(cellData.value);\n        this.formattedLabel = labelFormatting(cellData);\n        this.gradientId = 'grad' + id().toString();\n        this.gradientUrl = `url(#${this.gradientId})`;\n        this.gradientStops = this.getGradientStops();\n    }\n    update() {\n        if (this.initialized) {\n            this.animateToCurrentForm();\n        }\n        else {\n            if (this.animations) {\n                this.loadAnimation();\n            }\n            this.initialized = true;\n        }\n    }\n    loadAnimation() {\n        const node = select(this.element).select('.cell');\n        node.attr('opacity', 0).attr('x', this.x).attr('y', this.y);\n        this.animateToCurrentForm();\n    }\n    getTextColor() {\n        return invertColor(this.fill);\n    }\n    animateToCurrentForm() {\n        const node = select(this.element).select('.cell');\n        if (this.animations) {\n            node\n                .transition()\n                .duration(750)\n                .attr('opacity', 1)\n                .attr('x', this.x)\n                .attr('y', this.y)\n                .attr('width', this.width)\n                .attr('height', this.height);\n        }\n        else {\n            node.attr('opacity', 1).attr('x', this.x).attr('y', this.y).attr('width', this.width).attr('height', this.height);\n        }\n    }\n    onClick() {\n        this.select.emit(this.data);\n    }\n    getGradientStops() {\n        return [\n            {\n                offset: 0,\n                color: this.fill,\n                opacity: 0.3\n            },\n            {\n                offset: 100,\n                color: this.fill,\n                opacity: 1\n            }\n        ];\n    }\n}\nTreeMapCellComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TreeMapCellComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nTreeMapCellComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: TreeMapCellComponent, selector: \"g[ngx-charts-tree-map-cell]\", inputs: { data: \"data\", fill: \"fill\", x: \"x\", y: \"y\", width: \"width\", height: \"height\", label: \"label\", value: \"value\", valueFormatting: \"valueFormatting\", labelFormatting: \"labelFormatting\", gradient: \"gradient\", animations: \"animations\" }, outputs: { select: \"select\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g>\n      <defs *ngIf=\"gradient\">\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          [orientation]=\"orientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:rect\n        [attr.fill]=\"gradient ? gradientUrl : fill\"\n        [attr.width]=\"width\"\n        [attr.height]=\"height\"\n        [attr.x]=\"x\"\n        [attr.y]=\"y\"\n        class=\"cell\"\n        (click)=\"onClick()\"\n      />\n      <svg:foreignObject\n        *ngIf=\"width >= 70 && height >= 35\"\n        [attr.x]=\"x\"\n        [attr.y]=\"y\"\n        [attr.width]=\"width\"\n        [attr.height]=\"height\"\n        class=\"treemap-label\"\n        [style.pointer-events]=\"'none'\"\n      >\n        <xhtml:p [style.color]=\"getTextColor()\" [style.height]=\"height + 'px'\" [style.width]=\"width + 'px'\">\n          <xhtml:span class=\"treemap-label\" [innerHTML]=\"formattedLabel\"> </xhtml:span>\n          <xhtml:br />\n          <xhtml:span\n            *ngIf=\"animations\"\n            class=\"treemap-val\"\n            ngx-charts-count-up\n            [countTo]=\"value\"\n            [valueFormatting]=\"valueFormatting\"\n          >\n          </xhtml:span>\n          <xhtml:span *ngIf=\"!animations\" class=\"treemap-val\">\n            {{ formattedValue }}\n          </xhtml:span>\n        </xhtml:p>\n      </svg:foreignObject>\n    </svg:g>\n  `, isInline: true, components: [{ type: SvgLinearGradientComponent, selector: \"g[ngx-charts-svg-linear-gradient]\", inputs: [\"orientation\", \"name\", \"stops\"] }, { type: CountUpDirective, selector: \"[ngx-charts-count-up]\", inputs: [\"countDuration\", \"countPrefix\", \"countSuffix\", \"valueFormatting\", \"countDecimals\", \"countTo\", \"countFrom\"], outputs: [\"countChange\", \"countFinish\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TreeMapCellComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-tree-map-cell]',\n                    template: `\n    <svg:g>\n      <defs *ngIf=\"gradient\">\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          [orientation]=\"orientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:rect\n        [attr.fill]=\"gradient ? gradientUrl : fill\"\n        [attr.width]=\"width\"\n        [attr.height]=\"height\"\n        [attr.x]=\"x\"\n        [attr.y]=\"y\"\n        class=\"cell\"\n        (click)=\"onClick()\"\n      />\n      <svg:foreignObject\n        *ngIf=\"width >= 70 && height >= 35\"\n        [attr.x]=\"x\"\n        [attr.y]=\"y\"\n        [attr.width]=\"width\"\n        [attr.height]=\"height\"\n        class=\"treemap-label\"\n        [style.pointer-events]=\"'none'\"\n      >\n        <xhtml:p [style.color]=\"getTextColor()\" [style.height]=\"height + 'px'\" [style.width]=\"width + 'px'\">\n          <xhtml:span class=\"treemap-label\" [innerHTML]=\"formattedLabel\"> </xhtml:span>\n          <xhtml:br />\n          <xhtml:span\n            *ngIf=\"animations\"\n            class=\"treemap-val\"\n            ngx-charts-count-up\n            [countTo]=\"value\"\n            [valueFormatting]=\"valueFormatting\"\n          >\n          </xhtml:span>\n          <xhtml:span *ngIf=\"!animations\" class=\"treemap-val\">\n            {{ formattedValue }}\n          </xhtml:span>\n        </xhtml:p>\n      </svg:foreignObject>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { data: [{\n                type: Input\n            }], fill: [{\n                type: Input\n            }], x: [{\n                type: Input\n            }], y: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], labelFormatting: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }] } });\n\nclass TreeMapCellSeriesComponent {\n    constructor() {\n        this.gradient = false;\n        this.tooltipDisabled = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.styleTypes = StyleTypes;\n        this.placementTypes = PlacementTypes;\n    }\n    ngOnChanges(changes) {\n        this.cells = this.getCells();\n    }\n    getCells() {\n        return this.data.children\n            .filter(d => {\n            return d.depth === 1;\n        })\n            .map((d, index) => {\n            const label = d.id;\n            return {\n                data: d.data,\n                x: d.x0,\n                y: d.y0,\n                width: d.x1 - d.x0,\n                height: d.y1 - d.y0,\n                fill: this.colors.getColor(label),\n                label,\n                value: d.value\n            };\n        });\n    }\n    getTooltipText({ label, value }) {\n        return `\n      <span class=\"tooltip-label\">${escapeLabel(label)}</span>\n      <span class=\"tooltip-val\">${value.toLocaleString()}</span>\n    `;\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    trackBy(index, item) {\n        return item.label;\n    }\n}\nTreeMapCellSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TreeMapCellSeriesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nTreeMapCellSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: TreeMapCellSeriesComponent, selector: \"g[ngx-charts-tree-map-cell-series]\", inputs: { data: \"data\", dims: \"dims\", colors: \"colors\", valueFormatting: \"valueFormatting\", labelFormatting: \"labelFormatting\", gradient: \"gradient\", tooltipDisabled: \"tooltipDisabled\", tooltipTemplate: \"tooltipTemplate\", animations: \"animations\" }, outputs: { select: \"select\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g\n      ngx-charts-tree-map-cell\n      *ngFor=\"let c of cells; trackBy: trackBy\"\n      [data]=\"c.data\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [fill]=\"c.fill\"\n      [label]=\"c.label\"\n      [value]=\"c.value\"\n      [valueFormatting]=\"valueFormatting\"\n      [labelFormatting]=\"labelFormatting\"\n      [gradient]=\"gradient\"\n      [animations]=\"animations\"\n      (select)=\"onClick($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"placementTypes.Top\"\n      [tooltipType]=\"styleTypes.tooltip\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(c)\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"c.data\"\n    ></svg:g>\n  `, isInline: true, components: [{ type: TreeMapCellComponent, selector: \"g[ngx-charts-tree-map-cell]\", inputs: [\"data\", \"fill\", \"x\", \"y\", \"width\", \"height\", \"label\", \"value\", \"valueFormatting\", \"labelFormatting\", \"gradient\", \"animations\"], outputs: [\"select\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TreeMapCellSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-tree-map-cell-series]',\n                    template: `\n    <svg:g\n      ngx-charts-tree-map-cell\n      *ngFor=\"let c of cells; trackBy: trackBy\"\n      [data]=\"c.data\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [fill]=\"c.fill\"\n      [label]=\"c.label\"\n      [value]=\"c.value\"\n      [valueFormatting]=\"valueFormatting\"\n      [labelFormatting]=\"labelFormatting\"\n      [gradient]=\"gradient\"\n      [animations]=\"animations\"\n      (select)=\"onClick($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"placementTypes.Top\"\n      [tooltipType]=\"styleTypes.tooltip\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(c)\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"c.data\"\n    ></svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { data: [{\n                type: Input\n            }], dims: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], labelFormatting: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }] } });\n\nclass TreeMapComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.tooltipDisabled = false;\n        this.gradient = false;\n        this.select = new EventEmitter();\n        this.margin = [10, 10, 10, 10];\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin\n        });\n        this.domain = this.getDomain();\n        this.treemap = treemap().size([this.dims.width, this.dims.height]);\n        const rootNode = {\n            name: 'root',\n            value: 0,\n            isRoot: true\n        };\n        const root = stratify()\n            .id(d => {\n            let label = d.name;\n            if (label.constructor.name === 'Date') {\n                label = label.toLocaleDateString();\n            }\n            else {\n                label = label.toLocaleString();\n            }\n            return label;\n        })\n            .parentId(d => (d.isRoot ? null : 'root'))([rootNode, ...this.results])\n            .sum(d => d.value);\n        this.data = this.treemap(root);\n        this.setColors();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    }\n    getDomain() {\n        return this.results.map(d => d.name);\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    setColors() {\n        this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n    }\n}\nTreeMapComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TreeMapComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nTreeMapComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: TreeMapComponent, selector: \"ngx-charts-tree-map\", inputs: { results: \"results\", tooltipDisabled: \"tooltipDisabled\", valueFormatting: \"valueFormatting\", labelFormatting: \"labelFormatting\", gradient: \"gradient\" }, outputs: { select: \"select\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"tree-map chart\">\n        <svg:g\n          ngx-charts-tree-map-cell-series\n          [colors]=\"colors\"\n          [data]=\"data\"\n          [dims]=\"dims\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [valueFormatting]=\"valueFormatting\"\n          [labelFormatting]=\"labelFormatting\"\n          [gradient]=\"gradient\"\n          [animations]=\"animations\"\n          (select)=\"onClick($event)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".tree-map .treemap-val{font-size:1.3em;padding-top:5px;display:inline-block}.tree-map .treemap-label p{display:table-cell;text-align:center;line-height:1.2em;vertical-align:middle}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: TreeMapCellSeriesComponent, selector: \"g[ngx-charts-tree-map-cell-series]\", inputs: [\"data\", \"dims\", \"colors\", \"valueFormatting\", \"labelFormatting\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"animations\"], outputs: [\"select\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TreeMapComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-tree-map', template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"tree-map chart\">\n        <svg:g\n          ngx-charts-tree-map-cell-series\n          [colors]=\"colors\"\n          [data]=\"data\"\n          [dims]=\"dims\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [valueFormatting]=\"valueFormatting\"\n          [labelFormatting]=\"labelFormatting\"\n          [gradient]=\"gradient\"\n          [animations]=\"animations\"\n          (select)=\"onClick($event)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".tree-map .treemap-val{font-size:1.3em;padding-top:5px;display:inline-block}.tree-map .treemap-label p{display:table-cell;text-align:center;line-height:1.2em;vertical-align:middle}\\n\"] }]\n        }], propDecorators: { results: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], labelFormatting: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass TreeMapModule {\n}\nTreeMapModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TreeMapModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTreeMapModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TreeMapModule, declarations: [TreeMapCellComponent, TreeMapCellSeriesComponent, TreeMapComponent], imports: [ChartCommonModule], exports: [TreeMapCellComponent, TreeMapCellSeriesComponent, TreeMapComponent] });\nTreeMapModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TreeMapModule, imports: [[ChartCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TreeMapModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule],\n                    declarations: [TreeMapCellComponent, TreeMapCellSeriesComponent, TreeMapComponent],\n                    exports: [TreeMapCellComponent, TreeMapCellSeriesComponent, TreeMapComponent]\n                }]\n        }] });\n\nvar ElementType;\n(function (ElementType) {\n    ElementType[\"Value\"] = \"value\";\n    ElementType[\"Units\"] = \"units\";\n})(ElementType || (ElementType = {}));\nclass LinearGaugeComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.min = 0;\n        this.max = 100;\n        this.value = 0;\n        this.margin = [10, 20, 10, 20];\n        this.valueResizeScale = 1;\n        this.unitsResizeScale = 1;\n        this.valueTextTransform = '';\n        this.valueTranslate = '';\n        this.unitsTextTransform = '';\n        this.unitsTranslate = '';\n        this.barOrientation = BarOrientation;\n    }\n    ngAfterViewInit() {\n        super.ngAfterViewInit();\n        setTimeout(() => {\n            this.scaleText(ElementType.Value);\n            this.scaleText(ElementType.Units);\n        });\n    }\n    update() {\n        super.update();\n        this.hasPreviousValue = this.previousValue !== undefined;\n        this.max = Math.max(this.max, this.value);\n        this.min = Math.min(this.min, this.value);\n        if (this.hasPreviousValue) {\n            this.max = Math.max(this.max, this.previousValue);\n            this.min = Math.min(this.min, this.previousValue);\n        }\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin\n        });\n        this.valueDomain = this.getValueDomain();\n        this.valueScale = this.getValueScale();\n        this.displayValue = this.getDisplayValue();\n        this.setColors();\n        const xOffset = this.margin[3] + this.dims.width / 2;\n        const yOffset = this.margin[0] + this.dims.height / 2;\n        this.transform = `translate(${xOffset}, ${yOffset})`;\n        this.transformLine = `translate(${this.margin[3] + this.valueScale(this.previousValue)}, ${yOffset})`;\n        this.valueTranslate = `translate(0, -15)`;\n        this.unitsTranslate = `translate(0, 15)`;\n        if (isPlatformServer(this.platformId)) {\n            this.scaleTextSSR('value');\n            this.scaleTextSSR('units');\n        }\n        else {\n            setTimeout(() => this.scaleText(ElementType.Value), 50);\n            setTimeout(() => this.scaleText(ElementType.Units), 50);\n        }\n    }\n    getValueDomain() {\n        return [this.min, this.max];\n    }\n    getValueScale() {\n        return scaleLinear().range([0, this.dims.width]).domain(this.valueDomain);\n    }\n    getDisplayValue() {\n        if (this.valueFormatting) {\n            return this.valueFormatting(this.value);\n        }\n        return this.value.toLocaleString();\n    }\n    scaleText(element, repeat = true) {\n        let el;\n        let resizeScale;\n        if (element === ElementType.Value) {\n            el = this.valueTextEl;\n            resizeScale = this.valueResizeScale;\n        }\n        else {\n            el = this.unitsTextEl;\n            resizeScale = this.unitsResizeScale;\n        }\n        const { width, height } = el.nativeElement.getBoundingClientRect();\n        if (width === 0 || height === 0)\n            return;\n        const oldScale = resizeScale;\n        const availableWidth = this.dims.width;\n        const availableHeight = Math.max(this.dims.height / 2 - 15, 0);\n        const resizeScaleWidth = Math.floor((availableWidth / (width / resizeScale)) * 100) / 100;\n        const resizeScaleHeight = Math.floor((availableHeight / (height / resizeScale)) * 100) / 100;\n        resizeScale = Math.min(resizeScaleHeight, resizeScaleWidth);\n        if (resizeScale !== oldScale) {\n            if (element === ElementType.Value) {\n                this.valueResizeScale = resizeScale;\n                this.valueTextTransform = `scale(${resizeScale}, ${resizeScale})`;\n            }\n            else {\n                this.unitsResizeScale = resizeScale;\n                this.unitsTextTransform = `scale(${resizeScale}, ${resizeScale})`;\n            }\n            this.cd.markForCheck();\n            if (repeat && isPlatformBrowser(this.platformId)) {\n                setTimeout(() => {\n                    this.scaleText(element, false);\n                }, 50);\n            }\n        }\n    }\n    scaleTextSSR(element) {\n        let resizeScale = 1;\n        const value = element === 'value' ? this.displayValue : this.units;\n        const width = calculateTextWidth(VERDANA_FONT_WIDTHS_16_PX, value, 10);\n        const height = 25;\n        const availableWidth = this.dims.width;\n        const availableHeight = Math.max(this.dims.height / 2 - 15, 0);\n        const resizeScaleWidth = Math.floor((availableWidth / (width / resizeScale)) * 100) / 100;\n        const resizeScaleHeight = Math.floor((availableHeight / (height / resizeScale)) * 100) / 100;\n        resizeScale = Math.min(resizeScaleHeight, resizeScaleWidth);\n        if (element === 'value') {\n            this.valueResizeScale = resizeScale;\n            this.valueTextTransform = `scale(${resizeScale}, ${resizeScale})`;\n        }\n        else {\n            this.unitsResizeScale = resizeScale;\n            this.unitsTextTransform = `scale(${resizeScale}, ${resizeScale})`;\n        }\n        this.cd.markForCheck();\n    }\n    onClick() {\n        this.select.emit({\n            name: 'Value',\n            value: this.value\n        });\n    }\n    setColors() {\n        this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, [this.value], this.customColors);\n    }\n}\nLinearGaugeComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LinearGaugeComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nLinearGaugeComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: LinearGaugeComponent, selector: \"ngx-charts-linear-gauge\", inputs: { min: \"min\", max: \"max\", value: \"value\", units: \"units\", previousValue: \"previousValue\", valueFormatting: \"valueFormatting\" }, viewQueries: [{ propertyName: \"valueTextEl\", first: true, predicate: [\"valueTextEl\"], descendants: true }, { propertyName: \"unitsTextEl\", first: true, predicate: [\"unitsTextEl\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\" (click)=\"onClick()\">\n      <svg:g class=\"linear-gauge chart\">\n        <svg:g\n          ngx-charts-bar\n          class=\"background-bar\"\n          [width]=\"dims.width\"\n          [height]=\"3\"\n          [x]=\"margin[3]\"\n          [y]=\"dims.height / 2 + margin[0] - 2\"\n          [data]=\"{}\"\n          [orientation]=\"barOrientation.Horizontal\"\n          [roundEdges]=\"true\"\n          [animations]=\"animations\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-bar\n          [width]=\"valueScale(value)\"\n          [height]=\"3\"\n          [x]=\"margin[3]\"\n          [y]=\"dims.height / 2 + margin[0] - 2\"\n          [fill]=\"colors.getColor(units)\"\n          [data]=\"{}\"\n          [orientation]=\"barOrientation.Horizontal\"\n          [roundEdges]=\"true\"\n          [animations]=\"animations\"\n        ></svg:g>\n\n        <svg:line\n          *ngIf=\"hasPreviousValue\"\n          [attr.transform]=\"transformLine\"\n          x1=\"0\"\n          y1=\"5\"\n          x2=\"0\"\n          y2=\"15\"\n          [attr.stroke]=\"colors.getColor(units)\"\n        />\n\n        <svg:line\n          *ngIf=\"hasPreviousValue\"\n          [attr.transform]=\"transformLine\"\n          x1=\"0\"\n          y1=\"-5\"\n          x2=\"0\"\n          y2=\"-15\"\n          [attr.stroke]=\"colors.getColor(units)\"\n        />\n\n        <svg:g [attr.transform]=\"transform\">\n          <svg:g [attr.transform]=\"valueTranslate\">\n            <svg:text\n              #valueTextEl\n              class=\"value\"\n              [style.textAnchor]=\"'middle'\"\n              [attr.transform]=\"valueTextTransform\"\n              alignment-baseline=\"after-edge\"\n            >\n              {{ displayValue }}\n            </svg:text>\n          </svg:g>\n\n          <svg:g [attr.transform]=\"unitsTranslate\">\n            <svg:text\n              #unitsTextEl\n              class=\"units\"\n              [style.textAnchor]=\"'middle'\"\n              [attr.transform]=\"unitsTextTransform\"\n              alignment-baseline=\"before-edge\"\n            >\n              {{ units }}\n            </svg:text>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".linear-gauge{cursor:pointer}.linear-gauge .background-bar path{fill:#0000000d}.linear-gauge .units{fill:#666}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: BarComponent, selector: \"g[ngx-charts-bar]\", inputs: [\"fill\", \"data\", \"width\", \"height\", \"x\", \"y\", \"orientation\", \"roundEdges\", \"gradient\", \"offset\", \"isActive\", \"stops\", \"animations\", \"ariaLabel\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LinearGaugeComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-linear-gauge', template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\" (click)=\"onClick()\">\n      <svg:g class=\"linear-gauge chart\">\n        <svg:g\n          ngx-charts-bar\n          class=\"background-bar\"\n          [width]=\"dims.width\"\n          [height]=\"3\"\n          [x]=\"margin[3]\"\n          [y]=\"dims.height / 2 + margin[0] - 2\"\n          [data]=\"{}\"\n          [orientation]=\"barOrientation.Horizontal\"\n          [roundEdges]=\"true\"\n          [animations]=\"animations\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-bar\n          [width]=\"valueScale(value)\"\n          [height]=\"3\"\n          [x]=\"margin[3]\"\n          [y]=\"dims.height / 2 + margin[0] - 2\"\n          [fill]=\"colors.getColor(units)\"\n          [data]=\"{}\"\n          [orientation]=\"barOrientation.Horizontal\"\n          [roundEdges]=\"true\"\n          [animations]=\"animations\"\n        ></svg:g>\n\n        <svg:line\n          *ngIf=\"hasPreviousValue\"\n          [attr.transform]=\"transformLine\"\n          x1=\"0\"\n          y1=\"5\"\n          x2=\"0\"\n          y2=\"15\"\n          [attr.stroke]=\"colors.getColor(units)\"\n        />\n\n        <svg:line\n          *ngIf=\"hasPreviousValue\"\n          [attr.transform]=\"transformLine\"\n          x1=\"0\"\n          y1=\"-5\"\n          x2=\"0\"\n          y2=\"-15\"\n          [attr.stroke]=\"colors.getColor(units)\"\n        />\n\n        <svg:g [attr.transform]=\"transform\">\n          <svg:g [attr.transform]=\"valueTranslate\">\n            <svg:text\n              #valueTextEl\n              class=\"value\"\n              [style.textAnchor]=\"'middle'\"\n              [attr.transform]=\"valueTextTransform\"\n              alignment-baseline=\"after-edge\"\n            >\n              {{ displayValue }}\n            </svg:text>\n          </svg:g>\n\n          <svg:g [attr.transform]=\"unitsTranslate\">\n            <svg:text\n              #unitsTextEl\n              class=\"units\"\n              [style.textAnchor]=\"'middle'\"\n              [attr.transform]=\"unitsTextTransform\"\n              alignment-baseline=\"before-edge\"\n            >\n              {{ units }}\n            </svg:text>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".linear-gauge{cursor:pointer}.linear-gauge .background-bar path{fill:#0000000d}.linear-gauge .units{fill:#666}\\n\"] }]\n        }], propDecorators: { min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], units: [{\n                type: Input\n            }], previousValue: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], valueTextEl: [{\n                type: ViewChild,\n                args: ['valueTextEl']\n            }], unitsTextEl: [{\n                type: ViewChild,\n                args: ['unitsTextEl']\n            }] } });\n\nclass GaugeArcComponent {\n    constructor() {\n        this.isActive = false;\n        this.tooltipDisabled = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.placementTypes = PlacementTypes;\n        this.styleTypes = StyleTypes;\n    }\n    tooltipText(arc) {\n        const label = formatLabel(arc.data.name);\n        let val;\n        if (this.valueFormatting) {\n            val = this.valueFormatting(arc.data.value);\n        }\n        else {\n            val = formatLabel(arc.data.value);\n        }\n        return `\n      <span class=\"tooltip-label\">${escapeLabel(label)}</span>\n      <span class=\"tooltip-val\">${val}</span>\n    `;\n    }\n}\nGaugeArcComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GaugeArcComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nGaugeArcComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: GaugeArcComponent, selector: \"g[ngx-charts-gauge-arc]\", inputs: { backgroundArc: \"backgroundArc\", valueArc: \"valueArc\", cornerRadius: \"cornerRadius\", colors: \"colors\", isActive: \"isActive\", tooltipDisabled: \"tooltipDisabled\", valueFormatting: \"valueFormatting\", tooltipTemplate: \"tooltipTemplate\", animations: \"animations\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, ngImport: i0, template: `\n    <svg:g\n      ngx-charts-pie-arc\n      class=\"background-arc\"\n      [startAngle]=\"0\"\n      [endAngle]=\"backgroundArc.endAngle\"\n      [innerRadius]=\"backgroundArc.innerRadius\"\n      [outerRadius]=\"backgroundArc.outerRadius\"\n      [cornerRadius]=\"cornerRadius\"\n      [data]=\"backgroundArc.data\"\n      [animate]=\"false\"\n      [pointerEvents]=\"false\"\n    ></svg:g>\n    <svg:g\n      ngx-charts-pie-arc\n      [startAngle]=\"0\"\n      [endAngle]=\"valueArc.endAngle\"\n      [innerRadius]=\"valueArc.innerRadius\"\n      [outerRadius]=\"valueArc.outerRadius\"\n      [cornerRadius]=\"cornerRadius\"\n      [fill]=\"colors.getColor(valueArc.data.name)\"\n      [data]=\"valueArc.data\"\n      [animate]=\"animations\"\n      [isActive]=\"isActive\"\n      (select)=\"select.emit($event)\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"placementTypes.Top\"\n      [tooltipType]=\"styleTypes.tooltip\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(valueArc)\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"valueArc.data\"\n    ></svg:g>\n  `, isInline: true, components: [{ type: PieArcComponent, selector: \"g[ngx-charts-pie-arc]\", inputs: [\"fill\", \"startAngle\", \"endAngle\", \"innerRadius\", \"outerRadius\", \"cornerRadius\", \"value\", \"max\", \"data\", \"explodeSlices\", \"gradient\", \"animate\", \"pointerEvents\", \"isActive\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dblclick\"] }], directives: [{ type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GaugeArcComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-gauge-arc]',\n                    template: `\n    <svg:g\n      ngx-charts-pie-arc\n      class=\"background-arc\"\n      [startAngle]=\"0\"\n      [endAngle]=\"backgroundArc.endAngle\"\n      [innerRadius]=\"backgroundArc.innerRadius\"\n      [outerRadius]=\"backgroundArc.outerRadius\"\n      [cornerRadius]=\"cornerRadius\"\n      [data]=\"backgroundArc.data\"\n      [animate]=\"false\"\n      [pointerEvents]=\"false\"\n    ></svg:g>\n    <svg:g\n      ngx-charts-pie-arc\n      [startAngle]=\"0\"\n      [endAngle]=\"valueArc.endAngle\"\n      [innerRadius]=\"valueArc.innerRadius\"\n      [outerRadius]=\"valueArc.outerRadius\"\n      [cornerRadius]=\"cornerRadius\"\n      [fill]=\"colors.getColor(valueArc.data.name)\"\n      [data]=\"valueArc.data\"\n      [animate]=\"animations\"\n      [isActive]=\"isActive\"\n      (select)=\"select.emit($event)\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"placementTypes.Top\"\n      [tooltipType]=\"styleTypes.tooltip\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(valueArc)\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"valueArc.data\"\n    ></svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { backgroundArc: [{\n                type: Input\n            }], valueArc: [{\n                type: Input\n            }], cornerRadius: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], isActive: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }] } });\n\nclass GaugeAxisComponent {\n    constructor() {\n        this.rotate = '';\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.rotationAngle = -90 + this.startAngle;\n        this.rotate = `rotate(${this.rotationAngle})`;\n        this.ticks = this.getTicks();\n    }\n    getTicks() {\n        const bigTickSegment = this.angleSpan / this.bigSegments;\n        const smallTickSegment = bigTickSegment / this.smallSegments;\n        const tickLength = 20;\n        const ticks = {\n            big: [],\n            small: []\n        };\n        const startDistance = this.radius + 10;\n        const textDist = startDistance + tickLength + 10;\n        for (let i = 0; i <= this.bigSegments; i++) {\n            const angleDeg = i * bigTickSegment;\n            const angle = (angleDeg * Math.PI) / 180;\n            const textAnchor = this.getTextAnchor(angleDeg);\n            let skip = false;\n            if (i === 0 && this.angleSpan === 360) {\n                skip = true;\n            }\n            if (!skip) {\n                let text = Number.parseFloat(this.valueScale.invert(angleDeg).toString()).toLocaleString();\n                if (this.tickFormatting) {\n                    text = this.tickFormatting(text);\n                }\n                ticks.big.push({\n                    line: this.getTickPath(startDistance, tickLength, angle),\n                    textAnchor,\n                    text,\n                    textTransform: `\n            translate(${textDist * Math.cos(angle)}, ${textDist * Math.sin(angle)}) rotate(${-this.rotationAngle})\n          `\n                });\n            }\n            if (i === this.bigSegments) {\n                continue;\n            }\n            for (let j = 1; j <= this.smallSegments; j++) {\n                const smallAngleDeg = angleDeg + j * smallTickSegment;\n                const smallAngle = (smallAngleDeg * Math.PI) / 180;\n                ticks.small.push({\n                    line: this.getTickPath(startDistance, tickLength / 2, smallAngle)\n                });\n            }\n        }\n        return ticks;\n    }\n    getTextAnchor(angle) {\n        // [0, 45] = 'middle';\n        // [46, 135] = 'start';\n        // [136, 225] = 'middle';\n        // [226, 315] = 'end';\n        angle = (this.startAngle + angle) % 360;\n        let textAnchor = TextAnchor.Middle;\n        if (angle > 45 && angle <= 135) {\n            textAnchor = TextAnchor.Start;\n        }\n        else if (angle > 225 && angle <= 315) {\n            textAnchor = TextAnchor.End;\n        }\n        return textAnchor;\n    }\n    getTickPath(startDistance, tickLength, angle) {\n        const y1 = startDistance * Math.sin(angle);\n        const y2 = (startDistance + tickLength) * Math.sin(angle);\n        const x1 = startDistance * Math.cos(angle);\n        const x2 = (startDistance + tickLength) * Math.cos(angle);\n        const points = [\n            { x: x1, y: y1 },\n            { x: x2, y: y2 }\n        ];\n        const lineGenerator = line()\n            .x(d => d.x)\n            .y(d => d.y);\n        return lineGenerator(points);\n    }\n}\nGaugeAxisComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GaugeAxisComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nGaugeAxisComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: GaugeAxisComponent, selector: \"g[ngx-charts-gauge-axis]\", inputs: { bigSegments: \"bigSegments\", smallSegments: \"smallSegments\", min: \"min\", max: \"max\", angleSpan: \"angleSpan\", startAngle: \"startAngle\", radius: \"radius\", valueScale: \"valueScale\", tickFormatting: \"tickFormatting\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g [attr.transform]=\"rotate\">\n      <svg:g *ngFor=\"let tick of ticks.big\" class=\"gauge-tick gauge-tick-large\">\n        <svg:path [attr.d]=\"tick.line\" />\n      </svg:g>\n      <svg:g *ngFor=\"let tick of ticks.big\" class=\"gauge-tick gauge-tick-large\">\n        <svg:text\n          [style.textAnchor]=\"tick.textAnchor\"\n          [attr.transform]=\"tick.textTransform\"\n          alignment-baseline=\"central\"\n        >\n          {{ tick.text }}\n        </svg:text>\n      </svg:g>\n      <svg:g *ngFor=\"let tick of ticks.small\" class=\"gauge-tick gauge-tick-small\">\n        <svg:path [attr.d]=\"tick.line\" />\n      </svg:g>\n    </svg:g>\n  `, isInline: true, directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GaugeAxisComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-gauge-axis]',\n                    template: `\n    <svg:g [attr.transform]=\"rotate\">\n      <svg:g *ngFor=\"let tick of ticks.big\" class=\"gauge-tick gauge-tick-large\">\n        <svg:path [attr.d]=\"tick.line\" />\n      </svg:g>\n      <svg:g *ngFor=\"let tick of ticks.big\" class=\"gauge-tick gauge-tick-large\">\n        <svg:text\n          [style.textAnchor]=\"tick.textAnchor\"\n          [attr.transform]=\"tick.textTransform\"\n          alignment-baseline=\"central\"\n        >\n          {{ tick.text }}\n        </svg:text>\n      </svg:g>\n      <svg:g *ngFor=\"let tick of ticks.small\" class=\"gauge-tick gauge-tick-small\">\n        <svg:path [attr.d]=\"tick.line\" />\n      </svg:g>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { bigSegments: [{\n                type: Input\n            }], smallSegments: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], angleSpan: [{\n                type: Input\n            }], startAngle: [{\n                type: Input\n            }], radius: [{\n                type: Input\n            }], valueScale: [{\n                type: Input\n            }], tickFormatting: [{\n                type: Input\n            }] } });\n\nclass GaugeComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.min = 0;\n        this.max = 100;\n        this.bigSegments = 10;\n        this.smallSegments = 5;\n        this.showAxis = true;\n        this.startAngle = -120;\n        this.angleSpan = 240;\n        this.activeEntries = [];\n        this.tooltipDisabled = false;\n        this.showText = true;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.resizeScale = 1;\n        this.rotation = '';\n        this.textTransform = 'scale(1, 1)';\n        this.cornerRadius = 10;\n    }\n    ngAfterViewInit() {\n        super.ngAfterViewInit();\n        setTimeout(() => this.scaleText());\n    }\n    update() {\n        super.update();\n        if (!this.showAxis) {\n            if (!this.margin) {\n                this.margin = [10, 20, 10, 20];\n            }\n        }\n        else {\n            if (!this.margin) {\n                this.margin = [60, 100, 60, 100];\n            }\n        }\n        // make the starting angle positive\n        if (this.startAngle < 0) {\n            this.startAngle = (this.startAngle % 360) + 360;\n        }\n        this.angleSpan = Math.min(this.angleSpan, 360);\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showLegend: this.legend,\n            legendPosition: this.legendPosition\n        });\n        this.domain = this.getDomain();\n        this.valueDomain = this.getValueDomain();\n        this.valueScale = this.getValueScale();\n        this.displayValue = this.getDisplayValue();\n        this.outerRadius = Math.min(this.dims.width, this.dims.height) / 2;\n        this.arcs = this.getArcs();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        const xOffset = this.margin[3] + this.dims.width / 2;\n        const yOffset = this.margin[0] + this.dims.height / 2;\n        this.transform = `translate(${xOffset}, ${yOffset})`;\n        this.rotation = `rotate(${this.startAngle})`;\n        setTimeout(() => this.scaleText(), 50);\n    }\n    getArcs() {\n        const arcs = [];\n        const availableRadius = this.outerRadius * 0.7;\n        const radiusPerArc = Math.min(availableRadius / this.results.length, 10);\n        const arcWidth = radiusPerArc * 0.7;\n        this.textRadius = this.outerRadius - this.results.length * radiusPerArc;\n        this.cornerRadius = Math.floor(arcWidth / 2);\n        let i = 0;\n        for (const d of this.results) {\n            const outerRadius = this.outerRadius - i * radiusPerArc;\n            const innerRadius = outerRadius - arcWidth;\n            const backgroundArc = {\n                endAngle: (this.angleSpan * Math.PI) / 180,\n                innerRadius,\n                outerRadius,\n                data: {\n                    value: this.max,\n                    name: d.name\n                }\n            };\n            const valueArc = {\n                endAngle: (Math.min(this.valueScale(d.value), this.angleSpan) * Math.PI) / 180,\n                innerRadius,\n                outerRadius,\n                data: {\n                    value: d.value,\n                    name: d.name\n                }\n            };\n            const arc = {\n                backgroundArc,\n                valueArc\n            };\n            arcs.push(arc);\n            i++;\n        }\n        return arcs;\n    }\n    getDomain() {\n        return this.results.map(d => d.name);\n    }\n    getValueDomain() {\n        const values = this.results.map(d => d.value);\n        const dataMin = Math.min(...values);\n        const dataMax = Math.max(...values);\n        if (this.min !== undefined) {\n            this.min = Math.min(this.min, dataMin);\n        }\n        else {\n            this.min = dataMin;\n        }\n        if (this.max !== undefined) {\n            this.max = Math.max(this.max, dataMax);\n        }\n        else {\n            this.max = dataMax;\n        }\n        return [this.min, this.max];\n    }\n    getValueScale() {\n        return scaleLinear().range([0, this.angleSpan]).nice().domain(this.valueDomain);\n    }\n    getDisplayValue() {\n        const value = this.results.map(d => d.value).reduce((a, b) => a + b, 0);\n        if (this.textValue && 0 !== this.textValue.length) {\n            return this.textValue.toLocaleString();\n        }\n        if (this.valueFormatting) {\n            return this.valueFormatting(value);\n        }\n        return value.toLocaleString();\n    }\n    scaleText(repeat = true) {\n        if (!this.showText) {\n            return;\n        }\n        const { width } = this.textEl.nativeElement.getBoundingClientRect();\n        const oldScale = this.resizeScale;\n        if (width === 0) {\n            this.resizeScale = 1;\n        }\n        else {\n            const availableSpace = this.textRadius;\n            this.resizeScale = Math.floor((availableSpace / (width / this.resizeScale)) * 100) / 100;\n        }\n        if (this.resizeScale !== oldScale) {\n            this.textTransform = `scale(${this.resizeScale}, ${this.resizeScale})`;\n            this.cd.markForCheck();\n            if (repeat) {\n                setTimeout(() => this.scaleText(false), 50);\n            }\n        }\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    getLegendOptions() {\n        return {\n            scaleType: ScaleType.Ordinal,\n            colors: this.colors,\n            domain: this.domain,\n            title: this.legendTitle,\n            position: this.legendPosition\n        };\n    }\n    setColors() {\n        this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n    }\n    onActivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.name === d.name && entry.series === d.series;\n        });\n        return item !== undefined;\n    }\n    trackBy(index, item) {\n        return item.valueArc.data.name;\n    }\n}\nGaugeComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GaugeComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nGaugeComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: GaugeComponent, selector: \"ngx-charts-gauge\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", min: \"min\", max: \"max\", textValue: \"textValue\", units: \"units\", bigSegments: \"bigSegments\", smallSegments: \"smallSegments\", results: \"results\", showAxis: \"showAxis\", startAngle: \"startAngle\", angleSpan: \"angleSpan\", activeEntries: \"activeEntries\", axisTickFormatting: \"axisTickFormatting\", tooltipDisabled: \"tooltipDisabled\", valueFormatting: \"valueFormatting\", showText: \"showText\", margin: \"margin\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], viewQueries: [{ propertyName: \"textEl\", first: true, predicate: [\"textEl\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"gauge chart\">\n        <svg:g *ngFor=\"let arc of arcs; trackBy: trackBy\" [attr.transform]=\"rotation\">\n          <svg:g\n            ngx-charts-gauge-arc\n            [backgroundArc]=\"arc.backgroundArc\"\n            [valueArc]=\"arc.valueArc\"\n            [cornerRadius]=\"cornerRadius\"\n            [colors]=\"colors\"\n            [isActive]=\"isActive(arc.valueArc.data)\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [valueFormatting]=\"valueFormatting\"\n            [animations]=\"animations\"\n            (select)=\"onClick($event)\"\n            (activate)=\"onActivate($event)\"\n            (deactivate)=\"onDeactivate($event)\"\n          ></svg:g>\n        </svg:g>\n\n        <svg:g\n          ngx-charts-gauge-axis\n          *ngIf=\"showAxis\"\n          [bigSegments]=\"bigSegments\"\n          [smallSegments]=\"smallSegments\"\n          [min]=\"min\"\n          [max]=\"max\"\n          [radius]=\"outerRadius\"\n          [angleSpan]=\"angleSpan\"\n          [valueScale]=\"valueScale\"\n          [startAngle]=\"startAngle\"\n          [tickFormatting]=\"axisTickFormatting\"\n        ></svg:g>\n\n        <svg:text\n          #textEl\n          *ngIf=\"showText\"\n          [style.textAnchor]=\"'middle'\"\n          [attr.transform]=\"textTransform\"\n          alignment-baseline=\"central\"\n        >\n          <tspan x=\"0\" dy=\"0\">{{ displayValue }}</tspan>\n          <tspan x=\"0\" dy=\"1.2em\">{{ units }}</tspan>\n        </svg:text>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".gauge .background-arc path{fill:#0000000d}.gauge .gauge-tick path{stroke:#666}.gauge .gauge-tick text{font-size:12px;fill:#666;font-weight:700}.gauge .gauge-tick-large path{stroke-width:2px}.gauge .gauge-tick-small path{stroke-width:1px}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: GaugeArcComponent, selector: \"g[ngx-charts-gauge-arc]\", inputs: [\"backgroundArc\", \"valueArc\", \"cornerRadius\", \"colors\", \"isActive\", \"tooltipDisabled\", \"valueFormatting\", \"tooltipTemplate\", \"animations\"], outputs: [\"select\", \"activate\", \"deactivate\"] }, { type: GaugeAxisComponent, selector: \"g[ngx-charts-gauge-axis]\", inputs: [\"bigSegments\", \"smallSegments\", \"min\", \"max\", \"angleSpan\", \"startAngle\", \"radius\", \"valueScale\", \"tickFormatting\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GaugeComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-gauge', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"gauge chart\">\n        <svg:g *ngFor=\"let arc of arcs; trackBy: trackBy\" [attr.transform]=\"rotation\">\n          <svg:g\n            ngx-charts-gauge-arc\n            [backgroundArc]=\"arc.backgroundArc\"\n            [valueArc]=\"arc.valueArc\"\n            [cornerRadius]=\"cornerRadius\"\n            [colors]=\"colors\"\n            [isActive]=\"isActive(arc.valueArc.data)\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [valueFormatting]=\"valueFormatting\"\n            [animations]=\"animations\"\n            (select)=\"onClick($event)\"\n            (activate)=\"onActivate($event)\"\n            (deactivate)=\"onDeactivate($event)\"\n          ></svg:g>\n        </svg:g>\n\n        <svg:g\n          ngx-charts-gauge-axis\n          *ngIf=\"showAxis\"\n          [bigSegments]=\"bigSegments\"\n          [smallSegments]=\"smallSegments\"\n          [min]=\"min\"\n          [max]=\"max\"\n          [radius]=\"outerRadius\"\n          [angleSpan]=\"angleSpan\"\n          [valueScale]=\"valueScale\"\n          [startAngle]=\"startAngle\"\n          [tickFormatting]=\"axisTickFormatting\"\n        ></svg:g>\n\n        <svg:text\n          #textEl\n          *ngIf=\"showText\"\n          [style.textAnchor]=\"'middle'\"\n          [attr.transform]=\"textTransform\"\n          alignment-baseline=\"central\"\n        >\n          <tspan x=\"0\" dy=\"0\">{{ displayValue }}</tspan>\n          <tspan x=\"0\" dy=\"1.2em\">{{ units }}</tspan>\n        </svg:text>\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".ngx-charts-outer{-webkit-animation:chartFadeIn linear .6s;animation:chartFadeIn linear .6s}@-webkit-keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".gauge .background-arc path{fill:#0000000d}.gauge .gauge-tick path{stroke:#666}.gauge .gauge-tick text{font-size:12px;fill:#666;font-weight:700}.gauge .gauge-tick-large path{stroke-width:2px}.gauge .gauge-tick-small path{stroke-width:1px}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], textValue: [{\n                type: Input\n            }], units: [{\n                type: Input\n            }], bigSegments: [{\n                type: Input\n            }], smallSegments: [{\n                type: Input\n            }], results: [{\n                type: Input\n            }], showAxis: [{\n                type: Input\n            }], startAngle: [{\n                type: Input\n            }], angleSpan: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], axisTickFormatting: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], showText: [{\n                type: Input\n            }], margin: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }], textEl: [{\n                type: ViewChild,\n                args: ['textEl']\n            }] } });\n\nclass GaugeModule {\n}\nGaugeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GaugeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nGaugeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GaugeModule, declarations: [LinearGaugeComponent, GaugeComponent, GaugeArcComponent, GaugeAxisComponent], imports: [ChartCommonModule, PieChartModule, BarChartModule], exports: [LinearGaugeComponent, GaugeComponent, GaugeArcComponent, GaugeAxisComponent] });\nGaugeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GaugeModule, imports: [[ChartCommonModule, PieChartModule, BarChartModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GaugeModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule, PieChartModule, BarChartModule],\n                    declarations: [LinearGaugeComponent, GaugeComponent, GaugeArcComponent, GaugeAxisComponent],\n                    exports: [LinearGaugeComponent, GaugeComponent, GaugeArcComponent, GaugeAxisComponent]\n                }]\n        }] });\n\n// The export is needed here to generate a valid polyfills.metadata.json file\nfunction ngxChartsPolyfills() {\n    // IE11 fix\n    // Ref: https://github.com/swimlane/ngx-charts/issues/386\n    if (typeof SVGElement !== 'undefined' && typeof SVGElement.prototype.contains === 'undefined') {\n        SVGElement.prototype.contains = HTMLDivElement.prototype.contains;\n    }\n}\n\nclass NgxChartsModule {\n    constructor() {\n        ngxChartsPolyfills();\n    }\n}\nNgxChartsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NgxChartsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNgxChartsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NgxChartsModule, exports: [ChartCommonModule,\n        AreaChartModule,\n        BarChartModule,\n        BoxChartModule,\n        BubbleChartModule,\n        HeatMapModule,\n        LineChartModule,\n        PolarChartModule,\n        NumberCardModule,\n        PieChartModule,\n        TreeMapModule,\n        GaugeModule] });\nNgxChartsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NgxChartsModule, imports: [ChartCommonModule,\n        AreaChartModule,\n        BarChartModule,\n        BoxChartModule,\n        BubbleChartModule,\n        HeatMapModule,\n        LineChartModule,\n        PolarChartModule,\n        NumberCardModule,\n        PieChartModule,\n        TreeMapModule,\n        GaugeModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NgxChartsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [\n                        ChartCommonModule,\n                        AreaChartModule,\n                        BarChartModule,\n                        BoxChartModule,\n                        BubbleChartModule,\n                        HeatMapModule,\n                        LineChartModule,\n                        PolarChartModule,\n                        NumberCardModule,\n                        PieChartModule,\n                        TreeMapModule,\n                        GaugeModule\n                    ]\n                }]\n        }], ctorParameters: function () { return []; } });\n\nfunction tickFormat(fieldType, groupByType) {\n    return function (label) {\n        if (label === 'No Value' || label === 'Other') {\n            return label;\n        }\n        if (fieldType === 'date' && groupByType === 'groupBy') {\n            const formatter = timeFormat('MM/DD/YYYY');\n            return formatter(label);\n        }\n        return label.toString();\n    };\n}\n\n/* eslint-disable @typescript-eslint/no-empty-interface */\n\n/*\n * Public API Surface of ngx-charts\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AdvancedLegendComponent, AdvancedPieChartComponent, AreaChartComponent, AreaChartModule, AreaChartNormalizedComponent, AreaChartStackedComponent, AreaComponent, AreaSeriesComponent, AxesModule, AxisLabelComponent, BarChartModule, BarChartType, BarComponent, BarHorizontal2DComponent, BarHorizontalComponent, BarHorizontalNormalizedComponent, BarHorizontalStackedComponent, BarLabelComponent, BarOrientation, BarVertical2DComponent, BarVerticalComponent, BarVerticalNormalizedComponent, BarVerticalStackedComponent, BaseChartComponent, BoxChartComponent, BoxChartModule, BoxComponent, BoxSeriesComponent, BubbleChartComponent, BubbleChartModule, BubbleSeriesComponent, CardComponent, CardSeriesComponent, ChartCommonModule, ChartComponent, CircleComponent, CircleSeriesComponent, ColorHelper, CountUpDirective, D0Types, GaugeArcComponent, GaugeAxisComponent, GaugeComponent, GaugeModule, GridPanelComponent, GridPanelSeriesComponent, HeatCellSeriesComponent, HeatMapCellComponent, HeatMapComponent, HeatMapModule, LegendComponent, LegendEntryComponent, LegendPosition, LegendType, LineChartComponent, LineChartModule, LineComponent, LineSeriesComponent, LinearGaugeComponent, NgxChartsModule, NumberCardComponent, NumberCardModule, Orientation, PieArcComponent, PieChartComponent, PieChartModule, PieGridComponent, PieGridSeriesComponent, PieLabelComponent, PieSeriesComponent, PlacementTypes, PolarChartComponent, PolarChartModule, PolarSeriesComponent, ScaleLegendComponent, ScaleType, SeriesHorizontal, SeriesType, SeriesVerticalComponent, ShowTypes, StyleTypes, SvgLinearGradientComponent, SvgRadialGradientComponent, TextAnchor, Timeline, TooltipArea, TooltipContentComponent, TooltipDirective, TooltipModule, TooltipService, TreeMapCellComponent, TreeMapCellSeriesComponent, TreeMapComponent, TreeMapModule, VisibilityObserver, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent, calculateViewDimensions, colorSets, count, decimalChecker, escapeLabel, formatLabel, getDomain, getScale, getScaleType, getUniqueXDomainValues, getXDomainArray, gridLayout, gridSize, hexToRgb, id, invertColor, reduceTicks, shadeRGBColor, sortByDomain, sortByTime, sortLinear, throttle, throttleable, tickFormat, trimLabel };\n//# sourceMappingURL=swimlane-ngx-charts.mjs.map\n"],"mappings":"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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;MAAE87B,eAAe,EAAE3/B,uBAAuB,CAAC4/B,MAAM;MAAErG,aAAa,EAAE95B,iBAAiB,CAACm6B,IAAI;MAAEN,MAAM,EAAE,CAAC,yvDAAyvD;IAAE,CAAC;EAC11D,CAAC,CAAC,QAAkB;IAAE1jB,MAAM,EAAE,CAAC;MACvB1H,IAAI,EAAEvO;IACV,CAAC,CAAC;IAAEihD,WAAW,EAAE,CAAC;MACd1yC,IAAI,EAAEvO;IACV,CAAC,CAAC;IAAEm9C,cAAc,EAAE,CAAC;MACjB5uC,IAAI,EAAEvO;IACV,CAAC,CAAC;IAAEkhD,KAAK,EAAE,CAAC;MACR3yC,IAAI,EAAEvO;IACV,CAAC,CAAC;IAAEmhD,KAAK,EAAE,CAAC;MACR5yC,IAAI,EAAEvO;IACV,CAAC,CAAC;IAAEqS,cAAc,EAAE,CAAC;MACjB9D,IAAI,EAAEvO;IACV,CAAC,CAAC;IAAEgT,cAAc,EAAE,CAAC;MACjBzE,IAAI,EAAEvO;IACV,CAAC,CAAC;IAAEsS,UAAU,EAAE,CAAC;MACb/D,IAAI,EAAEvO;IACV,CAAC,CAAC;IAAEiT,UAAU,EAAE,CAAC;MACb1E,IA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6I,cAAc,EAAgsD1hC,EAAE,CAAC84B,IAAI,EAA0E94B,EAAE,CAACyhC,OAAO,EAApkD4H,cAAc,EAAyQqC,cAAc,EAA6S+T,mBAAmB,EAA+NtI,WAAW,EAAmM7F,qBAAqB,EAAgPqI,QAAQ;EAAA3gB,MAAA,GAAAtiB,IAAA;EAAAuiB,aAAA;EAAAoG,eAAA;AAAA,EAA6d;AAChxH;EAAA,QAAAlG,SAAA,oBAAAA,SAAA,KAjiM0Gn6B,EAAE,CAAAo6B,iBAAA,CAiiMjBoqB,yBAAyB,EAAc,CAAC;IACvH51C,IAAI,EAAE1O,SAAS;IACfozB,IAAI,EAAE,CAAC;MAAE+G,QAAQ,EAAE,+BAA+B;MAAE91B,QAAQ,EAAG;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;MAAE87B,eAAe,EAAE3/B,uBAAuB,CAAC4/B,MAAM;MAAErG,aAAa,EAAE95B,iBAAiB,CAACm6B,IAAI;MAAEN,MAAM,EAAE,CAAC,yvDAAyvD;IAAE,CAAC;EAC11D,CAAC,CAAC,QAAkB;IA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EAAyQqC,cAAc,EAAqwB1rC,EAAE,CAACyhC,OAAO,EAAleqkB,gBAAgB;EAAA9sB,MAAA,GAAAtiB,IAAA;EAAAuiB,aAAA;EAAAhsB,IAAA;IAAAmlC,SAAA,EAAujB,CAC9yG3xC,OAAO,CAAC,gBAAgB,EAAE,CACtBC,UAAU,CAAC,QAAQ,EAAE,CACjBC,KAAK,CAAC;MACFuL,OAAO,EAAE,CAAC;MACVxC,SAAS,EAAE;IACf,CAAC,CAAC,EACF9I,OAAO,CAAC,GAAG,EAAED,KAAK,CAAC;MAAEuL,OAAO,EAAE,CAAC;MAAExC,SAAS,EAAE;IAAW,CAAC,CAAC,CAAC,CAC7D,CAAC,CACL,CAAC;EACL;EAAA21B,eAAA;AAAA,EAAiG;AACtG;EAAA,QAAAlG,SAAA,oBAAAA,SAAA,KAxmP0Gn6B,EAAE,CAAAo6B,iBAAA,CAwmPjB0uB,wBAAwB,EAAc,CAAC;IACtHl6C,IAAI,EAAE1O,SAAS;IACfozB,IAAI,EAAE,CAAC;MAAE+G,QAAQ,EAAE,8BAA8B;MAAE91B,QAAQ,EAAG;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;MAAE87B,eAAe,EAAE3/B,uBAAuB,CAAC4/B,MAAM;MAAErG,a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E,CAACyhC,OAAO,EAAleqkB,gBAAgB;EAAA9sB,MAAA,GAAAtiB,IAAA;EAAAuiB,aAAA;EAAAhsB,IAAA;IAAAmlC,SAAA,EAAujB,CACrqG3xC,OAAO,CAAC,gBAAgB,EAAE,CACtBC,UAAU,CAAC,QAAQ,EAAE,CACjBC,KAAK,CAAC;MACFuL,OAAO,EAAE,CAAC;MACVxC,SAAS,EAAE;IACf,CAAC,CAAC,EACF9I,OAAO,CAAC,GAAG,EAAED,KAAK,CAAC;MAAEuL,OAAO,EAAE,CAAC;MAAExC,SAAS,EAAE;IAAW,CAAC,CAAC,CAAC,CAC7D,CAAC,CACL,CAAC;EACL;EAAA21B,eAAA;AAAA,EAAiG;AACtG;EAAA,QAAAlG,SAAA,oBAAAA,SAAA,KAtiR0Gn6B,EAAE,CAAAo6B,iBAAA,CAsiRjBuwB,6BAA6B,EAAc,CAAC;IAC3H/7C,IAAI,EAAE1O,SAAS;IACfozB,IAAI,EAAE,CAAC;MAAE+G,QAAQ,EAAE,mCAAmC;MAAE91B,QAAQ,EAAG;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;MAAE87B,eAAe,EAAE3/B,uBAAuB,CAAC4/B,MAAM;MAAErG,aAAa,EAAE95B,iBAAiB,CAACm6B,IAAI;MAAEroB,UAAU,EAAE,CACjFxQ,OAAO,CAAC,gBA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CAAC;MAAEuL,OAAO,EAAE,CAAC;MAAExC,SAAS,EAAE;IAAW,CAAC,CAAC,CAAC,CAC7D,CAAC,CACL,CAAC;EACL;EAAA21B,eAAA;AAAA,EAAiG;AACtG;EAAA,QAAAlG,SAAA,oBAAAA,SAAA,KAvwU0Gn6B,EAAE,CAAAo6B,iBAAA,CAuwUjB4yB,8BAA8B,EAAc,CAAC;IAC5Hp+C,IAAI,EAAE1O,SAAS;IACfozB,IAAI,EAAE,CAAC;MAAE+G,QAAQ,EAAE,oCAAoC;MAAE91B,QAAQ,EAAG;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;MAAE01B,aAAa,EAAE95B,iBAAiB,CAACm6B,IAAI;MAAE+F,eAAe,EAAE3/B,uBAAuB,CAAC4/B,MAAM;MAAEruB,UAAU,EAAE,CACjFxQ,OAAO,CAAC,gBAAgB,EAAE,CACtBC,UAAU,CAAC,QAAQ,EAAE,CACjBC,KAAK,CAAC;QACFuL,OAAO,EAAE,CAAC;QACVxC,SAAS,EAAE;MACf,CAAC,CAAC,EACF9I,OAAO,CAAC,GAAG,EAAED,KAAK,CAAC;QAAEuL,OAAO,EAAE,CAAC;QAAExC,SAAS,EAAE;MAAW,CAAC,CAAC,CAAC,CAC7D,CAAC,CACL,CAAC,CACL;MAAEsvB,MAAM,EAAE,CAAC,yvDAAyvD;IAAE,CAAC;EACpxD,CAAC,CAAC,QAAkB;IAAE1jB,MAAM,EAAE,CAA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S;IACfozB,IAAI,EAAE,CAAC;MAAE+G,QAAQ,EAAE,iCAAiC;MAAE91B,QAAQ,EAAG;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;MAAE01B,aAAa,EAAE95B,iBAAiB,CAACm6B,IAAI;MAAE+F,eAAe,EAAE3/B,uBAAuB,CAAC4/B,MAAM;MAAEruB,UAAU,EAAE,CACjFxQ,OAAO,CAAC,gBAAgB,EAAE,CACtBC,UAAU,CAAC,QAAQ,EAAE,CACjBC,KAAK,CAAC;QACFuL,OAAO,EAAE,CAAC;QACVxC,SAAS,EAAE;MACf,CAAC,CAAC,EACF9I,OAAO,CAAC,GAAG,EAAED,KAAK,CAAC;QAAEuL,OAAO,EAAE,CAAC;QAAExC,SAAS,EAAE;MAAW,CAAC,CAAC,CAAC,CAC7D,CAAC,CACL,CAAC,CACL;MAAEsvB,MAAM,EAAE,CAAC,yvDAAyvD;IAAE,CAAC;EACpxD,CAAC,CAAC,QAAkB;IAAE1jB,MAAM,EAAE,CAAC;MACvB1H,IAAI,EAAEvO;IACV,CAAC,CAAC;IAAEihD,WAAW,EAAE,CAAC;MACd1yC,IAAI,EAAEvO;IACV,CAAC,CAAC;IAAEm9C,cAAc,EAAE,CAAC;MACjB5uC,IAAI,EAAEvO;IACV,CAAC,CAAC;IAAEkhD,KAAK,EAAE,CAAC;MACR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"},"metadata":{},"sourceType":"module"}