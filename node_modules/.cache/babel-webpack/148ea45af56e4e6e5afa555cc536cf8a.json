{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport { of } from 'rxjs';\nimport { WizardService } from '../authentication/signup-wizard/wizard.service';\nimport { UserService } from './user.service';\nimport { BulletBankService } from \"./bullet-bank.service\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../authentication/signup-wizard/wizard.service\";\nimport * as i3 from \"./user.service\";\nimport * as i4 from \"./bullet-bank.service\";\nexport let ApiService = /*#__PURE__*/(() => {\n  class ApiService {\n    // BASE_URL = 'http://192.168.0.104/';\n    // BASE_URL = 'htttp:/127.0.0.1:5001/';\n    // BACKOFFICE_URL = 'http://192.168.0.104:9080/';\n    constructor(http, srvWizard, srvUser, bulletBankService) {\n      this.http = http;\n      this.srvWizard = srvWizard;\n      this.srvUser = srvUser;\n      this.bulletBankService = bulletBankService;\n      this.BASE_URL = 'htttp://192.168.0.1:8089/';\n      this.BACKOFFICE_URL = 'https://adlbackoffice20200309103113.azurewebsites.net/';\n    }\n    ping() {\n      //return this.http.get(this.BASE_URL + 'ping');\n      return of(true);\n    }\n    getDashboardData(userId) {\n      //return this.http.get(this.BACKOFFICE_URL + 'DeviceData/GetDashboard?userId=' + userId);\n      return of(true);\n    }\n    signup(registerDetails) {\n      return this.http.post(this.BACKOFFICE_URL + 'Login/register', registerDetails);\n      return of(true);\n    }\n    login(loginDetails) {\n      //return this.http.post(this.BACKOFFICE_URL + 'Login/authenticate', loginDetails);\n      return of(true);\n    }\n    syncDataHitNoHit(dataToSync) {\n      //return this.http.post(this.BACKOFFICE_URL + 'DeviceData/uploadHitNotHitDrills', dataToSync);\n      return of(true);\n    }\n    getChallenges() {\n      //return this.http.get(this.BACKOFFICE_URL + 'Challenge/getChallenges');\n      return of(true);\n    }\n    getMyChallenges(userId) {\n      //return this.http.get(this.BACKOFFICE_URL + 'Challenge/getMyChallenges?userId=' + userId);\n      return of(true);\n    }\n    syncDataGateway(dataToSync) {\n      //return this.http.post(this.BACKOFFICE_URL + 'DeviceData/uploadDrillsMobile', dataToSync);\n      return of(true);\n    }\n    getWeapons() {\n      //return this.http.get(this.BACKOFFICE_URL + 'Zeroing/getWeapons');\n      return of(true);\n    }\n    getSights() {\n      //return this.http.get(this.BACKOFFICE_URL + 'DeviceData/getSights');\n      return of(true);\n    }\n    getCalibers() {\n      //return this.http.get(this.BACKOFFICE_URL + 'Zeroing/GetCaliberMapping');\n      return of(true);\n    }\n    getInventory() {\n      // return this.http.get(this.BACKOFFICE_URL + 'DeviceData/getInventory');\n      return of(true);\n    }\n    setInventory(inventoryModel) {\n      //return this.http.post(this.BACKOFFICE_URL + 'DeviceData/setInventory', inventoryModel);\n      return of(true);\n    }\n    // Zeriong\n    getZeroTable(data) {\n      // return this.http.post(this.BACKOFFICE_URL + 'Zeroing/GetZeroTable', data);\n      return of(true);\n    }\n    getCaliberMapping() {\n      return this.http.get(this.BACKOFFICE_URL + 'Zeroing/GetCaliberMapping');\n    }\n    getCalibersTable() {\n      // return this.http.get(this.BACKOFFICE_URL + 'Zeroing/GetCalibersTable');\n      return of(true);\n    }\n    getWepons() {\n      // return this.http.get(this.BACKOFFICE_URL + 'Zeroing/GetWepons');\n      return of(true);\n    }\n    getSightsZeroing() {\n      // return this.http.get(this.BACKOFFICE_URL + 'Zeroing/GetSights');\n      return of(true);\n    }\n    getBullets() {\n      // return this.http.get(this.BACKOFFICE_URL + 'Zeroing/GetBullets');\n      return of(true);\n    }\n    getBallisticData(weaponName, sightName) {\n      // return this.http.get(this.BACKOFFICE_URL + 'Zeroing/getBallisticData?weponName=' + weaponName + '&sightName=' + sightName);\n      return of(true);\n    }\n    uploadSubscription(data) {\n      // console.log('uploadSubscription => ', this.BACKOFFICE_URL + 'Apple/uploadPD?id=' + this.srvUser.getUser().id, typeof data);\n      // return this.http.post(this.BACKOFFICE_URL + 'Apple/uploadPD?id=' + this.srvUser.getUser().id, data, {\n      //     headers: {\n      //         'Content-Type': 'application/json'\n      //     }\n      // }).subscribe(async () => {\n      //     console.log('uploadSubscription => done,data\" ' ,data);\n      //     if(data.id === PurchasesId.twoSessionSub || data.id  === PurchasesId.twoSessionSubAnd){\n      //      this.bulletBankService.setNumberOfBullets(BulletsPerSubscription.small);\n      //     }else if(data.id === PurchasesId.sixSessions || data.id  === PurchasesId.sixSessionsAnd){\n      //         this.bulletBankService.setNumberOfBullets(BulletsPerSubscription.big);\n      //     }else{\n      //         this.bulletBankService.setNumberOfBullets(BulletsPerSubscription.infite);\n      //         this.bulletBankService.isUnlimited = true;\n      //     }\n      //     this.srvWizard.afterSubscriptionDone.next(data);\n      // }, (errr) => {\n      //     console.log('uploadSubscription => error', errr);\n      // });\n      return of(true);\n    }\n    getSubscription(id) {\n      //return this.http.get(this.BACKOFFICE_URL + 'Apple/GetPD?id=' + id);\n      return of(true);\n    }\n    getRanges() {\n      //return this.http.get(this.BACKOFFICE_URL + '/DeviceData/getRanges');\n      return of(true);\n    }\n  }\n  ApiService.ɵfac = function ApiService_Factory(t) {\n    return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.WizardService), i0.ɵɵinject(i3.UserService), i0.ɵɵinject(i4.BulletBankService));\n  };\n  ApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ApiService,\n    factory: ApiService.ɵfac,\n    providedIn: 'root'\n  });\n  return ApiService;\n})();","map":null,"metadata":{},"sourceType":"module"}