{"ast":null,"code":"import { Platform } from '@ionic/angular';\nimport { Purchases } from '@awesome-cordova-plugins/purchases/ngx';\nimport { ApiService } from './api.service';\nimport { Subject } from 'rxjs';\nimport { StorageService } from './storage.service';\nimport { InAppPurchase2 } from '@awesome-cordova-plugins/in-app-purchase-2/ngx';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@awesome-cordova-plugins/purchases/ngx\";\nimport * as i2 from \"./storage.service\";\nimport * as i3 from \"@ionic/angular\";\nimport * as i4 from \"@awesome-cordova-plugins/in-app-purchase-2/ngx\";\nimport * as i5 from \"./api.service\";\nconst ADL_IAP_KEY = 'autoRenew';\nconst ADL_IAP_KEY_2_SESSIONS = 'twoSessionSub';\nconst ADL_IAP_KEY_6_SESSIONS = 'sixSessions';\n// tslint:disable-next-line:variable-name\nconst ADL_IAP_KEY_md = 'adl_montly';\n// tslint:disable-next-line:variable-name\nconst ADL_IAP_KEY_2_SESSIONS_md = 'two_session_sub';\n// tslint:disable-next-line:variable-name\nconst ADL_IAP_KEY_6_SESSIONS_md = 'six_sessions';\nexport let PurchaseService = /*#__PURE__*/(() => {\n  class PurchaseService {\n    constructor(purchases, storageService, plt, store, srvApi) {\n      this.purchases = purchases;\n      this.storageService = storageService;\n      this.plt = plt;\n      this.store = store;\n      this.srvApi = srvApi;\n      this.$notifyPurchaseApproved = new Subject();\n      this.plt.ready().then(() => {\n        this.purchases.setDebugLogsEnabled(true); // Enable to get debug logs\n        this.purchases.setup('appl_zvLCiuPbRXLEBKOylPgsndRSFNX');\n        this.purchases.getOfferings().then(offerings => {\n          if (offerings.current !== null) {\n            ;\n          }\n        }, error => {});\n        this.store.verbosity = this.store.DEBUG;\n        this.registerProducts();\n        // Get the real product information\n      });\n    }\n\n    setup() {}\n    getProducts() {\n      return new Promise((resolve, reject) => {\n        this.store.ready(() => {\n          this.products = this.store.products;\n          console.log('this.products', JSON.stringify(this.products));\n          resolve(this.products);\n        });\n      });\n    }\n    registerProducts() {\n      if (this.plt.is('ios')) {\n        this.store.register({\n          id: ADL_IAP_KEY_6_SESSIONS,\n          type: this.store.NON_CONSUMABLE\n        });\n        this.store.register({\n          id: ADL_IAP_KEY_2_SESSIONS,\n          type: this.store.NON_CONSUMABLE\n        });\n        this.store.register({\n          id: ADL_IAP_KEY,\n          type: this.store.NON_CONSUMABLE\n        });\n      } else {\n        this.store.register({\n          id: ADL_IAP_KEY_md,\n          type: this.store.NON_CONSUMABLE\n        });\n        this.store.register({\n          id: ADL_IAP_KEY_6_SESSIONS_md,\n          type: this.store.CONSUMABLE\n        });\n        this.store.register({\n          id: ADL_IAP_KEY_2_SESSIONS_md,\n          type: this.store.CONSUMABLE\n        });\n      }\n      // Register event handlers for the specific product\n      // this.store.when('product').registered((product: IAPProduct) => {\n      //     console.log('Registered: ADL_IAP_KEY_md ' + JSON.stringify(product));\n      // });\n      // Track all store errors\n      this.store.error(err => {\n        console.error('Store Error ' + JSON.stringify(err));\n      });\n      // Run some code only when the store is ready to be used\n      this.store.ready(() => {\n        console.log('Store is ready');\n        console.log('Products: ' + JSON.stringify(this.store.products));\n        console.log(JSON.stringify(this.store.get('my_product_id')));\n      });\n      this.store.refresh();\n      this.setupListeners();\n      // this.getProducts();\n    }\n\n    setupListeners() {\n      // General query to all products\n      this.store.when('product').approved(p => {\n        if (p && !p.id.includes('.onTarget.app')) {\n          console.log('i am in approved event', p);\n          this.srvApi.uploadSubscription(p);\n          this.$notifyPurchaseApproved.next(true);\n        }\n      }).verified(p => {\n        console.log('i am in verified event', p);\n        p.finish();\n      }).cancelled(p => {\n        console.log('i am in cancelled event', p);\n      });\n    }\n    purchase(_product) {\n      const product = Object.assign(_product, {});\n      // @ts-ignore\n      delete product.isSelected;\n      this.store.order(product).then(p => {\n        // Purchase in progress!\n        console.log('what is purchase', p);\n      }, e => {});\n    }\n    // // To comply with AppStore rules\n    // restore() {\n    //     this.store.refresh();\n    // }\n    getNumberOfHitsPerPurchase(id) {\n      if (id === 'twoSessionSub') {\n        return 20;\n      }\n    }\n    checkPurchase() {\n      const data = JSON.parse(localStorage.getItem('homeData'));\n      if (!data) {\n        const purchaseObject = JSON.parse(this.storageService.getItem('purchase'));\n        console.log('purchaseObject', purchaseObject);\n        if (purchaseObject.id === PurchasesId.twoSessionSub) {\n          console.log('20 BULLETS LEFT TO SHOOT');\n          this.bulletsLeft = 20;\n          return 20;\n        } else if (purchaseObject.id === PurchasesId.sixSessions) {\n          console.log('60 BULLETS LEFT TO SHOOT');\n          this.bulletsLeft = 60;\n          return 60;\n        }\n      } else {\n        const purchaseObject = JSON.parse(this.storageService.getItem('purchase'));\n        if (purchaseObject.id === PurchasesId.twoSessionSub) {\n          console.log('20 BULLETS LEFT TO SHOOT');\n          this.bulletsLeft = 20 - data.hitRatioChart.totalHits;\n          return this.bulletsLeft;\n        } else if (purchaseObject.id === PurchasesId.sixSessions) {\n          console.log('20 BULLETS LEFT TO SHOOT');\n          this.bulletsLeft = 60 - data.hitRatioChart.totalHits;\n          return this.bulletsLeft;\n        }\n      }\n    }\n  }\n  PurchaseService.ɵfac = function PurchaseService_Factory(t) {\n    return new (t || PurchaseService)(i0.ɵɵinject(i1.Purchases), i0.ɵɵinject(i2.StorageService), i0.ɵɵinject(i3.Platform), i0.ɵɵinject(i4.InAppPurchase2), i0.ɵɵinject(i5.ApiService));\n  };\n  PurchaseService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PurchaseService,\n    factory: PurchaseService.ɵfac,\n    providedIn: 'root'\n  });\n  return PurchaseService;\n})();\nexport var BulletsPerSubscription = /*#__PURE__*/(() => {\n  (function (BulletsPerSubscription) {\n    BulletsPerSubscription[BulletsPerSubscription[\"small\"] = 20] = \"small\";\n    BulletsPerSubscription[BulletsPerSubscription[\"big\"] = 60] = \"big\";\n    BulletsPerSubscription[BulletsPerSubscription[\"infite\"] = 9007199254740991] = \"infite\";\n  })(BulletsPerSubscription || (BulletsPerSubscription = {}));\n  return BulletsPerSubscription;\n})();\nexport var PurchasesId = /*#__PURE__*/(() => {\n  (function (PurchasesId) {\n    PurchasesId[\"twoSessionSub\"] = \"twoSessionSub\";\n    PurchasesId[\"twoSessionSubAnd\"] = \"two_session_sub\";\n    PurchasesId[\"sixSessions\"] = \"sixSessions\";\n    PurchasesId[\"sixSessionsAnd\"] = \"six_sessions\";\n    PurchasesId[\"subscriptionsand\"] = \"adl_montly\";\n  })(PurchasesId || (PurchasesId = {}));\n  return PurchasesId;\n})();","map":null,"metadata":{},"sourceType":"module"}