{"ast":null,"code":"/**\r\n * Zoom out button functionality.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { Button } from \"./Button\";\nimport { Sprite } from \"../Sprite\";\nimport { registry } from \"../Registry\";\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\nimport * as $path from \"../rendering/Path\";\nimport * as $type from \"../../core/utils/Type\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Creates a zoom out button.\r\n *\r\n * @see {@link IZoomOutButtonEvents} for a list of available events\r\n * @see {@link IZoomOutButtonAdapters} for a list of available Adapters\r\n */\nvar ZoomOutButton = /** @class */function (_super) {\n  __extends(ZoomOutButton, _super);\n  /**\r\n   * Constructor\r\n   */\n  function ZoomOutButton() {\n    var _this =\n    // Init\n    _super.call(this) || this;\n    _this.className = \"ZoomOutButton\";\n    _this.padding(9, 9, 9, 9);\n    //this.dx = - 5;\n    //this.dy = 5;\n    _this.showSystemTooltip = true;\n    var interfaceColors = new InterfaceColorSet();\n    var background = _this.background;\n    background.cornerRadius(20, 20, 20, 20);\n    background.fill = interfaceColors.getFor(\"primaryButton\");\n    background.stroke = interfaceColors.getFor(\"primaryButtonStroke\");\n    background.strokeOpacity = 0;\n    background.states.getKey(\"hover\").properties.fill = interfaceColors.getFor(\"primaryButtonHover\");\n    background.states.getKey(\"down\").properties.fill = interfaceColors.getFor(\"primaryButtonActive\");\n    // Create an icon\n    var icon = new Sprite();\n    icon.element = _this.paper.add(\"path\");\n    var path = $path.moveTo({\n      x: 0,\n      y: 0\n    });\n    path += $path.lineTo({\n      x: 11,\n      y: 0\n    });\n    icon.path = path;\n    icon.pixelPerfect = true;\n    icon.padding(8, 3, 8, 3);\n    icon.stroke = interfaceColors.getFor(\"primaryButtonText\");\n    _this.icon = icon;\n    // Apply theme\n    _this.applyTheme();\n    return _this;\n  }\n  /**\r\n   * Sets defaults that instantiate some objects that rely on parent, so they\r\n   * cannot be set in constructor.\r\n   */\n  ZoomOutButton.prototype.applyInternalDefaults = function () {\n    _super.prototype.applyInternalDefaults.call(this);\n    if (!$type.hasValue(this.readerTitle)) {\n      this.readerTitle = this.language.translate(\"Zoom Out\");\n    }\n  };\n  return ZoomOutButton;\n}(Button);\nexport { ZoomOutButton };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\nregistry.registeredClasses[\"ZoomOutButton\"] = ZoomOutButton;\n//# sourceMappingURL=ZoomOutButton.js.map","map":null,"metadata":{},"sourceType":"module"}