{"ast":null,"code":"/**\r\n * AmChartsLogo module.\r\n *\r\n * AmChartsLogo shows amCharts logo for non-commercial users of a library.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { Container } from \"../Container\";\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\nimport { Polyspline } from \"./Polyspline\";\nimport { color } from \"../utils/Color\";\nimport { LinearGradient } from \"../rendering/fills/LinearGradient\";\nimport { DesaturateFilter } from \"../rendering/filters/DesaturateFilter\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * A class used to draw and display progress indicator.\r\n *\r\n * @see {@link IAmChartsLogoEvents} for a list of available events\r\n * @see {@link IAmChartsLogoAdapters} for a list of available Adapters\r\n * @ignore Exclude from docs\r\n */\nvar AmChartsLogo = /** @class */function (_super) {\n  __extends(AmChartsLogo, _super);\n  /**\r\n   * Constructor\r\n   */\n  function AmChartsLogo() {\n    var _this =\n    // Init\n    _super.call(this) || this;\n    _this.className = \"AmChartsLogo\";\n    _this.valign = \"bottom\";\n    var d = 0.3;\n    _this.opacity = 0.3;\n    _this.defaultState.properties.opacity = 0.4;\n    _this.url = \"https://www.amcharts.com/\";\n    _this.urlTarget = \"_blank\";\n    _this.showSystemTooltip = true;\n    _this.readerTitle = \"Chart created using amCharts library\";\n    _this.width = 220 * d;\n    _this.height = 70 * d;\n    _this.background.opacity = 0;\n    var aColor = color(\"#474758\");\n    if (new InterfaceColorSet().getFor(\"background\").alternative.hex == \"#ffffff\") {\n      aColor = color(\"#ffffff\");\n    }\n    var aGradient = new LinearGradient();\n    aGradient.addColor(aColor);\n    aGradient.addColor(aColor, 1, 0.75);\n    aGradient.addColor(color(\"#3cabff\"), 1, 0.755);\n    aGradient.rotation = -10;\n    var aStroke = aGradient;\n    var m = _this.createChild(Polyspline);\n    m.shouldClone = false;\n    m.isMeasured = false;\n    m.segments = [[{\n      x: 50 * d,\n      y: 50 * d\n    }, {\n      x: 90 * d,\n      y: 50 * d\n    }, {\n      x: 120 * d,\n      y: 20 * d\n    }, {\n      x: 135 * d,\n      y: 35 * d\n    }, {\n      x: 150 * d,\n      y: 20 * d\n    }, {\n      x: 180 * d,\n      y: 50 * d\n    }, {\n      x: 200 * d,\n      y: 50 * d\n    }]];\n    m.strokeWidth = 6 * d;\n    m.tensionX = 0.8;\n    m.tensionY = 1;\n    m.stroke = color(\"#3cabff\");\n    var a = _this.createChild(Polyspline);\n    a.shouldClone = false;\n    a.isMeasured = false;\n    a.segments = [[{\n      x: 20 * d,\n      y: 50 * d\n    }, {\n      x: 50 * d,\n      y: 50 * d\n    }, {\n      x: 90 * d,\n      y: 12 * d\n    }, {\n      x: 133 * d,\n      y: 50 * d\n    }, {\n      x: 170 * d,\n      y: 50 * d\n    }, {\n      x: 200 * d,\n      y: 50 * d\n    }]];\n    a.strokeWidth = 6 * d;\n    a.tensionX = 0.75;\n    a.tensionY = 1;\n    a.stroke = aStroke;\n    _this._disposers.push(a);\n    var desaturateFilter = new DesaturateFilter();\n    _this.filters.push(desaturateFilter);\n    var desaturateFilterHover = new DesaturateFilter();\n    desaturateFilterHover.saturation = 1;\n    var hoverState = _this.states.create(\"hover\");\n    hoverState.properties.opacity = 1;\n    hoverState.filters.push(desaturateFilterHover);\n    // Apply theme\n    _this.applyTheme();\n    return _this;\n  }\n  return AmChartsLogo;\n}(Container);\nexport { AmChartsLogo };\n//# sourceMappingURL=AmChartsLogo.js.map","map":null,"metadata":{},"sourceType":"module"}